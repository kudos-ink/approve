/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 87351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(22037));
const utils_1 = __nccwpck_require__(5278);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 42186:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(87351);
const file_command_1 = __nccwpck_require__(717);
const utils_1 = __nccwpck_require__(5278);
const os = __importStar(__nccwpck_require__(22037));
const path = __importStar(__nccwpck_require__(71017));
const oidc_utils_1 = __nccwpck_require__(98041);
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));
    }
    command_1.issueCommand('set-env', { name }, convertedVal);
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueFileCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    if (options && options.trimWhitespace === false) {
        return inputs;
    }
    return inputs.map(input => input.trim());
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    const filePath = process.env['GITHUB_OUTPUT'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));
    }
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message, properties = {}) {
    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message, properties = {}) {
    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message, properties = {}) {
    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    const filePath = process.env['GITHUB_STATE'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));
    }
    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
function getIDToken(aud) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
}
exports.getIDToken = getIDToken;
/**
 * Summary exports
 */
var summary_1 = __nccwpck_require__(81327);
Object.defineProperty(exports, "summary", ({ enumerable: true, get: function () { return summary_1.summary; } }));
/**
 * @deprecated use core.summary
 */
var summary_2 = __nccwpck_require__(81327);
Object.defineProperty(exports, "markdownSummary", ({ enumerable: true, get: function () { return summary_2.markdownSummary; } }));
/**
 * Path exports
 */
var path_utils_1 = __nccwpck_require__(2981);
Object.defineProperty(exports, "toPosixPath", ({ enumerable: true, get: function () { return path_utils_1.toPosixPath; } }));
Object.defineProperty(exports, "toWin32Path", ({ enumerable: true, get: function () { return path_utils_1.toWin32Path; } }));
Object.defineProperty(exports, "toPlatformPath", ({ enumerable: true, get: function () { return path_utils_1.toPlatformPath; } }));
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 717:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prepareKeyValueMessage = exports.issueFileCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(57147));
const os = __importStar(__nccwpck_require__(22037));
const uuid_1 = __nccwpck_require__(75840);
const utils_1 = __nccwpck_require__(5278);
function issueFileCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueFileCommand = issueFileCommand;
function prepareKeyValueMessage(key, value) {
    const delimiter = `ghadelimiter_${uuid_1.v4()}`;
    const convertedValue = utils_1.toCommandValue(value);
    // These should realistically never happen, but just in case someone finds a
    // way to exploit uuid generation let's not allow keys or values that contain
    // the delimiter.
    if (key.includes(delimiter)) {
        throw new Error(`Unexpected input: name should not contain the delimiter "${delimiter}"`);
    }
    if (convertedValue.includes(delimiter)) {
        throw new Error(`Unexpected input: value should not contain the delimiter "${delimiter}"`);
    }
    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;
}
exports.prepareKeyValueMessage = prepareKeyValueMessage;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 98041:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OidcClient = void 0;
const http_client_1 = __nccwpck_require__(96255);
const auth_1 = __nccwpck_require__(35526);
const core_1 = __nccwpck_require__(42186);
class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
            allowRetries: allowRetry,
            maxRetries: maxRetry
        };
        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
        if (!token) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
        }
        return token;
    }
    static getIDTokenUrl() {
        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
        if (!runtimeUrl) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
        }
        return runtimeUrl;
    }
    static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const httpclient = OidcClient.createHttpClient();
            const res = yield httpclient
                .getJson(id_token_url)
                .catch(error => {
                throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.message}`);
            });
            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
            if (!id_token) {
                throw new Error('Response json body do not have ID Token field');
            }
            return id_token;
        });
    }
    static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                // New ID Token is requested from action service
                let id_token_url = OidcClient.getIDTokenUrl();
                if (audience) {
                    const encodedAudience = encodeURIComponent(audience);
                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;
                }
                core_1.debug(`ID token url is ${id_token_url}`);
                const id_token = yield OidcClient.getCall(id_token_url);
                core_1.setSecret(id_token);
                return id_token;
            }
            catch (error) {
                throw new Error(`Error message: ${error.message}`);
            }
        });
    }
}
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ 2981:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;
const path = __importStar(__nccwpck_require__(71017));
/**
 * toPosixPath converts the given path to the posix form. On Windows, \\ will be
 * replaced with /.
 *
 * @param pth. Path to transform.
 * @return string Posix path.
 */
function toPosixPath(pth) {
    return pth.replace(/[\\]/g, '/');
}
exports.toPosixPath = toPosixPath;
/**
 * toWin32Path converts the given path to the win32 form. On Linux, / will be
 * replaced with \\.
 *
 * @param pth. Path to transform.
 * @return string Win32 path.
 */
function toWin32Path(pth) {
    return pth.replace(/[/]/g, '\\');
}
exports.toWin32Path = toWin32Path;
/**
 * toPlatformPath converts the given path to a platform-specific path. It does
 * this by replacing instances of / and \ with the platform-specific path
 * separator.
 *
 * @param pth The path to platformize.
 * @return string The platform-specific path.
 */
function toPlatformPath(pth) {
    return pth.replace(/[/\\]/g, path.sep);
}
exports.toPlatformPath = toPlatformPath;
//# sourceMappingURL=path-utils.js.map

/***/ }),

/***/ 81327:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;
const os_1 = __nccwpck_require__(22037);
const fs_1 = __nccwpck_require__(57147);
const { access, appendFile, writeFile } = fs_1.promises;
exports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';
exports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';
class Summary {
    constructor() {
        this._buffer = '';
    }
    /**
     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
     * Also checks r/w permissions.
     *
     * @returns step summary file path
     */
    filePath() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._filePath) {
                return this._filePath;
            }
            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];
            if (!pathFromEnv) {
                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
            }
            try {
                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
            }
            catch (_a) {
                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);
            }
            this._filePath = pathFromEnv;
            return this._filePath;
        });
    }
    /**
     * Wraps content in an HTML tag, adding any HTML attributes
     *
     * @param {string} tag HTML tag to wrap
     * @param {string | null} content content within the tag
     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
     *
     * @returns {string} content wrapped in HTML element
     */
    wrap(tag, content, attrs = {}) {
        const htmlAttrs = Object.entries(attrs)
            .map(([key, value]) => ` ${key}="${value}"`)
            .join('');
        if (!content) {
            return `<${tag}${htmlAttrs}>`;
        }
        return `<${tag}${htmlAttrs}>${content}</${tag}>`;
    }
    /**
     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
     *
     * @param {SummaryWriteOptions} [options] (optional) options for write operation
     *
     * @returns {Promise<Summary>} summary instance
     */
    write(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);
            const filePath = yield this.filePath();
            const writeFunc = overwrite ? writeFile : appendFile;
            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });
            return this.emptyBuffer();
        });
    }
    /**
     * Clears the summary buffer and wipes the summary file
     *
     * @returns {Summary} summary instance
     */
    clear() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.emptyBuffer().write({ overwrite: true });
        });
    }
    /**
     * Returns the current summary buffer as a string
     *
     * @returns {string} string of summary buffer
     */
    stringify() {
        return this._buffer;
    }
    /**
     * If the summary buffer is empty
     *
     * @returns {boolen} true if the buffer is empty
     */
    isEmptyBuffer() {
        return this._buffer.length === 0;
    }
    /**
     * Resets the summary buffer without writing to summary file
     *
     * @returns {Summary} summary instance
     */
    emptyBuffer() {
        this._buffer = '';
        return this;
    }
    /**
     * Adds raw text to the summary buffer
     *
     * @param {string} text content to add
     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
     *
     * @returns {Summary} summary instance
     */
    addRaw(text, addEOL = false) {
        this._buffer += text;
        return addEOL ? this.addEOL() : this;
    }
    /**
     * Adds the operating system-specific end-of-line marker to the buffer
     *
     * @returns {Summary} summary instance
     */
    addEOL() {
        return this.addRaw(os_1.EOL);
    }
    /**
     * Adds an HTML codeblock to the summary buffer
     *
     * @param {string} code content to render within fenced code block
     * @param {string} lang (optional) language to syntax highlight code
     *
     * @returns {Summary} summary instance
     */
    addCodeBlock(code, lang) {
        const attrs = Object.assign({}, (lang && { lang }));
        const element = this.wrap('pre', this.wrap('code', code), attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML list to the summary buffer
     *
     * @param {string[]} items list of items to render
     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
     *
     * @returns {Summary} summary instance
     */
    addList(items, ordered = false) {
        const tag = ordered ? 'ol' : 'ul';
        const listItems = items.map(item => this.wrap('li', item)).join('');
        const element = this.wrap(tag, listItems);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML table to the summary buffer
     *
     * @param {SummaryTableCell[]} rows table rows
     *
     * @returns {Summary} summary instance
     */
    addTable(rows) {
        const tableBody = rows
            .map(row => {
            const cells = row
                .map(cell => {
                if (typeof cell === 'string') {
                    return this.wrap('td', cell);
                }
                const { header, data, colspan, rowspan } = cell;
                const tag = header ? 'th' : 'td';
                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));
                return this.wrap(tag, data, attrs);
            })
                .join('');
            return this.wrap('tr', cells);
        })
            .join('');
        const element = this.wrap('table', tableBody);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds a collapsable HTML details element to the summary buffer
     *
     * @param {string} label text for the closed state
     * @param {string} content collapsable content
     *
     * @returns {Summary} summary instance
     */
    addDetails(label, content) {
        const element = this.wrap('details', this.wrap('summary', label) + content);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML image tag to the summary buffer
     *
     * @param {string} src path to the image you to embed
     * @param {string} alt text description of the image
     * @param {SummaryImageOptions} options (optional) addition image attributes
     *
     * @returns {Summary} summary instance
     */
    addImage(src, alt, options) {
        const { width, height } = options || {};
        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));
        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML section heading element
     *
     * @param {string} text heading text
     * @param {number | string} [level=1] (optional) the heading level, default: 1
     *
     * @returns {Summary} summary instance
     */
    addHeading(text, level) {
        const tag = `h${level}`;
        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)
            ? tag
            : 'h1';
        const element = this.wrap(allowedTag, text);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML thematic break (<hr>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addSeparator() {
        const element = this.wrap('hr', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML line break (<br>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addBreak() {
        const element = this.wrap('br', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML blockquote to the summary buffer
     *
     * @param {string} text quote text
     * @param {string} cite (optional) citation url
     *
     * @returns {Summary} summary instance
     */
    addQuote(text, cite) {
        const attrs = Object.assign({}, (cite && { cite }));
        const element = this.wrap('blockquote', text, attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML anchor tag to the summary buffer
     *
     * @param {string} text link text/content
     * @param {string} href hyperlink
     *
     * @returns {Summary} summary instance
     */
    addLink(text, href) {
        const element = this.wrap('a', text, { href });
        return this.addRaw(element).addEOL();
    }
}
const _summary = new Summary();
/**
 * @deprecated use `core.summary`
 */
exports.markdownSummary = _summary;
exports.summary = _summary;
//# sourceMappingURL=summary.js.map

/***/ }),

/***/ 5278:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
        return {};
    }
    return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
    };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 35526:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;
class BasicCredentialHandler {
    constructor(username, password) {
        this.username = username;
        this.password = password;
    }
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BasicCredentialHandler = BasicCredentialHandler;
class BearerCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Bearer ${this.token}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BearerCredentialHandler = BearerCredentialHandler;
class PersonalAccessTokenCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
//# sourceMappingURL=auth.js.map

/***/ }),

/***/ 96255:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/* eslint-disable @typescript-eslint/no-explicit-any */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;
const http = __importStar(__nccwpck_require__(13685));
const https = __importStar(__nccwpck_require__(95687));
const pm = __importStar(__nccwpck_require__(19835));
const tunnel = __importStar(__nccwpck_require__(74294));
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                let output = Buffer.alloc(0);
                this.message.on('data', (chunk) => {
                    output = Buffer.concat([output, chunk]);
                });
                this.message.on('end', () => {
                    resolve(output.toString());
                });
            }));
        });
    }
    readBodyBuffer() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                const chunks = [];
                this.message.on('data', (chunk) => {
                    chunks.push(chunk);
                });
                this.message.on('end', () => {
                    resolve(Buffer.concat(chunks));
                });
            }));
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    const parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
        });
    }
    get(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('GET', requestUrl, null, additionalHeaders || {});
        });
    }
    del(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('DELETE', requestUrl, null, additionalHeaders || {});
        });
    }
    post(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('POST', requestUrl, data, additionalHeaders || {});
        });
    }
    patch(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PATCH', requestUrl, data, additionalHeaders || {});
        });
    }
    put(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PUT', requestUrl, data, additionalHeaders || {});
        });
    }
    head(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('HEAD', requestUrl, null, additionalHeaders || {});
        });
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(verb, requestUrl, stream, additionalHeaders);
        });
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    getJson(requestUrl, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            const res = yield this.get(requestUrl, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    postJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.post(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    putJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.put(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    patchJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.patch(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    request(verb, requestUrl, data, headers) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._disposed) {
                throw new Error('Client has already been disposed.');
            }
            const parsedUrl = new URL(requestUrl);
            let info = this._prepareRequest(verb, parsedUrl, headers);
            // Only perform retries on reads since writes may not be idempotent.
            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)
                ? this._maxRetries + 1
                : 1;
            let numTries = 0;
            let response;
            do {
                response = yield this.requestRaw(info, data);
                // Check if it's an authentication challenge
                if (response &&
                    response.message &&
                    response.message.statusCode === HttpCodes.Unauthorized) {
                    let authenticationHandler;
                    for (const handler of this.handlers) {
                        if (handler.canHandleAuthentication(response)) {
                            authenticationHandler = handler;
                            break;
                        }
                    }
                    if (authenticationHandler) {
                        return authenticationHandler.handleAuthentication(this, info, data);
                    }
                    else {
                        // We have received an unauthorized response but have no handlers to handle it.
                        // Let the response return to the caller.
                        return response;
                    }
                }
                let redirectsRemaining = this._maxRedirects;
                while (response.message.statusCode &&
                    HttpRedirectCodes.includes(response.message.statusCode) &&
                    this._allowRedirects &&
                    redirectsRemaining > 0) {
                    const redirectUrl = response.message.headers['location'];
                    if (!redirectUrl) {
                        // if there's no location to redirect to, we won't
                        break;
                    }
                    const parsedRedirectUrl = new URL(redirectUrl);
                    if (parsedUrl.protocol === 'https:' &&
                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&
                        !this._allowRedirectDowngrade) {
                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                    }
                    // we need to finish reading the response before reassigning response
                    // which will leak the open socket.
                    yield response.readBody();
                    // strip authorization header if redirected to a different hostname
                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                        for (const header in headers) {
                            // header names are case insensitive
                            if (header.toLowerCase() === 'authorization') {
                                delete headers[header];
                            }
                        }
                    }
                    // let's make the request with the new redirectUrl
                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                    response = yield this.requestRaw(info, data);
                    redirectsRemaining--;
                }
                if (!response.message.statusCode ||
                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {
                    // If not a retry code, return immediately instead of retrying
                    return response;
                }
                numTries += 1;
                if (numTries < maxTries) {
                    yield response.readBody();
                    yield this._performExponentialBackoff(numTries);
                }
            } while (numTries < maxTries);
            return response;
        });
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                function callbackForResult(err, res) {
                    if (err) {
                        reject(err);
                    }
                    else if (!res) {
                        // If `err` is not passed, then `res` must be passed.
                        reject(new Error('Unknown error'));
                    }
                    else {
                        resolve(res);
                    }
                }
                this.requestRawWithCallback(info, data, callbackForResult);
            });
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        if (typeof data === 'string') {
            if (!info.options.headers) {
                info.options.headers = {};
            }
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        function handleResult(err, res) {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        }
        const req = info.httpModule.request(info.options, (msg) => {
            const res = new HttpClientResponse(msg);
            handleResult(undefined, res);
        });
        let socket;
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error(`Request timeout: ${info.options.path}`));
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            for (const handler of this.handlers) {
                handler.prepareRequest(info.options);
            }
        }
        return info;
    }
    _mergeHeaders(headers) {
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (this._keepAlive && !useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.
        if (proxyUrl && proxyUrl.hostname) {
            const agentOptions = {
                maxSockets,
                keepAlive: this._keepAlive,
                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {
                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                })), { host: proxyUrl.hostname, port: proxyUrl.port })
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if reusing agent across request and tunneling agent isn't assigned create a new agent
        if (this._keepAlive && !agent) {
            const options = { keepAlive: this._keepAlive, maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        // if not using private agent and tunnel agent isn't setup then use global agent
        if (!agent) {
            agent = usingSsl ? https.globalAgent : http.globalAgent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _performExponentialBackoff(retryNumber) {
        return __awaiter(this, void 0, void 0, function* () {
            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
            return new Promise(resolve => setTimeout(() => resolve(), ms));
        });
    }
    _processResponse(res, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                const statusCode = res.message.statusCode || 0;
                const response = {
                    statusCode,
                    result: null,
                    headers: {}
                };
                // not found leads to null obj returned
                if (statusCode === HttpCodes.NotFound) {
                    resolve(response);
                }
                // get the result from the body
                function dateTimeDeserializer(key, value) {
                    if (typeof value === 'string') {
                        const a = new Date(value);
                        if (!isNaN(a.valueOf())) {
                            return a;
                        }
                    }
                    return value;
                }
                let obj;
                let contents;
                try {
                    contents = yield res.readBody();
                    if (contents && contents.length > 0) {
                        if (options && options.deserializeDates) {
                            obj = JSON.parse(contents, dateTimeDeserializer);
                        }
                        else {
                            obj = JSON.parse(contents);
                        }
                        response.result = obj;
                    }
                    response.headers = res.message.headers;
                }
                catch (err) {
                    // Invalid resource (contents not json);  leaving result obj null
                }
                // note that 3xx redirects are handled by the http layer.
                if (statusCode > 299) {
                    let msg;
                    // if exception/error in body, attempt to get better error
                    if (obj && obj.message) {
                        msg = obj.message;
                    }
                    else if (contents && contents.length > 0) {
                        // it may be the case that the exception is in the body message as string
                        msg = contents;
                    }
                    else {
                        msg = `Failed request: (${statusCode})`;
                    }
                    const err = new HttpClientError(msg, statusCode);
                    err.result = response.result;
                    reject(err);
                }
                else {
                    resolve(response);
                }
            }));
        });
    }
}
exports.HttpClient = HttpClient;
const lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 19835:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkBypass = exports.getProxyUrl = void 0;
function getProxyUrl(reqUrl) {
    const usingSsl = reqUrl.protocol === 'https:';
    if (checkBypass(reqUrl)) {
        return undefined;
    }
    const proxyVar = (() => {
        if (usingSsl) {
            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];
        }
        else {
            return process.env['http_proxy'] || process.env['HTTP_PROXY'];
        }
    })();
    if (proxyVar) {
        try {
            return new URL(proxyVar);
        }
        catch (_a) {
            if (!proxyVar.startsWith('http://') && !proxyVar.startsWith('https://'))
                return new URL(`http://${proxyVar}`);
        }
    }
    else {
        return undefined;
    }
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    const reqHost = reqUrl.hostname;
    if (isLoopbackAddress(reqHost)) {
        return true;
    }
    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    const upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (const upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperNoProxyItem === '*' ||
            upperReqHosts.some(x => x === upperNoProxyItem ||
                x.endsWith(`.${upperNoProxyItem}`) ||
                (upperNoProxyItem.startsWith('.') &&
                    x.endsWith(`${upperNoProxyItem}`)))) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;
function isLoopbackAddress(host) {
    const hostLower = host.toLowerCase();
    return (hostLower === 'localhost' ||
        hostLower.startsWith('127.') ||
        hostLower.startsWith('[::1]') ||
        hostLower.startsWith('[0:0:0:0:0:0:0:1]'));
}
//# sourceMappingURL=proxy.js.map

/***/ }),

/***/ 57981:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createCurve = exports.getHash = void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const hmac_1 = __nccwpck_require__(99149);
const utils_1 = __nccwpck_require__(26161);
const weierstrass_js_1 = __nccwpck_require__(87760);
// connects noble-curves to noble-hashes
function getHash(hash) {
    return {
        hash,
        hmac: (key, ...msgs) => (0, hmac_1.hmac)(hash, key, (0, utils_1.concatBytes)(...msgs)),
        randomBytes: utils_1.randomBytes,
    };
}
exports.getHash = getHash;
function createCurve(curveDef, defHash) {
    const create = (hash) => (0, weierstrass_js_1.weierstrass)({ ...curveDef, ...getHash(hash) });
    return Object.freeze({ ...create(defHash), create });
}
exports.createCurve = createCurve;
//# sourceMappingURL=_shortw_utils.js.map

/***/ }),

/***/ 39328:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.validateBasic = exports.wNAF = void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// Abelian group utilities
const modular_js_1 = __nccwpck_require__(76557);
const utils_js_1 = __nccwpck_require__(62210);
const _0n = BigInt(0);
const _1n = BigInt(1);
// Elliptic curve multiplication of Point by scalar. Fragile.
// Scalars should always be less than curve order: this should be checked inside of a curve itself.
// Creates precomputation tables for fast multiplication:
// - private scalar is split by fixed size windows of W bits
// - every window point is collected from window's table & added to accumulator
// - since windows are different, same point inside tables won't be accessed more than once per calc
// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)
// - +1 window is neccessary for wNAF
// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication
// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow
// windows to be in different memory locations
function wNAF(c, bits) {
    const constTimeNegate = (condition, item) => {
        const neg = item.negate();
        return condition ? neg : item;
    };
    const opts = (W) => {
        const windows = Math.ceil(bits / W) + 1; // +1, because
        const windowSize = 2 ** (W - 1); // -1 because we skip zero
        return { windows, windowSize };
    };
    return {
        constTimeNegate,
        // non-const time multiplication ladder
        unsafeLadder(elm, n) {
            let p = c.ZERO;
            let d = elm;
            while (n > _0n) {
                if (n & _1n)
                    p = p.add(d);
                d = d.double();
                n >>= _1n;
            }
            return p;
        },
        /**
         * Creates a wNAF precomputation window. Used for caching.
         * Default window size is set by `utils.precompute()` and is equal to 8.
         * Number of precomputed points depends on the curve size:
         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:
         * - 𝑊 is the window size
         * - 𝑛 is the bitlength of the curve order.
         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.
         * @returns precomputed point tables flattened to a single array
         */
        precomputeWindow(elm, W) {
            const { windows, windowSize } = opts(W);
            const points = [];
            let p = elm;
            let base = p;
            for (let window = 0; window < windows; window++) {
                base = p;
                points.push(base);
                // =1, because we skip zero
                for (let i = 1; i < windowSize; i++) {
                    base = base.add(p);
                    points.push(base);
                }
                p = base.double();
            }
            return points;
        },
        /**
         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.
         * @param W window size
         * @param precomputes precomputed tables
         * @param n scalar (we don't check here, but should be less than curve order)
         * @returns real and fake (for const-time) points
         */
        wNAF(W, precomputes, n) {
            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise
            // But need to carefully remove other checks before wNAF. ORDER == bits here
            const { windows, windowSize } = opts(W);
            let p = c.ZERO;
            let f = c.BASE;
            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.
            const maxNumber = 2 ** W;
            const shiftBy = BigInt(W);
            for (let window = 0; window < windows; window++) {
                const offset = window * windowSize;
                // Extract W bits.
                let wbits = Number(n & mask);
                // Shift number by W bits.
                n >>= shiftBy;
                // If the bits are bigger than max size, we'll split those.
                // +224 => 256 - 32
                if (wbits > windowSize) {
                    wbits -= maxNumber;
                    n += _1n;
                }
                // This code was first written with assumption that 'f' and 'p' will never be infinity point:
                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,
                // there is negate now: it is possible that negated element from low value
                // would be the same as high element, which will create carry into next window.
                // It's not obvious how this can fail, but still worth investigating later.
                // Check if we're onto Zero point.
                // Add random point inside current window to f.
                const offset1 = offset;
                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero
                const cond1 = window % 2 !== 0;
                const cond2 = wbits < 0;
                if (wbits === 0) {
                    // The most important part for const-time getPublicKey
                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));
                }
                else {
                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));
                }
            }
            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()
            // Even if the variable is still unused, there are some checks which will
            // throw an exception, so compiler needs to prove they won't happen, which is hard.
            // At this point there is a way to F be infinity-point even if p is not,
            // which makes it less const-time: around 1 bigint multiply.
            return { p, f };
        },
        wNAFCached(P, precomputesMap, n, transform) {
            // @ts-ignore
            const W = P._WINDOW_SIZE || 1;
            // Calculate precomputes on a first run, reuse them after
            let comp = precomputesMap.get(P);
            if (!comp) {
                comp = this.precomputeWindow(P, W);
                if (W !== 1) {
                    precomputesMap.set(P, transform(comp));
                }
            }
            return this.wNAF(W, comp, n);
        },
    };
}
exports.wNAF = wNAF;
function validateBasic(curve) {
    (0, modular_js_1.validateField)(curve.Fp);
    (0, utils_js_1.validateObject)(curve, {
        n: 'bigint',
        h: 'bigint',
        Gx: 'field',
        Gy: 'field',
    }, {
        nBitLength: 'isSafeInteger',
        nByteLength: 'isSafeInteger',
    });
    // Set defaults
    return Object.freeze({
        ...(0, modular_js_1.nLength)(curve.n, curve.nBitLength),
        ...curve,
        ...{ p: curve.Fp.ORDER },
    });
}
exports.validateBasic = validateBasic;
//# sourceMappingURL=curve.js.map

/***/ }),

/***/ 88753:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.twistedEdwards = void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²
const modular_js_1 = __nccwpck_require__(76557);
const ut = __nccwpck_require__(62210);
const utils_js_1 = __nccwpck_require__(62210);
const curve_js_1 = __nccwpck_require__(39328);
// Be friendly to bad ECMAScript parsers by not using bigint literals
// prettier-ignore
const _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);
// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:
const VERIFY_DEFAULT = { zip215: true };
function validateOpts(curve) {
    const opts = (0, curve_js_1.validateBasic)(curve);
    ut.validateObject(curve, {
        hash: 'function',
        a: 'bigint',
        d: 'bigint',
        randomBytes: 'function',
    }, {
        adjustScalarBytes: 'function',
        domain: 'function',
        uvRatio: 'function',
        mapToCurve: 'function',
    });
    // Set defaults
    return Object.freeze({ ...opts });
}
// It is not generic twisted curve for now, but ed25519/ed448 generic implementation
function twistedEdwards(curveDef) {
    const CURVE = validateOpts(curveDef);
    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;
    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);
    const modP = Fp.create; // Function overrides
    // sqrt(u/v)
    const uvRatio = CURVE.uvRatio ||
        ((u, v) => {
            try {
                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };
            }
            catch (e) {
                return { isValid: false, value: _0n };
            }
        });
    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP
    const domain = CURVE.domain ||
        ((data, ctx, phflag) => {
            if (ctx.length || phflag)
                throw new Error('Contexts/pre-hash are not supported');
            return data;
        }); // NOOP
    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]
    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]
    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]
    function assertInRange(n, max) {
        // n in [1..max-1]
        if (inRange(n, max))
            return n;
        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);
    }
    function assertGE0(n) {
        // n in [0..CURVE_ORDER-1]
        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group
    }
    const pointPrecomputes = new Map();
    function isPoint(other) {
        if (!(other instanceof Point))
            throw new Error('ExtendedPoint expected');
    }
    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).
    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates
    class Point {
        constructor(ex, ey, ez, et) {
            this.ex = ex;
            this.ey = ey;
            this.ez = ez;
            this.et = et;
            if (!in0MaskRange(ex))
                throw new Error('x required');
            if (!in0MaskRange(ey))
                throw new Error('y required');
            if (!in0MaskRange(ez))
                throw new Error('z required');
            if (!in0MaskRange(et))
                throw new Error('t required');
        }
        get x() {
            return this.toAffine().x;
        }
        get y() {
            return this.toAffine().y;
        }
        static fromAffine(p) {
            if (p instanceof Point)
                throw new Error('extended point not allowed');
            const { x, y } = p || {};
            if (!in0MaskRange(x) || !in0MaskRange(y))
                throw new Error('invalid affine point');
            return new Point(x, y, _1n, modP(x * y));
        }
        static normalizeZ(points) {
            const toInv = Fp.invertBatch(points.map((p) => p.ez));
            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);
        }
        // "Private method", don't use it directly
        _setWindowSize(windowSize) {
            this._WINDOW_SIZE = windowSize;
            pointPrecomputes.delete(this);
        }
        // Not required for fromHex(), which always creates valid points.
        // Could be useful for fromAffine().
        assertValidity() {
            const { a, d } = CURVE;
            if (this.is0())
                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?
            // Equation in affine coordinates: ax² + y² = 1 + dx²y²
            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²
            const { ex: X, ey: Y, ez: Z, et: T } = this;
            const X2 = modP(X * X); // X²
            const Y2 = modP(Y * Y); // Y²
            const Z2 = modP(Z * Z); // Z²
            const Z4 = modP(Z2 * Z2); // Z⁴
            const aX2 = modP(X2 * a); // aX²
            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²
            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²
            if (left !== right)
                throw new Error('bad point: equation left != right (1)');
            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T
            const XY = modP(X * Y);
            const ZT = modP(Z * T);
            if (XY !== ZT)
                throw new Error('bad point: equation left != right (2)');
        }
        // Compare one point to another.
        equals(other) {
            isPoint(other);
            const { ex: X1, ey: Y1, ez: Z1 } = this;
            const { ex: X2, ey: Y2, ez: Z2 } = other;
            const X1Z2 = modP(X1 * Z2);
            const X2Z1 = modP(X2 * Z1);
            const Y1Z2 = modP(Y1 * Z2);
            const Y2Z1 = modP(Y2 * Z1);
            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;
        }
        is0() {
            return this.equals(Point.ZERO);
        }
        negate() {
            // Flips point sign to a negative one (-x, y in affine coords)
            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));
        }
        // Fast algo for doubling Extended Point.
        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd
        // Cost: 4M + 4S + 1*a + 6add + 1*2.
        double() {
            const { a } = CURVE;
            const { ex: X1, ey: Y1, ez: Z1 } = this;
            const A = modP(X1 * X1); // A = X12
            const B = modP(Y1 * Y1); // B = Y12
            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12
            const D = modP(a * A); // D = a*A
            const x1y1 = X1 + Y1;
            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B
            const G = D + B; // G = D+B
            const F = G - C; // F = G-C
            const H = D - B; // H = D-B
            const X3 = modP(E * F); // X3 = E*F
            const Y3 = modP(G * H); // Y3 = G*H
            const T3 = modP(E * H); // T3 = E*H
            const Z3 = modP(F * G); // Z3 = F*G
            return new Point(X3, Y3, Z3, T3);
        }
        // Fast algo for adding 2 Extended Points.
        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd
        // Cost: 9M + 1*a + 1*d + 7add.
        add(other) {
            isPoint(other);
            const { a, d } = CURVE;
            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;
            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;
            // Faster algo for adding 2 Extended Points when curve's a=-1.
            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4
            // Cost: 8M + 8add + 2*2.
            // Note: It does not check whether the `other` point is valid.
            if (a === BigInt(-1)) {
                const A = modP((Y1 - X1) * (Y2 + X2));
                const B = modP((Y1 + X1) * (Y2 - X2));
                const F = modP(B - A);
                if (F === _0n)
                    return this.double(); // Same point. Tests say it doesn't affect timing
                const C = modP(Z1 * _2n * T2);
                const D = modP(T1 * _2n * Z2);
                const E = D + C;
                const G = B + A;
                const H = D - C;
                const X3 = modP(E * F);
                const Y3 = modP(G * H);
                const T3 = modP(E * H);
                const Z3 = modP(F * G);
                return new Point(X3, Y3, Z3, T3);
            }
            const A = modP(X1 * X2); // A = X1*X2
            const B = modP(Y1 * Y2); // B = Y1*Y2
            const C = modP(T1 * d * T2); // C = T1*d*T2
            const D = modP(Z1 * Z2); // D = Z1*Z2
            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B
            const F = D - C; // F = D-C
            const G = D + C; // G = D+C
            const H = modP(B - a * A); // H = B-a*A
            const X3 = modP(E * F); // X3 = E*F
            const Y3 = modP(G * H); // Y3 = G*H
            const T3 = modP(E * H); // T3 = E*H
            const Z3 = modP(F * G); // Z3 = F*G
            return new Point(X3, Y3, Z3, T3);
        }
        subtract(other) {
            return this.add(other.negate());
        }
        wNAF(n) {
            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);
        }
        // Constant-time multiplication.
        multiply(scalar) {
            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));
            return Point.normalizeZ([p, f])[0];
        }
        // Non-constant-time multiplication. Uses double-and-add algorithm.
        // It's faster, but should only be used when you don't care about
        // an exposed private key e.g. sig verification.
        // Does NOT allow scalars higher than CURVE.n.
        multiplyUnsafe(scalar) {
            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n
            if (n === _0n)
                return I;
            if (this.equals(I) || n === _1n)
                return this;
            if (this.equals(G))
                return this.wNAF(n).p;
            return wnaf.unsafeLadder(this, n);
        }
        // Checks if point is of small order.
        // If you add something to small order point, you will have "dirty"
        // point with torsion component.
        // Multiplies point by cofactor and checks if the result is 0.
        isSmallOrder() {
            return this.multiplyUnsafe(cofactor).is0();
        }
        // Multiplies point by curve order and checks if the result is 0.
        // Returns `false` is the point is dirty.
        isTorsionFree() {
            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();
        }
        // Converts Extended point to default (x, y) coordinates.
        // Can accept precomputed Z^-1 - for example, from invertBatch.
        toAffine(iz) {
            const { ex: x, ey: y, ez: z } = this;
            const is0 = this.is0();
            if (iz == null)
                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily
            const ax = modP(x * iz);
            const ay = modP(y * iz);
            const zz = modP(z * iz);
            if (is0)
                return { x: _0n, y: _1n };
            if (zz !== _1n)
                throw new Error('invZ was invalid');
            return { x: ax, y: ay };
        }
        clearCofactor() {
            const { h: cofactor } = CURVE;
            if (cofactor === _1n)
                return this;
            return this.multiplyUnsafe(cofactor);
        }
        // Converts hash string or Uint8Array to Point.
        // Uses algo from RFC8032 5.1.3.
        static fromHex(hex, zip215 = false) {
            const { d, a } = CURVE;
            const len = Fp.BYTES;
            hex = (0, utils_js_1.ensureBytes)('pointHex', hex, len); // copy hex to a new array
            const normed = hex.slice(); // copy again, we'll manipulate it
            const lastByte = hex[len - 1]; // select last byte
            normed[len - 1] = lastByte & ~0x80; // clear last bit
            const y = ut.bytesToNumberLE(normed);
            if (y === _0n) {
                // y=0 is allowed
            }
            else {
                // RFC8032 prohibits >= p, but ZIP215 doesn't
                if (zip215)
                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)
                else
                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)
            }
            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:
            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)
            const y2 = modP(y * y); // denominator is always non-0 mod p.
            const u = modP(y2 - _1n); // u = y² - 1
            const v = modP(d * y2 - a); // v = d y² + 1.
            let { isValid, value: x } = uvRatio(u, v); // √(u/v)
            if (!isValid)
                throw new Error('Point.fromHex: invalid y coordinate');
            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper
            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit
            if (!zip215 && x === _0n && isLastByteOdd)
                // if x=0 and x_0 = 1, fail
                throw new Error('Point.fromHex: x=0 and x_0=1');
            if (isLastByteOdd !== isXOdd)
                x = modP(-x); // if x_0 != x mod 2, set x = p-x
            return Point.fromAffine({ x, y });
        }
        static fromPrivateKey(privKey) {
            return getExtendedPublicKey(privKey).point;
        }
        toRawBytes() {
            const { x, y } = this.toAffine();
            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)
            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y
            return bytes; // and use the last byte to encode sign of x
        }
        toHex() {
            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.
        }
    }
    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));
    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0
    const { BASE: G, ZERO: I } = Point;
    const wnaf = (0, curve_js_1.wNAF)(Point, nByteLength * 8);
    function modN(a) {
        return (0, modular_js_1.mod)(a, CURVE_ORDER);
    }
    // Little-endian SHA512 with modulo n
    function modN_LE(hash) {
        return modN(ut.bytesToNumberLE(hash));
    }
    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */
    function getExtendedPublicKey(key) {
        const len = nByteLength;
        key = (0, utils_js_1.ensureBytes)('private key', key, len);
        // Hash private key with curve's hash function to produce uniformingly random input
        // Check byte lengths: ensure(64, h(ensure(32, key)))
        const hashed = (0, utils_js_1.ensureBytes)('hashed private key', cHash(key), 2 * len);
        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE
        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)
        const scalar = modN_LE(head); // The actual private scalar
        const point = G.multiply(scalar); // Point on Edwards curve aka public key
        const pointBytes = point.toRawBytes(); // Uint8Array representation
        return { head, prefix, scalar, point, pointBytes };
    }
    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared
    function getPublicKey(privKey) {
        return getExtendedPublicKey(privKey).pointBytes;
    }
    // int('LE', SHA512(dom2(F, C) || msgs)) mod N
    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {
        const msg = ut.concatBytes(...msgs);
        return modN_LE(cHash(domain(msg, (0, utils_js_1.ensureBytes)('context', context), !!prehash)));
    }
    /** Signs message with privateKey. RFC8032 5.1.6 */
    function sign(msg, privKey, options = {}) {
        msg = (0, utils_js_1.ensureBytes)('message', msg);
        if (prehash)
            msg = prehash(msg); // for ed25519ph etc.
        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);
        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)
        const R = G.multiply(r).toRawBytes(); // R = rG
        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)
        const s = modN(r + k * scalar); // S = (r + k * s) mod L
        assertGE0(s); // 0 <= s < l
        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));
        return (0, utils_js_1.ensureBytes)('result', res, nByteLength * 2); // 64-byte signature
    }
    const verifyOpts = VERIFY_DEFAULT;
    function verify(sig, msg, publicKey, options = verifyOpts) {
        const { context, zip215 } = options;
        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.
        sig = (0, utils_js_1.ensureBytes)('signature', sig, 2 * len); // An extended group equation is checked.
        msg = (0, utils_js_1.ensureBytes)('message', msg);
        if (prehash)
            msg = prehash(msg); // for ed25519ph, etc
        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));
        // zip215: true is good for consensus-critical apps and allows points < 2^256
        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p
        let A, R, SB;
        try {
            A = Point.fromHex(publicKey, zip215);
            R = Point.fromHex(sig.slice(0, len), zip215);
            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside
        }
        catch (error) {
            return false;
        }
        if (!zip215 && A.isSmallOrder())
            return false;
        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);
        const RkA = R.add(A.multiplyUnsafe(k));
        // [8][S]B = [8]R + [8][k]A'
        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);
    }
    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.
    const utils = {
        getExtendedPublicKey,
        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.
        randomPrivateKey: () => randomBytes(Fp.BYTES),
        /**
         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT
         * values. This slows down first getPublicKey() by milliseconds (see Speed section),
         * but allows to speed-up subsequent getPublicKey() calls up to 20x.
         * @param windowSize 2, 4, 8, 16
         */
        precompute(windowSize = 8, point = Point.BASE) {
            point._setWindowSize(windowSize);
            point.multiply(BigInt(3));
            return point;
        },
    };
    return {
        CURVE,
        getPublicKey,
        sign,
        verify,
        ExtendedPoint: Point,
        utils,
    };
}
exports.twistedEdwards = twistedEdwards;
//# sourceMappingURL=edwards.js.map

/***/ }),

/***/ 7281:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createHasher = exports.isogenyMap = exports.hash_to_field = exports.expand_message_xof = exports.expand_message_xmd = void 0;
const modular_js_1 = __nccwpck_require__(76557);
const utils_js_1 = __nccwpck_require__(62210);
function validateDST(dst) {
    if (dst instanceof Uint8Array)
        return dst;
    if (typeof dst === 'string')
        return (0, utils_js_1.utf8ToBytes)(dst);
    throw new Error('DST must be Uint8Array or string');
}
// Octet Stream to Integer. "spec" implementation of os2ip is 2.5x slower vs bytesToNumberBE.
const os2ip = utils_js_1.bytesToNumberBE;
// Integer to Octet Stream (numberToBytesBE)
function i2osp(value, length) {
    if (value < 0 || value >= 1 << (8 * length)) {
        throw new Error(`bad I2OSP call: value=${value} length=${length}`);
    }
    const res = Array.from({ length }).fill(0);
    for (let i = length - 1; i >= 0; i--) {
        res[i] = value & 0xff;
        value >>>= 8;
    }
    return new Uint8Array(res);
}
function strxor(a, b) {
    const arr = new Uint8Array(a.length);
    for (let i = 0; i < a.length; i++) {
        arr[i] = a[i] ^ b[i];
    }
    return arr;
}
function isBytes(item) {
    if (!(item instanceof Uint8Array))
        throw new Error('Uint8Array expected');
}
function isNum(item) {
    if (!Number.isSafeInteger(item))
        throw new Error('number expected');
}
// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits
// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1
function expand_message_xmd(msg, DST, lenInBytes, H) {
    isBytes(msg);
    isBytes(DST);
    isNum(lenInBytes);
    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3
    if (DST.length > 255)
        DST = H((0, utils_js_1.concatBytes)((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-'), DST));
    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;
    const ell = Math.ceil(lenInBytes / b_in_bytes);
    if (ell > 255)
        throw new Error('Invalid xmd length');
    const DST_prime = (0, utils_js_1.concatBytes)(DST, i2osp(DST.length, 1));
    const Z_pad = i2osp(0, r_in_bytes);
    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str
    const b = new Array(ell);
    const b_0 = H((0, utils_js_1.concatBytes)(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));
    b[0] = H((0, utils_js_1.concatBytes)(b_0, i2osp(1, 1), DST_prime));
    for (let i = 1; i <= ell; i++) {
        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];
        b[i] = H((0, utils_js_1.concatBytes)(...args));
    }
    const pseudo_random_bytes = (0, utils_js_1.concatBytes)(...b);
    return pseudo_random_bytes.slice(0, lenInBytes);
}
exports.expand_message_xmd = expand_message_xmd;
// Produces a uniformly random byte string using an extendable-output function (XOF) H.
// 1. The collision resistance of H MUST be at least k bits.
// 2. H MUST be an XOF that has been proved indifferentiable from
//    a random oracle under a reasonable cryptographic assumption.
// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2
function expand_message_xof(msg, DST, lenInBytes, k, H) {
    isBytes(msg);
    isBytes(DST);
    isNum(lenInBytes);
    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3
    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));
    if (DST.length > 255) {
        const dkLen = Math.ceil((2 * k) / 8);
        DST = H.create({ dkLen }).update((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-')).update(DST).digest();
    }
    if (lenInBytes > 65535 || DST.length > 255)
        throw new Error('expand_message_xof: invalid lenInBytes');
    return (H.create({ dkLen: lenInBytes })
        .update(msg)
        .update(i2osp(lenInBytes, 2))
        // 2. DST_prime = DST || I2OSP(len(DST), 1)
        .update(DST)
        .update(i2osp(DST.length, 1))
        .digest());
}
exports.expand_message_xof = expand_message_xof;
/**
 * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F
 * https://www.rfc-editor.org/rfc/rfc9380#section-5.2
 * @param msg a byte string containing the message to hash
 * @param count the number of elements of F to output
 * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above
 * @returns [u_0, ..., u_(count - 1)], a list of field elements.
 */
function hash_to_field(msg, count, options) {
    (0, utils_js_1.validateObject)(options, {
        DST: 'stringOrUint8Array',
        p: 'bigint',
        m: 'isSafeInteger',
        k: 'isSafeInteger',
        hash: 'hash',
    });
    const { p, k, m, hash, expand, DST: _DST } = options;
    isBytes(msg);
    isNum(count);
    const DST = validateDST(_DST);
    const log2p = p.toString(2).length;
    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above
    const len_in_bytes = count * m * L;
    let prb; // pseudo_random_bytes
    if (expand === 'xmd') {
        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);
    }
    else if (expand === 'xof') {
        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);
    }
    else if (expand === '_internal_pass') {
        // for internal tests only
        prb = msg;
    }
    else {
        throw new Error('expand must be "xmd" or "xof"');
    }
    const u = new Array(count);
    for (let i = 0; i < count; i++) {
        const e = new Array(m);
        for (let j = 0; j < m; j++) {
            const elm_offset = L * (j + i * m);
            const tv = prb.subarray(elm_offset, elm_offset + L);
            e[j] = (0, modular_js_1.mod)(os2ip(tv), p);
        }
        u[i] = e;
    }
    return u;
}
exports.hash_to_field = hash_to_field;
function isogenyMap(field, map) {
    // Make same order as in spec
    const COEFF = map.map((i) => Array.from(i).reverse());
    return (x, y) => {
        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));
        x = field.div(xNum, xDen); // xNum / xDen
        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)
        return { x, y };
    };
}
exports.isogenyMap = isogenyMap;
function createHasher(Point, mapToCurve, def) {
    if (typeof mapToCurve !== 'function')
        throw new Error('mapToCurve() must be defined');
    return {
        // Encodes byte string to elliptic curve.
        // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3
        hashToCurve(msg, options) {
            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });
            const u0 = Point.fromAffine(mapToCurve(u[0]));
            const u1 = Point.fromAffine(mapToCurve(u[1]));
            const P = u0.add(u1).clearCofactor();
            P.assertValidity();
            return P;
        },
        // Encodes byte string to elliptic curve.
        // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3
        encodeToCurve(msg, options) {
            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });
            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();
            P.assertValidity();
            return P;
        },
    };
}
exports.createHasher = createHasher;
//# sourceMappingURL=hash-to-curve.js.map

/***/ }),

/***/ 76557:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mapHashToField = exports.getMinHashLength = exports.getFieldBytesLength = exports.hashToPrivateScalar = exports.FpSqrtEven = exports.FpSqrtOdd = exports.Field = exports.nLength = exports.FpIsSquare = exports.FpDiv = exports.FpInvertBatch = exports.FpPow = exports.validateField = exports.isNegativeLE = exports.FpSqrt = exports.tonelliShanks = exports.invert = exports.pow2 = exports.pow = exports.mod = void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// Utilities for modular arithmetics and finite fields
const utils_js_1 = __nccwpck_require__(62210);
// prettier-ignore
const _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);
// prettier-ignore
const _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);
// prettier-ignore
const _9n = BigInt(9), _16n = BigInt(16);
// Calculates a modulo b
function mod(a, b) {
    const result = a % b;
    return result >= _0n ? result : b + result;
}
exports.mod = mod;
/**
 * Efficiently raise num to power and do modular division.
 * Unsafe in some contexts: uses ladder, so can expose bigint bits.
 * @example
 * pow(2n, 6n, 11n) // 64n % 11n == 9n
 */
// TODO: use field version && remove
function pow(num, power, modulo) {
    if (modulo <= _0n || power < _0n)
        throw new Error('Expected power/modulo > 0');
    if (modulo === _1n)
        return _0n;
    let res = _1n;
    while (power > _0n) {
        if (power & _1n)
            res = (res * num) % modulo;
        num = (num * num) % modulo;
        power >>= _1n;
    }
    return res;
}
exports.pow = pow;
// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)
function pow2(x, power, modulo) {
    let res = x;
    while (power-- > _0n) {
        res *= res;
        res %= modulo;
    }
    return res;
}
exports.pow2 = pow2;
// Inverses number over modulo
function invert(number, modulo) {
    if (number === _0n || modulo <= _0n) {
        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);
    }
    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/
    // Fermat's little theorem "CT-like" version inv(n) = n^(m-2) mod m is 30x slower.
    let a = mod(number, modulo);
    let b = modulo;
    // prettier-ignore
    let x = _0n, y = _1n, u = _1n, v = _0n;
    while (a !== _0n) {
        // JIT applies optimization if those two lines follow each other
        const q = b / a;
        const r = b % a;
        const m = x - u * q;
        const n = y - v * q;
        // prettier-ignore
        b = a, a = r, x = u, y = v, u = m, v = n;
    }
    const gcd = b;
    if (gcd !== _1n)
        throw new Error('invert: does not exist');
    return mod(x, modulo);
}
exports.invert = invert;
/**
 * Tonelli-Shanks square root search algorithm.
 * 1. https://eprint.iacr.org/2012/685.pdf (page 12)
 * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks
 * Will start an infinite loop if field order P is not prime.
 * @param P field order
 * @returns function that takes field Fp (created from P) and number n
 */
function tonelliShanks(P) {
    // Legendre constant: used to calculate Legendre symbol (a | p),
    // which denotes the value of a^((p-1)/2) (mod p).
    // (a | p) ≡ 1    if a is a square (mod p)
    // (a | p) ≡ -1   if a is not a square (mod p)
    // (a | p) ≡ 0    if a ≡ 0 (mod p)
    const legendreC = (P - _1n) / _2n;
    let Q, S, Z;
    // Step 1: By factoring out powers of 2 from p - 1,
    // find q and s such that p - 1 = q*(2^s) with q odd
    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)
        ;
    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq
    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)
        ;
    // Fast-path
    if (S === 1) {
        const p1div4 = (P + _1n) / _4n;
        return function tonelliFast(Fp, n) {
            const root = Fp.pow(n, p1div4);
            if (!Fp.eql(Fp.sqr(root), n))
                throw new Error('Cannot find square root');
            return root;
        };
    }
    // Slow-path
    const Q1div2 = (Q + _1n) / _2n;
    return function tonelliSlow(Fp, n) {
        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1
        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))
            throw new Error('Cannot find square root');
        let r = S;
        // TODO: will fail at Fp2/etc
        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b
        let x = Fp.pow(n, Q1div2); // first guess at the square root
        let b = Fp.pow(n, Q); // first guess at the fudge factor
        while (!Fp.eql(b, Fp.ONE)) {
            if (Fp.eql(b, Fp.ZERO))
                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)
            // Find m such b^(2^m)==1
            let m = 1;
            for (let t2 = Fp.sqr(b); m < r; m++) {
                if (Fp.eql(t2, Fp.ONE))
                    break;
                t2 = Fp.sqr(t2); // t2 *= t2
            }
            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow
            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)
            g = Fp.sqr(ge); // g = ge * ge
            x = Fp.mul(x, ge); // x *= ge
            b = Fp.mul(b, g); // b *= g
            r = m;
        }
        return x;
    };
}
exports.tonelliShanks = tonelliShanks;
function FpSqrt(P) {
    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.
    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).
    // P ≡ 3 (mod 4)
    // √n = n^((P+1)/4)
    if (P % _4n === _3n) {
        // Not all roots possible!
        // const ORDER =
        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;
        // const NUM = 72057594037927816n;
        const p1div4 = (P + _1n) / _4n;
        return function sqrt3mod4(Fp, n) {
            const root = Fp.pow(n, p1div4);
            // Throw if root**2 != n
            if (!Fp.eql(Fp.sqr(root), n))
                throw new Error('Cannot find square root');
            return root;
        };
    }
    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)
    if (P % _8n === _5n) {
        const c1 = (P - _5n) / _8n;
        return function sqrt5mod8(Fp, n) {
            const n2 = Fp.mul(n, _2n);
            const v = Fp.pow(n2, c1);
            const nv = Fp.mul(n, v);
            const i = Fp.mul(Fp.mul(nv, _2n), v);
            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));
            if (!Fp.eql(Fp.sqr(root), n))
                throw new Error('Cannot find square root');
            return root;
        };
    }
    // P ≡ 9 (mod 16)
    if (P % _16n === _9n) {
        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start
        // Means we cannot use sqrt for constants at all!
        //
        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F
        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F
        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F
        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic
        // sqrt = (x) => {
        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4
        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1
        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1
        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1
        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x
        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x
        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x
        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x
        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x
        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2
        // }
    }
    // Other cases: Tonelli-Shanks algorithm
    return tonelliShanks(P);
}
exports.FpSqrt = FpSqrt;
// Little-endian check for first LE bit (last BE bit);
const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;
exports.isNegativeLE = isNegativeLE;
// prettier-ignore
const FIELD_FIELDS = [
    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',
    'eql', 'add', 'sub', 'mul', 'pow', 'div',
    'addN', 'subN', 'mulN', 'sqrN'
];
function validateField(field) {
    const initial = {
        ORDER: 'bigint',
        MASK: 'bigint',
        BYTES: 'isSafeInteger',
        BITS: 'isSafeInteger',
    };
    const opts = FIELD_FIELDS.reduce((map, val) => {
        map[val] = 'function';
        return map;
    }, initial);
    return (0, utils_js_1.validateObject)(field, opts);
}
exports.validateField = validateField;
// Generic field functions
/**
 * Same as `pow` but for Fp: non-constant-time.
 * Unsafe in some contexts: uses ladder, so can expose bigint bits.
 */
function FpPow(f, num, power) {
    // Should have same speed as pow for bigints
    // TODO: benchmark!
    if (power < _0n)
        throw new Error('Expected power > 0');
    if (power === _0n)
        return f.ONE;
    if (power === _1n)
        return num;
    let p = f.ONE;
    let d = num;
    while (power > _0n) {
        if (power & _1n)
            p = f.mul(p, d);
        d = f.sqr(d);
        power >>= _1n;
    }
    return p;
}
exports.FpPow = FpPow;
/**
 * Efficiently invert an array of Field elements.
 * `inv(0)` will return `undefined` here: make sure to throw an error.
 */
function FpInvertBatch(f, nums) {
    const tmp = new Array(nums.length);
    // Walk from first to last, multiply them by each other MOD p
    const lastMultiplied = nums.reduce((acc, num, i) => {
        if (f.is0(num))
            return acc;
        tmp[i] = acc;
        return f.mul(acc, num);
    }, f.ONE);
    // Invert last element
    const inverted = f.inv(lastMultiplied);
    // Walk from last to first, multiply them by inverted each other MOD p
    nums.reduceRight((acc, num, i) => {
        if (f.is0(num))
            return acc;
        tmp[i] = f.mul(acc, tmp[i]);
        return f.mul(acc, num);
    }, inverted);
    return tmp;
}
exports.FpInvertBatch = FpInvertBatch;
function FpDiv(f, lhs, rhs) {
    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));
}
exports.FpDiv = FpDiv;
// This function returns True whenever the value x is a square in the field F.
function FpIsSquare(f) {
    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic
    return (x) => {
        const p = f.pow(x, legendreConst);
        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);
    };
}
exports.FpIsSquare = FpIsSquare;
// CURVE.n lengths
function nLength(n, nBitLength) {
    // Bit size, byte size of CURVE.n
    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;
    const nByteLength = Math.ceil(_nBitLength / 8);
    return { nBitLength: _nBitLength, nByteLength };
}
exports.nLength = nLength;
/**
 * Initializes a finite field over prime. **Non-primes are not supported.**
 * Do not init in loop: slow. Very fragile: always run a benchmark on a change.
 * Major performance optimizations:
 * * a) denormalized operations like mulN instead of mul
 * * b) same object shape: never add or remove keys
 * * c) Object.freeze
 * @param ORDER prime positive bigint
 * @param bitLen how many bits the field consumes
 * @param isLE (def: false) if encoding / decoding should be in little-endian
 * @param redef optional faster redefinitions of sqrt and other methods
 */
function Field(ORDER, bitLen, isLE = false, redef = {}) {
    if (ORDER <= _0n)
        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);
    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);
    if (BYTES > 2048)
        throw new Error('Field lengths over 2048 bytes are not supported');
    const sqrtP = FpSqrt(ORDER);
    const f = Object.freeze({
        ORDER,
        BITS,
        BYTES,
        MASK: (0, utils_js_1.bitMask)(BITS),
        ZERO: _0n,
        ONE: _1n,
        create: (num) => mod(num, ORDER),
        isValid: (num) => {
            if (typeof num !== 'bigint')
                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);
            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible
        },
        is0: (num) => num === _0n,
        isOdd: (num) => (num & _1n) === _1n,
        neg: (num) => mod(-num, ORDER),
        eql: (lhs, rhs) => lhs === rhs,
        sqr: (num) => mod(num * num, ORDER),
        add: (lhs, rhs) => mod(lhs + rhs, ORDER),
        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),
        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),
        pow: (num, power) => FpPow(f, num, power),
        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),
        // Same as above, but doesn't normalize
        sqrN: (num) => num * num,
        addN: (lhs, rhs) => lhs + rhs,
        subN: (lhs, rhs) => lhs - rhs,
        mulN: (lhs, rhs) => lhs * rhs,
        inv: (num) => invert(num, ORDER),
        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),
        invertBatch: (lst) => FpInvertBatch(f, lst),
        // TODO: do we really need constant cmov?
        // We don't have const-time bigints anyway, so probably will be not very useful
        cmov: (a, b, c) => (c ? b : a),
        toBytes: (num) => (isLE ? (0, utils_js_1.numberToBytesLE)(num, BYTES) : (0, utils_js_1.numberToBytesBE)(num, BYTES)),
        fromBytes: (bytes) => {
            if (bytes.length !== BYTES)
                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);
            return isLE ? (0, utils_js_1.bytesToNumberLE)(bytes) : (0, utils_js_1.bytesToNumberBE)(bytes);
        },
    });
    return Object.freeze(f);
}
exports.Field = Field;
function FpSqrtOdd(Fp, elm) {
    if (!Fp.isOdd)
        throw new Error(`Field doesn't have isOdd`);
    const root = Fp.sqrt(elm);
    return Fp.isOdd(root) ? root : Fp.neg(root);
}
exports.FpSqrtOdd = FpSqrtOdd;
function FpSqrtEven(Fp, elm) {
    if (!Fp.isOdd)
        throw new Error(`Field doesn't have isOdd`);
    const root = Fp.sqrt(elm);
    return Fp.isOdd(root) ? Fp.neg(root) : root;
}
exports.FpSqrtEven = FpSqrtEven;
/**
 * "Constant-time" private key generation utility.
 * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).
 * Which makes it slightly more biased, less secure.
 * @deprecated use mapKeyToField instead
 */
function hashToPrivateScalar(hash, groupOrder, isLE = false) {
    hash = (0, utils_js_1.ensureBytes)('privateHash', hash);
    const hashLen = hash.length;
    const minLen = nLength(groupOrder).nByteLength + 8;
    if (minLen < 24 || hashLen < minLen || hashLen > 1024)
        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);
    const num = isLE ? (0, utils_js_1.bytesToNumberLE)(hash) : (0, utils_js_1.bytesToNumberBE)(hash);
    return mod(num, groupOrder - _1n) + _1n;
}
exports.hashToPrivateScalar = hashToPrivateScalar;
/**
 * Returns total number of bytes consumed by the field element.
 * For example, 32 bytes for usual 256-bit weierstrass curve.
 * @param fieldOrder number of field elements, usually CURVE.n
 * @returns byte length of field
 */
function getFieldBytesLength(fieldOrder) {
    if (typeof fieldOrder !== 'bigint')
        throw new Error('field order must be bigint');
    const bitLength = fieldOrder.toString(2).length;
    return Math.ceil(bitLength / 8);
}
exports.getFieldBytesLength = getFieldBytesLength;
/**
 * Returns minimal amount of bytes that can be safely reduced
 * by field order.
 * Should be 2^-128 for 128-bit curve such as P256.
 * @param fieldOrder number of field elements, usually CURVE.n
 * @returns byte length of target hash
 */
function getMinHashLength(fieldOrder) {
    const length = getFieldBytesLength(fieldOrder);
    return length + Math.ceil(length / 2);
}
exports.getMinHashLength = getMinHashLength;
/**
 * "Constant-time" private key generation utility.
 * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF
 * and convert them into private scalar, with the modulo bias being negligible.
 * Needs at least 48 bytes of input for 32-byte private key.
 * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/
 * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final
 * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5
 * @param hash hash output from SHA3 or a similar function
 * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)
 * @param isLE interpret hash bytes as LE num
 * @returns valid private scalar
 */
function mapHashToField(key, fieldOrder, isLE = false) {
    const len = key.length;
    const fieldLen = getFieldBytesLength(fieldOrder);
    const minLen = getMinHashLength(fieldOrder);
    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.
    if (len < 16 || len < minLen || len > 1024)
        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);
    const num = isLE ? (0, utils_js_1.bytesToNumberBE)(key) : (0, utils_js_1.bytesToNumberLE)(key);
    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0
    const reduced = mod(num, fieldOrder - _1n) + _1n;
    return isLE ? (0, utils_js_1.numberToBytesLE)(reduced, fieldLen) : (0, utils_js_1.numberToBytesBE)(reduced, fieldLen);
}
exports.mapHashToField = mapHashToField;
//# sourceMappingURL=modular.js.map

/***/ }),

/***/ 25449:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.montgomery = void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const modular_js_1 = __nccwpck_require__(76557);
const utils_js_1 = __nccwpck_require__(62210);
const _0n = BigInt(0);
const _1n = BigInt(1);
function validateOpts(curve) {
    (0, utils_js_1.validateObject)(curve, {
        a: 'bigint',
    }, {
        montgomeryBits: 'isSafeInteger',
        nByteLength: 'isSafeInteger',
        adjustScalarBytes: 'function',
        domain: 'function',
        powPminus2: 'function',
        Gu: 'bigint',
    });
    // Set defaults
    return Object.freeze({ ...curve });
}
// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)
// Uses only one coordinate instead of two
function montgomery(curveDef) {
    const CURVE = validateOpts(curveDef);
    const { P } = CURVE;
    const modP = (n) => (0, modular_js_1.mod)(n, P);
    const montgomeryBits = CURVE.montgomeryBits;
    const montgomeryBytes = Math.ceil(montgomeryBits / 8);
    const fieldLen = CURVE.nByteLength;
    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);
    const powPminus2 = CURVE.powPminus2 || ((x) => (0, modular_js_1.pow)(x, P - BigInt(2), P));
    // cswap from RFC7748. But it is not from RFC7748!
    /*
      cswap(swap, x_2, x_3):
           dummy = mask(swap) AND (x_2 XOR x_3)
           x_2 = x_2 XOR dummy
           x_3 = x_3 XOR dummy
           Return (x_2, x_3)
    Where mask(swap) is the all-1 or all-0 word of the same length as x_2
     and x_3, computed, e.g., as mask(swap) = 0 - swap.
    */
    function cswap(swap, x_2, x_3) {
        const dummy = modP(swap * (x_2 - x_3));
        x_2 = modP(x_2 - dummy);
        x_3 = modP(x_3 + dummy);
        return [x_2, x_3];
    }
    // Accepts 0 as well
    function assertFieldElement(n) {
        if (typeof n === 'bigint' && _0n <= n && n < P)
            return n;
        throw new Error('Expected valid scalar 0 < scalar < CURVE.P');
    }
    // x25519 from 4
    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519
    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);
    /**
     *
     * @param pointU u coordinate (x) on Montgomery Curve 25519
     * @param scalar by which the point would be multiplied
     * @returns new Point on Montgomery curve
     */
    function montgomeryLadder(pointU, scalar) {
        const u = assertFieldElement(pointU);
        // Section 5: Implementations MUST accept non-canonical values and process them as
        // if they had been reduced modulo the field prime.
        const k = assertFieldElement(scalar);
        const x_1 = u;
        let x_2 = _1n;
        let z_2 = _0n;
        let x_3 = u;
        let z_3 = _1n;
        let swap = _0n;
        let sw;
        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {
            const k_t = (k >> t) & _1n;
            swap ^= k_t;
            sw = cswap(swap, x_2, x_3);
            x_2 = sw[0];
            x_3 = sw[1];
            sw = cswap(swap, z_2, z_3);
            z_2 = sw[0];
            z_3 = sw[1];
            swap = k_t;
            const A = x_2 + z_2;
            const AA = modP(A * A);
            const B = x_2 - z_2;
            const BB = modP(B * B);
            const E = AA - BB;
            const C = x_3 + z_3;
            const D = x_3 - z_3;
            const DA = modP(D * A);
            const CB = modP(C * B);
            const dacb = DA + CB;
            const da_cb = DA - CB;
            x_3 = modP(dacb * dacb);
            z_3 = modP(x_1 * modP(da_cb * da_cb));
            x_2 = modP(AA * BB);
            z_2 = modP(E * (AA + modP(a24 * E)));
        }
        // (x_2, x_3) = cswap(swap, x_2, x_3)
        sw = cswap(swap, x_2, x_3);
        x_2 = sw[0];
        x_3 = sw[1];
        // (z_2, z_3) = cswap(swap, z_2, z_3)
        sw = cswap(swap, z_2, z_3);
        z_2 = sw[0];
        z_3 = sw[1];
        // z_2^(p - 2)
        const z2 = powPminus2(z_2);
        // Return x_2 * (z_2^(p - 2))
        return modP(x_2 * z2);
    }
    function encodeUCoordinate(u) {
        return (0, utils_js_1.numberToBytesLE)(modP(u), montgomeryBytes);
    }
    function decodeUCoordinate(uEnc) {
        // Section 5: When receiving such an array, implementations of X25519
        // MUST mask the most significant bit in the final byte.
        // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP
        // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519
        const u = (0, utils_js_1.ensureBytes)('u coordinate', uEnc, montgomeryBytes);
        // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)
        if (fieldLen === montgomeryBytes)
            u[fieldLen - 1] &= 127; // 0b0111_1111
        return (0, utils_js_1.bytesToNumberLE)(u);
    }
    function decodeScalar(n) {
        const bytes = (0, utils_js_1.ensureBytes)('scalar', n);
        if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)
            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);
        return (0, utils_js_1.bytesToNumberLE)(adjustScalarBytes(bytes));
    }
    function scalarMult(scalar, u) {
        const pointU = decodeUCoordinate(u);
        const _scalar = decodeScalar(scalar);
        const pu = montgomeryLadder(pointU, _scalar);
        // The result was not contributory
        // https://cr.yp.to/ecdh.html#validate
        if (pu === _0n)
            throw new Error('Invalid private or public key received');
        return encodeUCoordinate(pu);
    }
    // Computes public key from private. By doing scalar multiplication of base point.
    const GuBytes = encodeUCoordinate(CURVE.Gu);
    function scalarMultBase(scalar) {
        return scalarMult(scalar, GuBytes);
    }
    return {
        scalarMult,
        scalarMultBase,
        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),
        getPublicKey: (privateKey) => scalarMultBase(privateKey),
        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },
        GuBytes: GuBytes,
    };
}
exports.montgomery = montgomery;
//# sourceMappingURL=montgomery.js.map

/***/ }),

/***/ 62210:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.validateObject = exports.createHmacDrbg = exports.bitMask = exports.bitSet = exports.bitGet = exports.bitLen = exports.utf8ToBytes = exports.equalBytes = exports.concatBytes = exports.ensureBytes = exports.numberToVarBytesBE = exports.numberToBytesLE = exports.numberToBytesBE = exports.bytesToNumberLE = exports.bytesToNumberBE = exports.hexToBytes = exports.hexToNumber = exports.numberToHexUnpadded = exports.bytesToHex = void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// 100 lines of code in the file are duplicated from noble-hashes (utils).
// This is OK: `abstract` directory does not use noble-hashes.
// User may opt-in into using different hashing library. This way, noble-hashes
// won't be included into their bundle.
const _0n = BigInt(0);
const _1n = BigInt(1);
const _2n = BigInt(2);
const u8a = (a) => a instanceof Uint8Array;
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    if (!u8a(bytes))
        throw new Error('Uint8Array expected');
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
exports.bytesToHex = bytesToHex;
function numberToHexUnpadded(num) {
    const hex = num.toString(16);
    return hex.length & 1 ? `0${hex}` : hex;
}
exports.numberToHexUnpadded = numberToHexUnpadded;
function hexToNumber(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    // Big Endian
    return BigInt(hex === '' ? '0' : `0x${hex}`);
}
exports.hexToNumber = hexToNumber;
/**
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    const len = hex.length;
    if (len % 2)
        throw new Error('padded hex string expected, got unpadded hex of length ' + len);
    const array = new Uint8Array(len / 2);
    for (let i = 0; i < array.length; i++) {
        const j = i * 2;
        const hexByte = hex.slice(j, j + 2);
        const byte = Number.parseInt(hexByte, 16);
        if (Number.isNaN(byte) || byte < 0)
            throw new Error('Invalid byte sequence');
        array[i] = byte;
    }
    return array;
}
exports.hexToBytes = hexToBytes;
// BE: Big Endian, LE: Little Endian
function bytesToNumberBE(bytes) {
    return hexToNumber(bytesToHex(bytes));
}
exports.bytesToNumberBE = bytesToNumberBE;
function bytesToNumberLE(bytes) {
    if (!u8a(bytes))
        throw new Error('Uint8Array expected');
    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));
}
exports.bytesToNumberLE = bytesToNumberLE;
function numberToBytesBE(n, len) {
    return hexToBytes(n.toString(16).padStart(len * 2, '0'));
}
exports.numberToBytesBE = numberToBytesBE;
function numberToBytesLE(n, len) {
    return numberToBytesBE(n, len).reverse();
}
exports.numberToBytesLE = numberToBytesLE;
// Unpadded, rarely used
function numberToVarBytesBE(n) {
    return hexToBytes(numberToHexUnpadded(n));
}
exports.numberToVarBytesBE = numberToVarBytesBE;
/**
 * Takes hex string or Uint8Array, converts to Uint8Array.
 * Validates output length.
 * Will throw error for other types.
 * @param title descriptive title for an error e.g. 'private key'
 * @param hex hex string or Uint8Array
 * @param expectedLength optional, will compare to result array's length
 * @returns
 */
function ensureBytes(title, hex, expectedLength) {
    let res;
    if (typeof hex === 'string') {
        try {
            res = hexToBytes(hex);
        }
        catch (e) {
            throw new Error(`${title} must be valid hex string, got "${hex}". Cause: ${e}`);
        }
    }
    else if (u8a(hex)) {
        // Uint8Array.from() instead of hash.slice() because node.js Buffer
        // is instance of Uint8Array, and its slice() creates **mutable** copy
        res = Uint8Array.from(hex);
    }
    else {
        throw new Error(`${title} must be hex string or Uint8Array`);
    }
    const len = res.length;
    if (typeof expectedLength === 'number' && len !== expectedLength)
        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);
    return res;
}
exports.ensureBytes = ensureBytes;
/**
 * Copies several Uint8Arrays into one.
 */
function concatBytes(...arrays) {
    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));
    let pad = 0; // walk through each item, ensure they have proper type
    arrays.forEach((a) => {
        if (!u8a(a))
            throw new Error('Uint8Array expected');
        r.set(a, pad);
        pad += a.length;
    });
    return r;
}
exports.concatBytes = concatBytes;
function equalBytes(b1, b2) {
    // We don't care about timing attacks here
    if (b1.length !== b2.length)
        return false;
    for (let i = 0; i < b1.length; i++)
        if (b1[i] !== b2[i])
            return false;
    return true;
}
exports.equalBytes = equalBytes;
/**
 * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
exports.utf8ToBytes = utf8ToBytes;
// Bit operations
/**
 * Calculates amount of bits in a bigint.
 * Same as `n.toString(2).length`
 */
function bitLen(n) {
    let len;
    for (len = 0; n > _0n; n >>= _1n, len += 1)
        ;
    return len;
}
exports.bitLen = bitLen;
/**
 * Gets single bit at position.
 * NOTE: first bit position is 0 (same as arrays)
 * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`
 */
function bitGet(n, pos) {
    return (n >> BigInt(pos)) & _1n;
}
exports.bitGet = bitGet;
/**
 * Sets single bit at position.
 */
const bitSet = (n, pos, value) => {
    return n | ((value ? _1n : _0n) << BigInt(pos));
};
exports.bitSet = bitSet;
/**
 * Calculate mask for N bits. Not using ** operator with bigints because of old engines.
 * Same as BigInt(`0b${Array(i).fill('1').join('')}`)
 */
const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;
exports.bitMask = bitMask;
// DRBG
const u8n = (data) => new Uint8Array(data); // creates Uint8Array
const u8fr = (arr) => Uint8Array.from(arr); // another shortcut
/**
 * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.
 * @returns function that will call DRBG until 2nd arg returns something meaningful
 * @example
 *   const drbg = createHmacDRBG<Key>(32, 32, hmac);
 *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined
 */
function createHmacDrbg(hashLen, qByteLen, hmacFn) {
    if (typeof hashLen !== 'number' || hashLen < 2)
        throw new Error('hashLen must be a number');
    if (typeof qByteLen !== 'number' || qByteLen < 2)
        throw new Error('qByteLen must be a number');
    if (typeof hmacFn !== 'function')
        throw new Error('hmacFn must be a function');
    // Step B, Step C: set hashLen to 8*ceil(hlen/8)
    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.
    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same
    let i = 0; // Iterations counter, will throw when over 1000
    const reset = () => {
        v.fill(1);
        k.fill(0);
        i = 0;
    };
    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)
    const reseed = (seed = u8n()) => {
        // HMAC-DRBG reseed() function. Steps D-G
        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)
        v = h(); // v = hmac(k || v)
        if (seed.length === 0)
            return;
        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)
        v = h(); // v = hmac(k || v)
    };
    const gen = () => {
        // HMAC-DRBG generate() function
        if (i++ >= 1000)
            throw new Error('drbg: tried 1000 values');
        let len = 0;
        const out = [];
        while (len < qByteLen) {
            v = h();
            const sl = v.slice();
            out.push(sl);
            len += v.length;
        }
        return concatBytes(...out);
    };
    const genUntil = (seed, pred) => {
        reset();
        reseed(seed); // Steps D-G
        let res = undefined; // Step H: grind until k is in [1..n-1]
        while (!(res = pred(gen())))
            reseed();
        reset();
        return res;
    };
    return genUntil;
}
exports.createHmacDrbg = createHmacDrbg;
// Validating curves and fields
const validatorFns = {
    bigint: (val) => typeof val === 'bigint',
    function: (val) => typeof val === 'function',
    boolean: (val) => typeof val === 'boolean',
    string: (val) => typeof val === 'string',
    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,
    isSafeInteger: (val) => Number.isSafeInteger(val),
    array: (val) => Array.isArray(val),
    field: (val, object) => object.Fp.isValid(val),
    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),
};
// type Record<K extends string | number | symbol, T> = { [P in K]: T; }
function validateObject(object, validators, optValidators = {}) {
    const checkField = (fieldName, type, isOptional) => {
        const checkVal = validatorFns[type];
        if (typeof checkVal !== 'function')
            throw new Error(`Invalid validator "${type}", expected function`);
        const val = object[fieldName];
        if (isOptional && val === undefined)
            return;
        if (!checkVal(val, object)) {
            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);
        }
    };
    for (const [fieldName, type] of Object.entries(validators))
        checkField(fieldName, type, false);
    for (const [fieldName, type] of Object.entries(optValidators))
        checkField(fieldName, type, true);
    return object;
}
exports.validateObject = validateObject;
// validate type tests
// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };
// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!
// // Should fail type-check
// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });
// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });
// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });
// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 87760:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mapToCurveSimpleSWU = exports.SWUFpSqrtRatio = exports.weierstrass = exports.weierstrassPoints = exports.DER = void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
// Short Weierstrass curve. The formula is: y² = x³ + ax + b
const mod = __nccwpck_require__(76557);
const ut = __nccwpck_require__(62210);
const utils_js_1 = __nccwpck_require__(62210);
const curve_js_1 = __nccwpck_require__(39328);
function validatePointOpts(curve) {
    const opts = (0, curve_js_1.validateBasic)(curve);
    ut.validateObject(opts, {
        a: 'field',
        b: 'field',
    }, {
        allowedPrivateKeyLengths: 'array',
        wrapPrivateKey: 'boolean',
        isTorsionFree: 'function',
        clearCofactor: 'function',
        allowInfinityPoint: 'boolean',
        fromBytes: 'function',
        toBytes: 'function',
    });
    const { endo, Fp, a } = opts;
    if (endo) {
        if (!Fp.eql(a, Fp.ZERO)) {
            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');
        }
        if (typeof endo !== 'object' ||
            typeof endo.beta !== 'bigint' ||
            typeof endo.splitScalar !== 'function') {
            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');
        }
    }
    return Object.freeze({ ...opts });
}
// ASN.1 DER encoding utilities
const { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;
exports.DER = {
    // asn.1 DER encoding utils
    Err: class DERErr extends Error {
        constructor(m = '') {
            super(m);
        }
    },
    _parseInt(data) {
        const { Err: E } = exports.DER;
        if (data.length < 2 || data[0] !== 0x02)
            throw new E('Invalid signature integer tag');
        const len = data[1];
        const res = data.subarray(2, len + 2);
        if (!len || res.length !== len)
            throw new E('Invalid signature integer: wrong length');
        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,
        // since we always use positive integers here. It must always be empty:
        // - add zero byte if exists
        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)
        if (res[0] & 0b10000000)
            throw new E('Invalid signature integer: negative');
        if (res[0] === 0x00 && !(res[1] & 0b10000000))
            throw new E('Invalid signature integer: unnecessary leading zero');
        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left
    },
    toSig(hex) {
        // parse DER signature
        const { Err: E } = exports.DER;
        const data = typeof hex === 'string' ? h2b(hex) : hex;
        if (!(data instanceof Uint8Array))
            throw new Error('ui8a expected');
        let l = data.length;
        if (l < 2 || data[0] != 0x30)
            throw new E('Invalid signature tag');
        if (data[1] !== l - 2)
            throw new E('Invalid signature: incorrect length');
        const { d: r, l: sBytes } = exports.DER._parseInt(data.subarray(2));
        const { d: s, l: rBytesLeft } = exports.DER._parseInt(sBytes);
        if (rBytesLeft.length)
            throw new E('Invalid signature: left bytes after parsing');
        return { r, s };
    },
    hexFromSig(sig) {
        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'
        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);
        const h = (num) => {
            const hex = num.toString(16);
            return hex.length & 1 ? `0${hex}` : hex;
        };
        const s = slice(h(sig.s));
        const r = slice(h(sig.r));
        const shl = s.length / 2;
        const rhl = r.length / 2;
        const sl = h(shl);
        const rl = h(rhl);
        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;
    },
};
// Be friendly to bad ECMAScript parsers by not using bigint literals
// prettier-ignore
const _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);
function weierstrassPoints(opts) {
    const CURVE = validatePointOpts(opts);
    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ
    const toBytes = CURVE.toBytes ||
        ((_c, point, _isCompressed) => {
            const a = point.toAffine();
            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));
        });
    const fromBytes = CURVE.fromBytes ||
        ((bytes) => {
            // const head = bytes[0];
            const tail = bytes.subarray(1);
            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');
            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));
            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));
            return { x, y };
        });
    /**
     * y² = x³ + ax + b: Short weierstrass curve formula
     * @returns y²
     */
    function weierstrassEquation(x) {
        const { a, b } = CURVE;
        const x2 = Fp.sqr(x); // x * x
        const x3 = Fp.mul(x2, x); // x2 * x
        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b
    }
    // Validate whether the passed curve params are valid.
    // We check if curve equation works for generator point.
    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.
    // ProjectivePoint class has not been initialized yet.
    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))
        throw new Error('bad generator point: equation left != right');
    // Valid group elements reside in range 1..n-1
    function isWithinCurveOrder(num) {
        return typeof num === 'bigint' && _0n < num && num < CURVE.n;
    }
    function assertGE(num) {
        if (!isWithinCurveOrder(num))
            throw new Error('Expected valid bigint: 0 < bigint < curve.n');
    }
    // Validates if priv key is valid and converts it to bigint.
    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.
    function normPrivateKeyToScalar(key) {
        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;
        if (lengths && typeof key !== 'bigint') {
            if (key instanceof Uint8Array)
                key = ut.bytesToHex(key);
            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes
            if (typeof key !== 'string' || !lengths.includes(key.length))
                throw new Error('Invalid key');
            key = key.padStart(nByteLength * 2, '0');
        }
        let num;
        try {
            num =
                typeof key === 'bigint'
                    ? key
                    : ut.bytesToNumberBE((0, utils_js_1.ensureBytes)('private key', key, nByteLength));
        }
        catch (error) {
            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);
        }
        if (wrapPrivateKey)
            num = mod.mod(num, n); // disabled by default, enabled for BLS
        assertGE(num); // num in range [1..N-1]
        return num;
    }
    const pointPrecomputes = new Map();
    function assertPrjPoint(other) {
        if (!(other instanceof Point))
            throw new Error('ProjectivePoint expected');
    }
    /**
     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)
     * Default Point works in 2d / affine coordinates: (x, y)
     * We're doing calculations in projective, because its operations don't require costly inversion.
     */
    class Point {
        constructor(px, py, pz) {
            this.px = px;
            this.py = py;
            this.pz = pz;
            if (px == null || !Fp.isValid(px))
                throw new Error('x required');
            if (py == null || !Fp.isValid(py))
                throw new Error('y required');
            if (pz == null || !Fp.isValid(pz))
                throw new Error('z required');
        }
        // Does not validate if the point is on-curve.
        // Use fromHex instead, or call assertValidity() later.
        static fromAffine(p) {
            const { x, y } = p || {};
            if (!p || !Fp.isValid(x) || !Fp.isValid(y))
                throw new Error('invalid affine point');
            if (p instanceof Point)
                throw new Error('projective point not allowed');
            const is0 = (i) => Fp.eql(i, Fp.ZERO);
            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)
            if (is0(x) && is0(y))
                return Point.ZERO;
            return new Point(x, y, Fp.ONE);
        }
        get x() {
            return this.toAffine().x;
        }
        get y() {
            return this.toAffine().y;
        }
        /**
         * Takes a bunch of Projective Points but executes only one
         * inversion on all of them. Inversion is very slow operation,
         * so this improves performance massively.
         * Optimization: converts a list of projective points to a list of identical points with Z=1.
         */
        static normalizeZ(points) {
            const toInv = Fp.invertBatch(points.map((p) => p.pz));
            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);
        }
        /**
         * Converts hash string or Uint8Array to Point.
         * @param hex short/long ECDSA hex
         */
        static fromHex(hex) {
            const P = Point.fromAffine(fromBytes((0, utils_js_1.ensureBytes)('pointHex', hex)));
            P.assertValidity();
            return P;
        }
        // Multiplies generator point by privateKey.
        static fromPrivateKey(privateKey) {
            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));
        }
        // "Private method", don't use it directly
        _setWindowSize(windowSize) {
            this._WINDOW_SIZE = windowSize;
            pointPrecomputes.delete(this);
        }
        // A point on curve is valid if it conforms to equation.
        assertValidity() {
            if (this.is0()) {
                // (0, 1, 0) aka ZERO is invalid in most contexts.
                // In BLS, ZERO can be serialized, so we allow it.
                // (0, 0, 0) is wrong representation of ZERO and is always invalid.
                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))
                    return;
                throw new Error('bad point: ZERO');
            }
            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`
            const { x, y } = this.toAffine();
            // Check if x, y are valid field elements
            if (!Fp.isValid(x) || !Fp.isValid(y))
                throw new Error('bad point: x or y not FE');
            const left = Fp.sqr(y); // y²
            const right = weierstrassEquation(x); // x³ + ax + b
            if (!Fp.eql(left, right))
                throw new Error('bad point: equation left != right');
            if (!this.isTorsionFree())
                throw new Error('bad point: not in prime-order subgroup');
        }
        hasEvenY() {
            const { y } = this.toAffine();
            if (Fp.isOdd)
                return !Fp.isOdd(y);
            throw new Error("Field doesn't support isOdd");
        }
        /**
         * Compare one point to another.
         */
        equals(other) {
            assertPrjPoint(other);
            const { px: X1, py: Y1, pz: Z1 } = this;
            const { px: X2, py: Y2, pz: Z2 } = other;
            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));
            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));
            return U1 && U2;
        }
        /**
         * Flips point to one corresponding to (x, -y) in Affine coordinates.
         */
        negate() {
            return new Point(this.px, Fp.neg(this.py), this.pz);
        }
        // Renes-Costello-Batina exception-free doubling formula.
        // There is 30% faster Jacobian formula, but it is not complete.
        // https://eprint.iacr.org/2015/1060, algorithm 3
        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.
        double() {
            const { a, b } = CURVE;
            const b3 = Fp.mul(b, _3n);
            const { px: X1, py: Y1, pz: Z1 } = this;
            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore
            let t0 = Fp.mul(X1, X1); // step 1
            let t1 = Fp.mul(Y1, Y1);
            let t2 = Fp.mul(Z1, Z1);
            let t3 = Fp.mul(X1, Y1);
            t3 = Fp.add(t3, t3); // step 5
            Z3 = Fp.mul(X1, Z1);
            Z3 = Fp.add(Z3, Z3);
            X3 = Fp.mul(a, Z3);
            Y3 = Fp.mul(b3, t2);
            Y3 = Fp.add(X3, Y3); // step 10
            X3 = Fp.sub(t1, Y3);
            Y3 = Fp.add(t1, Y3);
            Y3 = Fp.mul(X3, Y3);
            X3 = Fp.mul(t3, X3);
            Z3 = Fp.mul(b3, Z3); // step 15
            t2 = Fp.mul(a, t2);
            t3 = Fp.sub(t0, t2);
            t3 = Fp.mul(a, t3);
            t3 = Fp.add(t3, Z3);
            Z3 = Fp.add(t0, t0); // step 20
            t0 = Fp.add(Z3, t0);
            t0 = Fp.add(t0, t2);
            t0 = Fp.mul(t0, t3);
            Y3 = Fp.add(Y3, t0);
            t2 = Fp.mul(Y1, Z1); // step 25
            t2 = Fp.add(t2, t2);
            t0 = Fp.mul(t2, t3);
            X3 = Fp.sub(X3, t0);
            Z3 = Fp.mul(t2, t1);
            Z3 = Fp.add(Z3, Z3); // step 30
            Z3 = Fp.add(Z3, Z3);
            return new Point(X3, Y3, Z3);
        }
        // Renes-Costello-Batina exception-free addition formula.
        // There is 30% faster Jacobian formula, but it is not complete.
        // https://eprint.iacr.org/2015/1060, algorithm 1
        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.
        add(other) {
            assertPrjPoint(other);
            const { px: X1, py: Y1, pz: Z1 } = this;
            const { px: X2, py: Y2, pz: Z2 } = other;
            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore
            const a = CURVE.a;
            const b3 = Fp.mul(CURVE.b, _3n);
            let t0 = Fp.mul(X1, X2); // step 1
            let t1 = Fp.mul(Y1, Y2);
            let t2 = Fp.mul(Z1, Z2);
            let t3 = Fp.add(X1, Y1);
            let t4 = Fp.add(X2, Y2); // step 5
            t3 = Fp.mul(t3, t4);
            t4 = Fp.add(t0, t1);
            t3 = Fp.sub(t3, t4);
            t4 = Fp.add(X1, Z1);
            let t5 = Fp.add(X2, Z2); // step 10
            t4 = Fp.mul(t4, t5);
            t5 = Fp.add(t0, t2);
            t4 = Fp.sub(t4, t5);
            t5 = Fp.add(Y1, Z1);
            X3 = Fp.add(Y2, Z2); // step 15
            t5 = Fp.mul(t5, X3);
            X3 = Fp.add(t1, t2);
            t5 = Fp.sub(t5, X3);
            Z3 = Fp.mul(a, t4);
            X3 = Fp.mul(b3, t2); // step 20
            Z3 = Fp.add(X3, Z3);
            X3 = Fp.sub(t1, Z3);
            Z3 = Fp.add(t1, Z3);
            Y3 = Fp.mul(X3, Z3);
            t1 = Fp.add(t0, t0); // step 25
            t1 = Fp.add(t1, t0);
            t2 = Fp.mul(a, t2);
            t4 = Fp.mul(b3, t4);
            t1 = Fp.add(t1, t2);
            t2 = Fp.sub(t0, t2); // step 30
            t2 = Fp.mul(a, t2);
            t4 = Fp.add(t4, t2);
            t0 = Fp.mul(t1, t4);
            Y3 = Fp.add(Y3, t0);
            t0 = Fp.mul(t5, t4); // step 35
            X3 = Fp.mul(t3, X3);
            X3 = Fp.sub(X3, t0);
            t0 = Fp.mul(t3, t1);
            Z3 = Fp.mul(t5, Z3);
            Z3 = Fp.add(Z3, t0); // step 40
            return new Point(X3, Y3, Z3);
        }
        subtract(other) {
            return this.add(other.negate());
        }
        is0() {
            return this.equals(Point.ZERO);
        }
        wNAF(n) {
            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {
                const toInv = Fp.invertBatch(comp.map((p) => p.pz));
                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);
            });
        }
        /**
         * Non-constant-time multiplication. Uses double-and-add algorithm.
         * It's faster, but should only be used when you don't care about
         * an exposed private key e.g. sig verification, which works over *public* keys.
         */
        multiplyUnsafe(n) {
            const I = Point.ZERO;
            if (n === _0n)
                return I;
            assertGE(n); // Will throw on 0
            if (n === _1n)
                return this;
            const { endo } = CURVE;
            if (!endo)
                return wnaf.unsafeLadder(this, n);
            // Apply endomorphism
            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);
            let k1p = I;
            let k2p = I;
            let d = this;
            while (k1 > _0n || k2 > _0n) {
                if (k1 & _1n)
                    k1p = k1p.add(d);
                if (k2 & _1n)
                    k2p = k2p.add(d);
                d = d.double();
                k1 >>= _1n;
                k2 >>= _1n;
            }
            if (k1neg)
                k1p = k1p.negate();
            if (k2neg)
                k2p = k2p.negate();
            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);
            return k1p.add(k2p);
        }
        /**
         * Constant time multiplication.
         * Uses wNAF method. Windowed method may be 10% faster,
         * but takes 2x longer to generate and consumes 2x memory.
         * Uses precomputes when available.
         * Uses endomorphism for Koblitz curves.
         * @param scalar by which the point would be multiplied
         * @returns New point
         */
        multiply(scalar) {
            assertGE(scalar);
            let n = scalar;
            let point, fake; // Fake point is used to const-time mult
            const { endo } = CURVE;
            if (endo) {
                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);
                let { p: k1p, f: f1p } = this.wNAF(k1);
                let { p: k2p, f: f2p } = this.wNAF(k2);
                k1p = wnaf.constTimeNegate(k1neg, k1p);
                k2p = wnaf.constTimeNegate(k2neg, k2p);
                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);
                point = k1p.add(k2p);
                fake = f1p.add(f2p);
            }
            else {
                const { p, f } = this.wNAF(n);
                point = p;
                fake = f;
            }
            // Normalize `z` for both points, but return only real one
            return Point.normalizeZ([point, fake])[0];
        }
        /**
         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.
         * Not using Strauss-Shamir trick: precomputation tables are faster.
         * The trick could be useful if both P and Q are not G (not in our case).
         * @returns non-zero affine point
         */
        multiplyAndAddUnsafe(Q, a, b) {
            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes
            const mul = (P, a // Select faster multiply() method
            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));
            const sum = mul(this, a).add(mul(Q, b));
            return sum.is0() ? undefined : sum;
        }
        // Converts Projective point to affine (x, y) coordinates.
        // Can accept precomputed Z^-1 - for example, from invertBatch.
        // (x, y, z) ∋ (x=x/z, y=y/z)
        toAffine(iz) {
            const { px: x, py: y, pz: z } = this;
            const is0 = this.is0();
            // If invZ was 0, we return zero point. However we still want to execute
            // all operations, so we replace invZ with a random number, 1.
            if (iz == null)
                iz = is0 ? Fp.ONE : Fp.inv(z);
            const ax = Fp.mul(x, iz);
            const ay = Fp.mul(y, iz);
            const zz = Fp.mul(z, iz);
            if (is0)
                return { x: Fp.ZERO, y: Fp.ZERO };
            if (!Fp.eql(zz, Fp.ONE))
                throw new Error('invZ was invalid');
            return { x: ax, y: ay };
        }
        isTorsionFree() {
            const { h: cofactor, isTorsionFree } = CURVE;
            if (cofactor === _1n)
                return true; // No subgroups, always torsion-free
            if (isTorsionFree)
                return isTorsionFree(Point, this);
            throw new Error('isTorsionFree() has not been declared for the elliptic curve');
        }
        clearCofactor() {
            const { h: cofactor, clearCofactor } = CURVE;
            if (cofactor === _1n)
                return this; // Fast-path
            if (clearCofactor)
                return clearCofactor(Point, this);
            return this.multiplyUnsafe(CURVE.h);
        }
        toRawBytes(isCompressed = true) {
            this.assertValidity();
            return toBytes(Point, this, isCompressed);
        }
        toHex(isCompressed = true) {
            return ut.bytesToHex(this.toRawBytes(isCompressed));
        }
    }
    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);
    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);
    const _bits = CURVE.nBitLength;
    const wnaf = (0, curve_js_1.wNAF)(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);
    // Validate if generator point is on curve
    return {
        CURVE,
        ProjectivePoint: Point,
        normPrivateKeyToScalar,
        weierstrassEquation,
        isWithinCurveOrder,
    };
}
exports.weierstrassPoints = weierstrassPoints;
function validateOpts(curve) {
    const opts = (0, curve_js_1.validateBasic)(curve);
    ut.validateObject(opts, {
        hash: 'hash',
        hmac: 'function',
        randomBytes: 'function',
    }, {
        bits2int: 'function',
        bits2int_modN: 'function',
        lowS: 'boolean',
    });
    return Object.freeze({ lowS: true, ...opts });
}
function weierstrass(curveDef) {
    const CURVE = validateOpts(curveDef);
    const { Fp, n: CURVE_ORDER } = CURVE;
    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32
    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32
    function isValidFieldElement(num) {
        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE
    }
    function modN(a) {
        return mod.mod(a, CURVE_ORDER);
    }
    function invN(a) {
        return mod.invert(a, CURVE_ORDER);
    }
    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({
        ...CURVE,
        toBytes(_c, point, isCompressed) {
            const a = point.toAffine();
            const x = Fp.toBytes(a.x);
            const cat = ut.concatBytes;
            if (isCompressed) {
                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);
            }
            else {
                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));
            }
        },
        fromBytes(bytes) {
            const len = bytes.length;
            const head = bytes[0];
            const tail = bytes.subarray(1);
            // this.assertValidity() is done inside of fromHex
            if (len === compressedLen && (head === 0x02 || head === 0x03)) {
                const x = ut.bytesToNumberBE(tail);
                if (!isValidFieldElement(x))
                    throw new Error('Point is not on curve');
                const y2 = weierstrassEquation(x); // y² = x³ + ax + b
                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4
                const isYOdd = (y & _1n) === _1n;
                // ECDSA
                const isHeadOdd = (head & 1) === 1;
                if (isHeadOdd !== isYOdd)
                    y = Fp.neg(y);
                return { x, y };
            }
            else if (len === uncompressedLen && head === 0x04) {
                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));
                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));
                return { x, y };
            }
            else {
                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);
            }
        },
    });
    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));
    function isBiggerThanHalfOrder(number) {
        const HALF = CURVE_ORDER >> _1n;
        return number > HALF;
    }
    function normalizeS(s) {
        return isBiggerThanHalfOrder(s) ? modN(-s) : s;
    }
    // slice bytes num
    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));
    /**
     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.
     */
    class Signature {
        constructor(r, s, recovery) {
            this.r = r;
            this.s = s;
            this.recovery = recovery;
            this.assertValidity();
        }
        // pair (bytes of r, bytes of s)
        static fromCompact(hex) {
            const l = CURVE.nByteLength;
            hex = (0, utils_js_1.ensureBytes)('compactSignature', hex, l * 2);
            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));
        }
        // DER encoded ECDSA signature
        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script
        static fromDER(hex) {
            const { r, s } = exports.DER.toSig((0, utils_js_1.ensureBytes)('DER', hex));
            return new Signature(r, s);
        }
        assertValidity() {
            // can use assertGE here
            if (!isWithinCurveOrder(this.r))
                throw new Error('r must be 0 < r < CURVE.n');
            if (!isWithinCurveOrder(this.s))
                throw new Error('s must be 0 < s < CURVE.n');
        }
        addRecoveryBit(recovery) {
            return new Signature(this.r, this.s, recovery);
        }
        recoverPublicKey(msgHash) {
            const { r, s, recovery: rec } = this;
            const h = bits2int_modN((0, utils_js_1.ensureBytes)('msgHash', msgHash)); // Truncate hash
            if (rec == null || ![0, 1, 2, 3].includes(rec))
                throw new Error('recovery id invalid');
            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;
            if (radj >= Fp.ORDER)
                throw new Error('recovery id 2 or 3 invalid');
            const prefix = (rec & 1) === 0 ? '02' : '03';
            const R = Point.fromHex(prefix + numToNByteStr(radj));
            const ir = invN(radj); // r^-1
            const u1 = modN(-h * ir); // -hr^-1
            const u2 = modN(s * ir); // sr^-1
            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)
            if (!Q)
                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked
            Q.assertValidity();
            return Q;
        }
        // Signatures should be low-s, to prevent malleability.
        hasHighS() {
            return isBiggerThanHalfOrder(this.s);
        }
        normalizeS() {
            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;
        }
        // DER-encoded
        toDERRawBytes() {
            return ut.hexToBytes(this.toDERHex());
        }
        toDERHex() {
            return exports.DER.hexFromSig({ r: this.r, s: this.s });
        }
        // padded bytes of r, then padded bytes of s
        toCompactRawBytes() {
            return ut.hexToBytes(this.toCompactHex());
        }
        toCompactHex() {
            return numToNByteStr(this.r) + numToNByteStr(this.s);
        }
    }
    const utils = {
        isValidPrivateKey(privateKey) {
            try {
                normPrivateKeyToScalar(privateKey);
                return true;
            }
            catch (error) {
                return false;
            }
        },
        normPrivateKeyToScalar: normPrivateKeyToScalar,
        /**
         * Produces cryptographically secure private key from random of size
         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.
         */
        randomPrivateKey: () => {
            const length = mod.getMinHashLength(CURVE.n);
            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);
        },
        /**
         * Creates precompute table for an arbitrary EC point. Makes point "cached".
         * Allows to massively speed-up `point.multiply(scalar)`.
         * @returns cached point
         * @example
         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));
         * fast.multiply(privKey); // much faster ECDH now
         */
        precompute(windowSize = 8, point = Point.BASE) {
            point._setWindowSize(windowSize);
            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here
            return point;
        },
    };
    /**
     * Computes public key for a private key. Checks for validity of the private key.
     * @param privateKey private key
     * @param isCompressed whether to return compact (default), or full key
     * @returns Public key, full when isCompressed=false; short when isCompressed=true
     */
    function getPublicKey(privateKey, isCompressed = true) {
        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);
    }
    /**
     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.
     */
    function isProbPub(item) {
        const arr = item instanceof Uint8Array;
        const str = typeof item === 'string';
        const len = (arr || str) && item.length;
        if (arr)
            return len === compressedLen || len === uncompressedLen;
        if (str)
            return len === 2 * compressedLen || len === 2 * uncompressedLen;
        if (item instanceof Point)
            return true;
        return false;
    }
    /**
     * ECDH (Elliptic Curve Diffie Hellman).
     * Computes shared public key from private key and public key.
     * Checks: 1) private key validity 2) shared key is on-curve.
     * Does NOT hash the result.
     * @param privateA private key
     * @param publicB different public key
     * @param isCompressed whether to return compact (default), or full key
     * @returns shared public key
     */
    function getSharedSecret(privateA, publicB, isCompressed = true) {
        if (isProbPub(privateA))
            throw new Error('first arg must be private key');
        if (!isProbPub(publicB))
            throw new Error('second arg must be public key');
        const b = Point.fromHex(publicB); // check for being on-curve
        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);
    }
    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.
    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.
    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.
    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors
    const bits2int = CURVE.bits2int ||
        function (bytes) {
            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)
            // for some cases, since bytes.length * 8 is not actual bitLength.
            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here
            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits
            return delta > 0 ? num >> BigInt(delta) : num;
        };
    const bits2int_modN = CURVE.bits2int_modN ||
        function (bytes) {
            return modN(bits2int(bytes)); // can't use bytesToNumberBE here
        };
    // NOTE: pads output with zero as per spec
    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);
    /**
     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.
     */
    function int2octets(num) {
        if (typeof num !== 'bigint')
            throw new Error('bigint expected');
        if (!(_0n <= num && num < ORDER_MASK))
            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);
        // works with order, can have different size than numToField!
        return ut.numberToBytesBE(num, CURVE.nByteLength);
    }
    // Steps A, D of RFC6979 3.2
    // Creates RFC6979 seed; converts msg/privKey to numbers.
    // Used only in sign, not in verify.
    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.
    // Also it can be bigger for P224 + SHA256
    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {
        if (['recovered', 'canonical'].some((k) => k in opts))
            throw new Error('sign() legacy options not supported');
        const { hash, randomBytes } = CURVE;
        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default
        if (lowS == null)
            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash
        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);
        if (prehash)
            msgHash = (0, utils_js_1.ensureBytes)('prehashed msgHash', hash(msgHash));
        // We can't later call bits2octets, since nested bits2int is broken for curves
        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.
        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))
        const h1int = bits2int_modN(msgHash);
        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint
        const seedArgs = [int2octets(d), int2octets(h1int)];
        // extraEntropy. RFC6979 3.6: additional k' (optional).
        if (ent != null) {
            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')
            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is
            seedArgs.push((0, utils_js_1.ensureBytes)('extraEntropy', e)); // check for being bytes
        }
        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2
        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!
        // Converts signature params into point w r/s, checks result for validity.
        function k2sig(kBytes) {
            // RFC 6979 Section 3.2, step 3: k = bits2int(T)
            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element
            if (!isWithinCurveOrder(k))
                return; // Important: all mod() calls here must be done over N
            const ik = invN(k); // k^-1 mod n
            const q = Point.BASE.multiply(k).toAffine(); // q = Gk
            const r = modN(q.x); // r = q.x mod n
            if (r === _0n)
                return;
            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to
            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:
            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT
            const s = modN(ik * modN(m + r * d)); // Not using blinding here
            if (s === _0n)
                return;
            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)
            let normS = s;
            if (lowS && isBiggerThanHalfOrder(s)) {
                normS = normalizeS(s); // if lowS was passed, ensure s is always
                recovery ^= 1; // // in the bottom half of N
            }
            return new Signature(r, normS, recovery); // use normS, not s
        }
        return { seed, k2sig };
    }
    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };
    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };
    /**
     * Signs message hash with a private key.
     * ```
     * sign(m, d, k) where
     *   (x, y) = G × k
     *   r = x mod n
     *   s = (m + dr)/k mod n
     * ```
     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.
     * @param privKey private key
     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.
     * @returns signature with recovery param
     */
    function sign(msgHash, privKey, opts = defaultSigOpts) {
        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.
        const C = CURVE;
        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);
        return drbg(seed, k2sig); // Steps B, C, D, E, F, G
    }
    // Enable precomputes. Slows down first publicKey computation by 20ms.
    Point.BASE._setWindowSize(8);
    // utils.precompute(8, ProjectivePoint.BASE)
    /**
     * Verifies a signature against message hash and public key.
     * Rejects lowS signatures by default: to override,
     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:
     *
     * ```
     * verify(r, s, h, P) where
     *   U1 = hs^-1 mod n
     *   U2 = rs^-1 mod n
     *   R = U1⋅G - U2⋅P
     *   mod(R.x, n) == r
     * ```
     */
    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {
        const sg = signature;
        msgHash = (0, utils_js_1.ensureBytes)('msgHash', msgHash);
        publicKey = (0, utils_js_1.ensureBytes)('publicKey', publicKey);
        if ('strict' in opts)
            throw new Error('options.strict was renamed to lowS');
        const { lowS, prehash } = opts;
        let _sig = undefined;
        let P;
        try {
            if (typeof sg === 'string' || sg instanceof Uint8Array) {
                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).
                // Since DER can also be 2*nByteLength bytes, we check for it first.
                try {
                    _sig = Signature.fromDER(sg);
                }
                catch (derError) {
                    if (!(derError instanceof exports.DER.Err))
                        throw derError;
                    _sig = Signature.fromCompact(sg);
                }
            }
            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {
                const { r, s } = sg;
                _sig = new Signature(r, s);
            }
            else {
                throw new Error('PARSE');
            }
            P = Point.fromHex(publicKey);
        }
        catch (error) {
            if (error.message === 'PARSE')
                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);
            return false;
        }
        if (lowS && _sig.hasHighS())
            return false;
        if (prehash)
            msgHash = CURVE.hash(msgHash);
        const { r, s } = _sig;
        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element
        const is = invN(s); // s^-1
        const u1 = modN(h * is); // u1 = hs^-1 mod n
        const u2 = modN(r * is); // u2 = rs^-1 mod n
        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P
        if (!R)
            return false;
        const v = modN(R.x);
        return v === r;
    }
    return {
        CURVE,
        getPublicKey,
        getSharedSecret,
        sign,
        verify,
        ProjectivePoint: Point,
        Signature,
        utils,
    };
}
exports.weierstrass = weierstrass;
/**
 * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.
 * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.
 * b = True and y = sqrt(u / v) if (u / v) is square in F, and
 * b = False and y = sqrt(Z * (u / v)) otherwise.
 * @param Fp
 * @param Z
 * @returns
 */
function SWUFpSqrtRatio(Fp, Z) {
    // Generic implementation
    const q = Fp.ORDER;
    let l = _0n;
    for (let o = q - _1n; o % _2n === _0n; o /= _2n)
        l += _1n;
    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.
    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.
    // 2n ** c1 == 2n << (c1-1)
    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);
    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;
    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic
    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic
    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic
    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic
    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2
    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)
    let sqrtRatio = (u, v) => {
        let tv1 = c6; // 1. tv1 = c6
        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4
        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2
        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v
        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3
        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3
        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2
        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v
        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u
        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2
        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5
        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1
        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7
        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1
        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)
        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)
        // 17. for i in (c1, c1 - 1, ..., 2):
        for (let i = c1; i > _1n; i--) {
            let tv5 = i - _2n; // 18.    tv5 = i - 2
            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5
            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5
            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1
            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1
            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1
            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1
            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)
            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)
        }
        return { isValid: isQR, value: tv3 };
    };
    if (Fp.ORDER % _4n === _3n) {
        // sqrt_ratio_3mod4(u, v)
        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic
        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)
        sqrtRatio = (u, v) => {
            let tv1 = Fp.sqr(v); // 1. tv1 = v^2
            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v
            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2
            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1
            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2
            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2
            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v
            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u
            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)
            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2
        };
    }
    // No curves uses that
    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8
    return sqrtRatio;
}
exports.SWUFpSqrtRatio = SWUFpSqrtRatio;
/**
 * Simplified Shallue-van de Woestijne-Ulas Method
 * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2
 */
function mapToCurveSimpleSWU(Fp, opts) {
    mod.validateField(Fp);
    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))
        throw new Error('mapToCurveSimpleSWU: invalid opts');
    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);
    if (!Fp.isOdd)
        throw new Error('Fp.isOdd is not implemented!');
    // Input: u, an element of F.
    // Output: (x, y), a point on E.
    return (u) => {
        // prettier-ignore
        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;
        tv1 = Fp.sqr(u); // 1.  tv1 = u^2
        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1
        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2
        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1
        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1
        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3
        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)
        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4
        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2
        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2
        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6
        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5
        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3
        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4
        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6
        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5
        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3
        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)
        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1
        y = Fp.mul(y, value); // 20.   y = y * y1
        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)
        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)
        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)
        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)
        x = Fp.div(x, tv4); // 25.   x = x / tv4
        return { x, y };
    };
}
exports.mapToCurveSimpleSWU = mapToCurveSimpleSWU;
//# sourceMappingURL=weierstrass.js.map

/***/ }),

/***/ 86130:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hash_to_ristretto255 = exports.hashToRistretto255 = exports.RistrettoPoint = exports.encodeToCurve = exports.hashToCurve = exports.edwardsToMontgomeryPriv = exports.edwardsToMontgomery = exports.edwardsToMontgomeryPub = exports.x25519 = exports.ed25519ph = exports.ed25519ctx = exports.ed25519 = exports.ED25519_TORSION_SUBGROUP = void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const sha512_1 = __nccwpck_require__(35251);
const utils_1 = __nccwpck_require__(26161);
const edwards_js_1 = __nccwpck_require__(88753);
const montgomery_js_1 = __nccwpck_require__(25449);
const modular_js_1 = __nccwpck_require__(76557);
const utils_js_1 = __nccwpck_require__(62210);
const hash_to_curve_js_1 = __nccwpck_require__(7281);
/**
 * ed25519 Twisted Edwards curve with following addons:
 * - X25519 ECDH
 * - Ristretto cofactor elimination
 * - Elligator hash-to-group / point indistinguishability
 */
const ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');
// √(-1) aka √(a) aka 2^((p-1)/4)
const ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');
// prettier-ignore
const _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);
// prettier-ignore
const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);
function ed25519_pow_2_252_3(x) {
    const P = ED25519_P;
    const x2 = (x * x) % P;
    const b2 = (x2 * x) % P; // x^3, 11
    const b4 = ((0, modular_js_1.pow2)(b2, _2n, P) * b2) % P; // x^15, 1111
    const b5 = ((0, modular_js_1.pow2)(b4, _1n, P) * x) % P; // x^31
    const b10 = ((0, modular_js_1.pow2)(b5, _5n, P) * b5) % P;
    const b20 = ((0, modular_js_1.pow2)(b10, _10n, P) * b10) % P;
    const b40 = ((0, modular_js_1.pow2)(b20, _20n, P) * b20) % P;
    const b80 = ((0, modular_js_1.pow2)(b40, _40n, P) * b40) % P;
    const b160 = ((0, modular_js_1.pow2)(b80, _80n, P) * b80) % P;
    const b240 = ((0, modular_js_1.pow2)(b160, _80n, P) * b80) % P;
    const b250 = ((0, modular_js_1.pow2)(b240, _10n, P) * b10) % P;
    const pow_p_5_8 = ((0, modular_js_1.pow2)(b250, _2n, P) * x) % P;
    // ^ To pow to (p+3)/8, multiply it by x.
    return { pow_p_5_8, b2 };
}
function adjustScalarBytes(bytes) {
    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,
    // set the three least significant bits of the first byte
    bytes[0] &= 248; // 0b1111_1000
    // and the most significant bit of the last to zero,
    bytes[31] &= 127; // 0b0111_1111
    // set the second most significant bit of the last byte to 1
    bytes[31] |= 64; // 0b0100_0000
    return bytes;
}
// sqrt(u/v)
function uvRatio(u, v) {
    const P = ED25519_P;
    const v3 = (0, modular_js_1.mod)(v * v * v, P); // v³
    const v7 = (0, modular_js_1.mod)(v3 * v3 * v, P); // v⁷
    // (p+3)/8 and (p-5)/8
    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;
    let x = (0, modular_js_1.mod)(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8
    const vx2 = (0, modular_js_1.mod)(v * x * x, P); // vx²
    const root1 = x; // First root candidate
    const root2 = (0, modular_js_1.mod)(x * ED25519_SQRT_M1, P); // Second root candidate
    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root
    const useRoot2 = vx2 === (0, modular_js_1.mod)(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)
    const noRoot = vx2 === (0, modular_js_1.mod)(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)
    if (useRoot1)
        x = root1;
    if (useRoot2 || noRoot)
        x = root2; // We return root2 anyway, for const-time
    if ((0, modular_js_1.isNegativeLE)(x, P))
        x = (0, modular_js_1.mod)(-x, P);
    return { isValid: useRoot1 || useRoot2, value: x };
}
// Just in case
exports.ED25519_TORSION_SUBGROUP = [
    '0100000000000000000000000000000000000000000000000000000000000000',
    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',
    '0000000000000000000000000000000000000000000000000000000000000080',
    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',
    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',
    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',
    '0000000000000000000000000000000000000000000000000000000000000000',
    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',
];
const Fp = (0, modular_js_1.Field)(ED25519_P, undefined, true);
const ed25519Defaults = {
    // Param: a
    a: BigInt(-1),
    // d is equal to -121665/121666 over finite field.
    // Negative number is P - number, and division is invert(number, P)
    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),
    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n
    Fp,
    // Subgroup order: how many points curve has
    // 2n**252n + 27742317777372353535851937790883648493n;
    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),
    // Cofactor
    h: BigInt(8),
    // Base point (x, y) aka generator point
    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),
    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),
    hash: sha512_1.sha512,
    randomBytes: utils_1.randomBytes,
    adjustScalarBytes,
    // dom2
    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.
    // Constant-time, u/√v
    uvRatio,
};
exports.ed25519 = (0, edwards_js_1.twistedEdwards)(ed25519Defaults);
function ed25519_domain(data, ctx, phflag) {
    if (ctx.length > 255)
        throw new Error('Context is too big');
    return (0, utils_1.concatBytes)((0, utils_1.utf8ToBytes)('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);
}
exports.ed25519ctx = (0, edwards_js_1.twistedEdwards)({
    ...ed25519Defaults,
    domain: ed25519_domain,
});
exports.ed25519ph = (0, edwards_js_1.twistedEdwards)({
    ...ed25519Defaults,
    domain: ed25519_domain,
    prehash: sha512_1.sha512,
});
exports.x25519 = (() => (0, montgomery_js_1.montgomery)({
    P: ED25519_P,
    a: BigInt(486662),
    montgomeryBits: 255,
    nByteLength: 32,
    Gu: BigInt(9),
    powPminus2: (x) => {
        const P = ED25519_P;
        // x^(p-2) aka x^(2^255-21)
        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);
        return (0, modular_js_1.mod)((0, modular_js_1.pow2)(pow_p_5_8, BigInt(3), P) * b2, P);
    },
    adjustScalarBytes,
    randomBytes: utils_1.randomBytes,
}))();
/**
 * Converts ed25519 public key to x25519 public key. Uses formula:
 * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`
 * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`
 * @example
 *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());
 *   const aPriv = x25519.utils.randomPrivateKey();
 *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))
 */
function edwardsToMontgomeryPub(edwardsPub) {
    const { y } = exports.ed25519.ExtendedPoint.fromHex(edwardsPub);
    const _1n = BigInt(1);
    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));
}
exports.edwardsToMontgomeryPub = edwardsToMontgomeryPub;
exports.edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated
/**
 * Converts ed25519 secret key to x25519 secret key.
 * @example
 *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());
 *   const aPriv = ed25519.utils.randomPrivateKey();
 *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)
 */
function edwardsToMontgomeryPriv(edwardsPriv) {
    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));
    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);
}
exports.edwardsToMontgomeryPriv = edwardsToMontgomeryPriv;
// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)
// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since
// SageMath returns different root first and everything falls apart
const ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic
const ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1
const ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)
const ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic
const ELL2_J = BigInt(486662);
// prettier-ignore
function map_to_curve_elligator2_curve25519(u) {
    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2
    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1
    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not
    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)
    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2
    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3
    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd
    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd
    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2
    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2
    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2
    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4
    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3
    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3
    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7
    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)
    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)
    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3
    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2
    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd
    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1
    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt
    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd
    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u
    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2
    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3
    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)
    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2
    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd
    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2
    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt
    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2
    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd
    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1
    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2
    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2
    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y
    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)
    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)
}
const ELL2_C1_EDWARDS = (0, modular_js_1.FpSqrtEven)(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0
function map_to_curve_elligator2_edwards25519(u) {
    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =
    // map_to_curve_elligator2_curve25519(u)
    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd
    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1
    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM
    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd
    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)
    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd
    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0
    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)
    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)
    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)
    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)
    const inv = Fp.invertBatch([xd, yd]); // batch division
    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)
}
const htf = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.createHasher)(exports.ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {
    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',
    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',
    p: Fp.ORDER,
    m: 1,
    k: 128,
    expand: 'xmd',
    hash: sha512_1.sha512,
}))();
exports.hashToCurve = (() => htf.hashToCurve)();
exports.encodeToCurve = (() => htf.encodeToCurve)();
function assertRstPoint(other) {
    if (!(other instanceof RistPoint))
        throw new Error('RistrettoPoint expected');
}
// √(-1) aka √(a) aka 2^((p-1)/4)
const SQRT_M1 = ED25519_SQRT_M1;
// √(ad - 1)
const SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');
// 1 / √(a-d)
const INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');
// 1-d²
const ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');
// (d-1)²
const D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');
// Calculates 1/√(number)
const invertSqrt = (number) => uvRatio(_1n, number);
const MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
const bytes255ToNumberLE = (bytes) => exports.ed25519.CURVE.Fp.create((0, utils_js_1.bytesToNumberLE)(bytes) & MAX_255B);
// Computes Elligator map for Ristretto
// https://ristretto.group/formulas/elligator.html
function calcElligatorRistrettoMap(r0) {
    const { d } = exports.ed25519.CURVE;
    const P = exports.ed25519.CURVE.Fp.ORDER;
    const mod = exports.ed25519.CURVE.Fp.create;
    const r = mod(SQRT_M1 * r0 * r0); // 1
    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2
    let c = BigInt(-1); // 3
    const D = mod((c - d * r) * mod(r + d)); // 4
    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5
    let s_ = mod(s * r0); // 6
    if (!(0, modular_js_1.isNegativeLE)(s_, P))
        s_ = mod(-s_);
    if (!Ns_D_is_sq)
        s = s_; // 7
    if (!Ns_D_is_sq)
        c = r; // 8
    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9
    const s2 = s * s;
    const W0 = mod((s + s) * D); // 10
    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11
    const W2 = mod(_1n - s2); // 12
    const W3 = mod(_1n + s2); // 13
    return new exports.ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));
}
/**
 * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be
 * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.
 * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,
 * but it should work in its own namespace: do not combine those two.
 * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448
 */
class RistPoint {
    // Private property to discourage combining ExtendedPoint + RistrettoPoint
    // Always use Ristretto encoding/decoding instead.
    constructor(ep) {
        this.ep = ep;
    }
    static fromAffine(ap) {
        return new RistPoint(exports.ed25519.ExtendedPoint.fromAffine(ap));
    }
    /**
     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.
     * The hash-to-group operation applies Elligator twice and adds the results.
     * **Note:** this is one-way map, there is no conversion from point to hash.
     * https://ristretto.group/formulas/elligator.html
     * @param hex 64-byte output of a hash function
     */
    static hashToCurve(hex) {
        hex = (0, utils_js_1.ensureBytes)('ristrettoHash', hex, 64);
        const r1 = bytes255ToNumberLE(hex.slice(0, 32));
        const R1 = calcElligatorRistrettoMap(r1);
        const r2 = bytes255ToNumberLE(hex.slice(32, 64));
        const R2 = calcElligatorRistrettoMap(r2);
        return new RistPoint(R1.add(R2));
    }
    /**
     * Converts ristretto-encoded string to ristretto point.
     * https://ristretto.group/formulas/decoding.html
     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding
     */
    static fromHex(hex) {
        hex = (0, utils_js_1.ensureBytes)('ristrettoHex', hex, 32);
        const { a, d } = exports.ed25519.CURVE;
        const P = exports.ed25519.CURVE.Fp.ORDER;
        const mod = exports.ed25519.CURVE.Fp.create;
        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';
        const s = bytes255ToNumberLE(hex);
        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.
        // 3. Check that s is non-negative, or else abort
        if (!(0, utils_js_1.equalBytes)((0, utils_js_1.numberToBytesLE)(s, 32), hex) || (0, modular_js_1.isNegativeLE)(s, P))
            throw new Error(emsg);
        const s2 = mod(s * s);
        const u1 = mod(_1n + a * s2); // 4 (a is -1)
        const u2 = mod(_1n - a * s2); // 5
        const u1_2 = mod(u1 * u1);
        const u2_2 = mod(u2 * u2);
        const v = mod(a * d * u1_2 - u2_2); // 6
        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7
        const Dx = mod(I * u2); // 8
        const Dy = mod(I * Dx * v); // 9
        let x = mod((s + s) * Dx); // 10
        if ((0, modular_js_1.isNegativeLE)(x, P))
            x = mod(-x); // 10
        const y = mod(u1 * Dy); // 11
        const t = mod(x * y); // 12
        if (!isValid || (0, modular_js_1.isNegativeLE)(t, P) || y === _0n)
            throw new Error(emsg);
        return new RistPoint(new exports.ed25519.ExtendedPoint(x, y, _1n, t));
    }
    /**
     * Encodes ristretto point to Uint8Array.
     * https://ristretto.group/formulas/encoding.html
     */
    toRawBytes() {
        let { ex: x, ey: y, ez: z, et: t } = this.ep;
        const P = exports.ed25519.CURVE.Fp.ORDER;
        const mod = exports.ed25519.CURVE.Fp.create;
        const u1 = mod(mod(z + y) * mod(z - y)); // 1
        const u2 = mod(x * y); // 2
        // Square root always exists
        const u2sq = mod(u2 * u2);
        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3
        const D1 = mod(invsqrt * u1); // 4
        const D2 = mod(invsqrt * u2); // 5
        const zInv = mod(D1 * D2 * t); // 6
        let D; // 7
        if ((0, modular_js_1.isNegativeLE)(t * zInv, P)) {
            let _x = mod(y * SQRT_M1);
            let _y = mod(x * SQRT_M1);
            x = _x;
            y = _y;
            D = mod(D1 * INVSQRT_A_MINUS_D);
        }
        else {
            D = D2; // 8
        }
        if ((0, modular_js_1.isNegativeLE)(x * zInv, P))
            y = mod(-y); // 9
        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))
        if ((0, modular_js_1.isNegativeLE)(s, P))
            s = mod(-s);
        return (0, utils_js_1.numberToBytesLE)(s, 32); // 11
    }
    toHex() {
        return (0, utils_js_1.bytesToHex)(this.toRawBytes());
    }
    toString() {
        return this.toHex();
    }
    // Compare one point to another.
    equals(other) {
        assertRstPoint(other);
        const { ex: X1, ey: Y1 } = this.ep;
        const { ex: X2, ey: Y2 } = other.ep;
        const mod = exports.ed25519.CURVE.Fp.create;
        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)
        const one = mod(X1 * Y2) === mod(Y1 * X2);
        const two = mod(Y1 * Y2) === mod(X1 * X2);
        return one || two;
    }
    add(other) {
        assertRstPoint(other);
        return new RistPoint(this.ep.add(other.ep));
    }
    subtract(other) {
        assertRstPoint(other);
        return new RistPoint(this.ep.subtract(other.ep));
    }
    multiply(scalar) {
        return new RistPoint(this.ep.multiply(scalar));
    }
    multiplyUnsafe(scalar) {
        return new RistPoint(this.ep.multiplyUnsafe(scalar));
    }
}
exports.RistrettoPoint = (() => {
    if (!RistPoint.BASE)
        RistPoint.BASE = new RistPoint(exports.ed25519.ExtendedPoint.BASE);
    if (!RistPoint.ZERO)
        RistPoint.ZERO = new RistPoint(exports.ed25519.ExtendedPoint.ZERO);
    return RistPoint;
})();
// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B
const hashToRistretto255 = (msg, options) => {
    const d = options.DST;
    const DST = typeof d === 'string' ? (0, utils_1.utf8ToBytes)(d) : d;
    const uniform_bytes = (0, hash_to_curve_js_1.expand_message_xmd)(msg, DST, 64, sha512_1.sha512);
    const P = RistPoint.hashToCurve(uniform_bytes);
    return P;
};
exports.hashToRistretto255 = hashToRistretto255;
exports.hash_to_ristretto255 = exports.hashToRistretto255; // legacy
//# sourceMappingURL=ed25519.js.map

/***/ }),

/***/ 46379:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.encodeToCurve = exports.hashToCurve = exports.schnorr = exports.secp256k1 = void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const sha256_1 = __nccwpck_require__(70708);
const utils_1 = __nccwpck_require__(26161);
const modular_js_1 = __nccwpck_require__(76557);
const weierstrass_js_1 = __nccwpck_require__(87760);
const utils_js_1 = __nccwpck_require__(62210);
const hash_to_curve_js_1 = __nccwpck_require__(7281);
const _shortw_utils_js_1 = __nccwpck_require__(57981);
const secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');
const secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');
const _1n = BigInt(1);
const _2n = BigInt(2);
const divNearest = (a, b) => (a + b / _2n) / b;
/**
 * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.
 * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]
 */
function sqrtMod(y) {
    const P = secp256k1P;
    // prettier-ignore
    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);
    // prettier-ignore
    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);
    const b2 = (y * y * y) % P; // x^3, 11
    const b3 = (b2 * b2 * y) % P; // x^7
    const b6 = ((0, modular_js_1.pow2)(b3, _3n, P) * b3) % P;
    const b9 = ((0, modular_js_1.pow2)(b6, _3n, P) * b3) % P;
    const b11 = ((0, modular_js_1.pow2)(b9, _2n, P) * b2) % P;
    const b22 = ((0, modular_js_1.pow2)(b11, _11n, P) * b11) % P;
    const b44 = ((0, modular_js_1.pow2)(b22, _22n, P) * b22) % P;
    const b88 = ((0, modular_js_1.pow2)(b44, _44n, P) * b44) % P;
    const b176 = ((0, modular_js_1.pow2)(b88, _88n, P) * b88) % P;
    const b220 = ((0, modular_js_1.pow2)(b176, _44n, P) * b44) % P;
    const b223 = ((0, modular_js_1.pow2)(b220, _3n, P) * b3) % P;
    const t1 = ((0, modular_js_1.pow2)(b223, _23n, P) * b22) % P;
    const t2 = ((0, modular_js_1.pow2)(t1, _6n, P) * b2) % P;
    const root = (0, modular_js_1.pow2)(t2, _2n, P);
    if (!Fp.eql(Fp.sqr(root), y))
        throw new Error('Cannot find square root');
    return root;
}
const Fp = (0, modular_js_1.Field)(secp256k1P, undefined, undefined, { sqrt: sqrtMod });
exports.secp256k1 = (0, _shortw_utils_js_1.createCurve)({
    a: BigInt(0),
    b: BigInt(7),
    Fp,
    n: secp256k1N,
    // Base point (x, y) aka generator point
    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),
    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),
    h: BigInt(1),
    lowS: true,
    /**
     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.
     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.
     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.
     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066
     */
    endo: {
        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),
        splitScalar: (k) => {
            const n = secp256k1N;
            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');
            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');
            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');
            const b2 = a1;
            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)
            const c1 = divNearest(b2 * k, n);
            const c2 = divNearest(-b1 * k, n);
            let k1 = (0, modular_js_1.mod)(k - c1 * a1 - c2 * a2, n);
            let k2 = (0, modular_js_1.mod)(-c1 * b1 - c2 * b2, n);
            const k1neg = k1 > POW_2_128;
            const k2neg = k2 > POW_2_128;
            if (k1neg)
                k1 = n - k1;
            if (k2neg)
                k2 = n - k2;
            if (k1 > POW_2_128 || k2 > POW_2_128) {
                throw new Error('splitScalar: Endomorphism failed, k=' + k);
            }
            return { k1neg, k1, k2neg, k2 };
        },
    },
}, sha256_1.sha256);
// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.
// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki
const _0n = BigInt(0);
const fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;
const ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;
/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */
const TAGGED_HASH_PREFIXES = {};
function taggedHash(tag, ...messages) {
    let tagP = TAGGED_HASH_PREFIXES[tag];
    if (tagP === undefined) {
        const tagH = (0, sha256_1.sha256)(Uint8Array.from(tag, (c) => c.charCodeAt(0)));
        tagP = (0, utils_js_1.concatBytes)(tagH, tagH);
        TAGGED_HASH_PREFIXES[tag] = tagP;
    }
    return (0, sha256_1.sha256)((0, utils_js_1.concatBytes)(tagP, ...messages));
}
// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03
const pointToBytes = (point) => point.toRawBytes(true).slice(1);
const numTo32b = (n) => (0, utils_js_1.numberToBytesBE)(n, 32);
const modP = (x) => (0, modular_js_1.mod)(x, secp256k1P);
const modN = (x) => (0, modular_js_1.mod)(x, secp256k1N);
const Point = exports.secp256k1.ProjectivePoint;
const GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);
// Calculate point, scalar and bytes
function schnorrGetExtPubKey(priv) {
    let d_ = exports.secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey
    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside
    const scalar = p.hasEvenY() ? d_ : modN(-d_);
    return { scalar: scalar, bytes: pointToBytes(p) };
}
/**
 * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.
 * @returns valid point checked for being on-curve
 */
function lift_x(x) {
    if (!fe(x))
        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.
    const xx = modP(x * x);
    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.
    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.
    if (y % _2n !== _0n)
        y = modP(-y); // Return the unique point P such that x(P) = x and
    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.
    p.assertValidity();
    return p;
}
/**
 * Create tagged hash, convert it to bigint, reduce modulo-n.
 */
function challenge(...args) {
    return modN((0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/challenge', ...args)));
}
/**
 * Schnorr public key is just `x` coordinate of Point as per BIP340.
 */
function schnorrGetPublicKey(privateKey) {
    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)
}
/**
 * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.
 * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.
 */
function schnorrSign(message, privateKey, auxRand = (0, utils_1.randomBytes)(32)) {
    const m = (0, utils_js_1.ensureBytes)('message', message);
    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder
    const a = (0, utils_js_1.ensureBytes)('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array
    const t = numTo32b(d ^ (0, utils_js_1.bytesToNumberBE)(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)
    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)
    const k_ = modN((0, utils_js_1.bytesToNumberBE)(rand)); // Let k' = int(rand) mod n
    if (k_ === _0n)
        throw new Error('sign failed: k is zero'); // Fail if k' = 0.
    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.
    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.
    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).
    sig.set(rx, 0);
    sig.set(numTo32b(modN(k + e * d)), 32);
    // If Verify(bytes(P), m, sig) (see below) returns failure, abort
    if (!schnorrVerify(sig, m, px))
        throw new Error('sign: Invalid signature produced');
    return sig;
}
/**
 * Verifies Schnorr signature.
 * Will swallow errors & return false except for initial type validation of arguments.
 */
function schnorrVerify(signature, message, publicKey) {
    const sig = (0, utils_js_1.ensureBytes)('signature', signature, 64);
    const m = (0, utils_js_1.ensureBytes)('message', message);
    const pub = (0, utils_js_1.ensureBytes)('publicKey', publicKey, 32);
    try {
        const P = lift_x((0, utils_js_1.bytesToNumberBE)(pub)); // P = lift_x(int(pk)); fail if that fails
        const r = (0, utils_js_1.bytesToNumberBE)(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.
        if (!fe(r))
            return false;
        const s = (0, utils_js_1.bytesToNumberBE)(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.
        if (!ge(s))
            return false;
        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n
        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P
        if (!R || !R.hasEvenY() || R.toAffine().x !== r)
            return false; // -eP == (n-e)P
        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.
    }
    catch (error) {
        return false;
    }
}
exports.schnorr = (() => ({
    getPublicKey: schnorrGetPublicKey,
    sign: schnorrSign,
    verify: schnorrVerify,
    utils: {
        randomPrivateKey: exports.secp256k1.utils.randomPrivateKey,
        lift_x,
        pointToBytes,
        numberToBytesBE: utils_js_1.numberToBytesBE,
        bytesToNumberBE: utils_js_1.bytesToNumberBE,
        taggedHash,
        mod: modular_js_1.mod,
    },
}))();
const isoMap = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.isogenyMap)(Fp, [
    // xNum
    [
        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',
        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',
        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',
        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',
    ],
    // xDen
    [
        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',
        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',
        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1
    ],
    // yNum
    [
        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',
        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',
        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',
        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',
    ],
    // yDen
    [
        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',
        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',
        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',
        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1
    ],
].map((i) => i.map((j) => BigInt(j)))))();
const mapSWU = /* @__PURE__ */ (() => (0, weierstrass_js_1.mapToCurveSimpleSWU)(Fp, {
    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),
    B: BigInt('1771'),
    Z: Fp.create(BigInt('-11')),
}))();
const htf = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.createHasher)(exports.secp256k1.ProjectivePoint, (scalars) => {
    const { x, y } = mapSWU(Fp.create(scalars[0]));
    return isoMap(x, y);
}, {
    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',
    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',
    p: Fp.ORDER,
    m: 1,
    k: 128,
    expand: 'xmd',
    hash: sha256_1.sha256,
}))();
exports.hashToCurve = (() => htf.hashToCurve)();
exports.encodeToCurve = (() => htf.encodeToCurve)();
//# sourceMappingURL=secp256k1.js.map

/***/ }),

/***/ 13040:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;
function number(n) {
    if (!Number.isSafeInteger(n) || n < 0)
        throw new Error(`Wrong positive integer: ${n}`);
}
exports.number = number;
function bool(b) {
    if (typeof b !== 'boolean')
        throw new Error(`Expected boolean, not ${b}`);
}
exports.bool = bool;
function bytes(b, ...lengths) {
    if (!(b instanceof Uint8Array))
        throw new Error('Expected Uint8Array');
    if (lengths.length > 0 && !lengths.includes(b.length))
        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);
}
exports.bytes = bytes;
function hash(hash) {
    if (typeof hash !== 'function' || typeof hash.create !== 'function')
        throw new Error('Hash should be wrapped by utils.wrapConstructor');
    number(hash.outputLen);
    number(hash.blockLen);
}
exports.hash = hash;
function exists(instance, checkFinished = true) {
    if (instance.destroyed)
        throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished)
        throw new Error('Hash#digest() has already been called');
}
exports.exists = exists;
function output(out, instance) {
    bytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error(`digestInto() expects output buffer of length at least ${min}`);
    }
}
exports.output = output;
const assert = { number, bool, bytes, hash, exists, output };
exports["default"] = assert;
//# sourceMappingURL=_assert.js.map

/***/ }),

/***/ 76317:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BLAKE2 = exports.SIGMA = void 0;
const _assert_js_1 = __nccwpck_require__(13040);
const utils_js_1 = __nccwpck_require__(26161);
// Blake is based on ChaCha permutation.
// For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].
// prettier-ignore
exports.SIGMA = new Uint8Array([
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,
    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,
    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,
    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,
    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,
    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,
    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,
    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,
    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,
]);
class BLAKE2 extends utils_js_1.Hash {
    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {
        super();
        this.blockLen = blockLen;
        this.outputLen = outputLen;
        this.length = 0;
        this.pos = 0;
        this.finished = false;
        this.destroyed = false;
        (0, _assert_js_1.number)(blockLen);
        (0, _assert_js_1.number)(outputLen);
        (0, _assert_js_1.number)(keyLen);
        if (outputLen < 0 || outputLen > keyLen)
            throw new Error('outputLen bigger than keyLen');
        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))
            throw new Error(`key must be up 1..${keyLen} byte long or undefined`);
        if (opts.salt !== undefined && opts.salt.length !== saltLen)
            throw new Error(`salt must be ${saltLen} byte long or undefined`);
        if (opts.personalization !== undefined && opts.personalization.length !== persLen)
            throw new Error(`personalization must be ${persLen} byte long or undefined`);
        this.buffer32 = (0, utils_js_1.u32)((this.buffer = new Uint8Array(blockLen)));
    }
    update(data) {
        (0, _assert_js_1.exists)(this);
        // Main difference with other hashes: there is flag for last block,
        // so we cannot process current block before we know that there
        // is the next one. This significantly complicates logic and reduces ability
        // to do zero-copy processing
        const { blockLen, buffer, buffer32 } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        const offset = data.byteOffset;
        const buf = data.buffer;
        for (let pos = 0; pos < len;) {
            // If buffer is full and we still have input (don't process last block, same as blake2s)
            if (this.pos === blockLen) {
                this.compress(buffer32, 0, false);
                this.pos = 0;
            }
            const take = Math.min(blockLen - this.pos, len - pos);
            const dataOffset = offset + pos;
            // full block && aligned to 4 bytes && not last in input
            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {
                const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));
                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {
                    this.length += blockLen;
                    this.compress(data32, pos32, false);
                }
                continue;
            }
            buffer.set(data.subarray(pos, pos + take), this.pos);
            this.pos += take;
            this.length += take;
            pos += take;
        }
        return this;
    }
    digestInto(out) {
        (0, _assert_js_1.exists)(this);
        (0, _assert_js_1.output)(out, this);
        const { pos, buffer32 } = this;
        this.finished = true;
        // Padding
        this.buffer.subarray(pos).fill(0);
        this.compress(buffer32, 0, true);
        const out32 = (0, utils_js_1.u32)(out);
        this.get().forEach((v, i) => (out32[i] = v));
    }
    digest() {
        const { buffer, outputLen } = this;
        this.digestInto(buffer);
        const res = buffer.slice(0, outputLen);
        this.destroy();
        return res;
    }
    _cloneInto(to) {
        const { buffer, length, finished, destroyed, outputLen, pos } = this;
        to || (to = new this.constructor({ dkLen: outputLen }));
        to.set(...this.get());
        to.length = length;
        to.finished = finished;
        to.destroyed = destroyed;
        to.outputLen = outputLen;
        to.buffer.set(buffer);
        to.pos = pos;
        return to;
    }
}
exports.BLAKE2 = BLAKE2;
//# sourceMappingURL=_blake2.js.map

/***/ }),

/***/ 64919:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SHA2 = void 0;
const _assert_js_1 = __nccwpck_require__(13040);
const utils_js_1 = __nccwpck_require__(26161);
// Polyfill for Safari 14
function setBigUint64(view, byteOffset, value, isLE) {
    if (typeof view.setBigUint64 === 'function')
        return view.setBigUint64(byteOffset, value, isLE);
    const _32n = BigInt(32);
    const _u32_max = BigInt(0xffffffff);
    const wh = Number((value >> _32n) & _u32_max);
    const wl = Number(value & _u32_max);
    const h = isLE ? 4 : 0;
    const l = isLE ? 0 : 4;
    view.setUint32(byteOffset + h, wh, isLE);
    view.setUint32(byteOffset + l, wl, isLE);
}
// Base SHA2 class (RFC 6234)
class SHA2 extends utils_js_1.Hash {
    constructor(blockLen, outputLen, padOffset, isLE) {
        super();
        this.blockLen = blockLen;
        this.outputLen = outputLen;
        this.padOffset = padOffset;
        this.isLE = isLE;
        this.finished = false;
        this.length = 0;
        this.pos = 0;
        this.destroyed = false;
        this.buffer = new Uint8Array(blockLen);
        this.view = (0, utils_js_1.createView)(this.buffer);
    }
    update(data) {
        (0, _assert_js_1.exists)(this);
        const { view, buffer, blockLen } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            // Fast path: we have at least one block in input, cast it to view and process
            if (take === blockLen) {
                const dataView = (0, utils_js_1.createView)(data);
                for (; blockLen <= len - pos; pos += blockLen)
                    this.process(dataView, pos);
                continue;
            }
            buffer.set(data.subarray(pos, pos + take), this.pos);
            this.pos += take;
            pos += take;
            if (this.pos === blockLen) {
                this.process(view, 0);
                this.pos = 0;
            }
        }
        this.length += data.length;
        this.roundClean();
        return this;
    }
    digestInto(out) {
        (0, _assert_js_1.exists)(this);
        (0, _assert_js_1.output)(out, this);
        this.finished = true;
        // Padding
        // We can avoid allocation of buffer for padding completely if it
        // was previously not allocated here. But it won't change performance.
        const { buffer, view, blockLen, isLE } = this;
        let { pos } = this;
        // append the bit '1' to the message
        buffer[pos++] = 0b10000000;
        this.buffer.subarray(pos).fill(0);
        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again
        if (this.padOffset > blockLen - pos) {
            this.process(view, 0);
            pos = 0;
        }
        // Pad until full block byte with zeros
        for (let i = pos; i < blockLen; i++)
            buffer[i] = 0;
        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that
        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.
        // So we just write lowest 64 bits of that value.
        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);
        this.process(view, 0);
        const oview = (0, utils_js_1.createView)(out);
        const len = this.outputLen;
        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT
        if (len % 4)
            throw new Error('_sha2: outputLen should be aligned to 32bit');
        const outLen = len / 4;
        const state = this.get();
        if (outLen > state.length)
            throw new Error('_sha2: outputLen bigger than state');
        for (let i = 0; i < outLen; i++)
            oview.setUint32(4 * i, state[i], isLE);
    }
    digest() {
        const { buffer, outputLen } = this;
        this.digestInto(buffer);
        const res = buffer.slice(0, outputLen);
        this.destroy();
        return res;
    }
    _cloneInto(to) {
        to || (to = new this.constructor());
        to.set(...this.get());
        const { blockLen, buffer, length, finished, destroyed, pos } = this;
        to.length = length;
        to.pos = pos;
        to.finished = finished;
        to.destroyed = destroyed;
        if (length % blockLen)
            to.buffer.set(buffer);
        return to;
    }
}
exports.SHA2 = SHA2;
//# sourceMappingURL=_sha2.js.map

/***/ }),

/***/ 97155:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;
const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
const _32n = /* @__PURE__ */ BigInt(32);
// We are not using BigUint64Array, because they are extremely slow as per 2022
function fromBig(n, le = false) {
    if (le)
        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };
    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
exports.fromBig = fromBig;
function split(lst, le = false) {
    let Ah = new Uint32Array(lst.length);
    let Al = new Uint32Array(lst.length);
    for (let i = 0; i < lst.length; i++) {
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [h, l];
    }
    return [Ah, Al];
}
exports.split = split;
const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);
exports.toBig = toBig;
// for Shift in [0, 32)
const shrSH = (h, _l, s) => h >>> s;
exports.shrSH = shrSH;
const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
exports.shrSL = shrSL;
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));
exports.rotrSH = rotrSH;
const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);
exports.rotrSL = rotrSL;
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));
exports.rotrBH = rotrBH;
const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));
exports.rotrBL = rotrBL;
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (_h, l) => l;
exports.rotr32H = rotr32H;
const rotr32L = (h, _l) => h;
exports.rotr32L = rotr32L;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));
exports.rotlSH = rotlSH;
const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));
exports.rotlSL = rotlSL;
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));
exports.rotlBH = rotlBH;
const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));
exports.rotlBL = rotlBL;
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };
}
exports.add = add;
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
exports.add3L = add3L;
const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;
exports.add3H = add3H;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
exports.add4L = add4L;
const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;
exports.add4H = add4H;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
exports.add5L = add5L;
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;
exports.add5H = add5H;
// prettier-ignore
const u64 = {
    fromBig, split, toBig,
    shrSH, shrSL,
    rotrSH, rotrSL, rotrBH, rotrBL,
    rotr32H, rotr32L,
    rotlSH, rotlSL, rotlBH, rotlBL,
    add, add3L, add3H, add4L, add4H, add5H, add5L,
};
exports["default"] = u64;
//# sourceMappingURL=_u64.js.map

/***/ }),

/***/ 47586:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.blake2b = void 0;
const _blake2_js_1 = __nccwpck_require__(76317);
const _u64_js_1 = __nccwpck_require__(97155);
const utils_js_1 = __nccwpck_require__(26161);
// Same as SHA-512 but LE
// prettier-ignore
const IV = /* @__PURE__ */ new Uint32Array([
    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,
    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19
]);
// Temporary buffer
const BUF = /* @__PURE__ */ new Uint32Array(32);
// Mixing function G splitted in two halfs
function G1(a, b, c, d, msg, x) {
    // NOTE: V is LE here
    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore
    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore
    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore
    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore
    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore
    // v[a] = (v[a] + v[b] + x) | 0;
    let ll = _u64_js_1.default.add3L(Al, Bl, Xl);
    Ah = _u64_js_1.default.add3H(ll, Ah, Bh, Xh);
    Al = ll | 0;
    // v[d] = rotr(v[d] ^ v[a], 32)
    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });
    ({ Dh, Dl } = { Dh: _u64_js_1.default.rotr32H(Dh, Dl), Dl: _u64_js_1.default.rotr32L(Dh, Dl) });
    // v[c] = (v[c] + v[d]) | 0;
    ({ h: Ch, l: Cl } = _u64_js_1.default.add(Ch, Cl, Dh, Dl));
    // v[b] = rotr(v[b] ^ v[c], 24)
    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });
    ({ Bh, Bl } = { Bh: _u64_js_1.default.rotrSH(Bh, Bl, 24), Bl: _u64_js_1.default.rotrSL(Bh, Bl, 24) });
    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);
    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);
    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);
    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);
}
function G2(a, b, c, d, msg, x) {
    // NOTE: V is LE here
    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore
    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore
    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore
    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore
    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore
    // v[a] = (v[a] + v[b] + x) | 0;
    let ll = _u64_js_1.default.add3L(Al, Bl, Xl);
    Ah = _u64_js_1.default.add3H(ll, Ah, Bh, Xh);
    Al = ll | 0;
    // v[d] = rotr(v[d] ^ v[a], 16)
    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });
    ({ Dh, Dl } = { Dh: _u64_js_1.default.rotrSH(Dh, Dl, 16), Dl: _u64_js_1.default.rotrSL(Dh, Dl, 16) });
    // v[c] = (v[c] + v[d]) | 0;
    ({ h: Ch, l: Cl } = _u64_js_1.default.add(Ch, Cl, Dh, Dl));
    // v[b] = rotr(v[b] ^ v[c], 63)
    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });
    ({ Bh, Bl } = { Bh: _u64_js_1.default.rotrBH(Bh, Bl, 63), Bl: _u64_js_1.default.rotrBL(Bh, Bl, 63) });
    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);
    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);
    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);
    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);
}
class BLAKE2b extends _blake2_js_1.BLAKE2 {
    constructor(opts = {}) {
        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);
        // Same as SHA-512, but LE
        this.v0l = IV[0] | 0;
        this.v0h = IV[1] | 0;
        this.v1l = IV[2] | 0;
        this.v1h = IV[3] | 0;
        this.v2l = IV[4] | 0;
        this.v2h = IV[5] | 0;
        this.v3l = IV[6] | 0;
        this.v3h = IV[7] | 0;
        this.v4l = IV[8] | 0;
        this.v4h = IV[9] | 0;
        this.v5l = IV[10] | 0;
        this.v5h = IV[11] | 0;
        this.v6l = IV[12] | 0;
        this.v6h = IV[13] | 0;
        this.v7l = IV[14] | 0;
        this.v7h = IV[15] | 0;
        const keyLength = opts.key ? opts.key.length : 0;
        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);
        if (opts.salt) {
            const salt = (0, utils_js_1.u32)((0, utils_js_1.toBytes)(opts.salt));
            this.v4l ^= salt[0];
            this.v4h ^= salt[1];
            this.v5l ^= salt[2];
            this.v5h ^= salt[3];
        }
        if (opts.personalization) {
            const pers = (0, utils_js_1.u32)((0, utils_js_1.toBytes)(opts.personalization));
            this.v6l ^= pers[0];
            this.v6h ^= pers[1];
            this.v7l ^= pers[2];
            this.v7h ^= pers[3];
        }
        if (opts.key) {
            // Pad to blockLen and update
            const tmp = new Uint8Array(this.blockLen);
            tmp.set((0, utils_js_1.toBytes)(opts.key));
            this.update(tmp);
        }
    }
    // prettier-ignore
    get() {
        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;
        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];
    }
    // prettier-ignore
    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {
        this.v0l = v0l | 0;
        this.v0h = v0h | 0;
        this.v1l = v1l | 0;
        this.v1h = v1h | 0;
        this.v2l = v2l | 0;
        this.v2h = v2h | 0;
        this.v3l = v3l | 0;
        this.v3h = v3h | 0;
        this.v4l = v4l | 0;
        this.v4h = v4h | 0;
        this.v5l = v5l | 0;
        this.v5h = v5h | 0;
        this.v6l = v6l | 0;
        this.v6h = v6h | 0;
        this.v7l = v7l | 0;
        this.v7h = v7h | 0;
    }
    compress(msg, offset, isLast) {
        this.get().forEach((v, i) => (BUF[i] = v)); // First half from state.
        BUF.set(IV, 16); // Second half from IV.
        let { h, l } = _u64_js_1.default.fromBig(BigInt(this.length));
        BUF[24] = IV[8] ^ l; // Low word of the offset.
        BUF[25] = IV[9] ^ h; // High word.
        // Invert all bits for last block
        if (isLast) {
            BUF[28] = ~BUF[28];
            BUF[29] = ~BUF[29];
        }
        let j = 0;
        const s = _blake2_js_1.SIGMA;
        for (let i = 0; i < 12; i++) {
            G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);
            G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);
            G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);
            G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);
            G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);
            G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);
            G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);
            G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);
            G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);
            G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);
            G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);
            G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);
            G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);
            G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);
            G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);
            G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);
        }
        this.v0l ^= BUF[0] ^ BUF[16];
        this.v0h ^= BUF[1] ^ BUF[17];
        this.v1l ^= BUF[2] ^ BUF[18];
        this.v1h ^= BUF[3] ^ BUF[19];
        this.v2l ^= BUF[4] ^ BUF[20];
        this.v2h ^= BUF[5] ^ BUF[21];
        this.v3l ^= BUF[6] ^ BUF[22];
        this.v3h ^= BUF[7] ^ BUF[23];
        this.v4l ^= BUF[8] ^ BUF[24];
        this.v4h ^= BUF[9] ^ BUF[25];
        this.v5l ^= BUF[10] ^ BUF[26];
        this.v5h ^= BUF[11] ^ BUF[27];
        this.v6l ^= BUF[12] ^ BUF[28];
        this.v6h ^= BUF[13] ^ BUF[29];
        this.v7l ^= BUF[14] ^ BUF[30];
        this.v7h ^= BUF[15] ^ BUF[31];
        BUF.fill(0);
    }
    destroy() {
        this.destroyed = true;
        this.buffer32.fill(0);
        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
}
/**
 * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.
 * @param msg - message that would be hashed
 * @param opts - dkLen, key, salt, personalization
 */
exports.blake2b = (0, utils_js_1.wrapConstructorWithOpts)((opts) => new BLAKE2b(opts));
//# sourceMappingURL=blake2b.js.map

/***/ }),

/***/ 7843:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.crypto = void 0;
// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// See utils.ts for details.
// The file will throw on node.js 14 and earlier.
// @ts-ignore
const nc = __nccwpck_require__(6005);
exports.crypto = nc && typeof nc === 'object' && 'webcrypto' in nc ? nc.webcrypto : undefined;
//# sourceMappingURL=cryptoNode.js.map

/***/ }),

/***/ 99149:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hmac = exports.HMAC = void 0;
const _assert_js_1 = __nccwpck_require__(13040);
const utils_js_1 = __nccwpck_require__(26161);
// HMAC (RFC 2104)
class HMAC extends utils_js_1.Hash {
    constructor(hash, _key) {
        super();
        this.finished = false;
        this.destroyed = false;
        (0, _assert_js_1.hash)(hash);
        const key = (0, utils_js_1.toBytes)(_key);
        this.iHash = hash.create();
        if (typeof this.iHash.update !== 'function')
            throw new Error('Expected instance of class which extends utils.Hash');
        this.blockLen = this.iHash.blockLen;
        this.outputLen = this.iHash.outputLen;
        const blockLen = this.blockLen;
        const pad = new Uint8Array(blockLen);
        // blockLen can be bigger than outputLen
        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);
        for (let i = 0; i < pad.length; i++)
            pad[i] ^= 0x36;
        this.iHash.update(pad);
        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone
        this.oHash = hash.create();
        // Undo internal XOR && apply outer XOR
        for (let i = 0; i < pad.length; i++)
            pad[i] ^= 0x36 ^ 0x5c;
        this.oHash.update(pad);
        pad.fill(0);
    }
    update(buf) {
        (0, _assert_js_1.exists)(this);
        this.iHash.update(buf);
        return this;
    }
    digestInto(out) {
        (0, _assert_js_1.exists)(this);
        (0, _assert_js_1.bytes)(out, this.outputLen);
        this.finished = true;
        this.iHash.digestInto(out);
        this.oHash.update(out);
        this.oHash.digestInto(out);
        this.destroy();
    }
    digest() {
        const out = new Uint8Array(this.oHash.outputLen);
        this.digestInto(out);
        return out;
    }
    _cloneInto(to) {
        // Create new instance without calling constructor since key already in state and we don't know it.
        to || (to = Object.create(Object.getPrototypeOf(this), {}));
        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;
        to = to;
        to.finished = finished;
        to.destroyed = destroyed;
        to.blockLen = blockLen;
        to.outputLen = outputLen;
        to.oHash = oHash._cloneInto(to.oHash);
        to.iHash = iHash._cloneInto(to.iHash);
        return to;
    }
    destroy() {
        this.destroyed = true;
        this.oHash.destroy();
        this.iHash.destroy();
    }
}
exports.HMAC = HMAC;
/**
 * HMAC: RFC2104 message authentication code.
 * @param hash - function that would be used e.g. sha256
 * @param key - message key
 * @param message - message data
 */
const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();
exports.hmac = hmac;
exports.hmac.create = (hash, key) => new HMAC(hash, key);
//# sourceMappingURL=hmac.js.map

/***/ }),

/***/ 35058:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pbkdf2Async = exports.pbkdf2 = void 0;
const _assert_js_1 = __nccwpck_require__(13040);
const hmac_js_1 = __nccwpck_require__(99149);
const utils_js_1 = __nccwpck_require__(26161);
// Common prologue and epilogue for sync/async functions
function pbkdf2Init(hash, _password, _salt, _opts) {
    (0, _assert_js_1.hash)(hash);
    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);
    const { c, dkLen, asyncTick } = opts;
    (0, _assert_js_1.number)(c);
    (0, _assert_js_1.number)(dkLen);
    (0, _assert_js_1.number)(asyncTick);
    if (c < 1)
        throw new Error('PBKDF2: iterations (c) should be >= 1');
    const password = (0, utils_js_1.toBytes)(_password);
    const salt = (0, utils_js_1.toBytes)(_salt);
    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);
    const DK = new Uint8Array(dkLen);
    // U1 = PRF(Password, Salt + INT_32_BE(i))
    const PRF = hmac_js_1.hmac.create(hash, password);
    const PRFSalt = PRF._cloneInto().update(salt);
    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };
}
function pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {
    PRF.destroy();
    PRFSalt.destroy();
    if (prfW)
        prfW.destroy();
    u.fill(0);
    return DK;
}
/**
 * PBKDF2-HMAC: RFC 2898 key derivation function
 * @param hash - hash function that would be used e.g. sha256
 * @param password - password from which a derived key is generated
 * @param salt - cryptographic salt
 * @param opts - {c, dkLen} where c is work factor and dkLen is output message size
 */
function pbkdf2(hash, password, salt, opts) {
    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
    let prfW; // Working copy
    const arr = new Uint8Array(4);
    const view = (0, utils_js_1.createView)(arr);
    const u = new Uint8Array(PRF.outputLen);
    // DK = T1 + T2 + ⋯ + Tdklen/hlen
    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        // Ti = F(Password, Salt, c, i)
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
        // U1 = PRF(Password, Salt + INT_32_BE(i))
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        for (let ui = 1; ui < c; ui++) {
            // Uc = PRF(Password, Uc−1)
            PRF._cloneInto(prfW).update(u).digestInto(u);
            for (let i = 0; i < Ti.length; i++)
                Ti[i] ^= u[i];
        }
    }
    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
exports.pbkdf2 = pbkdf2;
async function pbkdf2Async(hash, password, salt, opts) {
    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);
    let prfW; // Working copy
    const arr = new Uint8Array(4);
    const view = (0, utils_js_1.createView)(arr);
    const u = new Uint8Array(PRF.outputLen);
    // DK = T1 + T2 + ⋯ + Tdklen/hlen
    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
        // Ti = F(Password, Salt, c, i)
        const Ti = DK.subarray(pos, pos + PRF.outputLen);
        view.setInt32(0, ti, false);
        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
        // U1 = PRF(Password, Salt + INT_32_BE(i))
        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);
        Ti.set(u.subarray(0, Ti.length));
        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, () => {
            // Uc = PRF(Password, Uc−1)
            PRF._cloneInto(prfW).update(u).digestInto(u);
            for (let i = 0; i < Ti.length; i++)
                Ti[i] ^= u[i];
        });
    }
    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
exports.pbkdf2Async = pbkdf2Async;
//# sourceMappingURL=pbkdf2.js.map

/***/ }),

/***/ 12890:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scryptAsync = exports.scrypt = void 0;
const _assert_js_1 = __nccwpck_require__(13040);
const sha256_js_1 = __nccwpck_require__(70708);
const pbkdf2_js_1 = __nccwpck_require__(35058);
const utils_js_1 = __nccwpck_require__(26161);
// RFC 7914 Scrypt KDF
// Left rotate for uint32
const rotl = (a, b) => (a << b) | (a >>> (32 - b));
// The main Scrypt loop: uses Salsa extensively.
// Six versions of the function were tried, this is the fastest one.
// prettier-ignore
function XorAndSalsa(prev, pi, input, ii, out, oi) {
    // Based on https://cr.yp.to/salsa20.html
    // Xor blocks
    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];
    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];
    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];
    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];
    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];
    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];
    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];
    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];
    // Save state to temporary variables (salsa)
    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;
    // Main loop (salsa)
    for (let i = 0; i < 8; i += 2) {
        x04 ^= rotl(x00 + x12 | 0, 7);
        x08 ^= rotl(x04 + x00 | 0, 9);
        x12 ^= rotl(x08 + x04 | 0, 13);
        x00 ^= rotl(x12 + x08 | 0, 18);
        x09 ^= rotl(x05 + x01 | 0, 7);
        x13 ^= rotl(x09 + x05 | 0, 9);
        x01 ^= rotl(x13 + x09 | 0, 13);
        x05 ^= rotl(x01 + x13 | 0, 18);
        x14 ^= rotl(x10 + x06 | 0, 7);
        x02 ^= rotl(x14 + x10 | 0, 9);
        x06 ^= rotl(x02 + x14 | 0, 13);
        x10 ^= rotl(x06 + x02 | 0, 18);
        x03 ^= rotl(x15 + x11 | 0, 7);
        x07 ^= rotl(x03 + x15 | 0, 9);
        x11 ^= rotl(x07 + x03 | 0, 13);
        x15 ^= rotl(x11 + x07 | 0, 18);
        x01 ^= rotl(x00 + x03 | 0, 7);
        x02 ^= rotl(x01 + x00 | 0, 9);
        x03 ^= rotl(x02 + x01 | 0, 13);
        x00 ^= rotl(x03 + x02 | 0, 18);
        x06 ^= rotl(x05 + x04 | 0, 7);
        x07 ^= rotl(x06 + x05 | 0, 9);
        x04 ^= rotl(x07 + x06 | 0, 13);
        x05 ^= rotl(x04 + x07 | 0, 18);
        x11 ^= rotl(x10 + x09 | 0, 7);
        x08 ^= rotl(x11 + x10 | 0, 9);
        x09 ^= rotl(x08 + x11 | 0, 13);
        x10 ^= rotl(x09 + x08 | 0, 18);
        x12 ^= rotl(x15 + x14 | 0, 7);
        x13 ^= rotl(x12 + x15 | 0, 9);
        x14 ^= rotl(x13 + x12 | 0, 13);
        x15 ^= rotl(x14 + x13 | 0, 18);
    }
    // Write output (salsa)
    out[oi++] = (y00 + x00) | 0;
    out[oi++] = (y01 + x01) | 0;
    out[oi++] = (y02 + x02) | 0;
    out[oi++] = (y03 + x03) | 0;
    out[oi++] = (y04 + x04) | 0;
    out[oi++] = (y05 + x05) | 0;
    out[oi++] = (y06 + x06) | 0;
    out[oi++] = (y07 + x07) | 0;
    out[oi++] = (y08 + x08) | 0;
    out[oi++] = (y09 + x09) | 0;
    out[oi++] = (y10 + x10) | 0;
    out[oi++] = (y11 + x11) | 0;
    out[oi++] = (y12 + x12) | 0;
    out[oi++] = (y13 + x13) | 0;
    out[oi++] = (y14 + x14) | 0;
    out[oi++] = (y15 + x15) | 0;
}
function BlockMix(input, ii, out, oi, r) {
    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)
    let head = oi + 0;
    let tail = oi + 16 * r;
    for (let i = 0; i < 16; i++)
        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]
    for (let i = 0; i < r; i++, head += 16, ii += 16) {
        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1
        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])
        if (i > 0)
            tail += 16; // First iteration overwrites tmp value in tail
        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])
    }
}
// Common prologue and epilogue for sync/async functions
function scryptInit(password, salt, _opts) {
    // Maxmem - 1GB+1KB by default
    const opts = (0, utils_js_1.checkOpts)({
        dkLen: 32,
        asyncTick: 10,
        maxmem: 1024 ** 3 + 1024,
    }, _opts);
    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;
    (0, _assert_js_1.number)(N);
    (0, _assert_js_1.number)(r);
    (0, _assert_js_1.number)(p);
    (0, _assert_js_1.number)(dkLen);
    (0, _assert_js_1.number)(asyncTick);
    (0, _assert_js_1.number)(maxmem);
    if (onProgress !== undefined && typeof onProgress !== 'function')
        throw new Error('progressCb should be function');
    const blockSize = 128 * r;
    const blockSize32 = blockSize / 4;
    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {
        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function
        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.
        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');
    }
    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {
        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');
    }
    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {
        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');
    }
    const memUsed = blockSize * (N + p);
    if (memUsed > maxmem) {
        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);
    }
    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)
    // Since it has only one iteration there is no reason to use async variant
    const B = (0, pbkdf2_js_1.pbkdf2)(sha256_js_1.sha256, password, salt, { c: 1, dkLen: blockSize * p });
    const B32 = (0, utils_js_1.u32)(B);
    // Re-used between parallel iterations. Array(iterations) of B
    const V = (0, utils_js_1.u32)(new Uint8Array(blockSize * N));
    const tmp = (0, utils_js_1.u32)(new Uint8Array(blockSize));
    let blockMixCb = () => { };
    if (onProgress) {
        const totalBlockMix = 2 * N * p;
        // Invoke callback if progress changes from 10.01 to 10.02
        // Allows to draw smooth progress bar on up to 8K screen
        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);
        let blockMixCnt = 0;
        blockMixCb = () => {
            blockMixCnt++;
            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))
                onProgress(blockMixCnt / totalBlockMix);
        };
    }
    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };
}
function scryptOutput(password, dkLen, B, V, tmp) {
    const res = (0, pbkdf2_js_1.pbkdf2)(sha256_js_1.sha256, password, B, { c: 1, dkLen });
    B.fill(0);
    V.fill(0);
    tmp.fill(0);
    return res;
}
/**
 * Scrypt KDF from RFC 7914.
 * @param password - pass
 * @param salt - salt
 * @param opts - parameters
 * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)
 * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance
 * - `p` is parallelization factor (1 is common)
 * - `dkLen` is output key length in bytes e.g. 32.
 * - `asyncTick` - (default: 10) max time in ms for which async function can block execution
 * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt
 * - `onProgress` - callback function that would be executed for progress report
 * @returns Derived key
 */
function scrypt(password, salt, opts) {
    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);
    for (let pi = 0; pi < p; pi++) {
        const Pi = blockSize32 * pi;
        for (let i = 0; i < blockSize32; i++)
            V[i] = B32[Pi + i]; // V[0] = B[i]
        for (let i = 0, pos = 0; i < N - 1; i++) {
            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);
            blockMixCb();
        }
        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element
        blockMixCb();
        for (let i = 0; i < N; i++) {
            // First u32 of the last 64-byte block (u32 is LE)
            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations
            for (let k = 0; k < blockSize32; k++)
                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]
            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])
            blockMixCb();
        }
    }
    return scryptOutput(password, dkLen, B, V, tmp);
}
exports.scrypt = scrypt;
/**
 * Scrypt KDF from RFC 7914.
 */
async function scryptAsync(password, salt, opts) {
    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);
    for (let pi = 0; pi < p; pi++) {
        const Pi = blockSize32 * pi;
        for (let i = 0; i < blockSize32; i++)
            V[i] = B32[Pi + i]; // V[0] = B[i]
        let pos = 0;
        await (0, utils_js_1.asyncLoop)(N - 1, asyncTick, () => {
            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);
            blockMixCb();
        });
        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element
        blockMixCb();
        await (0, utils_js_1.asyncLoop)(N, asyncTick, () => {
            // First u32 of the last 64-byte block (u32 is LE)
            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations
            for (let k = 0; k < blockSize32; k++)
                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]
            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])
            blockMixCb();
        });
    }
    return scryptOutput(password, dkLen, B, V, tmp);
}
exports.scryptAsync = scryptAsync;
//# sourceMappingURL=scrypt.js.map

/***/ }),

/***/ 70708:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sha224 = exports.sha256 = void 0;
const _sha2_js_1 = __nccwpck_require__(64919);
const utils_js_1 = __nccwpck_require__(26161);
// SHA2-256 need to try 2^128 hashes to execute birthday attack.
// BTC network is doing 2^67 hashes/sec as per early 2023.
// Choice: a ? b : c
const Chi = (a, b, c) => (a & b) ^ (~a & c);
// Majority function, true if any two inpust is true
const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);
// Round constants:
// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)
// prettier-ignore
const SHA256_K = /* @__PURE__ */ new Uint32Array([
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
]);
// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
// prettier-ignore
const IV = /* @__PURE__ */ new Uint32Array([
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
]);
// Temporary buffer, not used to store anything between runs
// Named this way because it matches specification.
const SHA256_W = /* @__PURE__ */ new Uint32Array(64);
class SHA256 extends _sha2_js_1.SHA2 {
    constructor() {
        super(64, 32, 8, false);
        // We cannot use array here since array allows indexing by variable
        // which means optimizer/compiler cannot use registers.
        this.A = IV[0] | 0;
        this.B = IV[1] | 0;
        this.C = IV[2] | 0;
        this.D = IV[3] | 0;
        this.E = IV[4] | 0;
        this.F = IV[5] | 0;
        this.G = IV[6] | 0;
        this.H = IV[7] | 0;
    }
    get() {
        const { A, B, C, D, E, F, G, H } = this;
        return [A, B, C, D, E, F, G, H];
    }
    // prettier-ignore
    set(A, B, C, D, E, F, G, H) {
        this.A = A | 0;
        this.B = B | 0;
        this.C = C | 0;
        this.D = D | 0;
        this.E = E | 0;
        this.F = F | 0;
        this.G = G | 0;
        this.H = H | 0;
    }
    process(view, offset) {
        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array
        for (let i = 0; i < 16; i++, offset += 4)
            SHA256_W[i] = view.getUint32(offset, false);
        for (let i = 16; i < 64; i++) {
            const W15 = SHA256_W[i - 15];
            const W2 = SHA256_W[i - 2];
            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);
            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);
            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;
        }
        // Compression function main loop, 64 rounds
        let { A, B, C, D, E, F, G, H } = this;
        for (let i = 0; i < 64; i++) {
            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);
            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;
            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);
            const T2 = (sigma0 + Maj(A, B, C)) | 0;
            H = G;
            G = F;
            F = E;
            E = (D + T1) | 0;
            D = C;
            C = B;
            B = A;
            A = (T1 + T2) | 0;
        }
        // Add the compressed chunk to the current hash value
        A = (A + this.A) | 0;
        B = (B + this.B) | 0;
        C = (C + this.C) | 0;
        D = (D + this.D) | 0;
        E = (E + this.E) | 0;
        F = (F + this.F) | 0;
        G = (G + this.G) | 0;
        H = (H + this.H) | 0;
        this.set(A, B, C, D, E, F, G, H);
    }
    roundClean() {
        SHA256_W.fill(0);
    }
    destroy() {
        this.set(0, 0, 0, 0, 0, 0, 0, 0);
        this.buffer.fill(0);
    }
}
// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf
class SHA224 extends SHA256 {
    constructor() {
        super();
        this.A = 0xc1059ed8 | 0;
        this.B = 0x367cd507 | 0;
        this.C = 0x3070dd17 | 0;
        this.D = 0xf70e5939 | 0;
        this.E = 0xffc00b31 | 0;
        this.F = 0x68581511 | 0;
        this.G = 0x64f98fa7 | 0;
        this.H = 0xbefa4fa4 | 0;
        this.outputLen = 28;
    }
}
/**
 * SHA2-256 hash function
 * @param message - data that would be hashed
 */
exports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());
exports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());
//# sourceMappingURL=sha256.js.map

/***/ }),

/***/ 15404:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;
const _assert_js_1 = __nccwpck_require__(13040);
const _u64_js_1 = __nccwpck_require__(97155);
const utils_js_1 = __nccwpck_require__(26161);
// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.
// It's called a sponge function.
// Various per round constants calculations
const [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];
const _0n = /* @__PURE__ */ BigInt(0);
const _1n = /* @__PURE__ */ BigInt(1);
const _2n = /* @__PURE__ */ BigInt(2);
const _7n = /* @__PURE__ */ BigInt(7);
const _256n = /* @__PURE__ */ BigInt(256);
const _0x71n = /* @__PURE__ */ BigInt(0x71);
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
    // Pi
    [x, y] = [y, (2 * x + 3 * y) % 5];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);
    // Iota
    let t = _0n;
    for (let j = 0; j < 7; j++) {
        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;
        if (R & _2n)
            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);
    }
    _SHA3_IOTA.push(t);
}
const [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));
const rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));
// Same as keccakf1600, but allows to skip some rounds
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for (let round = 24 - rounds; round < 24; round++) {
        // Theta θ
        for (let x = 0; x < 10; x++)
            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for (let x = 0; x < 10; x += 2) {
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for (let y = 0; y < 50; y += 10) {
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (ρ) and Pi (π)
        let curH = s[2];
        let curL = s[3];
        for (let t = 0; t < 24; t++) {
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (χ)
        for (let y = 0; y < 50; y += 10) {
            for (let x = 0; x < 10; x++)
                B[x] = s[y + x];
            for (let x = 0; x < 10; x++)
                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (ι)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    B.fill(0);
}
exports.keccakP = keccakP;
class Keccak extends utils_js_1.Hash {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
        super();
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        // Can be passed from user as dkLen
        (0, _assert_js_1.number)(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        if (0 >= this.blockLen || this.blockLen >= 200)
            throw new Error('Sha3 supports only keccak-f1600 function');
        this.state = new Uint8Array(200);
        this.state32 = (0, utils_js_1.u32)(this.state);
    }
    keccak() {
        keccakP(this.state32, this.rounds);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        (0, _assert_js_1.exists)(this);
        const { blockLen, state } = this;
        data = (0, utils_js_1.toBytes)(data);
        const len = data.length;
        for (let pos = 0; pos < len;) {
            const take = Math.min(blockLen - this.pos, len - pos);
            for (let i = 0; i < take; i++)
                state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen)
                this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished)
            return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)
            this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        (0, _assert_js_1.exists)(this, false);
        (0, _assert_js_1.bytes)(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for (let pos = 0, len = out.length; pos < len;) {
            if (this.posOut >= blockLen)
                this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF)
            throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        (0, _assert_js_1.number)(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        (0, _assert_js_1.output)(out, this);
        if (this.finished)
            throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        this.state.fill(0);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
exports.Keccak = Keccak;
const gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));
exports.sha3_224 = gen(0x06, 144, 224 / 8);
/**
 * SHA3-256 hash function
 * @param message - that would be hashed
 */
exports.sha3_256 = gen(0x06, 136, 256 / 8);
exports.sha3_384 = gen(0x06, 104, 384 / 8);
exports.sha3_512 = gen(0x06, 72, 512 / 8);
exports.keccak_224 = gen(0x01, 144, 224 / 8);
/**
 * keccak-256 hash function. Different from SHA3-256.
 * @param message - that would be hashed
 */
exports.keccak_256 = gen(0x01, 136, 256 / 8);
exports.keccak_384 = gen(0x01, 104, 384 / 8);
exports.keccak_512 = gen(0x01, 72, 512 / 8);
const genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
exports.shake128 = genShake(0x1f, 168, 128 / 8);
exports.shake256 = genShake(0x1f, 136, 256 / 8);
//# sourceMappingURL=sha3.js.map

/***/ }),

/***/ 35251:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;
const _sha2_js_1 = __nccwpck_require__(64919);
const _u64_js_1 = __nccwpck_require__(97155);
const utils_js_1 = __nccwpck_require__(26161);
// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):
// prettier-ignore
const [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js_1.default.split([
    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',
    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',
    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',
    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',
    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',
    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',
    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',
    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',
    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',
    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',
    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',
    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',
    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',
    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',
    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',
    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',
    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',
    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',
    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',
    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'
].map(n => BigInt(n))))();
// Temporary buffer, not used to store anything between runs
const SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);
const SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);
class SHA512 extends _sha2_js_1.SHA2 {
    constructor() {
        super(128, 64, 16, false);
        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.
        // Also looks cleaner and easier to verify with spec.
        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x6a09e667 | 0;
        this.Al = 0xf3bcc908 | 0;
        this.Bh = 0xbb67ae85 | 0;
        this.Bl = 0x84caa73b | 0;
        this.Ch = 0x3c6ef372 | 0;
        this.Cl = 0xfe94f82b | 0;
        this.Dh = 0xa54ff53a | 0;
        this.Dl = 0x5f1d36f1 | 0;
        this.Eh = 0x510e527f | 0;
        this.El = 0xade682d1 | 0;
        this.Fh = 0x9b05688c | 0;
        this.Fl = 0x2b3e6c1f | 0;
        this.Gh = 0x1f83d9ab | 0;
        this.Gl = 0xfb41bd6b | 0;
        this.Hh = 0x5be0cd19 | 0;
        this.Hl = 0x137e2179 | 0;
    }
    // prettier-ignore
    get() {
        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];
    }
    // prettier-ignore
    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {
        this.Ah = Ah | 0;
        this.Al = Al | 0;
        this.Bh = Bh | 0;
        this.Bl = Bl | 0;
        this.Ch = Ch | 0;
        this.Cl = Cl | 0;
        this.Dh = Dh | 0;
        this.Dl = Dl | 0;
        this.Eh = Eh | 0;
        this.El = El | 0;
        this.Fh = Fh | 0;
        this.Fl = Fl | 0;
        this.Gh = Gh | 0;
        this.Gl = Gl | 0;
        this.Hh = Hh | 0;
        this.Hl = Hl | 0;
    }
    process(view, offset) {
        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array
        for (let i = 0; i < 16; i++, offset += 4) {
            SHA512_W_H[i] = view.getUint32(offset);
            SHA512_W_L[i] = view.getUint32((offset += 4));
        }
        for (let i = 16; i < 80; i++) {
            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)
            const W15h = SHA512_W_H[i - 15] | 0;
            const W15l = SHA512_W_L[i - 15] | 0;
            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);
            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);
            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)
            const W2h = SHA512_W_H[i - 2] | 0;
            const W2l = SHA512_W_L[i - 2] | 0;
            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);
            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);
            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];
            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);
            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);
            SHA512_W_H[i] = SUMh | 0;
            SHA512_W_L[i] = SUMl | 0;
        }
        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;
        // Compression function main loop, 80 rounds
        for (let i = 0; i < 80; i++) {
            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)
            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);
            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);
            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;
            const CHIh = (Eh & Fh) ^ (~Eh & Gh);
            const CHIl = (El & Fl) ^ (~El & Gl);
            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]
            // prettier-ignore
            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);
            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);
            const T1l = T1ll | 0;
            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)
            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);
            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);
            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);
            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);
            Hh = Gh | 0;
            Hl = Gl | 0;
            Gh = Fh | 0;
            Gl = Fl | 0;
            Fh = Eh | 0;
            Fl = El | 0;
            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));
            Dh = Ch | 0;
            Dl = Cl | 0;
            Ch = Bh | 0;
            Cl = Bl | 0;
            Bh = Ah | 0;
            Bl = Al | 0;
            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);
            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);
            Al = All | 0;
        }
        // Add the compressed chunk to the current hash value
        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));
        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));
        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));
        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));
        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));
        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));
        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));
        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));
        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);
    }
    roundClean() {
        SHA512_W_H.fill(0);
        SHA512_W_L.fill(0);
    }
    destroy() {
        this.buffer.fill(0);
        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    }
}
exports.SHA512 = SHA512;
class SHA512_224 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x8c3d37c8 | 0;
        this.Al = 0x19544da2 | 0;
        this.Bh = 0x73e19966 | 0;
        this.Bl = 0x89dcd4d6 | 0;
        this.Ch = 0x1dfab7ae | 0;
        this.Cl = 0x32ff9c82 | 0;
        this.Dh = 0x679dd514 | 0;
        this.Dl = 0x582f9fcf | 0;
        this.Eh = 0x0f6d2b69 | 0;
        this.El = 0x7bd44da8 | 0;
        this.Fh = 0x77e36f73 | 0;
        this.Fl = 0x04c48942 | 0;
        this.Gh = 0x3f9d85a8 | 0;
        this.Gl = 0x6a1d36c8 | 0;
        this.Hh = 0x1112e6ad | 0;
        this.Hl = 0x91d692a1 | 0;
        this.outputLen = 28;
    }
}
class SHA512_256 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0x22312194 | 0;
        this.Al = 0xfc2bf72c | 0;
        this.Bh = 0x9f555fa3 | 0;
        this.Bl = 0xc84c64c2 | 0;
        this.Ch = 0x2393b86b | 0;
        this.Cl = 0x6f53b151 | 0;
        this.Dh = 0x96387719 | 0;
        this.Dl = 0x5940eabd | 0;
        this.Eh = 0x96283ee2 | 0;
        this.El = 0xa88effe3 | 0;
        this.Fh = 0xbe5e1e25 | 0;
        this.Fl = 0x53863992 | 0;
        this.Gh = 0x2b0199fc | 0;
        this.Gl = 0x2c85b8aa | 0;
        this.Hh = 0x0eb72ddc | 0;
        this.Hl = 0x81c52ca2 | 0;
        this.outputLen = 32;
    }
}
class SHA384 extends SHA512 {
    constructor() {
        super();
        // h -- high 32 bits, l -- low 32 bits
        this.Ah = 0xcbbb9d5d | 0;
        this.Al = 0xc1059ed8 | 0;
        this.Bh = 0x629a292a | 0;
        this.Bl = 0x367cd507 | 0;
        this.Ch = 0x9159015a | 0;
        this.Cl = 0x3070dd17 | 0;
        this.Dh = 0x152fecd8 | 0;
        this.Dl = 0xf70e5939 | 0;
        this.Eh = 0x67332667 | 0;
        this.El = 0xffc00b31 | 0;
        this.Fh = 0x8eb44a87 | 0;
        this.Fl = 0x68581511 | 0;
        this.Gh = 0xdb0c2e0d | 0;
        this.Gl = 0x64f98fa7 | 0;
        this.Hh = 0x47b5481d | 0;
        this.Hl = 0xbefa4fa4 | 0;
        this.outputLen = 48;
    }
}
exports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());
exports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());
exports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());
exports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());
//# sourceMappingURL=sha512.js.map

/***/ }),

/***/ 26161:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;
// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// node.js versions earlier than v19 don't declare it in global scope.
// For node.js, package.json#exports field mapping rewrites import
// from `crypto` to `cryptoNode`, which imports native module.
// Makes the utils un-importable in browsers without a bundler.
// Once node.js 18 is deprecated, we can just drop the import.
const crypto_1 = __nccwpck_require__(7843);
const u8a = (a) => a instanceof Uint8Array;
// Cast array to different type
const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
exports.u8 = u8;
const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
exports.u32 = u32;
// Cast array to view
const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
exports.createView = createView;
// The rotate right (circular right shift) operation for uint32
const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);
exports.rotr = rotr;
// big-endian hardware is rare. Just in case someone still decides to run hashes:
// early-throw an error because we don't support BE yet.
exports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;
if (!exports.isLE)
    throw new Error('Non little-endian hardware is not supported');
const hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));
/**
 * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'
 */
function bytesToHex(bytes) {
    if (!u8a(bytes))
        throw new Error('Uint8Array expected');
    // pre-caching improves the speed 6x
    let hex = '';
    for (let i = 0; i < bytes.length; i++) {
        hex += hexes[bytes[i]];
    }
    return hex;
}
exports.bytesToHex = bytesToHex;
/**
 * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])
 */
function hexToBytes(hex) {
    if (typeof hex !== 'string')
        throw new Error('hex string expected, got ' + typeof hex);
    const len = hex.length;
    if (len % 2)
        throw new Error('padded hex string expected, got unpadded hex of length ' + len);
    const array = new Uint8Array(len / 2);
    for (let i = 0; i < array.length; i++) {
        const j = i * 2;
        const hexByte = hex.slice(j, j + 2);
        const byte = Number.parseInt(hexByte, 16);
        if (Number.isNaN(byte) || byte < 0)
            throw new Error('Invalid byte sequence');
        array[i] = byte;
    }
    return array;
}
exports.hexToBytes = hexToBytes;
// There is no setImmediate in browser and setTimeout is slow.
// call of async fn will return Promise, which will be fullfiled only on
// next scheduler queue processing step and this is exactly what we need.
const nextTick = async () => { };
exports.nextTick = nextTick;
// Returns control to thread each 'tick' ms to avoid blocking
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for (let i = 0; i < iters; i++) {
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick)
            continue;
        await (0, exports.nextTick)();
        ts += diff;
    }
}
exports.asyncLoop = asyncLoop;
/**
 * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])
 */
function utf8ToBytes(str) {
    if (typeof str !== 'string')
        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
exports.utf8ToBytes = utf8ToBytes;
/**
 * Normalizes (non-hex) string or Uint8Array to Uint8Array.
 * Warning: when Uint8Array is passed, it would NOT get copied.
 * Keep in mind for future mutable operations.
 */
function toBytes(data) {
    if (typeof data === 'string')
        data = utf8ToBytes(data);
    if (!u8a(data))
        throw new Error(`expected Uint8Array, got ${typeof data}`);
    return data;
}
exports.toBytes = toBytes;
/**
 * Copies several Uint8Arrays into one.
 */
function concatBytes(...arrays) {
    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));
    let pad = 0; // walk through each item, ensure they have proper type
    arrays.forEach((a) => {
        if (!u8a(a))
            throw new Error('Uint8Array expected');
        r.set(a, pad);
        pad += a.length;
    });
    return r;
}
exports.concatBytes = concatBytes;
// For runtime check if class implements interface
class Hash {
    // Safe version that clones internal state
    clone() {
        return this._cloneInto();
    }
}
exports.Hash = Hash;
const toStr = {}.toString;
function checkOpts(defaults, opts) {
    if (opts !== undefined && toStr.call(opts) !== '[object Object]')
        throw new Error('Options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
exports.checkOpts = checkOpts;
function wrapConstructor(hashCons) {
    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
    const tmp = hashCons();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = () => hashCons();
    return hashC;
}
exports.wrapConstructor = wrapConstructor;
function wrapConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
exports.wrapConstructorWithOpts = wrapConstructorWithOpts;
function wrapXOFConstructorWithOpts(hashCons) {
    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts) => hashCons(opts);
    return hashC;
}
exports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;
/**
 * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.
 */
function randomBytes(bytesLength = 32) {
    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {
        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));
    }
    throw new Error('crypto.getRandomValues must be defined');
}
exports.randomBytes = randomBytes;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 41371:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 32305:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 29723:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 55815:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 42914:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 38946:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 5510:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 90862:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 82125:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 56230:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 15308:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 19684:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 91355:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 11553:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 29735:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 80054:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 47255:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 17932:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 12945:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 61828:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 10940:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 9911:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, Symbol, Reflect, Promise, SuppressedError */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
var __addDisposableResource;
var __disposeResources;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.unshift(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.unshift(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    __addDisposableResource = function (env, value, async) {
        if (value !== null && value !== void 0) {
            if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
            var dispose;
            if (async) {
                if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
                dispose = value[Symbol.asyncDispose];
            }
            if (dispose === void 0) {
                if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
                dispose = value[Symbol.dispose];
            }
            if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
            env.stack.push({ value: value, dispose: dispose, async: async });
        }
        else if (async) {
            env.stack.push({ async: true });
        }
        return value;
    };

    var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    __disposeResources = function (env) {
        function fail(e) {
            env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
            env.hasError = true;
        }
        function next() {
            while (env.stack.length) {
                var rec = env.stack.pop();
                try {
                    var result = rec.dispose && rec.dispose.call(rec.value);
                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
                }
                catch (e) {
                    fail(e);
                }
            }
            if (env.hasError) throw env.error;
        }
        return next();
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    exporter("__addDisposableResource", __addDisposableResource);
    exporter("__disposeResources", __disposeResources);
});


/***/ }),

/***/ 89891:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64urlnopad = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;
// Utilities
/**
 * @__NO_SIDE_EFFECTS__
 */
function assertNumber(n) {
    if (!Number.isSafeInteger(n))
        throw new Error(`Wrong integer: ${n}`);
}
exports.assertNumber = assertNumber;
/**
 * @__NO_SIDE_EFFECTS__
 */
function chain(...args) {
    // Wrap call in closure so JIT can inline calls
    const wrap = (a, b) => (c) => a(b(c));
    // Construct chain of args[-1].encode(args[-2].encode([...]))
    const encode = Array.from(args)
        .reverse()
        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);
    // Construct chain of args[0].decode(args[1].decode(...))
    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);
    return { encode, decode };
}
/**
 * Encodes integer radix representation to array of strings using alphabet and back
 * @__NO_SIDE_EFFECTS__
 */
function alphabet(alphabet) {
    return {
        encode: (digits) => {
            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))
                throw new Error('alphabet.encode input should be an array of numbers');
            return digits.map((i) => {
                assertNumber(i);
                if (i < 0 || i >= alphabet.length)
                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);
                return alphabet[i];
            });
        },
        decode: (input) => {
            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))
                throw new Error('alphabet.decode input should be array of strings');
            return input.map((letter) => {
                if (typeof letter !== 'string')
                    throw new Error(`alphabet.decode: not string element=${letter}`);
                const index = alphabet.indexOf(letter);
                if (index === -1)
                    throw new Error(`Unknown letter: "${letter}". Allowed: ${alphabet}`);
                return index;
            });
        },
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function join(separator = '') {
    if (typeof separator !== 'string')
        throw new Error('join separator should be string');
    return {
        encode: (from) => {
            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))
                throw new Error('join.encode input should be array of strings');
            for (let i of from)
                if (typeof i !== 'string')
                    throw new Error(`join.encode: non-string input=${i}`);
            return from.join(separator);
        },
        decode: (to) => {
            if (typeof to !== 'string')
                throw new Error('join.decode input should be string');
            return to.split(separator);
        },
    };
}
/**
 * Pad strings array so it has integer number of bits
 * @__NO_SIDE_EFFECTS__
 */
function padding(bits, chr = '=') {
    assertNumber(bits);
    if (typeof chr !== 'string')
        throw new Error('padding chr should be string');
    return {
        encode(data) {
            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))
                throw new Error('padding.encode input should be array of strings');
            for (let i of data)
                if (typeof i !== 'string')
                    throw new Error(`padding.encode: non-string input=${i}`);
            while ((data.length * bits) % 8)
                data.push(chr);
            return data;
        },
        decode(input) {
            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))
                throw new Error('padding.encode input should be array of strings');
            for (let i of input)
                if (typeof i !== 'string')
                    throw new Error(`padding.decode: non-string input=${i}`);
            let end = input.length;
            if ((end * bits) % 8)
                throw new Error('Invalid padding: string should have whole number of bytes');
            for (; end > 0 && input[end - 1] === chr; end--) {
                if (!(((end - 1) * bits) % 8))
                    throw new Error('Invalid padding: string has too much padding');
            }
            return input.slice(0, end);
        },
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function normalize(fn) {
    if (typeof fn !== 'function')
        throw new Error('normalize fn should be function');
    return { encode: (from) => from, decode: (to) => fn(to) };
}
/**
 * Slow: O(n^2) time complexity
 * @__NO_SIDE_EFFECTS__
 */
function convertRadix(data, from, to) {
    // base 1 is impossible
    if (from < 2)
        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);
    if (to < 2)
        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);
    if (!Array.isArray(data))
        throw new Error('convertRadix: data should be array');
    if (!data.length)
        return [];
    let pos = 0;
    const res = [];
    const digits = Array.from(data);
    digits.forEach((d) => {
        assertNumber(d);
        if (d < 0 || d >= from)
            throw new Error(`Wrong integer: ${d}`);
    });
    while (true) {
        let carry = 0;
        let done = true;
        for (let i = pos; i < digits.length; i++) {
            const digit = digits[i];
            const digitBase = from * carry + digit;
            if (!Number.isSafeInteger(digitBase) ||
                (from * carry) / from !== carry ||
                digitBase - digit !== from * carry) {
                throw new Error('convertRadix: carry overflow');
            }
            carry = digitBase % to;
            const rounded = Math.floor(digitBase / to);
            digits[i] = rounded;
            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)
                throw new Error('convertRadix: carry overflow');
            if (!done)
                continue;
            else if (!rounded)
                pos = i;
            else
                done = false;
        }
        res.push(carry);
        if (done)
            break;
    }
    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)
        res.push(0);
    return res.reverse();
}
const gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => (!b ? a : gcd(b, a % b));
const radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));
/**
 * Implemented with numbers, because BigInt is 5x slower
 * @__NO_SIDE_EFFECTS__
 */
function convertRadix2(data, from, to, padding) {
    if (!Array.isArray(data))
        throw new Error('convertRadix2: data should be array');
    if (from <= 0 || from > 32)
        throw new Error(`convertRadix2: wrong from=${from}`);
    if (to <= 0 || to > 32)
        throw new Error(`convertRadix2: wrong to=${to}`);
    if (radix2carry(from, to) > 32) {
        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
    }
    let carry = 0;
    let pos = 0; // bitwise position in current element
    const mask = 2 ** to - 1;
    const res = [];
    for (const n of data) {
        assertNumber(n);
        if (n >= 2 ** from)
            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
        carry = (carry << from) | n;
        if (pos + from > 32)
            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
        pos += from;
        for (; pos >= to; pos -= to)
            res.push(((carry >> (pos - to)) & mask) >>> 0);
        carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow
    }
    carry = (carry << (to - pos)) & mask;
    if (!padding && pos >= from)
        throw new Error('Excess padding');
    if (!padding && carry)
        throw new Error(`Non-zero padding: ${carry}`);
    if (padding && pos > 0)
        res.push(carry >>> 0);
    return res;
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function radix(num) {
    assertNumber(num);
    return {
        encode: (bytes) => {
            if (!(bytes instanceof Uint8Array))
                throw new Error('radix.encode input should be Uint8Array');
            return convertRadix(Array.from(bytes), 2 ** 8, num);
        },
        decode: (digits) => {
            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))
                throw new Error('radix.decode input should be array of strings');
            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));
        },
    };
}
/**
 * If both bases are power of same number (like `2**8 <-> 2**64`),
 * there is a linear algorithm. For now we have implementation for power-of-two bases only.
 * @__NO_SIDE_EFFECTS__
 */
function radix2(bits, revPadding = false) {
    assertNumber(bits);
    if (bits <= 0 || bits > 32)
        throw new Error('radix2: bits should be in (0..32]');
    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)
        throw new Error('radix2: carry overflow');
    return {
        encode: (bytes) => {
            if (!(bytes instanceof Uint8Array))
                throw new Error('radix2.encode input should be Uint8Array');
            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
        },
        decode: (digits) => {
            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))
                throw new Error('radix2.decode input should be array of strings');
            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
        },
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function unsafeWrapper(fn) {
    if (typeof fn !== 'function')
        throw new Error('unsafeWrapper fn should be function');
    return function (...args) {
        try {
            return fn.apply(null, args);
        }
        catch (e) { }
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function checksum(len, fn) {
    assertNumber(len);
    if (typeof fn !== 'function')
        throw new Error('checksum fn should be function');
    return {
        encode(data) {
            if (!(data instanceof Uint8Array))
                throw new Error('checksum.encode: input should be Uint8Array');
            const checksum = fn(data).slice(0, len);
            const res = new Uint8Array(data.length + len);
            res.set(data);
            res.set(checksum, data.length);
            return res;
        },
        decode(data) {
            if (!(data instanceof Uint8Array))
                throw new Error('checksum.decode: input should be Uint8Array');
            const payload = data.slice(0, -len);
            const newChecksum = fn(payload).slice(0, len);
            const oldChecksum = data.slice(-len);
            for (let i = 0; i < len; i++)
                if (newChecksum[i] !== oldChecksum[i])
                    throw new Error('Invalid checksum');
            return payload;
        },
    };
}
exports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };
// RFC 4648 aka RFC 3548
// ---------------------
exports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
exports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
exports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
exports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
exports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
exports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));
exports.base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));
// base58 code
// -----------
const genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));
exports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
exports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
exports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.
// Block encoding significantly reduces quadratic complexity of base58.
// Data len (index) -> encoded block len
const XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];
exports.base58xmr = {
    encode(data) {
        let res = '';
        for (let i = 0; i < data.length; i += 8) {
            const block = data.subarray(i, i + 8);
            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
        }
        return res;
    },
    decode(str) {
        let res = [];
        for (let i = 0; i < str.length; i += 11) {
            const slice = str.slice(i, i + 11);
            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
            const block = exports.base58.decode(slice);
            for (let j = 0; j < block.length - blockLen; j++) {
                if (block[j] !== 0)
                    throw new Error('base58xmr: wrong padding');
            }
            res = res.concat(Array.from(block.slice(block.length - blockLen)));
        }
        return Uint8Array.from(res);
    },
};
const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);
exports.base58check = base58check;
const BECH_ALPHABET = /* @__PURE__ */ chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];
/**
 * @__NO_SIDE_EFFECTS__
 */
function bech32Polymod(pre) {
    const b = pre >> 25;
    let chk = (pre & 0x1ffffff) << 5;
    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
        if (((b >> i) & 1) === 1)
            chk ^= POLYMOD_GENERATORS[i];
    }
    return chk;
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function bechChecksum(prefix, words, encodingConst = 1) {
    const len = prefix.length;
    let chk = 1;
    for (let i = 0; i < len; i++) {
        const c = prefix.charCodeAt(i);
        if (c < 33 || c > 126)
            throw new Error(`Invalid prefix (${prefix})`);
        chk = bech32Polymod(chk) ^ (c >> 5);
    }
    chk = bech32Polymod(chk);
    for (let i = 0; i < len; i++)
        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);
    for (let v of words)
        chk = bech32Polymod(chk) ^ v;
    for (let i = 0; i < 6; i++)
        chk = bech32Polymod(chk);
    chk ^= encodingConst;
    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));
}
/**
 * @__NO_SIDE_EFFECTS__
 */
function genBech32(encoding) {
    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;
    const _words = radix2(5);
    const fromWords = _words.decode;
    const toWords = _words.encode;
    const fromWordsUnsafe = unsafeWrapper(fromWords);
    function encode(prefix, words, limit = 90) {
        if (typeof prefix !== 'string')
            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);
        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))
            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);
        const actualLength = prefix.length + 7 + words.length;
        if (limit !== false && actualLength > limit)
            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
        const lowered = prefix.toLowerCase();
        const sum = bechChecksum(lowered, words, ENCODING_CONST);
        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;
    }
    function decode(str, limit = 90) {
        if (typeof str !== 'string')
            throw new Error(`bech32.decode input should be string, not ${typeof str}`);
        if (str.length < 8 || (limit !== false && str.length > limit))
            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);
        // don't allow mixed case
        const lowered = str.toLowerCase();
        if (str !== lowered && str !== str.toUpperCase())
            throw new Error(`String must be lowercase or uppercase`);
        str = lowered;
        const sepIndex = str.lastIndexOf('1');
        if (sepIndex === 0 || sepIndex === -1)
            throw new Error(`Letter "1" must be present between prefix and data only`);
        const prefix = str.slice(0, sepIndex);
        const _words = str.slice(sepIndex + 1);
        if (_words.length < 6)
            throw new Error('Data must be at least 6 characters long');
        const words = BECH_ALPHABET.decode(_words).slice(0, -6);
        const sum = bechChecksum(prefix, words, ENCODING_CONST);
        if (!_words.endsWith(sum))
            throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
        return { prefix, words };
    }
    const decodeUnsafe = unsafeWrapper(decode);
    function decodeToBytes(str) {
        const { prefix, words } = decode(str, false);
        return { prefix, words, bytes: fromWords(words) };
    }
    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };
}
exports.bech32 = genBech32('bech32');
exports.bech32m = genBech32('bech32m');
exports.utf8 = {
    encode: (data) => new TextDecoder().decode(data),
    decode: (str) => new TextEncoder().encode(str),
};
exports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {
    if (typeof s !== 'string' || s.length % 2)
        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
    return s.toLowerCase();
}));
// prettier-ignore
const CODERS = {
    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr
};
const coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';
const bytesToString = (type, bytes) => {
    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (!(bytes instanceof Uint8Array))
        throw new TypeError('bytesToString() expects Uint8Array');
    return CODERS[type].encode(bytes);
};
exports.bytesToString = bytesToString;
exports.str = exports.bytesToString; // as in python, but for bytes only
const stringToBytes = (type, str) => {
    if (!CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (typeof str !== 'string')
        throw new TypeError('stringToBytes() expects string');
    return CODERS[type].decode(str);
};
exports.stringToBytes = stringToBytes;
exports.bytes = exports.stringToBytes;


/***/ }),

/***/ 6641:
/***/ (function(module, __unused_webpack_exports, __nccwpck_require__) {

/* module decorator */ module = __nccwpck_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__nccwpck_require__(14300).Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this._strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // '0' - '9'
    if (c >= 48 && c <= 57) {
      return c - 48;
    // 'A' - 'F'
    } else if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    } else {
      assert(false, 'Invalid character in ' + string);
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this._strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var b = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        b = c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }
      assert(c >= 0 && b < mul, 'Invalid character');
      r += b;
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this._strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  function move (dest, src) {
    dest.words = src.words;
    dest.length = src.length;
    dest.negative = src.negative;
    dest.red = src.red;
  }

  BN.prototype._move = function _move (dest) {
    move(dest, this);
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype._strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  // Check Symbol.for because not everywhere where Symbol defined
  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
    try {
      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
      BN.prototype.inspect = inspect;
    }
  } else {
    BN.prototype.inspect = inspect;
  }

  function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  }

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modrn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16, 2);
  };

  if (Buffer) {
    BN.prototype.toBuffer = function toBuffer (endian, length) {
      return this.toArrayLike(Buffer, endian, length);
    };
  }

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  var allocate = function allocate (ArrayType, size) {
    if (ArrayType.allocUnsafe) {
      return ArrayType.allocUnsafe(size);
    }
    return new ArrayType(size);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    this._strip();

    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    var res = allocate(ArrayType, reqLength);
    var postfix = endian === 'le' ? 'LE' : 'BE';
    this['_toArrayLike' + postfix](res, byteLength);
    return res;
  };

  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
    var position = 0;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position++] = word & 0xff;
      if (position < res.length) {
        res[position++] = (word >> 8) & 0xff;
      }
      if (position < res.length) {
        res[position++] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position < res.length) {
          res[position++] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position < res.length) {
      res[position++] = carry;

      while (position < res.length) {
        res[position++] = 0;
      }
    }
  };

  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
    var position = res.length - 1;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position--] = word & 0xff;
      if (position >= 0) {
        res[position--] = (word >> 8) & 0xff;
      }
      if (position >= 0) {
        res[position--] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position >= 0) {
          res[position--] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position >= 0) {
      res[position--] = carry;

      while (position >= 0) {
        res[position--] = 0;
      }
    }
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] >>> wbit) & 0x01;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this._strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this._strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this._strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this._strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this._strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this._strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out._strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out._strip();
  }

  function jumboMulTo (self, num, out) {
    // Temporary disable, see https://github.com/indutny/bn.js/issues/211
    // var fftm = new FFTM();
    // return fftm.mulp(self, num, out);
    return bigMulTo(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out._strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this._strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this._strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this._strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) <= num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this._strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this._strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this._strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q._strip();
    }
    a._strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modrn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modrn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modrn = function modrn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return isNegNum ? -acc : acc;
  };

  // WARNING: DEPRECATED
  BN.prototype.modn = function modn (num) {
    return this.modrn(num);
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    this._strip();
    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this._strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is a BN v4 instance
        r.strip();
      } else {
        // r is a BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);

    move(a, a.umod(this.m)._forceRed(this));
    return a;
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),

/***/ 11848:
/***/ ((module) => {

"use strict";


var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if (true) {
  module.exports = EventEmitter;
}


/***/ }),

/***/ 1752:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.interval = exports.iif = exports.generate = exports.fromEventPattern = exports.fromEvent = exports.from = exports.forkJoin = exports.empty = exports.defer = exports.connectable = exports.concat = exports.combineLatest = exports.bindNodeCallback = exports.bindCallback = exports.UnsubscriptionError = exports.TimeoutError = exports.SequenceError = exports.ObjectUnsubscribedError = exports.NotFoundError = exports.EmptyError = exports.ArgumentOutOfRangeError = exports.firstValueFrom = exports.lastValueFrom = exports.isObservable = exports.identity = exports.noop = exports.pipe = exports.NotificationKind = exports.Notification = exports.Subscriber = exports.Subscription = exports.Scheduler = exports.VirtualAction = exports.VirtualTimeScheduler = exports.animationFrameScheduler = exports.animationFrame = exports.queueScheduler = exports.queue = exports.asyncScheduler = exports.async = exports.asapScheduler = exports.asap = exports.AsyncSubject = exports.ReplaySubject = exports.BehaviorSubject = exports.Subject = exports.animationFrames = exports.observable = exports.ConnectableObservable = exports.Observable = void 0;
exports.filter = exports.expand = exports.exhaustMap = exports.exhaustAll = exports.exhaust = exports.every = exports.endWith = exports.elementAt = exports.distinctUntilKeyChanged = exports.distinctUntilChanged = exports.distinct = exports.dematerialize = exports.delayWhen = exports.delay = exports.defaultIfEmpty = exports.debounceTime = exports.debounce = exports.count = exports.connect = exports.concatWith = exports.concatMapTo = exports.concatMap = exports.concatAll = exports.combineLatestWith = exports.combineLatestAll = exports.combineAll = exports.catchError = exports.bufferWhen = exports.bufferToggle = exports.bufferTime = exports.bufferCount = exports.buffer = exports.auditTime = exports.audit = exports.config = exports.NEVER = exports.EMPTY = exports.scheduled = exports.zip = exports.using = exports.timer = exports.throwError = exports.range = exports.race = exports.partition = exports.pairs = exports.onErrorResumeNext = exports.of = exports.never = exports.merge = void 0;
exports.switchMap = exports.switchAll = exports.subscribeOn = exports.startWith = exports.skipWhile = exports.skipUntil = exports.skipLast = exports.skip = exports.single = exports.shareReplay = exports.share = exports.sequenceEqual = exports.scan = exports.sampleTime = exports.sample = exports.refCount = exports.retryWhen = exports.retry = exports.repeatWhen = exports.repeat = exports.reduce = exports.raceWith = exports.publishReplay = exports.publishLast = exports.publishBehavior = exports.publish = exports.pluck = exports.pairwise = exports.onErrorResumeNextWith = exports.observeOn = exports.multicast = exports.min = exports.mergeWith = exports.mergeScan = exports.mergeMapTo = exports.mergeMap = exports.flatMap = exports.mergeAll = exports.max = exports.materialize = exports.mapTo = exports.map = exports.last = exports.isEmpty = exports.ignoreElements = exports.groupBy = exports.first = exports.findIndex = exports.find = exports.finalize = void 0;
exports.zipWith = exports.zipAll = exports.withLatestFrom = exports.windowWhen = exports.windowToggle = exports.windowTime = exports.windowCount = exports.window = exports.toArray = exports.timestamp = exports.timeoutWith = exports.timeout = exports.timeInterval = exports.throwIfEmpty = exports.throttleTime = exports.throttle = exports.tap = exports.takeWhile = exports.takeUntil = exports.takeLast = exports.take = exports.switchScan = exports.switchMapTo = void 0;
var Observable_1 = __nccwpck_require__(53014);
Object.defineProperty(exports, "Observable", ({ enumerable: true, get: function () { return Observable_1.Observable; } }));
var ConnectableObservable_1 = __nccwpck_require__(30420);
Object.defineProperty(exports, "ConnectableObservable", ({ enumerable: true, get: function () { return ConnectableObservable_1.ConnectableObservable; } }));
var observable_1 = __nccwpck_require__(17186);
Object.defineProperty(exports, "observable", ({ enumerable: true, get: function () { return observable_1.observable; } }));
var animationFrames_1 = __nccwpck_require__(38197);
Object.defineProperty(exports, "animationFrames", ({ enumerable: true, get: function () { return animationFrames_1.animationFrames; } }));
var Subject_1 = __nccwpck_require__(49944);
Object.defineProperty(exports, "Subject", ({ enumerable: true, get: function () { return Subject_1.Subject; } }));
var BehaviorSubject_1 = __nccwpck_require__(23473);
Object.defineProperty(exports, "BehaviorSubject", ({ enumerable: true, get: function () { return BehaviorSubject_1.BehaviorSubject; } }));
var ReplaySubject_1 = __nccwpck_require__(22351);
Object.defineProperty(exports, "ReplaySubject", ({ enumerable: true, get: function () { return ReplaySubject_1.ReplaySubject; } }));
var AsyncSubject_1 = __nccwpck_require__(9747);
Object.defineProperty(exports, "AsyncSubject", ({ enumerable: true, get: function () { return AsyncSubject_1.AsyncSubject; } }));
var asap_1 = __nccwpck_require__(43905);
Object.defineProperty(exports, "asap", ({ enumerable: true, get: function () { return asap_1.asap; } }));
Object.defineProperty(exports, "asapScheduler", ({ enumerable: true, get: function () { return asap_1.asapScheduler; } }));
var async_1 = __nccwpck_require__(76072);
Object.defineProperty(exports, "async", ({ enumerable: true, get: function () { return async_1.async; } }));
Object.defineProperty(exports, "asyncScheduler", ({ enumerable: true, get: function () { return async_1.asyncScheduler; } }));
var queue_1 = __nccwpck_require__(82059);
Object.defineProperty(exports, "queue", ({ enumerable: true, get: function () { return queue_1.queue; } }));
Object.defineProperty(exports, "queueScheduler", ({ enumerable: true, get: function () { return queue_1.queueScheduler; } }));
var animationFrame_1 = __nccwpck_require__(51359);
Object.defineProperty(exports, "animationFrame", ({ enumerable: true, get: function () { return animationFrame_1.animationFrame; } }));
Object.defineProperty(exports, "animationFrameScheduler", ({ enumerable: true, get: function () { return animationFrame_1.animationFrameScheduler; } }));
var VirtualTimeScheduler_1 = __nccwpck_require__(75348);
Object.defineProperty(exports, "VirtualTimeScheduler", ({ enumerable: true, get: function () { return VirtualTimeScheduler_1.VirtualTimeScheduler; } }));
Object.defineProperty(exports, "VirtualAction", ({ enumerable: true, get: function () { return VirtualTimeScheduler_1.VirtualAction; } }));
var Scheduler_1 = __nccwpck_require__(76243);
Object.defineProperty(exports, "Scheduler", ({ enumerable: true, get: function () { return Scheduler_1.Scheduler; } }));
var Subscription_1 = __nccwpck_require__(79548);
Object.defineProperty(exports, "Subscription", ({ enumerable: true, get: function () { return Subscription_1.Subscription; } }));
var Subscriber_1 = __nccwpck_require__(67121);
Object.defineProperty(exports, "Subscriber", ({ enumerable: true, get: function () { return Subscriber_1.Subscriber; } }));
var Notification_1 = __nccwpck_require__(12241);
Object.defineProperty(exports, "Notification", ({ enumerable: true, get: function () { return Notification_1.Notification; } }));
Object.defineProperty(exports, "NotificationKind", ({ enumerable: true, get: function () { return Notification_1.NotificationKind; } }));
var pipe_1 = __nccwpck_require__(49587);
Object.defineProperty(exports, "pipe", ({ enumerable: true, get: function () { return pipe_1.pipe; } }));
var noop_1 = __nccwpck_require__(11642);
Object.defineProperty(exports, "noop", ({ enumerable: true, get: function () { return noop_1.noop; } }));
var identity_1 = __nccwpck_require__(60283);
Object.defineProperty(exports, "identity", ({ enumerable: true, get: function () { return identity_1.identity; } }));
var isObservable_1 = __nccwpck_require__(72259);
Object.defineProperty(exports, "isObservable", ({ enumerable: true, get: function () { return isObservable_1.isObservable; } }));
var lastValueFrom_1 = __nccwpck_require__(49713);
Object.defineProperty(exports, "lastValueFrom", ({ enumerable: true, get: function () { return lastValueFrom_1.lastValueFrom; } }));
var firstValueFrom_1 = __nccwpck_require__(19369);
Object.defineProperty(exports, "firstValueFrom", ({ enumerable: true, get: function () { return firstValueFrom_1.firstValueFrom; } }));
var ArgumentOutOfRangeError_1 = __nccwpck_require__(49796);
Object.defineProperty(exports, "ArgumentOutOfRangeError", ({ enumerable: true, get: function () { return ArgumentOutOfRangeError_1.ArgumentOutOfRangeError; } }));
var EmptyError_1 = __nccwpck_require__(99391);
Object.defineProperty(exports, "EmptyError", ({ enumerable: true, get: function () { return EmptyError_1.EmptyError; } }));
var NotFoundError_1 = __nccwpck_require__(74431);
Object.defineProperty(exports, "NotFoundError", ({ enumerable: true, get: function () { return NotFoundError_1.NotFoundError; } }));
var ObjectUnsubscribedError_1 = __nccwpck_require__(95266);
Object.defineProperty(exports, "ObjectUnsubscribedError", ({ enumerable: true, get: function () { return ObjectUnsubscribedError_1.ObjectUnsubscribedError; } }));
var SequenceError_1 = __nccwpck_require__(49048);
Object.defineProperty(exports, "SequenceError", ({ enumerable: true, get: function () { return SequenceError_1.SequenceError; } }));
var timeout_1 = __nccwpck_require__(12051);
Object.defineProperty(exports, "TimeoutError", ({ enumerable: true, get: function () { return timeout_1.TimeoutError; } }));
var UnsubscriptionError_1 = __nccwpck_require__(56776);
Object.defineProperty(exports, "UnsubscriptionError", ({ enumerable: true, get: function () { return UnsubscriptionError_1.UnsubscriptionError; } }));
var bindCallback_1 = __nccwpck_require__(16949);
Object.defineProperty(exports, "bindCallback", ({ enumerable: true, get: function () { return bindCallback_1.bindCallback; } }));
var bindNodeCallback_1 = __nccwpck_require__(51150);
Object.defineProperty(exports, "bindNodeCallback", ({ enumerable: true, get: function () { return bindNodeCallback_1.bindNodeCallback; } }));
var combineLatest_1 = __nccwpck_require__(46843);
Object.defineProperty(exports, "combineLatest", ({ enumerable: true, get: function () { return combineLatest_1.combineLatest; } }));
var concat_1 = __nccwpck_require__(4675);
Object.defineProperty(exports, "concat", ({ enumerable: true, get: function () { return concat_1.concat; } }));
var connectable_1 = __nccwpck_require__(13152);
Object.defineProperty(exports, "connectable", ({ enumerable: true, get: function () { return connectable_1.connectable; } }));
var defer_1 = __nccwpck_require__(27672);
Object.defineProperty(exports, "defer", ({ enumerable: true, get: function () { return defer_1.defer; } }));
var empty_1 = __nccwpck_require__(70437);
Object.defineProperty(exports, "empty", ({ enumerable: true, get: function () { return empty_1.empty; } }));
var forkJoin_1 = __nccwpck_require__(47358);
Object.defineProperty(exports, "forkJoin", ({ enumerable: true, get: function () { return forkJoin_1.forkJoin; } }));
var from_1 = __nccwpck_require__(18309);
Object.defineProperty(exports, "from", ({ enumerable: true, get: function () { return from_1.from; } }));
var fromEvent_1 = __nccwpck_require__(93238);
Object.defineProperty(exports, "fromEvent", ({ enumerable: true, get: function () { return fromEvent_1.fromEvent; } }));
var fromEventPattern_1 = __nccwpck_require__(65680);
Object.defineProperty(exports, "fromEventPattern", ({ enumerable: true, get: function () { return fromEventPattern_1.fromEventPattern; } }));
var generate_1 = __nccwpck_require__(52668);
Object.defineProperty(exports, "generate", ({ enumerable: true, get: function () { return generate_1.generate; } }));
var iif_1 = __nccwpck_require__(26514);
Object.defineProperty(exports, "iif", ({ enumerable: true, get: function () { return iif_1.iif; } }));
var interval_1 = __nccwpck_require__(20029);
Object.defineProperty(exports, "interval", ({ enumerable: true, get: function () { return interval_1.interval; } }));
var merge_1 = __nccwpck_require__(75122);
Object.defineProperty(exports, "merge", ({ enumerable: true, get: function () { return merge_1.merge; } }));
var never_1 = __nccwpck_require__(6228);
Object.defineProperty(exports, "never", ({ enumerable: true, get: function () { return never_1.never; } }));
var of_1 = __nccwpck_require__(72163);
Object.defineProperty(exports, "of", ({ enumerable: true, get: function () { return of_1.of; } }));
var onErrorResumeNext_1 = __nccwpck_require__(16089);
Object.defineProperty(exports, "onErrorResumeNext", ({ enumerable: true, get: function () { return onErrorResumeNext_1.onErrorResumeNext; } }));
var pairs_1 = __nccwpck_require__(30505);
Object.defineProperty(exports, "pairs", ({ enumerable: true, get: function () { return pairs_1.pairs; } }));
var partition_1 = __nccwpck_require__(15506);
Object.defineProperty(exports, "partition", ({ enumerable: true, get: function () { return partition_1.partition; } }));
var race_1 = __nccwpck_require__(16940);
Object.defineProperty(exports, "race", ({ enumerable: true, get: function () { return race_1.race; } }));
var range_1 = __nccwpck_require__(88538);
Object.defineProperty(exports, "range", ({ enumerable: true, get: function () { return range_1.range; } }));
var throwError_1 = __nccwpck_require__(66381);
Object.defineProperty(exports, "throwError", ({ enumerable: true, get: function () { return throwError_1.throwError; } }));
var timer_1 = __nccwpck_require__(59757);
Object.defineProperty(exports, "timer", ({ enumerable: true, get: function () { return timer_1.timer; } }));
var using_1 = __nccwpck_require__(8445);
Object.defineProperty(exports, "using", ({ enumerable: true, get: function () { return using_1.using; } }));
var zip_1 = __nccwpck_require__(62504);
Object.defineProperty(exports, "zip", ({ enumerable: true, get: function () { return zip_1.zip; } }));
var scheduled_1 = __nccwpck_require__(6151);
Object.defineProperty(exports, "scheduled", ({ enumerable: true, get: function () { return scheduled_1.scheduled; } }));
var empty_2 = __nccwpck_require__(70437);
Object.defineProperty(exports, "EMPTY", ({ enumerable: true, get: function () { return empty_2.EMPTY; } }));
var never_2 = __nccwpck_require__(6228);
Object.defineProperty(exports, "NEVER", ({ enumerable: true, get: function () { return never_2.NEVER; } }));
__exportStar(__nccwpck_require__(36639), exports);
var config_1 = __nccwpck_require__(92233);
Object.defineProperty(exports, "config", ({ enumerable: true, get: function () { return config_1.config; } }));
var audit_1 = __nccwpck_require__(82704);
Object.defineProperty(exports, "audit", ({ enumerable: true, get: function () { return audit_1.audit; } }));
var auditTime_1 = __nccwpck_require__(18780);
Object.defineProperty(exports, "auditTime", ({ enumerable: true, get: function () { return auditTime_1.auditTime; } }));
var buffer_1 = __nccwpck_require__(34253);
Object.defineProperty(exports, "buffer", ({ enumerable: true, get: function () { return buffer_1.buffer; } }));
var bufferCount_1 = __nccwpck_require__(17253);
Object.defineProperty(exports, "bufferCount", ({ enumerable: true, get: function () { return bufferCount_1.bufferCount; } }));
var bufferTime_1 = __nccwpck_require__(73102);
Object.defineProperty(exports, "bufferTime", ({ enumerable: true, get: function () { return bufferTime_1.bufferTime; } }));
var bufferToggle_1 = __nccwpck_require__(83781);
Object.defineProperty(exports, "bufferToggle", ({ enumerable: true, get: function () { return bufferToggle_1.bufferToggle; } }));
var bufferWhen_1 = __nccwpck_require__(82855);
Object.defineProperty(exports, "bufferWhen", ({ enumerable: true, get: function () { return bufferWhen_1.bufferWhen; } }));
var catchError_1 = __nccwpck_require__(37765);
Object.defineProperty(exports, "catchError", ({ enumerable: true, get: function () { return catchError_1.catchError; } }));
var combineAll_1 = __nccwpck_require__(88817);
Object.defineProperty(exports, "combineAll", ({ enumerable: true, get: function () { return combineAll_1.combineAll; } }));
var combineLatestAll_1 = __nccwpck_require__(91063);
Object.defineProperty(exports, "combineLatestAll", ({ enumerable: true, get: function () { return combineLatestAll_1.combineLatestAll; } }));
var combineLatestWith_1 = __nccwpck_require__(19044);
Object.defineProperty(exports, "combineLatestWith", ({ enumerable: true, get: function () { return combineLatestWith_1.combineLatestWith; } }));
var concatAll_1 = __nccwpck_require__(88049);
Object.defineProperty(exports, "concatAll", ({ enumerable: true, get: function () { return concatAll_1.concatAll; } }));
var concatMap_1 = __nccwpck_require__(19130);
Object.defineProperty(exports, "concatMap", ({ enumerable: true, get: function () { return concatMap_1.concatMap; } }));
var concatMapTo_1 = __nccwpck_require__(61596);
Object.defineProperty(exports, "concatMapTo", ({ enumerable: true, get: function () { return concatMapTo_1.concatMapTo; } }));
var concatWith_1 = __nccwpck_require__(97998);
Object.defineProperty(exports, "concatWith", ({ enumerable: true, get: function () { return concatWith_1.concatWith; } }));
var connect_1 = __nccwpck_require__(51101);
Object.defineProperty(exports, "connect", ({ enumerable: true, get: function () { return connect_1.connect; } }));
var count_1 = __nccwpck_require__(36571);
Object.defineProperty(exports, "count", ({ enumerable: true, get: function () { return count_1.count; } }));
var debounce_1 = __nccwpck_require__(19348);
Object.defineProperty(exports, "debounce", ({ enumerable: true, get: function () { return debounce_1.debounce; } }));
var debounceTime_1 = __nccwpck_require__(62379);
Object.defineProperty(exports, "debounceTime", ({ enumerable: true, get: function () { return debounceTime_1.debounceTime; } }));
var defaultIfEmpty_1 = __nccwpck_require__(30621);
Object.defineProperty(exports, "defaultIfEmpty", ({ enumerable: true, get: function () { return defaultIfEmpty_1.defaultIfEmpty; } }));
var delay_1 = __nccwpck_require__(99818);
Object.defineProperty(exports, "delay", ({ enumerable: true, get: function () { return delay_1.delay; } }));
var delayWhen_1 = __nccwpck_require__(16994);
Object.defineProperty(exports, "delayWhen", ({ enumerable: true, get: function () { return delayWhen_1.delayWhen; } }));
var dematerialize_1 = __nccwpck_require__(95338);
Object.defineProperty(exports, "dematerialize", ({ enumerable: true, get: function () { return dematerialize_1.dematerialize; } }));
var distinct_1 = __nccwpck_require__(52594);
Object.defineProperty(exports, "distinct", ({ enumerable: true, get: function () { return distinct_1.distinct; } }));
var distinctUntilChanged_1 = __nccwpck_require__(20632);
Object.defineProperty(exports, "distinctUntilChanged", ({ enumerable: true, get: function () { return distinctUntilChanged_1.distinctUntilChanged; } }));
var distinctUntilKeyChanged_1 = __nccwpck_require__(13809);
Object.defineProperty(exports, "distinctUntilKeyChanged", ({ enumerable: true, get: function () { return distinctUntilKeyChanged_1.distinctUntilKeyChanged; } }));
var elementAt_1 = __nccwpck_require__(73381);
Object.defineProperty(exports, "elementAt", ({ enumerable: true, get: function () { return elementAt_1.elementAt; } }));
var endWith_1 = __nccwpck_require__(42961);
Object.defineProperty(exports, "endWith", ({ enumerable: true, get: function () { return endWith_1.endWith; } }));
var every_1 = __nccwpck_require__(69559);
Object.defineProperty(exports, "every", ({ enumerable: true, get: function () { return every_1.every; } }));
var exhaust_1 = __nccwpck_require__(75686);
Object.defineProperty(exports, "exhaust", ({ enumerable: true, get: function () { return exhaust_1.exhaust; } }));
var exhaustAll_1 = __nccwpck_require__(79777);
Object.defineProperty(exports, "exhaustAll", ({ enumerable: true, get: function () { return exhaustAll_1.exhaustAll; } }));
var exhaustMap_1 = __nccwpck_require__(21527);
Object.defineProperty(exports, "exhaustMap", ({ enumerable: true, get: function () { return exhaustMap_1.exhaustMap; } }));
var expand_1 = __nccwpck_require__(21585);
Object.defineProperty(exports, "expand", ({ enumerable: true, get: function () { return expand_1.expand; } }));
var filter_1 = __nccwpck_require__(36894);
Object.defineProperty(exports, "filter", ({ enumerable: true, get: function () { return filter_1.filter; } }));
var finalize_1 = __nccwpck_require__(4013);
Object.defineProperty(exports, "finalize", ({ enumerable: true, get: function () { return finalize_1.finalize; } }));
var find_1 = __nccwpck_require__(28981);
Object.defineProperty(exports, "find", ({ enumerable: true, get: function () { return find_1.find; } }));
var findIndex_1 = __nccwpck_require__(92602);
Object.defineProperty(exports, "findIndex", ({ enumerable: true, get: function () { return findIndex_1.findIndex; } }));
var first_1 = __nccwpck_require__(63345);
Object.defineProperty(exports, "first", ({ enumerable: true, get: function () { return first_1.first; } }));
var groupBy_1 = __nccwpck_require__(51650);
Object.defineProperty(exports, "groupBy", ({ enumerable: true, get: function () { return groupBy_1.groupBy; } }));
var ignoreElements_1 = __nccwpck_require__(31062);
Object.defineProperty(exports, "ignoreElements", ({ enumerable: true, get: function () { return ignoreElements_1.ignoreElements; } }));
var isEmpty_1 = __nccwpck_require__(77722);
Object.defineProperty(exports, "isEmpty", ({ enumerable: true, get: function () { return isEmpty_1.isEmpty; } }));
var last_1 = __nccwpck_require__(46831);
Object.defineProperty(exports, "last", ({ enumerable: true, get: function () { return last_1.last; } }));
var map_1 = __nccwpck_require__(5987);
Object.defineProperty(exports, "map", ({ enumerable: true, get: function () { return map_1.map; } }));
var mapTo_1 = __nccwpck_require__(52300);
Object.defineProperty(exports, "mapTo", ({ enumerable: true, get: function () { return mapTo_1.mapTo; } }));
var materialize_1 = __nccwpck_require__(67108);
Object.defineProperty(exports, "materialize", ({ enumerable: true, get: function () { return materialize_1.materialize; } }));
var max_1 = __nccwpck_require__(17314);
Object.defineProperty(exports, "max", ({ enumerable: true, get: function () { return max_1.max; } }));
var mergeAll_1 = __nccwpck_require__(2057);
Object.defineProperty(exports, "mergeAll", ({ enumerable: true, get: function () { return mergeAll_1.mergeAll; } }));
var flatMap_1 = __nccwpck_require__(40186);
Object.defineProperty(exports, "flatMap", ({ enumerable: true, get: function () { return flatMap_1.flatMap; } }));
var mergeMap_1 = __nccwpck_require__(69914);
Object.defineProperty(exports, "mergeMap", ({ enumerable: true, get: function () { return mergeMap_1.mergeMap; } }));
var mergeMapTo_1 = __nccwpck_require__(49151);
Object.defineProperty(exports, "mergeMapTo", ({ enumerable: true, get: function () { return mergeMapTo_1.mergeMapTo; } }));
var mergeScan_1 = __nccwpck_require__(11519);
Object.defineProperty(exports, "mergeScan", ({ enumerable: true, get: function () { return mergeScan_1.mergeScan; } }));
var mergeWith_1 = __nccwpck_require__(31564);
Object.defineProperty(exports, "mergeWith", ({ enumerable: true, get: function () { return mergeWith_1.mergeWith; } }));
var min_1 = __nccwpck_require__(87641);
Object.defineProperty(exports, "min", ({ enumerable: true, get: function () { return min_1.min; } }));
var multicast_1 = __nccwpck_require__(65457);
Object.defineProperty(exports, "multicast", ({ enumerable: true, get: function () { return multicast_1.multicast; } }));
var observeOn_1 = __nccwpck_require__(22451);
Object.defineProperty(exports, "observeOn", ({ enumerable: true, get: function () { return observeOn_1.observeOn; } }));
var onErrorResumeNextWith_1 = __nccwpck_require__(33569);
Object.defineProperty(exports, "onErrorResumeNextWith", ({ enumerable: true, get: function () { return onErrorResumeNextWith_1.onErrorResumeNextWith; } }));
var pairwise_1 = __nccwpck_require__(52206);
Object.defineProperty(exports, "pairwise", ({ enumerable: true, get: function () { return pairwise_1.pairwise; } }));
var pluck_1 = __nccwpck_require__(16073);
Object.defineProperty(exports, "pluck", ({ enumerable: true, get: function () { return pluck_1.pluck; } }));
var publish_1 = __nccwpck_require__(84084);
Object.defineProperty(exports, "publish", ({ enumerable: true, get: function () { return publish_1.publish; } }));
var publishBehavior_1 = __nccwpck_require__(40045);
Object.defineProperty(exports, "publishBehavior", ({ enumerable: true, get: function () { return publishBehavior_1.publishBehavior; } }));
var publishLast_1 = __nccwpck_require__(84149);
Object.defineProperty(exports, "publishLast", ({ enumerable: true, get: function () { return publishLast_1.publishLast; } }));
var publishReplay_1 = __nccwpck_require__(47656);
Object.defineProperty(exports, "publishReplay", ({ enumerable: true, get: function () { return publishReplay_1.publishReplay; } }));
var raceWith_1 = __nccwpck_require__(58008);
Object.defineProperty(exports, "raceWith", ({ enumerable: true, get: function () { return raceWith_1.raceWith; } }));
var reduce_1 = __nccwpck_require__(62087);
Object.defineProperty(exports, "reduce", ({ enumerable: true, get: function () { return reduce_1.reduce; } }));
var repeat_1 = __nccwpck_require__(22418);
Object.defineProperty(exports, "repeat", ({ enumerable: true, get: function () { return repeat_1.repeat; } }));
var repeatWhen_1 = __nccwpck_require__(70754);
Object.defineProperty(exports, "repeatWhen", ({ enumerable: true, get: function () { return repeatWhen_1.repeatWhen; } }));
var retry_1 = __nccwpck_require__(56251);
Object.defineProperty(exports, "retry", ({ enumerable: true, get: function () { return retry_1.retry; } }));
var retryWhen_1 = __nccwpck_require__(69018);
Object.defineProperty(exports, "retryWhen", ({ enumerable: true, get: function () { return retryWhen_1.retryWhen; } }));
var refCount_1 = __nccwpck_require__(2331);
Object.defineProperty(exports, "refCount", ({ enumerable: true, get: function () { return refCount_1.refCount; } }));
var sample_1 = __nccwpck_require__(13774);
Object.defineProperty(exports, "sample", ({ enumerable: true, get: function () { return sample_1.sample; } }));
var sampleTime_1 = __nccwpck_require__(49807);
Object.defineProperty(exports, "sampleTime", ({ enumerable: true, get: function () { return sampleTime_1.sampleTime; } }));
var scan_1 = __nccwpck_require__(25578);
Object.defineProperty(exports, "scan", ({ enumerable: true, get: function () { return scan_1.scan; } }));
var sequenceEqual_1 = __nccwpck_require__(16126);
Object.defineProperty(exports, "sequenceEqual", ({ enumerable: true, get: function () { return sequenceEqual_1.sequenceEqual; } }));
var share_1 = __nccwpck_require__(48960);
Object.defineProperty(exports, "share", ({ enumerable: true, get: function () { return share_1.share; } }));
var shareReplay_1 = __nccwpck_require__(92118);
Object.defineProperty(exports, "shareReplay", ({ enumerable: true, get: function () { return shareReplay_1.shareReplay; } }));
var single_1 = __nccwpck_require__(58441);
Object.defineProperty(exports, "single", ({ enumerable: true, get: function () { return single_1.single; } }));
var skip_1 = __nccwpck_require__(80947);
Object.defineProperty(exports, "skip", ({ enumerable: true, get: function () { return skip_1.skip; } }));
var skipLast_1 = __nccwpck_require__(65865);
Object.defineProperty(exports, "skipLast", ({ enumerable: true, get: function () { return skipLast_1.skipLast; } }));
var skipUntil_1 = __nccwpck_require__(41110);
Object.defineProperty(exports, "skipUntil", ({ enumerable: true, get: function () { return skipUntil_1.skipUntil; } }));
var skipWhile_1 = __nccwpck_require__(92550);
Object.defineProperty(exports, "skipWhile", ({ enumerable: true, get: function () { return skipWhile_1.skipWhile; } }));
var startWith_1 = __nccwpck_require__(8748);
Object.defineProperty(exports, "startWith", ({ enumerable: true, get: function () { return startWith_1.startWith; } }));
var subscribeOn_1 = __nccwpck_require__(7224);
Object.defineProperty(exports, "subscribeOn", ({ enumerable: true, get: function () { return subscribeOn_1.subscribeOn; } }));
var switchAll_1 = __nccwpck_require__(40327);
Object.defineProperty(exports, "switchAll", ({ enumerable: true, get: function () { return switchAll_1.switchAll; } }));
var switchMap_1 = __nccwpck_require__(26704);
Object.defineProperty(exports, "switchMap", ({ enumerable: true, get: function () { return switchMap_1.switchMap; } }));
var switchMapTo_1 = __nccwpck_require__(1713);
Object.defineProperty(exports, "switchMapTo", ({ enumerable: true, get: function () { return switchMapTo_1.switchMapTo; } }));
var switchScan_1 = __nccwpck_require__(13355);
Object.defineProperty(exports, "switchScan", ({ enumerable: true, get: function () { return switchScan_1.switchScan; } }));
var take_1 = __nccwpck_require__(33698);
Object.defineProperty(exports, "take", ({ enumerable: true, get: function () { return take_1.take; } }));
var takeLast_1 = __nccwpck_require__(65041);
Object.defineProperty(exports, "takeLast", ({ enumerable: true, get: function () { return takeLast_1.takeLast; } }));
var takeUntil_1 = __nccwpck_require__(55150);
Object.defineProperty(exports, "takeUntil", ({ enumerable: true, get: function () { return takeUntil_1.takeUntil; } }));
var takeWhile_1 = __nccwpck_require__(76700);
Object.defineProperty(exports, "takeWhile", ({ enumerable: true, get: function () { return takeWhile_1.takeWhile; } }));
var tap_1 = __nccwpck_require__(48845);
Object.defineProperty(exports, "tap", ({ enumerable: true, get: function () { return tap_1.tap; } }));
var throttle_1 = __nccwpck_require__(36713);
Object.defineProperty(exports, "throttle", ({ enumerable: true, get: function () { return throttle_1.throttle; } }));
var throttleTime_1 = __nccwpck_require__(83435);
Object.defineProperty(exports, "throttleTime", ({ enumerable: true, get: function () { return throttleTime_1.throttleTime; } }));
var throwIfEmpty_1 = __nccwpck_require__(91566);
Object.defineProperty(exports, "throwIfEmpty", ({ enumerable: true, get: function () { return throwIfEmpty_1.throwIfEmpty; } }));
var timeInterval_1 = __nccwpck_require__(14643);
Object.defineProperty(exports, "timeInterval", ({ enumerable: true, get: function () { return timeInterval_1.timeInterval; } }));
var timeout_2 = __nccwpck_require__(12051);
Object.defineProperty(exports, "timeout", ({ enumerable: true, get: function () { return timeout_2.timeout; } }));
var timeoutWith_1 = __nccwpck_require__(43540);
Object.defineProperty(exports, "timeoutWith", ({ enumerable: true, get: function () { return timeoutWith_1.timeoutWith; } }));
var timestamp_1 = __nccwpck_require__(75518);
Object.defineProperty(exports, "timestamp", ({ enumerable: true, get: function () { return timestamp_1.timestamp; } }));
var toArray_1 = __nccwpck_require__(35114);
Object.defineProperty(exports, "toArray", ({ enumerable: true, get: function () { return toArray_1.toArray; } }));
var window_1 = __nccwpck_require__(98255);
Object.defineProperty(exports, "window", ({ enumerable: true, get: function () { return window_1.window; } }));
var windowCount_1 = __nccwpck_require__(73144);
Object.defineProperty(exports, "windowCount", ({ enumerable: true, get: function () { return windowCount_1.windowCount; } }));
var windowTime_1 = __nccwpck_require__(2738);
Object.defineProperty(exports, "windowTime", ({ enumerable: true, get: function () { return windowTime_1.windowTime; } }));
var windowToggle_1 = __nccwpck_require__(52741);
Object.defineProperty(exports, "windowToggle", ({ enumerable: true, get: function () { return windowToggle_1.windowToggle; } }));
var windowWhen_1 = __nccwpck_require__(82645);
Object.defineProperty(exports, "windowWhen", ({ enumerable: true, get: function () { return windowWhen_1.windowWhen; } }));
var withLatestFrom_1 = __nccwpck_require__(20501);
Object.defineProperty(exports, "withLatestFrom", ({ enumerable: true, get: function () { return withLatestFrom_1.withLatestFrom; } }));
var zipAll_1 = __nccwpck_require__(92335);
Object.defineProperty(exports, "zipAll", ({ enumerable: true, get: function () { return zipAll_1.zipAll; } }));
var zipWith_1 = __nccwpck_require__(95520);
Object.defineProperty(exports, "zipWith", ({ enumerable: true, get: function () { return zipWith_1.zipWith; } }));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 9747:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AsyncSubject = void 0;
var Subject_1 = __nccwpck_require__(49944);
var AsyncSubject = (function (_super) {
    __extends(AsyncSubject, _super);
    function AsyncSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._value = null;
        _this._hasValue = false;
        _this._isComplete = false;
        return _this;
    }
    AsyncSubject.prototype._checkFinalizedStatuses = function (subscriber) {
        var _a = this, hasError = _a.hasError, _hasValue = _a._hasValue, _value = _a._value, thrownError = _a.thrownError, isStopped = _a.isStopped, _isComplete = _a._isComplete;
        if (hasError) {
            subscriber.error(thrownError);
        }
        else if (isStopped || _isComplete) {
            _hasValue && subscriber.next(_value);
            subscriber.complete();
        }
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.isStopped) {
            this._value = value;
            this._hasValue = true;
        }
    };
    AsyncSubject.prototype.complete = function () {
        var _a = this, _hasValue = _a._hasValue, _value = _a._value, _isComplete = _a._isComplete;
        if (!_isComplete) {
            this._isComplete = true;
            _hasValue && _super.prototype.next.call(this, _value);
            _super.prototype.complete.call(this);
        }
    };
    return AsyncSubject;
}(Subject_1.Subject));
exports.AsyncSubject = AsyncSubject;
//# sourceMappingURL=AsyncSubject.js.map

/***/ }),

/***/ 23473:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BehaviorSubject = void 0;
var Subject_1 = __nccwpck_require__(49944);
var BehaviorSubject = (function (_super) {
    __extends(BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        var _this = _super.call(this) || this;
        _this._value = _value;
        return _this;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: false,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        !subscription.closed && subscriber.next(this._value);
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, _value = _a._value;
        if (hasError) {
            throw thrownError;
        }
        this._throwIfClosed();
        return _value;
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, (this._value = value));
    };
    return BehaviorSubject;
}(Subject_1.Subject));
exports.BehaviorSubject = BehaviorSubject;
//# sourceMappingURL=BehaviorSubject.js.map

/***/ }),

/***/ 12241:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.observeNotification = exports.Notification = exports.NotificationKind = void 0;
var empty_1 = __nccwpck_require__(70437);
var of_1 = __nccwpck_require__(72163);
var throwError_1 = __nccwpck_require__(66381);
var isFunction_1 = __nccwpck_require__(67206);
var NotificationKind;
(function (NotificationKind) {
    NotificationKind["NEXT"] = "N";
    NotificationKind["ERROR"] = "E";
    NotificationKind["COMPLETE"] = "C";
})(NotificationKind = exports.NotificationKind || (exports.NotificationKind = {}));
var Notification = (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    Notification.prototype.observe = function (observer) {
        return observeNotification(this, observer);
    };
    Notification.prototype.do = function (nextHandler, errorHandler, completeHandler) {
        var _a = this, kind = _a.kind, value = _a.value, error = _a.error;
        return kind === 'N' ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === 'E' ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();
    };
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        var _a;
        return isFunction_1.isFunction((_a = nextOrObserver) === null || _a === void 0 ? void 0 : _a.next)
            ? this.observe(nextOrObserver)
            : this.do(nextOrObserver, error, complete);
    };
    Notification.prototype.toObservable = function () {
        var _a = this, kind = _a.kind, value = _a.value, error = _a.error;
        var result = kind === 'N'
            ?
                of_1.of(value)
            :
                kind === 'E'
                    ?
                        throwError_1.throwError(function () { return error; })
                    :
                        kind === 'C'
                            ?
                                empty_1.EMPTY
                            :
                                0;
        if (!result) {
            throw new TypeError("Unexpected notification kind " + kind);
        }
        return result;
    };
    Notification.createNext = function (value) {
        return new Notification('N', value);
    };
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    Notification.createComplete = function () {
        return Notification.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    return Notification;
}());
exports.Notification = Notification;
function observeNotification(notification, observer) {
    var _a, _b, _c;
    var _d = notification, kind = _d.kind, value = _d.value, error = _d.error;
    if (typeof kind !== 'string') {
        throw new TypeError('Invalid notification, missing "kind"');
    }
    kind === 'N' ? (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, value) : kind === 'E' ? (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, error) : (_c = observer.complete) === null || _c === void 0 ? void 0 : _c.call(observer);
}
exports.observeNotification = observeNotification;
//# sourceMappingURL=Notification.js.map

/***/ }),

/***/ 2500:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createNotification = exports.nextNotification = exports.errorNotification = exports.COMPLETE_NOTIFICATION = void 0;
exports.COMPLETE_NOTIFICATION = (function () { return createNotification('C', undefined, undefined); })();
function errorNotification(error) {
    return createNotification('E', undefined, error);
}
exports.errorNotification = errorNotification;
function nextNotification(value) {
    return createNotification('N', value, undefined);
}
exports.nextNotification = nextNotification;
function createNotification(kind, value, error) {
    return {
        kind: kind,
        value: value,
        error: error,
    };
}
exports.createNotification = createNotification;
//# sourceMappingURL=NotificationFactories.js.map

/***/ }),

/***/ 53014:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Observable = void 0;
var Subscriber_1 = __nccwpck_require__(67121);
var Subscription_1 = __nccwpck_require__(79548);
var observable_1 = __nccwpck_require__(17186);
var pipe_1 = __nccwpck_require__(49587);
var config_1 = __nccwpck_require__(92233);
var isFunction_1 = __nccwpck_require__(67206);
var errorContext_1 = __nccwpck_require__(31199);
var Observable = (function () {
    function Observable(subscribe) {
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var _this = this;
        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new Subscriber_1.SafeSubscriber(observerOrNext, error, complete);
        errorContext_1.errorContext(function () {
            var _a = _this, operator = _a.operator, source = _a.source;
            subscriber.add(operator
                ?
                    operator.call(subscriber, source)
                : source
                    ?
                        _this._subscribe(subscriber)
                    :
                        _this._trySubscribe(subscriber));
        });
        return subscriber;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            sink.error(err);
        }
    };
    Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var subscriber = new Subscriber_1.SafeSubscriber({
                next: function (value) {
                    try {
                        next(value);
                    }
                    catch (err) {
                        reject(err);
                        subscriber.unsubscribe();
                    }
                },
                error: reject,
                complete: resolve,
            });
            _this.subscribe(subscriber);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        var _a;
        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);
    };
    Observable.prototype[observable_1.observable] = function () {
        return this;
    };
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i] = arguments[_i];
        }
        return pipe_1.pipeFromArray(operations)(this);
    };
    Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());
exports.Observable = Observable;
function getPromiseCtor(promiseCtor) {
    var _a;
    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config_1.config.Promise) !== null && _a !== void 0 ? _a : Promise;
}
function isObserver(value) {
    return value && isFunction_1.isFunction(value.next) && isFunction_1.isFunction(value.error) && isFunction_1.isFunction(value.complete);
}
function isSubscriber(value) {
    return (value && value instanceof Subscriber_1.Subscriber) || (isObserver(value) && Subscription_1.isSubscription(value));
}
//# sourceMappingURL=Observable.js.map

/***/ }),

/***/ 22351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReplaySubject = void 0;
var Subject_1 = __nccwpck_require__(49944);
var dateTimestampProvider_1 = __nccwpck_require__(91395);
var ReplaySubject = (function (_super) {
    __extends(ReplaySubject, _super);
    function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {
        if (_bufferSize === void 0) { _bufferSize = Infinity; }
        if (_windowTime === void 0) { _windowTime = Infinity; }
        if (_timestampProvider === void 0) { _timestampProvider = dateTimestampProvider_1.dateTimestampProvider; }
        var _this = _super.call(this) || this;
        _this._bufferSize = _bufferSize;
        _this._windowTime = _windowTime;
        _this._timestampProvider = _timestampProvider;
        _this._buffer = [];
        _this._infiniteTimeWindow = true;
        _this._infiniteTimeWindow = _windowTime === Infinity;
        _this._bufferSize = Math.max(1, _bufferSize);
        _this._windowTime = Math.max(1, _windowTime);
        return _this;
    }
    ReplaySubject.prototype.next = function (value) {
        var _a = this, isStopped = _a.isStopped, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow, _timestampProvider = _a._timestampProvider, _windowTime = _a._windowTime;
        if (!isStopped) {
            _buffer.push(value);
            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);
        }
        this._trimBuffer();
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        this._throwIfClosed();
        this._trimBuffer();
        var subscription = this._innerSubscribe(subscriber);
        var _a = this, _infiniteTimeWindow = _a._infiniteTimeWindow, _buffer = _a._buffer;
        var copy = _buffer.slice();
        for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {
            subscriber.next(copy[i]);
        }
        this._checkFinalizedStatuses(subscriber);
        return subscription;
    };
    ReplaySubject.prototype._trimBuffer = function () {
        var _a = this, _bufferSize = _a._bufferSize, _timestampProvider = _a._timestampProvider, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow;
        var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;
        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);
        if (!_infiniteTimeWindow) {
            var now = _timestampProvider.now();
            var last = 0;
            for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {
                last = i;
            }
            last && _buffer.splice(0, last + 1);
        }
    };
    return ReplaySubject;
}(Subject_1.Subject));
exports.ReplaySubject = ReplaySubject;
//# sourceMappingURL=ReplaySubject.js.map

/***/ }),

/***/ 76243:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Scheduler = void 0;
var dateTimestampProvider_1 = __nccwpck_require__(91395);
var Scheduler = (function () {
    function Scheduler(schedulerActionCtor, now) {
        if (now === void 0) { now = Scheduler.now; }
        this.schedulerActionCtor = schedulerActionCtor;
        this.now = now;
    }
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) { delay = 0; }
        return new this.schedulerActionCtor(this, work).schedule(state, delay);
    };
    Scheduler.now = dateTimestampProvider_1.dateTimestampProvider.now;
    return Scheduler;
}());
exports.Scheduler = Scheduler;
//# sourceMappingURL=Scheduler.js.map

/***/ }),

/***/ 49944:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnonymousSubject = exports.Subject = void 0;
var Observable_1 = __nccwpck_require__(53014);
var Subscription_1 = __nccwpck_require__(79548);
var ObjectUnsubscribedError_1 = __nccwpck_require__(95266);
var arrRemove_1 = __nccwpck_require__(68499);
var errorContext_1 = __nccwpck_require__(31199);
var Subject = (function (_super) {
    __extends(Subject, _super);
    function Subject() {
        var _this = _super.call(this) || this;
        _this.closed = false;
        _this.currentObservers = null;
        _this.observers = [];
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
    }
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype._throwIfClosed = function () {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
    };
    Subject.prototype.next = function (value) {
        var _this = this;
        errorContext_1.errorContext(function () {
            var e_1, _a;
            _this._throwIfClosed();
            if (!_this.isStopped) {
                if (!_this.currentObservers) {
                    _this.currentObservers = Array.from(_this.observers);
                }
                try {
                    for (var _b = __values(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var observer = _c.value;
                        observer.next(value);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
        });
    };
    Subject.prototype.error = function (err) {
        var _this = this;
        errorContext_1.errorContext(function () {
            _this._throwIfClosed();
            if (!_this.isStopped) {
                _this.hasError = _this.isStopped = true;
                _this.thrownError = err;
                var observers = _this.observers;
                while (observers.length) {
                    observers.shift().error(err);
                }
            }
        });
    };
    Subject.prototype.complete = function () {
        var _this = this;
        errorContext_1.errorContext(function () {
            _this._throwIfClosed();
            if (!_this.isStopped) {
                _this.isStopped = true;
                var observers = _this.observers;
                while (observers.length) {
                    observers.shift().complete();
                }
            }
        });
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = this.closed = true;
        this.observers = this.currentObservers = null;
    };
    Object.defineProperty(Subject.prototype, "observed", {
        get: function () {
            var _a;
            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;
        },
        enumerable: false,
        configurable: true
    });
    Subject.prototype._trySubscribe = function (subscriber) {
        this._throwIfClosed();
        return _super.prototype._trySubscribe.call(this, subscriber);
    };
    Subject.prototype._subscribe = function (subscriber) {
        this._throwIfClosed();
        this._checkFinalizedStatuses(subscriber);
        return this._innerSubscribe(subscriber);
    };
    Subject.prototype._innerSubscribe = function (subscriber) {
        var _this = this;
        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;
        if (hasError || isStopped) {
            return Subscription_1.EMPTY_SUBSCRIPTION;
        }
        this.currentObservers = null;
        observers.push(subscriber);
        return new Subscription_1.Subscription(function () {
            _this.currentObservers = null;
            arrRemove_1.arrRemove(observers, subscriber);
        });
    };
    Subject.prototype._checkFinalizedStatuses = function (subscriber) {
        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;
        if (hasError) {
            subscriber.error(thrownError);
        }
        else if (isStopped) {
            subscriber.complete();
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new Observable_1.Observable();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(Observable_1.Observable));
exports.Subject = Subject;
var AnonymousSubject = (function (_super) {
    __extends(AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;
        _this.destination = destination;
        _this.source = source;
        return _this;
    }
    AnonymousSubject.prototype.next = function (value) {
        var _a, _b;
        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);
    };
    AnonymousSubject.prototype.error = function (err) {
        var _a, _b;
        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);
    };
    AnonymousSubject.prototype.complete = function () {
        var _a, _b;
        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var _a, _b;
        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : Subscription_1.EMPTY_SUBSCRIPTION;
    };
    return AnonymousSubject;
}(Subject));
exports.AnonymousSubject = AnonymousSubject;
//# sourceMappingURL=Subject.js.map

/***/ }),

/***/ 67121:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EMPTY_OBSERVER = exports.SafeSubscriber = exports.Subscriber = void 0;
var isFunction_1 = __nccwpck_require__(67206);
var Subscription_1 = __nccwpck_require__(79548);
var config_1 = __nccwpck_require__(92233);
var reportUnhandledError_1 = __nccwpck_require__(92445);
var noop_1 = __nccwpck_require__(11642);
var NotificationFactories_1 = __nccwpck_require__(2500);
var timeoutProvider_1 = __nccwpck_require__(1613);
var errorContext_1 = __nccwpck_require__(31199);
var Subscriber = (function (_super) {
    __extends(Subscriber, _super);
    function Subscriber(destination) {
        var _this = _super.call(this) || this;
        _this.isStopped = false;
        if (destination) {
            _this.destination = destination;
            if (Subscription_1.isSubscription(destination)) {
                destination.add(_this);
            }
        }
        else {
            _this.destination = exports.EMPTY_OBSERVER;
        }
        return _this;
    }
    Subscriber.create = function (next, error, complete) {
        return new SafeSubscriber(next, error, complete);
    };
    Subscriber.prototype.next = function (value) {
        if (this.isStopped) {
            handleStoppedNotification(NotificationFactories_1.nextNotification(value), this);
        }
        else {
            this._next(value);
        }
    };
    Subscriber.prototype.error = function (err) {
        if (this.isStopped) {
            handleStoppedNotification(NotificationFactories_1.errorNotification(err), this);
        }
        else {
            this.isStopped = true;
            this._error(err);
        }
    };
    Subscriber.prototype.complete = function () {
        if (this.isStopped) {
            handleStoppedNotification(NotificationFactories_1.COMPLETE_NOTIFICATION, this);
        }
        else {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.isStopped = true;
            _super.prototype.unsubscribe.call(this);
            this.destination = null;
        }
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        try {
            this.destination.error(err);
        }
        finally {
            this.unsubscribe();
        }
    };
    Subscriber.prototype._complete = function () {
        try {
            this.destination.complete();
        }
        finally {
            this.unsubscribe();
        }
    };
    return Subscriber;
}(Subscription_1.Subscription));
exports.Subscriber = Subscriber;
var _bind = Function.prototype.bind;
function bind(fn, thisArg) {
    return _bind.call(fn, thisArg);
}
var ConsumerObserver = (function () {
    function ConsumerObserver(partialObserver) {
        this.partialObserver = partialObserver;
    }
    ConsumerObserver.prototype.next = function (value) {
        var partialObserver = this.partialObserver;
        if (partialObserver.next) {
            try {
                partialObserver.next(value);
            }
            catch (error) {
                handleUnhandledError(error);
            }
        }
    };
    ConsumerObserver.prototype.error = function (err) {
        var partialObserver = this.partialObserver;
        if (partialObserver.error) {
            try {
                partialObserver.error(err);
            }
            catch (error) {
                handleUnhandledError(error);
            }
        }
        else {
            handleUnhandledError(err);
        }
    };
    ConsumerObserver.prototype.complete = function () {
        var partialObserver = this.partialObserver;
        if (partialObserver.complete) {
            try {
                partialObserver.complete();
            }
            catch (error) {
                handleUnhandledError(error);
            }
        }
    };
    return ConsumerObserver;
}());
var SafeSubscriber = (function (_super) {
    __extends(SafeSubscriber, _super);
    function SafeSubscriber(observerOrNext, error, complete) {
        var _this = _super.call(this) || this;
        var partialObserver;
        if (isFunction_1.isFunction(observerOrNext) || !observerOrNext) {
            partialObserver = {
                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),
                error: error !== null && error !== void 0 ? error : undefined,
                complete: complete !== null && complete !== void 0 ? complete : undefined,
            };
        }
        else {
            var context_1;
            if (_this && config_1.config.useDeprecatedNextContext) {
                context_1 = Object.create(observerOrNext);
                context_1.unsubscribe = function () { return _this.unsubscribe(); };
                partialObserver = {
                    next: observerOrNext.next && bind(observerOrNext.next, context_1),
                    error: observerOrNext.error && bind(observerOrNext.error, context_1),
                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),
                };
            }
            else {
                partialObserver = observerOrNext;
            }
        }
        _this.destination = new ConsumerObserver(partialObserver);
        return _this;
    }
    return SafeSubscriber;
}(Subscriber));
exports.SafeSubscriber = SafeSubscriber;
function handleUnhandledError(error) {
    if (config_1.config.useDeprecatedSynchronousErrorHandling) {
        errorContext_1.captureError(error);
    }
    else {
        reportUnhandledError_1.reportUnhandledError(error);
    }
}
function defaultErrorHandler(err) {
    throw err;
}
function handleStoppedNotification(notification, subscriber) {
    var onStoppedNotification = config_1.config.onStoppedNotification;
    onStoppedNotification && timeoutProvider_1.timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });
}
exports.EMPTY_OBSERVER = {
    closed: true,
    next: noop_1.noop,
    error: defaultErrorHandler,
    complete: noop_1.noop,
};
//# sourceMappingURL=Subscriber.js.map

/***/ }),

/***/ 79548:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSubscription = exports.EMPTY_SUBSCRIPTION = exports.Subscription = void 0;
var isFunction_1 = __nccwpck_require__(67206);
var UnsubscriptionError_1 = __nccwpck_require__(56776);
var arrRemove_1 = __nccwpck_require__(68499);
var Subscription = (function () {
    function Subscription(initialTeardown) {
        this.initialTeardown = initialTeardown;
        this.closed = false;
        this._parentage = null;
        this._finalizers = null;
    }
    Subscription.prototype.unsubscribe = function () {
        var e_1, _a, e_2, _b;
        var errors;
        if (!this.closed) {
            this.closed = true;
            var _parentage = this._parentage;
            if (_parentage) {
                this._parentage = null;
                if (Array.isArray(_parentage)) {
                    try {
                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {
                            var parent_1 = _parentage_1_1.value;
                            parent_1.remove(this);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                else {
                    _parentage.remove(this);
                }
            }
            var initialFinalizer = this.initialTeardown;
            if (isFunction_1.isFunction(initialFinalizer)) {
                try {
                    initialFinalizer();
                }
                catch (e) {
                    errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? e.errors : [e];
                }
            }
            var _finalizers = this._finalizers;
            if (_finalizers) {
                this._finalizers = null;
                try {
                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {
                        var finalizer = _finalizers_1_1.value;
                        try {
                            execFinalizer(finalizer);
                        }
                        catch (err) {
                            errors = errors !== null && errors !== void 0 ? errors : [];
                            if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {
                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));
                            }
                            else {
                                errors.push(err);
                            }
                        }
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
            if (errors) {
                throw new UnsubscriptionError_1.UnsubscriptionError(errors);
            }
        }
    };
    Subscription.prototype.add = function (teardown) {
        var _a;
        if (teardown && teardown !== this) {
            if (this.closed) {
                execFinalizer(teardown);
            }
            else {
                if (teardown instanceof Subscription) {
                    if (teardown.closed || teardown._hasParent(this)) {
                        return;
                    }
                    teardown._addParent(this);
                }
                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);
            }
        }
    };
    Subscription.prototype._hasParent = function (parent) {
        var _parentage = this._parentage;
        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));
    };
    Subscription.prototype._addParent = function (parent) {
        var _parentage = this._parentage;
        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;
    };
    Subscription.prototype._removeParent = function (parent) {
        var _parentage = this._parentage;
        if (_parentage === parent) {
            this._parentage = null;
        }
        else if (Array.isArray(_parentage)) {
            arrRemove_1.arrRemove(_parentage, parent);
        }
    };
    Subscription.prototype.remove = function (teardown) {
        var _finalizers = this._finalizers;
        _finalizers && arrRemove_1.arrRemove(_finalizers, teardown);
        if (teardown instanceof Subscription) {
            teardown._removeParent(this);
        }
    };
    Subscription.EMPTY = (function () {
        var empty = new Subscription();
        empty.closed = true;
        return empty;
    })();
    return Subscription;
}());
exports.Subscription = Subscription;
exports.EMPTY_SUBSCRIPTION = Subscription.EMPTY;
function isSubscription(value) {
    return (value instanceof Subscription ||
        (value && 'closed' in value && isFunction_1.isFunction(value.remove) && isFunction_1.isFunction(value.add) && isFunction_1.isFunction(value.unsubscribe)));
}
exports.isSubscription = isSubscription;
function execFinalizer(finalizer) {
    if (isFunction_1.isFunction(finalizer)) {
        finalizer();
    }
    else {
        finalizer.unsubscribe();
    }
}
//# sourceMappingURL=Subscription.js.map

/***/ }),

/***/ 92233:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.config = void 0;
exports.config = {
    onUnhandledError: null,
    onStoppedNotification: null,
    Promise: undefined,
    useDeprecatedSynchronousErrorHandling: false,
    useDeprecatedNextContext: false,
};
//# sourceMappingURL=config.js.map

/***/ }),

/***/ 19369:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.firstValueFrom = void 0;
var EmptyError_1 = __nccwpck_require__(99391);
var Subscriber_1 = __nccwpck_require__(67121);
function firstValueFrom(source, config) {
    var hasConfig = typeof config === 'object';
    return new Promise(function (resolve, reject) {
        var subscriber = new Subscriber_1.SafeSubscriber({
            next: function (value) {
                resolve(value);
                subscriber.unsubscribe();
            },
            error: reject,
            complete: function () {
                if (hasConfig) {
                    resolve(config.defaultValue);
                }
                else {
                    reject(new EmptyError_1.EmptyError());
                }
            },
        });
        source.subscribe(subscriber);
    });
}
exports.firstValueFrom = firstValueFrom;
//# sourceMappingURL=firstValueFrom.js.map

/***/ }),

/***/ 49713:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lastValueFrom = void 0;
var EmptyError_1 = __nccwpck_require__(99391);
function lastValueFrom(source, config) {
    var hasConfig = typeof config === 'object';
    return new Promise(function (resolve, reject) {
        var _hasValue = false;
        var _value;
        source.subscribe({
            next: function (value) {
                _value = value;
                _hasValue = true;
            },
            error: reject,
            complete: function () {
                if (_hasValue) {
                    resolve(_value);
                }
                else if (hasConfig) {
                    resolve(config.defaultValue);
                }
                else {
                    reject(new EmptyError_1.EmptyError());
                }
            },
        });
    });
}
exports.lastValueFrom = lastValueFrom;
//# sourceMappingURL=lastValueFrom.js.map

/***/ }),

/***/ 30420:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConnectableObservable = void 0;
var Observable_1 = __nccwpck_require__(53014);
var Subscription_1 = __nccwpck_require__(79548);
var refCount_1 = __nccwpck_require__(2331);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var lift_1 = __nccwpck_require__(38669);
var ConnectableObservable = (function (_super) {
    __extends(ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subjectFactory = subjectFactory;
        _this._subject = null;
        _this._refCount = 0;
        _this._connection = null;
        if (lift_1.hasLift(source)) {
            _this.lift = source.lift;
        }
        return _this;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype._teardown = function () {
        this._refCount = 0;
        var _connection = this._connection;
        this._subject = this._connection = null;
        _connection === null || _connection === void 0 ? void 0 : _connection.unsubscribe();
    };
    ConnectableObservable.prototype.connect = function () {
        var _this = this;
        var connection = this._connection;
        if (!connection) {
            connection = this._connection = new Subscription_1.Subscription();
            var subject_1 = this.getSubject();
            connection.add(this.source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subject_1, undefined, function () {
                _this._teardown();
                subject_1.complete();
            }, function (err) {
                _this._teardown();
                subject_1.error(err);
            }, function () { return _this._teardown(); })));
            if (connection.closed) {
                this._connection = null;
                connection = Subscription_1.Subscription.EMPTY;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return refCount_1.refCount()(this);
    };
    return ConnectableObservable;
}(Observable_1.Observable));
exports.ConnectableObservable = ConnectableObservable;
//# sourceMappingURL=ConnectableObservable.js.map

/***/ }),

/***/ 16949:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindCallback = void 0;
var bindCallbackInternals_1 = __nccwpck_require__(30585);
function bindCallback(callbackFunc, resultSelector, scheduler) {
    return bindCallbackInternals_1.bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);
}
exports.bindCallback = bindCallback;
//# sourceMappingURL=bindCallback.js.map

/***/ }),

/***/ 30585:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindCallbackInternals = void 0;
var isScheduler_1 = __nccwpck_require__(84078);
var Observable_1 = __nccwpck_require__(53014);
var subscribeOn_1 = __nccwpck_require__(7224);
var mapOneOrManyArgs_1 = __nccwpck_require__(78934);
var observeOn_1 = __nccwpck_require__(22451);
var AsyncSubject_1 = __nccwpck_require__(9747);
function bindCallbackInternals(isNodeStyle, callbackFunc, resultSelector, scheduler) {
    if (resultSelector) {
        if (isScheduler_1.isScheduler(resultSelector)) {
            scheduler = resultSelector;
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return bindCallbackInternals(isNodeStyle, callbackFunc, scheduler)
                    .apply(this, args)
                    .pipe(mapOneOrManyArgs_1.mapOneOrManyArgs(resultSelector));
            };
        }
    }
    if (scheduler) {
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return bindCallbackInternals(isNodeStyle, callbackFunc)
                .apply(this, args)
                .pipe(subscribeOn_1.subscribeOn(scheduler), observeOn_1.observeOn(scheduler));
        };
    }
    return function () {
        var _this = this;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var subject = new AsyncSubject_1.AsyncSubject();
        var uninitialized = true;
        return new Observable_1.Observable(function (subscriber) {
            var subs = subject.subscribe(subscriber);
            if (uninitialized) {
                uninitialized = false;
                var isAsync_1 = false;
                var isComplete_1 = false;
                callbackFunc.apply(_this, __spreadArray(__spreadArray([], __read(args)), [
                    function () {
                        var results = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            results[_i] = arguments[_i];
                        }
                        if (isNodeStyle) {
                            var err = results.shift();
                            if (err != null) {
                                subject.error(err);
                                return;
                            }
                        }
                        subject.next(1 < results.length ? results : results[0]);
                        isComplete_1 = true;
                        if (isAsync_1) {
                            subject.complete();
                        }
                    },
                ]));
                if (isComplete_1) {
                    subject.complete();
                }
                isAsync_1 = true;
            }
            return subs;
        });
    };
}
exports.bindCallbackInternals = bindCallbackInternals;
//# sourceMappingURL=bindCallbackInternals.js.map

/***/ }),

/***/ 51150:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindNodeCallback = void 0;
var bindCallbackInternals_1 = __nccwpck_require__(30585);
function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
    return bindCallbackInternals_1.bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);
}
exports.bindNodeCallback = bindNodeCallback;
//# sourceMappingURL=bindNodeCallback.js.map

/***/ }),

/***/ 46843:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.combineLatestInit = exports.combineLatest = void 0;
var Observable_1 = __nccwpck_require__(53014);
var argsArgArrayOrObject_1 = __nccwpck_require__(12920);
var from_1 = __nccwpck_require__(18309);
var identity_1 = __nccwpck_require__(60283);
var mapOneOrManyArgs_1 = __nccwpck_require__(78934);
var args_1 = __nccwpck_require__(34890);
var createObject_1 = __nccwpck_require__(57834);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var executeSchedule_1 = __nccwpck_require__(82877);
function combineLatest() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args_1.popScheduler(args);
    var resultSelector = args_1.popResultSelector(args);
    var _a = argsArgArrayOrObject_1.argsArgArrayOrObject(args), observables = _a.args, keys = _a.keys;
    if (observables.length === 0) {
        return from_1.from([], scheduler);
    }
    var result = new Observable_1.Observable(combineLatestInit(observables, scheduler, keys
        ?
            function (values) { return createObject_1.createObject(keys, values); }
        :
            identity_1.identity));
    return resultSelector ? result.pipe(mapOneOrManyArgs_1.mapOneOrManyArgs(resultSelector)) : result;
}
exports.combineLatest = combineLatest;
function combineLatestInit(observables, scheduler, valueTransform) {
    if (valueTransform === void 0) { valueTransform = identity_1.identity; }
    return function (subscriber) {
        maybeSchedule(scheduler, function () {
            var length = observables.length;
            var values = new Array(length);
            var active = length;
            var remainingFirstValues = length;
            var _loop_1 = function (i) {
                maybeSchedule(scheduler, function () {
                    var source = from_1.from(observables[i], scheduler);
                    var hasFirstValue = false;
                    source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                        values[i] = value;
                        if (!hasFirstValue) {
                            hasFirstValue = true;
                            remainingFirstValues--;
                        }
                        if (!remainingFirstValues) {
                            subscriber.next(valueTransform(values.slice()));
                        }
                    }, function () {
                        if (!--active) {
                            subscriber.complete();
                        }
                    }));
                }, subscriber);
            };
            for (var i = 0; i < length; i++) {
                _loop_1(i);
            }
        }, subscriber);
    };
}
exports.combineLatestInit = combineLatestInit;
function maybeSchedule(scheduler, execute, subscription) {
    if (scheduler) {
        executeSchedule_1.executeSchedule(subscription, scheduler, execute);
    }
    else {
        execute();
    }
}
//# sourceMappingURL=combineLatest.js.map

/***/ }),

/***/ 4675:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.concat = void 0;
var concatAll_1 = __nccwpck_require__(88049);
var args_1 = __nccwpck_require__(34890);
var from_1 = __nccwpck_require__(18309);
function concat() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return concatAll_1.concatAll()(from_1.from(args, args_1.popScheduler(args)));
}
exports.concat = concat;
//# sourceMappingURL=concat.js.map

/***/ }),

/***/ 13152:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.connectable = void 0;
var Subject_1 = __nccwpck_require__(49944);
var Observable_1 = __nccwpck_require__(53014);
var defer_1 = __nccwpck_require__(27672);
var DEFAULT_CONFIG = {
    connector: function () { return new Subject_1.Subject(); },
    resetOnDisconnect: true,
};
function connectable(source, config) {
    if (config === void 0) { config = DEFAULT_CONFIG; }
    var connection = null;
    var connector = config.connector, _a = config.resetOnDisconnect, resetOnDisconnect = _a === void 0 ? true : _a;
    var subject = connector();
    var result = new Observable_1.Observable(function (subscriber) {
        return subject.subscribe(subscriber);
    });
    result.connect = function () {
        if (!connection || connection.closed) {
            connection = defer_1.defer(function () { return source; }).subscribe(subject);
            if (resetOnDisconnect) {
                connection.add(function () { return (subject = connector()); });
            }
        }
        return connection;
    };
    return result;
}
exports.connectable = connectable;
//# sourceMappingURL=connectable.js.map

/***/ }),

/***/ 27672:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.defer = void 0;
var Observable_1 = __nccwpck_require__(53014);
var innerFrom_1 = __nccwpck_require__(57105);
function defer(observableFactory) {
    return new Observable_1.Observable(function (subscriber) {
        innerFrom_1.innerFrom(observableFactory()).subscribe(subscriber);
    });
}
exports.defer = defer;
//# sourceMappingURL=defer.js.map

/***/ }),

/***/ 38197:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.animationFrames = void 0;
var Observable_1 = __nccwpck_require__(53014);
var performanceTimestampProvider_1 = __nccwpck_require__(70143);
var animationFrameProvider_1 = __nccwpck_require__(62738);
function animationFrames(timestampProvider) {
    return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;
}
exports.animationFrames = animationFrames;
function animationFramesFactory(timestampProvider) {
    return new Observable_1.Observable(function (subscriber) {
        var provider = timestampProvider || performanceTimestampProvider_1.performanceTimestampProvider;
        var start = provider.now();
        var id = 0;
        var run = function () {
            if (!subscriber.closed) {
                id = animationFrameProvider_1.animationFrameProvider.requestAnimationFrame(function (timestamp) {
                    id = 0;
                    var now = provider.now();
                    subscriber.next({
                        timestamp: timestampProvider ? now : timestamp,
                        elapsed: now - start,
                    });
                    run();
                });
            }
        };
        run();
        return function () {
            if (id) {
                animationFrameProvider_1.animationFrameProvider.cancelAnimationFrame(id);
            }
        };
    });
}
var DEFAULT_ANIMATION_FRAMES = animationFramesFactory();
//# sourceMappingURL=animationFrames.js.map

/***/ }),

/***/ 70437:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.empty = exports.EMPTY = void 0;
var Observable_1 = __nccwpck_require__(53014);
exports.EMPTY = new Observable_1.Observable(function (subscriber) { return subscriber.complete(); });
function empty(scheduler) {
    return scheduler ? emptyScheduled(scheduler) : exports.EMPTY;
}
exports.empty = empty;
function emptyScheduled(scheduler) {
    return new Observable_1.Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
}
//# sourceMappingURL=empty.js.map

/***/ }),

/***/ 47358:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.forkJoin = void 0;
var Observable_1 = __nccwpck_require__(53014);
var argsArgArrayOrObject_1 = __nccwpck_require__(12920);
var innerFrom_1 = __nccwpck_require__(57105);
var args_1 = __nccwpck_require__(34890);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var mapOneOrManyArgs_1 = __nccwpck_require__(78934);
var createObject_1 = __nccwpck_require__(57834);
function forkJoin() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var resultSelector = args_1.popResultSelector(args);
    var _a = argsArgArrayOrObject_1.argsArgArrayOrObject(args), sources = _a.args, keys = _a.keys;
    var result = new Observable_1.Observable(function (subscriber) {
        var length = sources.length;
        if (!length) {
            subscriber.complete();
            return;
        }
        var values = new Array(length);
        var remainingCompletions = length;
        var remainingEmissions = length;
        var _loop_1 = function (sourceIndex) {
            var hasValue = false;
            innerFrom_1.innerFrom(sources[sourceIndex]).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                if (!hasValue) {
                    hasValue = true;
                    remainingEmissions--;
                }
                values[sourceIndex] = value;
            }, function () { return remainingCompletions--; }, undefined, function () {
                if (!remainingCompletions || !hasValue) {
                    if (!remainingEmissions) {
                        subscriber.next(keys ? createObject_1.createObject(keys, values) : values);
                    }
                    subscriber.complete();
                }
            }));
        };
        for (var sourceIndex = 0; sourceIndex < length; sourceIndex++) {
            _loop_1(sourceIndex);
        }
    });
    return resultSelector ? result.pipe(mapOneOrManyArgs_1.mapOneOrManyArgs(resultSelector)) : result;
}
exports.forkJoin = forkJoin;
//# sourceMappingURL=forkJoin.js.map

/***/ }),

/***/ 18309:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.from = void 0;
var scheduled_1 = __nccwpck_require__(6151);
var innerFrom_1 = __nccwpck_require__(57105);
function from(input, scheduler) {
    return scheduler ? scheduled_1.scheduled(input, scheduler) : innerFrom_1.innerFrom(input);
}
exports.from = from;
//# sourceMappingURL=from.js.map

/***/ }),

/***/ 93238:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromEvent = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var Observable_1 = __nccwpck_require__(53014);
var mergeMap_1 = __nccwpck_require__(69914);
var isArrayLike_1 = __nccwpck_require__(24461);
var isFunction_1 = __nccwpck_require__(67206);
var mapOneOrManyArgs_1 = __nccwpck_require__(78934);
var nodeEventEmitterMethods = ['addListener', 'removeListener'];
var eventTargetMethods = ['addEventListener', 'removeEventListener'];
var jqueryMethods = ['on', 'off'];
function fromEvent(target, eventName, options, resultSelector) {
    if (isFunction_1.isFunction(options)) {
        resultSelector = options;
        options = undefined;
    }
    if (resultSelector) {
        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs_1.mapOneOrManyArgs(resultSelector));
    }
    var _a = __read(isEventTarget(target)
        ? eventTargetMethods.map(function (methodName) { return function (handler) { return target[methodName](eventName, handler, options); }; })
        :
            isNodeStyleEventEmitter(target)
                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))
                : isJQueryStyleEventEmitter(target)
                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))
                    : [], 2), add = _a[0], remove = _a[1];
    if (!add) {
        if (isArrayLike_1.isArrayLike(target)) {
            return mergeMap_1.mergeMap(function (subTarget) { return fromEvent(subTarget, eventName, options); })(innerFrom_1.innerFrom(target));
        }
    }
    if (!add) {
        throw new TypeError('Invalid event target');
    }
    return new Observable_1.Observable(function (subscriber) {
        var handler = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return subscriber.next(1 < args.length ? args : args[0]);
        };
        add(handler);
        return function () { return remove(handler); };
    });
}
exports.fromEvent = fromEvent;
function toCommonHandlerRegistry(target, eventName) {
    return function (methodName) { return function (handler) { return target[methodName](eventName, handler); }; };
}
function isNodeStyleEventEmitter(target) {
    return isFunction_1.isFunction(target.addListener) && isFunction_1.isFunction(target.removeListener);
}
function isJQueryStyleEventEmitter(target) {
    return isFunction_1.isFunction(target.on) && isFunction_1.isFunction(target.off);
}
function isEventTarget(target) {
    return isFunction_1.isFunction(target.addEventListener) && isFunction_1.isFunction(target.removeEventListener);
}
//# sourceMappingURL=fromEvent.js.map

/***/ }),

/***/ 65680:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromEventPattern = void 0;
var Observable_1 = __nccwpck_require__(53014);
var isFunction_1 = __nccwpck_require__(67206);
var mapOneOrManyArgs_1 = __nccwpck_require__(78934);
function fromEventPattern(addHandler, removeHandler, resultSelector) {
    if (resultSelector) {
        return fromEventPattern(addHandler, removeHandler).pipe(mapOneOrManyArgs_1.mapOneOrManyArgs(resultSelector));
    }
    return new Observable_1.Observable(function (subscriber) {
        var handler = function () {
            var e = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                e[_i] = arguments[_i];
            }
            return subscriber.next(e.length === 1 ? e[0] : e);
        };
        var retValue = addHandler(handler);
        return isFunction_1.isFunction(removeHandler) ? function () { return removeHandler(handler, retValue); } : undefined;
    });
}
exports.fromEventPattern = fromEventPattern;
//# sourceMappingURL=fromEventPattern.js.map

/***/ }),

/***/ 66513:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromSubscribable = void 0;
var Observable_1 = __nccwpck_require__(53014);
function fromSubscribable(subscribable) {
    return new Observable_1.Observable(function (subscriber) { return subscribable.subscribe(subscriber); });
}
exports.fromSubscribable = fromSubscribable;
//# sourceMappingURL=fromSubscribable.js.map

/***/ }),

/***/ 52668:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.generate = void 0;
var identity_1 = __nccwpck_require__(60283);
var isScheduler_1 = __nccwpck_require__(84078);
var defer_1 = __nccwpck_require__(27672);
var scheduleIterable_1 = __nccwpck_require__(59461);
function generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {
    var _a, _b;
    var resultSelector;
    var initialState;
    if (arguments.length === 1) {
        (_a = initialStateOrOptions, initialState = _a.initialState, condition = _a.condition, iterate = _a.iterate, _b = _a.resultSelector, resultSelector = _b === void 0 ? identity_1.identity : _b, scheduler = _a.scheduler);
    }
    else {
        initialState = initialStateOrOptions;
        if (!resultSelectorOrScheduler || isScheduler_1.isScheduler(resultSelectorOrScheduler)) {
            resultSelector = identity_1.identity;
            scheduler = resultSelectorOrScheduler;
        }
        else {
            resultSelector = resultSelectorOrScheduler;
        }
    }
    function gen() {
        var state;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    state = initialState;
                    _a.label = 1;
                case 1:
                    if (!(!condition || condition(state))) return [3, 4];
                    return [4, resultSelector(state)];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    state = iterate(state);
                    return [3, 1];
                case 4: return [2];
            }
        });
    }
    return defer_1.defer((scheduler
        ?
            function () { return scheduleIterable_1.scheduleIterable(gen(), scheduler); }
        :
            gen));
}
exports.generate = generate;
//# sourceMappingURL=generate.js.map

/***/ }),

/***/ 26514:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.iif = void 0;
var defer_1 = __nccwpck_require__(27672);
function iif(condition, trueResult, falseResult) {
    return defer_1.defer(function () { return (condition() ? trueResult : falseResult); });
}
exports.iif = iif;
//# sourceMappingURL=iif.js.map

/***/ }),

/***/ 57105:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fromReadableStreamLike = exports.fromAsyncIterable = exports.fromIterable = exports.fromPromise = exports.fromArrayLike = exports.fromInteropObservable = exports.innerFrom = void 0;
var isArrayLike_1 = __nccwpck_require__(24461);
var isPromise_1 = __nccwpck_require__(65585);
var Observable_1 = __nccwpck_require__(53014);
var isInteropObservable_1 = __nccwpck_require__(67984);
var isAsyncIterable_1 = __nccwpck_require__(44408);
var throwUnobservableError_1 = __nccwpck_require__(97364);
var isIterable_1 = __nccwpck_require__(94292);
var isReadableStreamLike_1 = __nccwpck_require__(99621);
var isFunction_1 = __nccwpck_require__(67206);
var reportUnhandledError_1 = __nccwpck_require__(92445);
var observable_1 = __nccwpck_require__(17186);
function innerFrom(input) {
    if (input instanceof Observable_1.Observable) {
        return input;
    }
    if (input != null) {
        if (isInteropObservable_1.isInteropObservable(input)) {
            return fromInteropObservable(input);
        }
        if (isArrayLike_1.isArrayLike(input)) {
            return fromArrayLike(input);
        }
        if (isPromise_1.isPromise(input)) {
            return fromPromise(input);
        }
        if (isAsyncIterable_1.isAsyncIterable(input)) {
            return fromAsyncIterable(input);
        }
        if (isIterable_1.isIterable(input)) {
            return fromIterable(input);
        }
        if (isReadableStreamLike_1.isReadableStreamLike(input)) {
            return fromReadableStreamLike(input);
        }
    }
    throw throwUnobservableError_1.createInvalidObservableTypeError(input);
}
exports.innerFrom = innerFrom;
function fromInteropObservable(obj) {
    return new Observable_1.Observable(function (subscriber) {
        var obs = obj[observable_1.observable]();
        if (isFunction_1.isFunction(obs.subscribe)) {
            return obs.subscribe(subscriber);
        }
        throw new TypeError('Provided object does not correctly implement Symbol.observable');
    });
}
exports.fromInteropObservable = fromInteropObservable;
function fromArrayLike(array) {
    return new Observable_1.Observable(function (subscriber) {
        for (var i = 0; i < array.length && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    });
}
exports.fromArrayLike = fromArrayLike;
function fromPromise(promise) {
    return new Observable_1.Observable(function (subscriber) {
        promise
            .then(function (value) {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, function (err) { return subscriber.error(err); })
            .then(null, reportUnhandledError_1.reportUnhandledError);
    });
}
exports.fromPromise = fromPromise;
function fromIterable(iterable) {
    return new Observable_1.Observable(function (subscriber) {
        var e_1, _a;
        try {
            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {
                var value = iterable_1_1.value;
                subscriber.next(value);
                if (subscriber.closed) {
                    return;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        subscriber.complete();
    });
}
exports.fromIterable = fromIterable;
function fromAsyncIterable(asyncIterable) {
    return new Observable_1.Observable(function (subscriber) {
        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });
    });
}
exports.fromAsyncIterable = fromAsyncIterable;
function fromReadableStreamLike(readableStream) {
    return fromAsyncIterable(isReadableStreamLike_1.readableStreamLikeToAsyncGenerator(readableStream));
}
exports.fromReadableStreamLike = fromReadableStreamLike;
function process(asyncIterable, subscriber) {
    var asyncIterable_1, asyncIterable_1_1;
    var e_2, _a;
    return __awaiter(this, void 0, void 0, function () {
        var value, e_2_1;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _b.trys.push([0, 5, 6, 11]);
                    asyncIterable_1 = __asyncValues(asyncIterable);
                    _b.label = 1;
                case 1: return [4, asyncIterable_1.next()];
                case 2:
                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];
                    value = asyncIterable_1_1.value;
                    subscriber.next(value);
                    if (subscriber.closed) {
                        return [2];
                    }
                    _b.label = 3;
                case 3: return [3, 1];
                case 4: return [3, 11];
                case 5:
                    e_2_1 = _b.sent();
                    e_2 = { error: e_2_1 };
                    return [3, 11];
                case 6:
                    _b.trys.push([6, , 9, 10]);
                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];
                    return [4, _a.call(asyncIterable_1)];
                case 7:
                    _b.sent();
                    _b.label = 8;
                case 8: return [3, 10];
                case 9:
                    if (e_2) throw e_2.error;
                    return [7];
                case 10: return [7];
                case 11:
                    subscriber.complete();
                    return [2];
            }
        });
    });
}
//# sourceMappingURL=innerFrom.js.map

/***/ }),

/***/ 20029:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.interval = void 0;
var async_1 = __nccwpck_require__(76072);
var timer_1 = __nccwpck_require__(59757);
function interval(period, scheduler) {
    if (period === void 0) { period = 0; }
    if (scheduler === void 0) { scheduler = async_1.asyncScheduler; }
    if (period < 0) {
        period = 0;
    }
    return timer_1.timer(period, period, scheduler);
}
exports.interval = interval;
//# sourceMappingURL=interval.js.map

/***/ }),

/***/ 75122:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.merge = void 0;
var mergeAll_1 = __nccwpck_require__(2057);
var innerFrom_1 = __nccwpck_require__(57105);
var empty_1 = __nccwpck_require__(70437);
var args_1 = __nccwpck_require__(34890);
var from_1 = __nccwpck_require__(18309);
function merge() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args_1.popScheduler(args);
    var concurrent = args_1.popNumber(args, Infinity);
    var sources = args;
    return !sources.length
        ?
            empty_1.EMPTY
        : sources.length === 1
            ?
                innerFrom_1.innerFrom(sources[0])
            :
                mergeAll_1.mergeAll(concurrent)(from_1.from(sources, scheduler));
}
exports.merge = merge;
//# sourceMappingURL=merge.js.map

/***/ }),

/***/ 6228:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.never = exports.NEVER = void 0;
var Observable_1 = __nccwpck_require__(53014);
var noop_1 = __nccwpck_require__(11642);
exports.NEVER = new Observable_1.Observable(noop_1.noop);
function never() {
    return exports.NEVER;
}
exports.never = never;
//# sourceMappingURL=never.js.map

/***/ }),

/***/ 72163:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.of = void 0;
var args_1 = __nccwpck_require__(34890);
var from_1 = __nccwpck_require__(18309);
function of() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args_1.popScheduler(args);
    return from_1.from(args, scheduler);
}
exports.of = of;
//# sourceMappingURL=of.js.map

/***/ }),

/***/ 16089:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.onErrorResumeNext = void 0;
var Observable_1 = __nccwpck_require__(53014);
var argsOrArgArray_1 = __nccwpck_require__(18824);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var noop_1 = __nccwpck_require__(11642);
var innerFrom_1 = __nccwpck_require__(57105);
function onErrorResumeNext() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    var nextSources = argsOrArgArray_1.argsOrArgArray(sources);
    return new Observable_1.Observable(function (subscriber) {
        var sourceIndex = 0;
        var subscribeNext = function () {
            if (sourceIndex < nextSources.length) {
                var nextSource = void 0;
                try {
                    nextSource = innerFrom_1.innerFrom(nextSources[sourceIndex++]);
                }
                catch (err) {
                    subscribeNext();
                    return;
                }
                var innerSubscriber = new OperatorSubscriber_1.OperatorSubscriber(subscriber, undefined, noop_1.noop, noop_1.noop);
                nextSource.subscribe(innerSubscriber);
                innerSubscriber.add(subscribeNext);
            }
            else {
                subscriber.complete();
            }
        };
        subscribeNext();
    });
}
exports.onErrorResumeNext = onErrorResumeNext;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),

/***/ 30505:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pairs = void 0;
var from_1 = __nccwpck_require__(18309);
function pairs(obj, scheduler) {
    return from_1.from(Object.entries(obj), scheduler);
}
exports.pairs = pairs;
//# sourceMappingURL=pairs.js.map

/***/ }),

/***/ 15506:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.partition = void 0;
var not_1 = __nccwpck_require__(54338);
var filter_1 = __nccwpck_require__(36894);
var innerFrom_1 = __nccwpck_require__(57105);
function partition(source, predicate, thisArg) {
    return [filter_1.filter(predicate, thisArg)(innerFrom_1.innerFrom(source)), filter_1.filter(not_1.not(predicate, thisArg))(innerFrom_1.innerFrom(source))];
}
exports.partition = partition;
//# sourceMappingURL=partition.js.map

/***/ }),

/***/ 16940:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.raceInit = exports.race = void 0;
var Observable_1 = __nccwpck_require__(53014);
var innerFrom_1 = __nccwpck_require__(57105);
var argsOrArgArray_1 = __nccwpck_require__(18824);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function race() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    sources = argsOrArgArray_1.argsOrArgArray(sources);
    return sources.length === 1 ? innerFrom_1.innerFrom(sources[0]) : new Observable_1.Observable(raceInit(sources));
}
exports.race = race;
function raceInit(sources) {
    return function (subscriber) {
        var subscriptions = [];
        var _loop_1 = function (i) {
            subscriptions.push(innerFrom_1.innerFrom(sources[i]).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                if (subscriptions) {
                    for (var s = 0; s < subscriptions.length; s++) {
                        s !== i && subscriptions[s].unsubscribe();
                    }
                    subscriptions = null;
                }
                subscriber.next(value);
            })));
        };
        for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {
            _loop_1(i);
        }
    };
}
exports.raceInit = raceInit;
//# sourceMappingURL=race.js.map

/***/ }),

/***/ 88538:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.range = void 0;
var Observable_1 = __nccwpck_require__(53014);
var empty_1 = __nccwpck_require__(70437);
function range(start, count, scheduler) {
    if (count == null) {
        count = start;
        start = 0;
    }
    if (count <= 0) {
        return empty_1.EMPTY;
    }
    var end = count + start;
    return new Observable_1.Observable(scheduler
        ?
            function (subscriber) {
                var n = start;
                return scheduler.schedule(function () {
                    if (n < end) {
                        subscriber.next(n++);
                        this.schedule();
                    }
                    else {
                        subscriber.complete();
                    }
                });
            }
        :
            function (subscriber) {
                var n = start;
                while (n < end && !subscriber.closed) {
                    subscriber.next(n++);
                }
                subscriber.complete();
            });
}
exports.range = range;
//# sourceMappingURL=range.js.map

/***/ }),

/***/ 66381:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.throwError = void 0;
var Observable_1 = __nccwpck_require__(53014);
var isFunction_1 = __nccwpck_require__(67206);
function throwError(errorOrErrorFactory, scheduler) {
    var errorFactory = isFunction_1.isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function () { return errorOrErrorFactory; };
    var init = function (subscriber) { return subscriber.error(errorFactory()); };
    return new Observable_1.Observable(scheduler ? function (subscriber) { return scheduler.schedule(init, 0, subscriber); } : init);
}
exports.throwError = throwError;
//# sourceMappingURL=throwError.js.map

/***/ }),

/***/ 59757:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.timer = void 0;
var Observable_1 = __nccwpck_require__(53014);
var async_1 = __nccwpck_require__(76072);
var isScheduler_1 = __nccwpck_require__(84078);
var isDate_1 = __nccwpck_require__(60935);
function timer(dueTime, intervalOrScheduler, scheduler) {
    if (dueTime === void 0) { dueTime = 0; }
    if (scheduler === void 0) { scheduler = async_1.async; }
    var intervalDuration = -1;
    if (intervalOrScheduler != null) {
        if (isScheduler_1.isScheduler(intervalOrScheduler)) {
            scheduler = intervalOrScheduler;
        }
        else {
            intervalDuration = intervalOrScheduler;
        }
    }
    return new Observable_1.Observable(function (subscriber) {
        var due = isDate_1.isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;
        if (due < 0) {
            due = 0;
        }
        var n = 0;
        return scheduler.schedule(function () {
            if (!subscriber.closed) {
                subscriber.next(n++);
                if (0 <= intervalDuration) {
                    this.schedule(undefined, intervalDuration);
                }
                else {
                    subscriber.complete();
                }
            }
        }, due);
    });
}
exports.timer = timer;
//# sourceMappingURL=timer.js.map

/***/ }),

/***/ 8445:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.using = void 0;
var Observable_1 = __nccwpck_require__(53014);
var innerFrom_1 = __nccwpck_require__(57105);
var empty_1 = __nccwpck_require__(70437);
function using(resourceFactory, observableFactory) {
    return new Observable_1.Observable(function (subscriber) {
        var resource = resourceFactory();
        var result = observableFactory(resource);
        var source = result ? innerFrom_1.innerFrom(result) : empty_1.EMPTY;
        source.subscribe(subscriber);
        return function () {
            if (resource) {
                resource.unsubscribe();
            }
        };
    });
}
exports.using = using;
//# sourceMappingURL=using.js.map

/***/ }),

/***/ 62504:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.zip = void 0;
var Observable_1 = __nccwpck_require__(53014);
var innerFrom_1 = __nccwpck_require__(57105);
var argsOrArgArray_1 = __nccwpck_require__(18824);
var empty_1 = __nccwpck_require__(70437);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var args_1 = __nccwpck_require__(34890);
function zip() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var resultSelector = args_1.popResultSelector(args);
    var sources = argsOrArgArray_1.argsOrArgArray(args);
    return sources.length
        ? new Observable_1.Observable(function (subscriber) {
            var buffers = sources.map(function () { return []; });
            var completed = sources.map(function () { return false; });
            subscriber.add(function () {
                buffers = completed = null;
            });
            var _loop_1 = function (sourceIndex) {
                innerFrom_1.innerFrom(sources[sourceIndex]).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                    buffers[sourceIndex].push(value);
                    if (buffers.every(function (buffer) { return buffer.length; })) {
                        var result = buffers.map(function (buffer) { return buffer.shift(); });
                        subscriber.next(resultSelector ? resultSelector.apply(void 0, __spreadArray([], __read(result))) : result);
                        if (buffers.some(function (buffer, i) { return !buffer.length && completed[i]; })) {
                            subscriber.complete();
                        }
                    }
                }, function () {
                    completed[sourceIndex] = true;
                    !buffers[sourceIndex].length && subscriber.complete();
                }));
            };
            for (var sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {
                _loop_1(sourceIndex);
            }
            return function () {
                buffers = completed = null;
            };
        })
        : empty_1.EMPTY;
}
exports.zip = zip;
//# sourceMappingURL=zip.js.map

/***/ }),

/***/ 69549:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OperatorSubscriber = exports.createOperatorSubscriber = void 0;
var Subscriber_1 = __nccwpck_require__(67121);
function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {
    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);
}
exports.createOperatorSubscriber = createOperatorSubscriber;
var OperatorSubscriber = (function (_super) {
    __extends(OperatorSubscriber, _super);
    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {
        var _this = _super.call(this, destination) || this;
        _this.onFinalize = onFinalize;
        _this.shouldUnsubscribe = shouldUnsubscribe;
        _this._next = onNext
            ? function (value) {
                try {
                    onNext(value);
                }
                catch (err) {
                    destination.error(err);
                }
            }
            : _super.prototype._next;
        _this._error = onError
            ? function (err) {
                try {
                    onError(err);
                }
                catch (err) {
                    destination.error(err);
                }
                finally {
                    this.unsubscribe();
                }
            }
            : _super.prototype._error;
        _this._complete = onComplete
            ? function () {
                try {
                    onComplete();
                }
                catch (err) {
                    destination.error(err);
                }
                finally {
                    this.unsubscribe();
                }
            }
            : _super.prototype._complete;
        return _this;
    }
    OperatorSubscriber.prototype.unsubscribe = function () {
        var _a;
        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            var closed_1 = this.closed;
            _super.prototype.unsubscribe.call(this);
            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));
        }
    };
    return OperatorSubscriber;
}(Subscriber_1.Subscriber));
exports.OperatorSubscriber = OperatorSubscriber;
//# sourceMappingURL=OperatorSubscriber.js.map

/***/ }),

/***/ 82704:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.audit = void 0;
var lift_1 = __nccwpck_require__(38669);
var innerFrom_1 = __nccwpck_require__(57105);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function audit(durationSelector) {
    return lift_1.operate(function (source, subscriber) {
        var hasValue = false;
        var lastValue = null;
        var durationSubscriber = null;
        var isComplete = false;
        var endDuration = function () {
            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
            durationSubscriber = null;
            if (hasValue) {
                hasValue = false;
                var value = lastValue;
                lastValue = null;
                subscriber.next(value);
            }
            isComplete && subscriber.complete();
        };
        var cleanupDuration = function () {
            durationSubscriber = null;
            isComplete && subscriber.complete();
        };
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            hasValue = true;
            lastValue = value;
            if (!durationSubscriber) {
                innerFrom_1.innerFrom(durationSelector(value)).subscribe((durationSubscriber = OperatorSubscriber_1.createOperatorSubscriber(subscriber, endDuration, cleanupDuration)));
            }
        }, function () {
            isComplete = true;
            (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();
        }));
    });
}
exports.audit = audit;
//# sourceMappingURL=audit.js.map

/***/ }),

/***/ 18780:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.auditTime = void 0;
var async_1 = __nccwpck_require__(76072);
var audit_1 = __nccwpck_require__(82704);
var timer_1 = __nccwpck_require__(59757);
function auditTime(duration, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.asyncScheduler; }
    return audit_1.audit(function () { return timer_1.timer(duration, scheduler); });
}
exports.auditTime = auditTime;
//# sourceMappingURL=auditTime.js.map

/***/ }),

/***/ 34253:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.buffer = void 0;
var lift_1 = __nccwpck_require__(38669);
var noop_1 = __nccwpck_require__(11642);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
function buffer(closingNotifier) {
    return lift_1.operate(function (source, subscriber) {
        var currentBuffer = [];
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) { return currentBuffer.push(value); }, function () {
            subscriber.next(currentBuffer);
            subscriber.complete();
        }));
        innerFrom_1.innerFrom(closingNotifier).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {
            var b = currentBuffer;
            currentBuffer = [];
            subscriber.next(b);
        }, noop_1.noop));
        return function () {
            currentBuffer = null;
        };
    });
}
exports.buffer = buffer;
//# sourceMappingURL=buffer.js.map

/***/ }),

/***/ 17253:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bufferCount = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var arrRemove_1 = __nccwpck_require__(68499);
function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) { startBufferEvery = null; }
    startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;
    return lift_1.operate(function (source, subscriber) {
        var buffers = [];
        var count = 0;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var e_1, _a, e_2, _b;
            var toEmit = null;
            if (count++ % startBufferEvery === 0) {
                buffers.push([]);
            }
            try {
                for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {
                    var buffer = buffers_1_1.value;
                    buffer.push(value);
                    if (bufferSize <= buffer.length) {
                        toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];
                        toEmit.push(buffer);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (toEmit) {
                try {
                    for (var toEmit_1 = __values(toEmit), toEmit_1_1 = toEmit_1.next(); !toEmit_1_1.done; toEmit_1_1 = toEmit_1.next()) {
                        var buffer = toEmit_1_1.value;
                        arrRemove_1.arrRemove(buffers, buffer);
                        subscriber.next(buffer);
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (toEmit_1_1 && !toEmit_1_1.done && (_b = toEmit_1.return)) _b.call(toEmit_1);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
        }, function () {
            var e_3, _a;
            try {
                for (var buffers_2 = __values(buffers), buffers_2_1 = buffers_2.next(); !buffers_2_1.done; buffers_2_1 = buffers_2.next()) {
                    var buffer = buffers_2_1.value;
                    subscriber.next(buffer);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (buffers_2_1 && !buffers_2_1.done && (_a = buffers_2.return)) _a.call(buffers_2);
                }
                finally { if (e_3) throw e_3.error; }
            }
            subscriber.complete();
        }, undefined, function () {
            buffers = null;
        }));
    });
}
exports.bufferCount = bufferCount;
//# sourceMappingURL=bufferCount.js.map

/***/ }),

/***/ 73102:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bufferTime = void 0;
var Subscription_1 = __nccwpck_require__(79548);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var arrRemove_1 = __nccwpck_require__(68499);
var async_1 = __nccwpck_require__(76072);
var args_1 = __nccwpck_require__(34890);
var executeSchedule_1 = __nccwpck_require__(82877);
function bufferTime(bufferTimeSpan) {
    var _a, _b;
    var otherArgs = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        otherArgs[_i - 1] = arguments[_i];
    }
    var scheduler = (_a = args_1.popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : async_1.asyncScheduler;
    var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;
    var maxBufferSize = otherArgs[1] || Infinity;
    return lift_1.operate(function (source, subscriber) {
        var bufferRecords = [];
        var restartOnEmit = false;
        var emit = function (record) {
            var buffer = record.buffer, subs = record.subs;
            subs.unsubscribe();
            arrRemove_1.arrRemove(bufferRecords, record);
            subscriber.next(buffer);
            restartOnEmit && startBuffer();
        };
        var startBuffer = function () {
            if (bufferRecords) {
                var subs = new Subscription_1.Subscription();
                subscriber.add(subs);
                var buffer = [];
                var record_1 = {
                    buffer: buffer,
                    subs: subs,
                };
                bufferRecords.push(record_1);
                executeSchedule_1.executeSchedule(subs, scheduler, function () { return emit(record_1); }, bufferTimeSpan);
            }
        };
        if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {
            executeSchedule_1.executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);
        }
        else {
            restartOnEmit = true;
        }
        startBuffer();
        var bufferTimeSubscriber = OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var e_1, _a;
            var recordsCopy = bufferRecords.slice();
            try {
                for (var recordsCopy_1 = __values(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {
                    var record = recordsCopy_1_1.value;
                    var buffer = record.buffer;
                    buffer.push(value);
                    maxBufferSize <= buffer.length && emit(record);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a = recordsCopy_1.return)) _a.call(recordsCopy_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }, function () {
            while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {
                subscriber.next(bufferRecords.shift().buffer);
            }
            bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();
            subscriber.complete();
            subscriber.unsubscribe();
        }, undefined, function () { return (bufferRecords = null); });
        source.subscribe(bufferTimeSubscriber);
    });
}
exports.bufferTime = bufferTime;
//# sourceMappingURL=bufferTime.js.map

/***/ }),

/***/ 83781:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bufferToggle = void 0;
var Subscription_1 = __nccwpck_require__(79548);
var lift_1 = __nccwpck_require__(38669);
var innerFrom_1 = __nccwpck_require__(57105);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var noop_1 = __nccwpck_require__(11642);
var arrRemove_1 = __nccwpck_require__(68499);
function bufferToggle(openings, closingSelector) {
    return lift_1.operate(function (source, subscriber) {
        var buffers = [];
        innerFrom_1.innerFrom(openings).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (openValue) {
            var buffer = [];
            buffers.push(buffer);
            var closingSubscription = new Subscription_1.Subscription();
            var emitBuffer = function () {
                arrRemove_1.arrRemove(buffers, buffer);
                subscriber.next(buffer);
                closingSubscription.unsubscribe();
            };
            closingSubscription.add(innerFrom_1.innerFrom(closingSelector(openValue)).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, emitBuffer, noop_1.noop)));
        }, noop_1.noop));
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var e_1, _a;
            try {
                for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {
                    var buffer = buffers_1_1.value;
                    buffer.push(value);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }, function () {
            while (buffers.length > 0) {
                subscriber.next(buffers.shift());
            }
            subscriber.complete();
        }));
    });
}
exports.bufferToggle = bufferToggle;
//# sourceMappingURL=bufferToggle.js.map

/***/ }),

/***/ 82855:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bufferWhen = void 0;
var lift_1 = __nccwpck_require__(38669);
var noop_1 = __nccwpck_require__(11642);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
function bufferWhen(closingSelector) {
    return lift_1.operate(function (source, subscriber) {
        var buffer = null;
        var closingSubscriber = null;
        var openBuffer = function () {
            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();
            var b = buffer;
            buffer = [];
            b && subscriber.next(b);
            innerFrom_1.innerFrom(closingSelector()).subscribe((closingSubscriber = OperatorSubscriber_1.createOperatorSubscriber(subscriber, openBuffer, noop_1.noop)));
        };
        openBuffer();
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) { return buffer === null || buffer === void 0 ? void 0 : buffer.push(value); }, function () {
            buffer && subscriber.next(buffer);
            subscriber.complete();
        }, undefined, function () { return (buffer = closingSubscriber = null); }));
    });
}
exports.bufferWhen = bufferWhen;
//# sourceMappingURL=bufferWhen.js.map

/***/ }),

/***/ 37765:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.catchError = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var lift_1 = __nccwpck_require__(38669);
function catchError(selector) {
    return lift_1.operate(function (source, subscriber) {
        var innerSub = null;
        var syncUnsub = false;
        var handledResult;
        innerSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, undefined, undefined, function (err) {
            handledResult = innerFrom_1.innerFrom(selector(err, catchError(selector)(source)));
            if (innerSub) {
                innerSub.unsubscribe();
                innerSub = null;
                handledResult.subscribe(subscriber);
            }
            else {
                syncUnsub = true;
            }
        }));
        if (syncUnsub) {
            innerSub.unsubscribe();
            innerSub = null;
            handledResult.subscribe(subscriber);
        }
    });
}
exports.catchError = catchError;
//# sourceMappingURL=catchError.js.map

/***/ }),

/***/ 88817:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.combineAll = void 0;
var combineLatestAll_1 = __nccwpck_require__(91063);
exports.combineAll = combineLatestAll_1.combineLatestAll;
//# sourceMappingURL=combineAll.js.map

/***/ }),

/***/ 96008:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.combineLatest = void 0;
var combineLatest_1 = __nccwpck_require__(46843);
var lift_1 = __nccwpck_require__(38669);
var argsOrArgArray_1 = __nccwpck_require__(18824);
var mapOneOrManyArgs_1 = __nccwpck_require__(78934);
var pipe_1 = __nccwpck_require__(49587);
var args_1 = __nccwpck_require__(34890);
function combineLatest() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var resultSelector = args_1.popResultSelector(args);
    return resultSelector
        ? pipe_1.pipe(combineLatest.apply(void 0, __spreadArray([], __read(args))), mapOneOrManyArgs_1.mapOneOrManyArgs(resultSelector))
        : lift_1.operate(function (source, subscriber) {
            combineLatest_1.combineLatestInit(__spreadArray([source], __read(argsOrArgArray_1.argsOrArgArray(args))))(subscriber);
        });
}
exports.combineLatest = combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),

/***/ 91063:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.combineLatestAll = void 0;
var combineLatest_1 = __nccwpck_require__(46843);
var joinAllInternals_1 = __nccwpck_require__(29341);
function combineLatestAll(project) {
    return joinAllInternals_1.joinAllInternals(combineLatest_1.combineLatest, project);
}
exports.combineLatestAll = combineLatestAll;
//# sourceMappingURL=combineLatestAll.js.map

/***/ }),

/***/ 19044:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.combineLatestWith = void 0;
var combineLatest_1 = __nccwpck_require__(96008);
function combineLatestWith() {
    var otherSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        otherSources[_i] = arguments[_i];
    }
    return combineLatest_1.combineLatest.apply(void 0, __spreadArray([], __read(otherSources)));
}
exports.combineLatestWith = combineLatestWith;
//# sourceMappingURL=combineLatestWith.js.map

/***/ }),

/***/ 18500:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.concat = void 0;
var lift_1 = __nccwpck_require__(38669);
var concatAll_1 = __nccwpck_require__(88049);
var args_1 = __nccwpck_require__(34890);
var from_1 = __nccwpck_require__(18309);
function concat() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args_1.popScheduler(args);
    return lift_1.operate(function (source, subscriber) {
        concatAll_1.concatAll()(from_1.from(__spreadArray([source], __read(args)), scheduler)).subscribe(subscriber);
    });
}
exports.concat = concat;
//# sourceMappingURL=concat.js.map

/***/ }),

/***/ 88049:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.concatAll = void 0;
var mergeAll_1 = __nccwpck_require__(2057);
function concatAll() {
    return mergeAll_1.mergeAll(1);
}
exports.concatAll = concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ }),

/***/ 19130:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.concatMap = void 0;
var mergeMap_1 = __nccwpck_require__(69914);
var isFunction_1 = __nccwpck_require__(67206);
function concatMap(project, resultSelector) {
    return isFunction_1.isFunction(resultSelector) ? mergeMap_1.mergeMap(project, resultSelector, 1) : mergeMap_1.mergeMap(project, 1);
}
exports.concatMap = concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ }),

/***/ 61596:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.concatMapTo = void 0;
var concatMap_1 = __nccwpck_require__(19130);
var isFunction_1 = __nccwpck_require__(67206);
function concatMapTo(innerObservable, resultSelector) {
    return isFunction_1.isFunction(resultSelector) ? concatMap_1.concatMap(function () { return innerObservable; }, resultSelector) : concatMap_1.concatMap(function () { return innerObservable; });
}
exports.concatMapTo = concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ }),

/***/ 97998:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.concatWith = void 0;
var concat_1 = __nccwpck_require__(18500);
function concatWith() {
    var otherSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        otherSources[_i] = arguments[_i];
    }
    return concat_1.concat.apply(void 0, __spreadArray([], __read(otherSources)));
}
exports.concatWith = concatWith;
//# sourceMappingURL=concatWith.js.map

/***/ }),

/***/ 51101:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.connect = void 0;
var Subject_1 = __nccwpck_require__(49944);
var innerFrom_1 = __nccwpck_require__(57105);
var lift_1 = __nccwpck_require__(38669);
var fromSubscribable_1 = __nccwpck_require__(66513);
var DEFAULT_CONFIG = {
    connector: function () { return new Subject_1.Subject(); },
};
function connect(selector, config) {
    if (config === void 0) { config = DEFAULT_CONFIG; }
    var connector = config.connector;
    return lift_1.operate(function (source, subscriber) {
        var subject = connector();
        innerFrom_1.innerFrom(selector(fromSubscribable_1.fromSubscribable(subject))).subscribe(subscriber);
        subscriber.add(source.subscribe(subject));
    });
}
exports.connect = connect;
//# sourceMappingURL=connect.js.map

/***/ }),

/***/ 36571:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.count = void 0;
var reduce_1 = __nccwpck_require__(62087);
function count(predicate) {
    return reduce_1.reduce(function (total, value, i) { return (!predicate || predicate(value, i) ? total + 1 : total); }, 0);
}
exports.count = count;
//# sourceMappingURL=count.js.map

/***/ }),

/***/ 19348:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.debounce = void 0;
var lift_1 = __nccwpck_require__(38669);
var noop_1 = __nccwpck_require__(11642);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
function debounce(durationSelector) {
    return lift_1.operate(function (source, subscriber) {
        var hasValue = false;
        var lastValue = null;
        var durationSubscriber = null;
        var emit = function () {
            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
            durationSubscriber = null;
            if (hasValue) {
                hasValue = false;
                var value = lastValue;
                lastValue = null;
                subscriber.next(value);
            }
        };
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
            hasValue = true;
            lastValue = value;
            durationSubscriber = OperatorSubscriber_1.createOperatorSubscriber(subscriber, emit, noop_1.noop);
            innerFrom_1.innerFrom(durationSelector(value)).subscribe(durationSubscriber);
        }, function () {
            emit();
            subscriber.complete();
        }, undefined, function () {
            lastValue = durationSubscriber = null;
        }));
    });
}
exports.debounce = debounce;
//# sourceMappingURL=debounce.js.map

/***/ }),

/***/ 62379:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.debounceTime = void 0;
var async_1 = __nccwpck_require__(76072);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.asyncScheduler; }
    return lift_1.operate(function (source, subscriber) {
        var activeTask = null;
        var lastValue = null;
        var lastTime = null;
        var emit = function () {
            if (activeTask) {
                activeTask.unsubscribe();
                activeTask = null;
                var value = lastValue;
                lastValue = null;
                subscriber.next(value);
            }
        };
        function emitWhenIdle() {
            var targetTime = lastTime + dueTime;
            var now = scheduler.now();
            if (now < targetTime) {
                activeTask = this.schedule(undefined, targetTime - now);
                subscriber.add(activeTask);
                return;
            }
            emit();
        }
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            lastValue = value;
            lastTime = scheduler.now();
            if (!activeTask) {
                activeTask = scheduler.schedule(emitWhenIdle, dueTime);
                subscriber.add(activeTask);
            }
        }, function () {
            emit();
            subscriber.complete();
        }, undefined, function () {
            lastValue = activeTask = null;
        }));
    });
}
exports.debounceTime = debounceTime;
//# sourceMappingURL=debounceTime.js.map

/***/ }),

/***/ 30621:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.defaultIfEmpty = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function defaultIfEmpty(defaultValue) {
    return lift_1.operate(function (source, subscriber) {
        var hasValue = false;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            hasValue = true;
            subscriber.next(value);
        }, function () {
            if (!hasValue) {
                subscriber.next(defaultValue);
            }
            subscriber.complete();
        }));
    });
}
exports.defaultIfEmpty = defaultIfEmpty;
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),

/***/ 99818:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.delay = void 0;
var async_1 = __nccwpck_require__(76072);
var delayWhen_1 = __nccwpck_require__(16994);
var timer_1 = __nccwpck_require__(59757);
function delay(due, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.asyncScheduler; }
    var duration = timer_1.timer(due, scheduler);
    return delayWhen_1.delayWhen(function () { return duration; });
}
exports.delay = delay;
//# sourceMappingURL=delay.js.map

/***/ }),

/***/ 16994:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.delayWhen = void 0;
var concat_1 = __nccwpck_require__(4675);
var take_1 = __nccwpck_require__(33698);
var ignoreElements_1 = __nccwpck_require__(31062);
var mapTo_1 = __nccwpck_require__(52300);
var mergeMap_1 = __nccwpck_require__(69914);
var innerFrom_1 = __nccwpck_require__(57105);
function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return function (source) {
            return concat_1.concat(subscriptionDelay.pipe(take_1.take(1), ignoreElements_1.ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));
        };
    }
    return mergeMap_1.mergeMap(function (value, index) { return innerFrom_1.innerFrom(delayDurationSelector(value, index)).pipe(take_1.take(1), mapTo_1.mapTo(value)); });
}
exports.delayWhen = delayWhen;
//# sourceMappingURL=delayWhen.js.map

/***/ }),

/***/ 95338:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dematerialize = void 0;
var Notification_1 = __nccwpck_require__(12241);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function dematerialize() {
    return lift_1.operate(function (source, subscriber) {
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (notification) { return Notification_1.observeNotification(notification, subscriber); }));
    });
}
exports.dematerialize = dematerialize;
//# sourceMappingURL=dematerialize.js.map

/***/ }),

/***/ 52594:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.distinct = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var noop_1 = __nccwpck_require__(11642);
var innerFrom_1 = __nccwpck_require__(57105);
function distinct(keySelector, flushes) {
    return lift_1.operate(function (source, subscriber) {
        var distinctKeys = new Set();
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var key = keySelector ? keySelector(value) : value;
            if (!distinctKeys.has(key)) {
                distinctKeys.add(key);
                subscriber.next(value);
            }
        }));
        flushes && innerFrom_1.innerFrom(flushes).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () { return distinctKeys.clear(); }, noop_1.noop));
    });
}
exports.distinct = distinct;
//# sourceMappingURL=distinct.js.map

/***/ }),

/***/ 20632:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.distinctUntilChanged = void 0;
var identity_1 = __nccwpck_require__(60283);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function distinctUntilChanged(comparator, keySelector) {
    if (keySelector === void 0) { keySelector = identity_1.identity; }
    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;
    return lift_1.operate(function (source, subscriber) {
        var previousKey;
        var first = true;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var currentKey = keySelector(value);
            if (first || !comparator(previousKey, currentKey)) {
                first = false;
                previousKey = currentKey;
                subscriber.next(value);
            }
        }));
    });
}
exports.distinctUntilChanged = distinctUntilChanged;
function defaultCompare(a, b) {
    return a === b;
}
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),

/***/ 13809:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.distinctUntilKeyChanged = void 0;
var distinctUntilChanged_1 = __nccwpck_require__(20632);
function distinctUntilKeyChanged(key, compare) {
    return distinctUntilChanged_1.distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
}
exports.distinctUntilKeyChanged = distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),

/***/ 73381:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.elementAt = void 0;
var ArgumentOutOfRangeError_1 = __nccwpck_require__(49796);
var filter_1 = __nccwpck_require__(36894);
var throwIfEmpty_1 = __nccwpck_require__(91566);
var defaultIfEmpty_1 = __nccwpck_require__(30621);
var take_1 = __nccwpck_require__(33698);
function elementAt(index, defaultValue) {
    if (index < 0) {
        throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();
    }
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(filter_1.filter(function (v, i) { return i === index; }), take_1.take(1), hasDefaultValue ? defaultIfEmpty_1.defaultIfEmpty(defaultValue) : throwIfEmpty_1.throwIfEmpty(function () { return new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError(); }));
    };
}
exports.elementAt = elementAt;
//# sourceMappingURL=elementAt.js.map

/***/ }),

/***/ 42961:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.endWith = void 0;
var concat_1 = __nccwpck_require__(4675);
var of_1 = __nccwpck_require__(72163);
function endWith() {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return function (source) { return concat_1.concat(source, of_1.of.apply(void 0, __spreadArray([], __read(values)))); };
}
exports.endWith = endWith;
//# sourceMappingURL=endWith.js.map

/***/ }),

/***/ 69559:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.every = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function every(predicate, thisArg) {
    return lift_1.operate(function (source, subscriber) {
        var index = 0;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            if (!predicate.call(thisArg, value, index++, source)) {
                subscriber.next(false);
                subscriber.complete();
            }
        }, function () {
            subscriber.next(true);
            subscriber.complete();
        }));
    });
}
exports.every = every;
//# sourceMappingURL=every.js.map

/***/ }),

/***/ 75686:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.exhaust = void 0;
var exhaustAll_1 = __nccwpck_require__(79777);
exports.exhaust = exhaustAll_1.exhaustAll;
//# sourceMappingURL=exhaust.js.map

/***/ }),

/***/ 79777:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.exhaustAll = void 0;
var exhaustMap_1 = __nccwpck_require__(21527);
var identity_1 = __nccwpck_require__(60283);
function exhaustAll() {
    return exhaustMap_1.exhaustMap(identity_1.identity);
}
exports.exhaustAll = exhaustAll;
//# sourceMappingURL=exhaustAll.js.map

/***/ }),

/***/ 21527:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.exhaustMap = void 0;
var map_1 = __nccwpck_require__(5987);
var innerFrom_1 = __nccwpck_require__(57105);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function exhaustMap(project, resultSelector) {
    if (resultSelector) {
        return function (source) {
            return source.pipe(exhaustMap(function (a, i) { return innerFrom_1.innerFrom(project(a, i)).pipe(map_1.map(function (b, ii) { return resultSelector(a, b, i, ii); })); }));
        };
    }
    return lift_1.operate(function (source, subscriber) {
        var index = 0;
        var innerSub = null;
        var isComplete = false;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (outerValue) {
            if (!innerSub) {
                innerSub = OperatorSubscriber_1.createOperatorSubscriber(subscriber, undefined, function () {
                    innerSub = null;
                    isComplete && subscriber.complete();
                });
                innerFrom_1.innerFrom(project(outerValue, index++)).subscribe(innerSub);
            }
        }, function () {
            isComplete = true;
            !innerSub && subscriber.complete();
        }));
    });
}
exports.exhaustMap = exhaustMap;
//# sourceMappingURL=exhaustMap.js.map

/***/ }),

/***/ 21585:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.expand = void 0;
var lift_1 = __nccwpck_require__(38669);
var mergeInternals_1 = __nccwpck_require__(48246);
function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) { concurrent = Infinity; }
    concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;
    return lift_1.operate(function (source, subscriber) {
        return mergeInternals_1.mergeInternals(source, subscriber, project, concurrent, undefined, true, scheduler);
    });
}
exports.expand = expand;
//# sourceMappingURL=expand.js.map

/***/ }),

/***/ 36894:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.filter = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function filter(predicate, thisArg) {
    return lift_1.operate(function (source, subscriber) {
        var index = 0;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));
    });
}
exports.filter = filter;
//# sourceMappingURL=filter.js.map

/***/ }),

/***/ 4013:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.finalize = void 0;
var lift_1 = __nccwpck_require__(38669);
function finalize(callback) {
    return lift_1.operate(function (source, subscriber) {
        try {
            source.subscribe(subscriber);
        }
        finally {
            subscriber.add(callback);
        }
    });
}
exports.finalize = finalize;
//# sourceMappingURL=finalize.js.map

/***/ }),

/***/ 28981:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createFind = exports.find = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function find(predicate, thisArg) {
    return lift_1.operate(createFind(predicate, thisArg, 'value'));
}
exports.find = find;
function createFind(predicate, thisArg, emit) {
    var findIndex = emit === 'index';
    return function (source, subscriber) {
        var index = 0;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var i = index++;
            if (predicate.call(thisArg, value, i, source)) {
                subscriber.next(findIndex ? i : value);
                subscriber.complete();
            }
        }, function () {
            subscriber.next(findIndex ? -1 : undefined);
            subscriber.complete();
        }));
    };
}
exports.createFind = createFind;
//# sourceMappingURL=find.js.map

/***/ }),

/***/ 92602:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.findIndex = void 0;
var lift_1 = __nccwpck_require__(38669);
var find_1 = __nccwpck_require__(28981);
function findIndex(predicate, thisArg) {
    return lift_1.operate(find_1.createFind(predicate, thisArg, 'index'));
}
exports.findIndex = findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ }),

/***/ 63345:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.first = void 0;
var EmptyError_1 = __nccwpck_require__(99391);
var filter_1 = __nccwpck_require__(36894);
var take_1 = __nccwpck_require__(33698);
var defaultIfEmpty_1 = __nccwpck_require__(30621);
var throwIfEmpty_1 = __nccwpck_require__(91566);
var identity_1 = __nccwpck_require__(60283);
function first(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(predicate ? filter_1.filter(function (v, i) { return predicate(v, i, source); }) : identity_1.identity, take_1.take(1), hasDefaultValue ? defaultIfEmpty_1.defaultIfEmpty(defaultValue) : throwIfEmpty_1.throwIfEmpty(function () { return new EmptyError_1.EmptyError(); }));
    };
}
exports.first = first;
//# sourceMappingURL=first.js.map

/***/ }),

/***/ 40186:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.flatMap = void 0;
var mergeMap_1 = __nccwpck_require__(69914);
exports.flatMap = mergeMap_1.mergeMap;
//# sourceMappingURL=flatMap.js.map

/***/ }),

/***/ 51650:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.groupBy = void 0;
var Observable_1 = __nccwpck_require__(53014);
var innerFrom_1 = __nccwpck_require__(57105);
var Subject_1 = __nccwpck_require__(49944);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function groupBy(keySelector, elementOrOptions, duration, connector) {
    return lift_1.operate(function (source, subscriber) {
        var element;
        if (!elementOrOptions || typeof elementOrOptions === 'function') {
            element = elementOrOptions;
        }
        else {
            (duration = elementOrOptions.duration, element = elementOrOptions.element, connector = elementOrOptions.connector);
        }
        var groups = new Map();
        var notify = function (cb) {
            groups.forEach(cb);
            cb(subscriber);
        };
        var handleError = function (err) { return notify(function (consumer) { return consumer.error(err); }); };
        var activeGroups = 0;
        var teardownAttempted = false;
        var groupBySourceSubscriber = new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {
            try {
                var key_1 = keySelector(value);
                var group_1 = groups.get(key_1);
                if (!group_1) {
                    groups.set(key_1, (group_1 = connector ? connector() : new Subject_1.Subject()));
                    var grouped = createGroupedObservable(key_1, group_1);
                    subscriber.next(grouped);
                    if (duration) {
                        var durationSubscriber_1 = OperatorSubscriber_1.createOperatorSubscriber(group_1, function () {
                            group_1.complete();
                            durationSubscriber_1 === null || durationSubscriber_1 === void 0 ? void 0 : durationSubscriber_1.unsubscribe();
                        }, undefined, undefined, function () { return groups.delete(key_1); });
                        groupBySourceSubscriber.add(innerFrom_1.innerFrom(duration(grouped)).subscribe(durationSubscriber_1));
                    }
                }
                group_1.next(element ? element(value) : value);
            }
            catch (err) {
                handleError(err);
            }
        }, function () { return notify(function (consumer) { return consumer.complete(); }); }, handleError, function () { return groups.clear(); }, function () {
            teardownAttempted = true;
            return activeGroups === 0;
        });
        source.subscribe(groupBySourceSubscriber);
        function createGroupedObservable(key, groupSubject) {
            var result = new Observable_1.Observable(function (groupSubscriber) {
                activeGroups++;
                var innerSub = groupSubject.subscribe(groupSubscriber);
                return function () {
                    innerSub.unsubscribe();
                    --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();
                };
            });
            result.key = key;
            return result;
        }
    });
}
exports.groupBy = groupBy;
//# sourceMappingURL=groupBy.js.map

/***/ }),

/***/ 31062:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ignoreElements = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var noop_1 = __nccwpck_require__(11642);
function ignoreElements() {
    return lift_1.operate(function (source, subscriber) {
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, noop_1.noop));
    });
}
exports.ignoreElements = ignoreElements;
//# sourceMappingURL=ignoreElements.js.map

/***/ }),

/***/ 77722:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isEmpty = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function isEmpty() {
    return lift_1.operate(function (source, subscriber) {
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {
            subscriber.next(false);
            subscriber.complete();
        }, function () {
            subscriber.next(true);
            subscriber.complete();
        }));
    });
}
exports.isEmpty = isEmpty;
//# sourceMappingURL=isEmpty.js.map

/***/ }),

/***/ 29341:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.joinAllInternals = void 0;
var identity_1 = __nccwpck_require__(60283);
var mapOneOrManyArgs_1 = __nccwpck_require__(78934);
var pipe_1 = __nccwpck_require__(49587);
var mergeMap_1 = __nccwpck_require__(69914);
var toArray_1 = __nccwpck_require__(35114);
function joinAllInternals(joinFn, project) {
    return pipe_1.pipe(toArray_1.toArray(), mergeMap_1.mergeMap(function (sources) { return joinFn(sources); }), project ? mapOneOrManyArgs_1.mapOneOrManyArgs(project) : identity_1.identity);
}
exports.joinAllInternals = joinAllInternals;
//# sourceMappingURL=joinAllInternals.js.map

/***/ }),

/***/ 46831:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.last = void 0;
var EmptyError_1 = __nccwpck_require__(99391);
var filter_1 = __nccwpck_require__(36894);
var takeLast_1 = __nccwpck_require__(65041);
var throwIfEmpty_1 = __nccwpck_require__(91566);
var defaultIfEmpty_1 = __nccwpck_require__(30621);
var identity_1 = __nccwpck_require__(60283);
function last(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(predicate ? filter_1.filter(function (v, i) { return predicate(v, i, source); }) : identity_1.identity, takeLast_1.takeLast(1), hasDefaultValue ? defaultIfEmpty_1.defaultIfEmpty(defaultValue) : throwIfEmpty_1.throwIfEmpty(function () { return new EmptyError_1.EmptyError(); }));
    };
}
exports.last = last;
//# sourceMappingURL=last.js.map

/***/ }),

/***/ 5987:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.map = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function map(project, thisArg) {
    return lift_1.operate(function (source, subscriber) {
        var index = 0;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            subscriber.next(project.call(thisArg, value, index++));
        }));
    });
}
exports.map = map;
//# sourceMappingURL=map.js.map

/***/ }),

/***/ 52300:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mapTo = void 0;
var map_1 = __nccwpck_require__(5987);
function mapTo(value) {
    return map_1.map(function () { return value; });
}
exports.mapTo = mapTo;
//# sourceMappingURL=mapTo.js.map

/***/ }),

/***/ 67108:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.materialize = void 0;
var Notification_1 = __nccwpck_require__(12241);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function materialize() {
    return lift_1.operate(function (source, subscriber) {
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            subscriber.next(Notification_1.Notification.createNext(value));
        }, function () {
            subscriber.next(Notification_1.Notification.createComplete());
            subscriber.complete();
        }, function (err) {
            subscriber.next(Notification_1.Notification.createError(err));
            subscriber.complete();
        }));
    });
}
exports.materialize = materialize;
//# sourceMappingURL=materialize.js.map

/***/ }),

/***/ 17314:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.max = void 0;
var reduce_1 = __nccwpck_require__(62087);
var isFunction_1 = __nccwpck_require__(67206);
function max(comparer) {
    return reduce_1.reduce(isFunction_1.isFunction(comparer) ? function (x, y) { return (comparer(x, y) > 0 ? x : y); } : function (x, y) { return (x > y ? x : y); });
}
exports.max = max;
//# sourceMappingURL=max.js.map

/***/ }),

/***/ 39510:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.merge = void 0;
var lift_1 = __nccwpck_require__(38669);
var argsOrArgArray_1 = __nccwpck_require__(18824);
var mergeAll_1 = __nccwpck_require__(2057);
var args_1 = __nccwpck_require__(34890);
var from_1 = __nccwpck_require__(18309);
function merge() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args_1.popScheduler(args);
    var concurrent = args_1.popNumber(args, Infinity);
    args = argsOrArgArray_1.argsOrArgArray(args);
    return lift_1.operate(function (source, subscriber) {
        mergeAll_1.mergeAll(concurrent)(from_1.from(__spreadArray([source], __read(args)), scheduler)).subscribe(subscriber);
    });
}
exports.merge = merge;
//# sourceMappingURL=merge.js.map

/***/ }),

/***/ 2057:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mergeAll = void 0;
var mergeMap_1 = __nccwpck_require__(69914);
var identity_1 = __nccwpck_require__(60283);
function mergeAll(concurrent) {
    if (concurrent === void 0) { concurrent = Infinity; }
    return mergeMap_1.mergeMap(identity_1.identity, concurrent);
}
exports.mergeAll = mergeAll;
//# sourceMappingURL=mergeAll.js.map

/***/ }),

/***/ 48246:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mergeInternals = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var executeSchedule_1 = __nccwpck_require__(82877);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {
    var buffer = [];
    var active = 0;
    var index = 0;
    var isComplete = false;
    var checkComplete = function () {
        if (isComplete && !buffer.length && !active) {
            subscriber.complete();
        }
    };
    var outerNext = function (value) { return (active < concurrent ? doInnerSub(value) : buffer.push(value)); };
    var doInnerSub = function (value) {
        expand && subscriber.next(value);
        active++;
        var innerComplete = false;
        innerFrom_1.innerFrom(project(value, index++)).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (innerValue) {
            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);
            if (expand) {
                outerNext(innerValue);
            }
            else {
                subscriber.next(innerValue);
            }
        }, function () {
            innerComplete = true;
        }, undefined, function () {
            if (innerComplete) {
                try {
                    active--;
                    var _loop_1 = function () {
                        var bufferedValue = buffer.shift();
                        if (innerSubScheduler) {
                            executeSchedule_1.executeSchedule(subscriber, innerSubScheduler, function () { return doInnerSub(bufferedValue); });
                        }
                        else {
                            doInnerSub(bufferedValue);
                        }
                    };
                    while (buffer.length && active < concurrent) {
                        _loop_1();
                    }
                    checkComplete();
                }
                catch (err) {
                    subscriber.error(err);
                }
            }
        }));
    };
    source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, outerNext, function () {
        isComplete = true;
        checkComplete();
    }));
    return function () {
        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();
    };
}
exports.mergeInternals = mergeInternals;
//# sourceMappingURL=mergeInternals.js.map

/***/ }),

/***/ 69914:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mergeMap = void 0;
var map_1 = __nccwpck_require__(5987);
var innerFrom_1 = __nccwpck_require__(57105);
var lift_1 = __nccwpck_require__(38669);
var mergeInternals_1 = __nccwpck_require__(48246);
var isFunction_1 = __nccwpck_require__(67206);
function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Infinity; }
    if (isFunction_1.isFunction(resultSelector)) {
        return mergeMap(function (a, i) { return map_1.map(function (b, ii) { return resultSelector(a, b, i, ii); })(innerFrom_1.innerFrom(project(a, i))); }, concurrent);
    }
    else if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return lift_1.operate(function (source, subscriber) { return mergeInternals_1.mergeInternals(source, subscriber, project, concurrent); });
}
exports.mergeMap = mergeMap;
//# sourceMappingURL=mergeMap.js.map

/***/ }),

/***/ 49151:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mergeMapTo = void 0;
var mergeMap_1 = __nccwpck_require__(69914);
var isFunction_1 = __nccwpck_require__(67206);
function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Infinity; }
    if (isFunction_1.isFunction(resultSelector)) {
        return mergeMap_1.mergeMap(function () { return innerObservable; }, resultSelector, concurrent);
    }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return mergeMap_1.mergeMap(function () { return innerObservable; }, concurrent);
}
exports.mergeMapTo = mergeMapTo;
//# sourceMappingURL=mergeMapTo.js.map

/***/ }),

/***/ 11519:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mergeScan = void 0;
var lift_1 = __nccwpck_require__(38669);
var mergeInternals_1 = __nccwpck_require__(48246);
function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) { concurrent = Infinity; }
    return lift_1.operate(function (source, subscriber) {
        var state = seed;
        return mergeInternals_1.mergeInternals(source, subscriber, function (value, index) { return accumulator(state, value, index); }, concurrent, function (value) {
            state = value;
        }, false, undefined, function () { return (state = null); });
    });
}
exports.mergeScan = mergeScan;
//# sourceMappingURL=mergeScan.js.map

/***/ }),

/***/ 31564:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mergeWith = void 0;
var merge_1 = __nccwpck_require__(39510);
function mergeWith() {
    var otherSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        otherSources[_i] = arguments[_i];
    }
    return merge_1.merge.apply(void 0, __spreadArray([], __read(otherSources)));
}
exports.mergeWith = mergeWith;
//# sourceMappingURL=mergeWith.js.map

/***/ }),

/***/ 87641:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.min = void 0;
var reduce_1 = __nccwpck_require__(62087);
var isFunction_1 = __nccwpck_require__(67206);
function min(comparer) {
    return reduce_1.reduce(isFunction_1.isFunction(comparer) ? function (x, y) { return (comparer(x, y) < 0 ? x : y); } : function (x, y) { return (x < y ? x : y); });
}
exports.min = min;
//# sourceMappingURL=min.js.map

/***/ }),

/***/ 65457:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.multicast = void 0;
var ConnectableObservable_1 = __nccwpck_require__(30420);
var isFunction_1 = __nccwpck_require__(67206);
var connect_1 = __nccwpck_require__(51101);
function multicast(subjectOrSubjectFactory, selector) {
    var subjectFactory = isFunction_1.isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () { return subjectOrSubjectFactory; };
    if (isFunction_1.isFunction(selector)) {
        return connect_1.connect(selector, {
            connector: subjectFactory,
        });
    }
    return function (source) { return new ConnectableObservable_1.ConnectableObservable(source, subjectFactory); };
}
exports.multicast = multicast;
//# sourceMappingURL=multicast.js.map

/***/ }),

/***/ 22451:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.observeOn = void 0;
var executeSchedule_1 = __nccwpck_require__(82877);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function observeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return lift_1.operate(function (source, subscriber) {
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) { return executeSchedule_1.executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule_1.executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule_1.executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));
    });
}
exports.observeOn = observeOn;
//# sourceMappingURL=observeOn.js.map

/***/ }),

/***/ 33569:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.onErrorResumeNext = exports.onErrorResumeNextWith = void 0;
var argsOrArgArray_1 = __nccwpck_require__(18824);
var onErrorResumeNext_1 = __nccwpck_require__(16089);
function onErrorResumeNextWith() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    var nextSources = argsOrArgArray_1.argsOrArgArray(sources);
    return function (source) { return onErrorResumeNext_1.onErrorResumeNext.apply(void 0, __spreadArray([source], __read(nextSources))); };
}
exports.onErrorResumeNextWith = onErrorResumeNextWith;
exports.onErrorResumeNext = onErrorResumeNextWith;
//# sourceMappingURL=onErrorResumeNextWith.js.map

/***/ }),

/***/ 52206:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pairwise = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function pairwise() {
    return lift_1.operate(function (source, subscriber) {
        var prev;
        var hasPrev = false;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var p = prev;
            prev = value;
            hasPrev && subscriber.next([p, value]);
            hasPrev = true;
        }));
    });
}
exports.pairwise = pairwise;
//# sourceMappingURL=pairwise.js.map

/***/ }),

/***/ 16073:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pluck = void 0;
var map_1 = __nccwpck_require__(5987);
function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return map_1.map(function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp === null || currentProp === void 0 ? void 0 : currentProp[properties[i]];
            if (typeof p !== 'undefined') {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    });
}
exports.pluck = pluck;
//# sourceMappingURL=pluck.js.map

/***/ }),

/***/ 84084:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.publish = void 0;
var Subject_1 = __nccwpck_require__(49944);
var multicast_1 = __nccwpck_require__(65457);
var connect_1 = __nccwpck_require__(51101);
function publish(selector) {
    return selector ? function (source) { return connect_1.connect(selector)(source); } : function (source) { return multicast_1.multicast(new Subject_1.Subject())(source); };
}
exports.publish = publish;
//# sourceMappingURL=publish.js.map

/***/ }),

/***/ 40045:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.publishBehavior = void 0;
var BehaviorSubject_1 = __nccwpck_require__(23473);
var ConnectableObservable_1 = __nccwpck_require__(30420);
function publishBehavior(initialValue) {
    return function (source) {
        var subject = new BehaviorSubject_1.BehaviorSubject(initialValue);
        return new ConnectableObservable_1.ConnectableObservable(source, function () { return subject; });
    };
}
exports.publishBehavior = publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ }),

/***/ 84149:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.publishLast = void 0;
var AsyncSubject_1 = __nccwpck_require__(9747);
var ConnectableObservable_1 = __nccwpck_require__(30420);
function publishLast() {
    return function (source) {
        var subject = new AsyncSubject_1.AsyncSubject();
        return new ConnectableObservable_1.ConnectableObservable(source, function () { return subject; });
    };
}
exports.publishLast = publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ }),

/***/ 47656:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.publishReplay = void 0;
var ReplaySubject_1 = __nccwpck_require__(22351);
var multicast_1 = __nccwpck_require__(65457);
var isFunction_1 = __nccwpck_require__(67206);
function publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {
    if (selectorOrScheduler && !isFunction_1.isFunction(selectorOrScheduler)) {
        timestampProvider = selectorOrScheduler;
    }
    var selector = isFunction_1.isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;
    return function (source) { return multicast_1.multicast(new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source); };
}
exports.publishReplay = publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ }),

/***/ 58008:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.raceWith = void 0;
var race_1 = __nccwpck_require__(16940);
var lift_1 = __nccwpck_require__(38669);
var identity_1 = __nccwpck_require__(60283);
function raceWith() {
    var otherSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        otherSources[_i] = arguments[_i];
    }
    return !otherSources.length
        ? identity_1.identity
        : lift_1.operate(function (source, subscriber) {
            race_1.raceInit(__spreadArray([source], __read(otherSources)))(subscriber);
        });
}
exports.raceWith = raceWith;
//# sourceMappingURL=raceWith.js.map

/***/ }),

/***/ 62087:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.reduce = void 0;
var scanInternals_1 = __nccwpck_require__(20998);
var lift_1 = __nccwpck_require__(38669);
function reduce(accumulator, seed) {
    return lift_1.operate(scanInternals_1.scanInternals(accumulator, seed, arguments.length >= 2, false, true));
}
exports.reduce = reduce;
//# sourceMappingURL=reduce.js.map

/***/ }),

/***/ 2331:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.refCount = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function refCount() {
    return lift_1.operate(function (source, subscriber) {
        var connection = null;
        source._refCount++;
        var refCounter = OperatorSubscriber_1.createOperatorSubscriber(subscriber, undefined, undefined, undefined, function () {
            if (!source || source._refCount <= 0 || 0 < --source._refCount) {
                connection = null;
                return;
            }
            var sharedConnection = source._connection;
            var conn = connection;
            connection = null;
            if (sharedConnection && (!conn || sharedConnection === conn)) {
                sharedConnection.unsubscribe();
            }
            subscriber.unsubscribe();
        });
        source.subscribe(refCounter);
        if (!refCounter.closed) {
            connection = source.connect();
        }
    });
}
exports.refCount = refCount;
//# sourceMappingURL=refCount.js.map

/***/ }),

/***/ 22418:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.repeat = void 0;
var empty_1 = __nccwpck_require__(70437);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
var timer_1 = __nccwpck_require__(59757);
function repeat(countOrConfig) {
    var _a;
    var count = Infinity;
    var delay;
    if (countOrConfig != null) {
        if (typeof countOrConfig === 'object') {
            (_a = countOrConfig.count, count = _a === void 0 ? Infinity : _a, delay = countOrConfig.delay);
        }
        else {
            count = countOrConfig;
        }
    }
    return count <= 0
        ? function () { return empty_1.EMPTY; }
        : lift_1.operate(function (source, subscriber) {
            var soFar = 0;
            var sourceSub;
            var resubscribe = function () {
                sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();
                sourceSub = null;
                if (delay != null) {
                    var notifier = typeof delay === 'number' ? timer_1.timer(delay) : innerFrom_1.innerFrom(delay(soFar));
                    var notifierSubscriber_1 = OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {
                        notifierSubscriber_1.unsubscribe();
                        subscribeToSource();
                    });
                    notifier.subscribe(notifierSubscriber_1);
                }
                else {
                    subscribeToSource();
                }
            };
            var subscribeToSource = function () {
                var syncUnsub = false;
                sourceSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, undefined, function () {
                    if (++soFar < count) {
                        if (sourceSub) {
                            resubscribe();
                        }
                        else {
                            syncUnsub = true;
                        }
                    }
                    else {
                        subscriber.complete();
                    }
                }));
                if (syncUnsub) {
                    resubscribe();
                }
            };
            subscribeToSource();
        });
}
exports.repeat = repeat;
//# sourceMappingURL=repeat.js.map

/***/ }),

/***/ 70754:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.repeatWhen = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var Subject_1 = __nccwpck_require__(49944);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function repeatWhen(notifier) {
    return lift_1.operate(function (source, subscriber) {
        var innerSub;
        var syncResub = false;
        var completions$;
        var isNotifierComplete = false;
        var isMainComplete = false;
        var checkComplete = function () { return isMainComplete && isNotifierComplete && (subscriber.complete(), true); };
        var getCompletionSubject = function () {
            if (!completions$) {
                completions$ = new Subject_1.Subject();
                innerFrom_1.innerFrom(notifier(completions$)).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {
                    if (innerSub) {
                        subscribeForRepeatWhen();
                    }
                    else {
                        syncResub = true;
                    }
                }, function () {
                    isNotifierComplete = true;
                    checkComplete();
                }));
            }
            return completions$;
        };
        var subscribeForRepeatWhen = function () {
            isMainComplete = false;
            innerSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, undefined, function () {
                isMainComplete = true;
                !checkComplete() && getCompletionSubject().next();
            }));
            if (syncResub) {
                innerSub.unsubscribe();
                innerSub = null;
                syncResub = false;
                subscribeForRepeatWhen();
            }
        };
        subscribeForRepeatWhen();
    });
}
exports.repeatWhen = repeatWhen;
//# sourceMappingURL=repeatWhen.js.map

/***/ }),

/***/ 56251:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.retry = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var identity_1 = __nccwpck_require__(60283);
var timer_1 = __nccwpck_require__(59757);
var innerFrom_1 = __nccwpck_require__(57105);
function retry(configOrCount) {
    if (configOrCount === void 0) { configOrCount = Infinity; }
    var config;
    if (configOrCount && typeof configOrCount === 'object') {
        config = configOrCount;
    }
    else {
        config = {
            count: configOrCount,
        };
    }
    var _a = config.count, count = _a === void 0 ? Infinity : _a, delay = config.delay, _b = config.resetOnSuccess, resetOnSuccess = _b === void 0 ? false : _b;
    return count <= 0
        ? identity_1.identity
        : lift_1.operate(function (source, subscriber) {
            var soFar = 0;
            var innerSub;
            var subscribeForRetry = function () {
                var syncUnsub = false;
                innerSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                    if (resetOnSuccess) {
                        soFar = 0;
                    }
                    subscriber.next(value);
                }, undefined, function (err) {
                    if (soFar++ < count) {
                        var resub_1 = function () {
                            if (innerSub) {
                                innerSub.unsubscribe();
                                innerSub = null;
                                subscribeForRetry();
                            }
                            else {
                                syncUnsub = true;
                            }
                        };
                        if (delay != null) {
                            var notifier = typeof delay === 'number' ? timer_1.timer(delay) : innerFrom_1.innerFrom(delay(err, soFar));
                            var notifierSubscriber_1 = OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {
                                notifierSubscriber_1.unsubscribe();
                                resub_1();
                            }, function () {
                                subscriber.complete();
                            });
                            notifier.subscribe(notifierSubscriber_1);
                        }
                        else {
                            resub_1();
                        }
                    }
                    else {
                        subscriber.error(err);
                    }
                }));
                if (syncUnsub) {
                    innerSub.unsubscribe();
                    innerSub = null;
                    subscribeForRetry();
                }
            };
            subscribeForRetry();
        });
}
exports.retry = retry;
//# sourceMappingURL=retry.js.map

/***/ }),

/***/ 69018:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.retryWhen = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var Subject_1 = __nccwpck_require__(49944);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function retryWhen(notifier) {
    return lift_1.operate(function (source, subscriber) {
        var innerSub;
        var syncResub = false;
        var errors$;
        var subscribeForRetryWhen = function () {
            innerSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, undefined, undefined, function (err) {
                if (!errors$) {
                    errors$ = new Subject_1.Subject();
                    innerFrom_1.innerFrom(notifier(errors$)).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {
                        return innerSub ? subscribeForRetryWhen() : (syncResub = true);
                    }));
                }
                if (errors$) {
                    errors$.next(err);
                }
            }));
            if (syncResub) {
                innerSub.unsubscribe();
                innerSub = null;
                syncResub = false;
                subscribeForRetryWhen();
            }
        };
        subscribeForRetryWhen();
    });
}
exports.retryWhen = retryWhen;
//# sourceMappingURL=retryWhen.js.map

/***/ }),

/***/ 13774:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sample = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var lift_1 = __nccwpck_require__(38669);
var noop_1 = __nccwpck_require__(11642);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function sample(notifier) {
    return lift_1.operate(function (source, subscriber) {
        var hasValue = false;
        var lastValue = null;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            hasValue = true;
            lastValue = value;
        }));
        innerFrom_1.innerFrom(notifier).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {
            if (hasValue) {
                hasValue = false;
                var value = lastValue;
                lastValue = null;
                subscriber.next(value);
            }
        }, noop_1.noop));
    });
}
exports.sample = sample;
//# sourceMappingURL=sample.js.map

/***/ }),

/***/ 49807:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sampleTime = void 0;
var async_1 = __nccwpck_require__(76072);
var sample_1 = __nccwpck_require__(13774);
var interval_1 = __nccwpck_require__(20029);
function sampleTime(period, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.asyncScheduler; }
    return sample_1.sample(interval_1.interval(period, scheduler));
}
exports.sampleTime = sampleTime;
//# sourceMappingURL=sampleTime.js.map

/***/ }),

/***/ 25578:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scan = void 0;
var lift_1 = __nccwpck_require__(38669);
var scanInternals_1 = __nccwpck_require__(20998);
function scan(accumulator, seed) {
    return lift_1.operate(scanInternals_1.scanInternals(accumulator, seed, arguments.length >= 2, true));
}
exports.scan = scan;
//# sourceMappingURL=scan.js.map

/***/ }),

/***/ 20998:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scanInternals = void 0;
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {
    return function (source, subscriber) {
        var hasState = hasSeed;
        var state = seed;
        var index = 0;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var i = index++;
            state = hasState
                ?
                    accumulator(state, value, i)
                :
                    ((hasState = true), value);
            emitOnNext && subscriber.next(state);
        }, emitBeforeComplete &&
            (function () {
                hasState && subscriber.next(state);
                subscriber.complete();
            })));
    };
}
exports.scanInternals = scanInternals;
//# sourceMappingURL=scanInternals.js.map

/***/ }),

/***/ 16126:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sequenceEqual = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
function sequenceEqual(compareTo, comparator) {
    if (comparator === void 0) { comparator = function (a, b) { return a === b; }; }
    return lift_1.operate(function (source, subscriber) {
        var aState = createState();
        var bState = createState();
        var emit = function (isEqual) {
            subscriber.next(isEqual);
            subscriber.complete();
        };
        var createSubscriber = function (selfState, otherState) {
            var sequenceEqualSubscriber = OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (a) {
                var buffer = otherState.buffer, complete = otherState.complete;
                if (buffer.length === 0) {
                    complete ? emit(false) : selfState.buffer.push(a);
                }
                else {
                    !comparator(a, buffer.shift()) && emit(false);
                }
            }, function () {
                selfState.complete = true;
                var complete = otherState.complete, buffer = otherState.buffer;
                complete && emit(buffer.length === 0);
                sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();
            });
            return sequenceEqualSubscriber;
        };
        source.subscribe(createSubscriber(aState, bState));
        innerFrom_1.innerFrom(compareTo).subscribe(createSubscriber(bState, aState));
    });
}
exports.sequenceEqual = sequenceEqual;
function createState() {
    return {
        buffer: [],
        complete: false,
    };
}
//# sourceMappingURL=sequenceEqual.js.map

/***/ }),

/***/ 48960:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.share = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var Subject_1 = __nccwpck_require__(49944);
var Subscriber_1 = __nccwpck_require__(67121);
var lift_1 = __nccwpck_require__(38669);
function share(options) {
    if (options === void 0) { options = {}; }
    var _a = options.connector, connector = _a === void 0 ? function () { return new Subject_1.Subject(); } : _a, _b = options.resetOnError, resetOnError = _b === void 0 ? true : _b, _c = options.resetOnComplete, resetOnComplete = _c === void 0 ? true : _c, _d = options.resetOnRefCountZero, resetOnRefCountZero = _d === void 0 ? true : _d;
    return function (wrapperSource) {
        var connection;
        var resetConnection;
        var subject;
        var refCount = 0;
        var hasCompleted = false;
        var hasErrored = false;
        var cancelReset = function () {
            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();
            resetConnection = undefined;
        };
        var reset = function () {
            cancelReset();
            connection = subject = undefined;
            hasCompleted = hasErrored = false;
        };
        var resetAndUnsubscribe = function () {
            var conn = connection;
            reset();
            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();
        };
        return lift_1.operate(function (source, subscriber) {
            refCount++;
            if (!hasErrored && !hasCompleted) {
                cancelReset();
            }
            var dest = (subject = subject !== null && subject !== void 0 ? subject : connector());
            subscriber.add(function () {
                refCount--;
                if (refCount === 0 && !hasErrored && !hasCompleted) {
                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);
                }
            });
            dest.subscribe(subscriber);
            if (!connection &&
                refCount > 0) {
                connection = new Subscriber_1.SafeSubscriber({
                    next: function (value) { return dest.next(value); },
                    error: function (err) {
                        hasErrored = true;
                        cancelReset();
                        resetConnection = handleReset(reset, resetOnError, err);
                        dest.error(err);
                    },
                    complete: function () {
                        hasCompleted = true;
                        cancelReset();
                        resetConnection = handleReset(reset, resetOnComplete);
                        dest.complete();
                    },
                });
                innerFrom_1.innerFrom(source).subscribe(connection);
            }
        })(wrapperSource);
    };
}
exports.share = share;
function handleReset(reset, on) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    if (on === true) {
        reset();
        return;
    }
    if (on === false) {
        return;
    }
    var onSubscriber = new Subscriber_1.SafeSubscriber({
        next: function () {
            onSubscriber.unsubscribe();
            reset();
        },
    });
    return innerFrom_1.innerFrom(on.apply(void 0, __spreadArray([], __read(args)))).subscribe(onSubscriber);
}
//# sourceMappingURL=share.js.map

/***/ }),

/***/ 92118:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.shareReplay = void 0;
var ReplaySubject_1 = __nccwpck_require__(22351);
var share_1 = __nccwpck_require__(48960);
function shareReplay(configOrBufferSize, windowTime, scheduler) {
    var _a, _b, _c;
    var bufferSize;
    var refCount = false;
    if (configOrBufferSize && typeof configOrBufferSize === 'object') {
        (_a = configOrBufferSize.bufferSize, bufferSize = _a === void 0 ? Infinity : _a, _b = configOrBufferSize.windowTime, windowTime = _b === void 0 ? Infinity : _b, _c = configOrBufferSize.refCount, refCount = _c === void 0 ? false : _c, scheduler = configOrBufferSize.scheduler);
    }
    else {
        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);
    }
    return share_1.share({
        connector: function () { return new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler); },
        resetOnError: true,
        resetOnComplete: false,
        resetOnRefCountZero: refCount,
    });
}
exports.shareReplay = shareReplay;
//# sourceMappingURL=shareReplay.js.map

/***/ }),

/***/ 58441:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.single = void 0;
var EmptyError_1 = __nccwpck_require__(99391);
var SequenceError_1 = __nccwpck_require__(49048);
var NotFoundError_1 = __nccwpck_require__(74431);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function single(predicate) {
    return lift_1.operate(function (source, subscriber) {
        var hasValue = false;
        var singleValue;
        var seenValue = false;
        var index = 0;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            seenValue = true;
            if (!predicate || predicate(value, index++, source)) {
                hasValue && subscriber.error(new SequenceError_1.SequenceError('Too many matching values'));
                hasValue = true;
                singleValue = value;
            }
        }, function () {
            if (hasValue) {
                subscriber.next(singleValue);
                subscriber.complete();
            }
            else {
                subscriber.error(seenValue ? new NotFoundError_1.NotFoundError('No matching values') : new EmptyError_1.EmptyError());
            }
        }));
    });
}
exports.single = single;
//# sourceMappingURL=single.js.map

/***/ }),

/***/ 80947:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.skip = void 0;
var filter_1 = __nccwpck_require__(36894);
function skip(count) {
    return filter_1.filter(function (_, index) { return count <= index; });
}
exports.skip = skip;
//# sourceMappingURL=skip.js.map

/***/ }),

/***/ 65865:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.skipLast = void 0;
var identity_1 = __nccwpck_require__(60283);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function skipLast(skipCount) {
    return skipCount <= 0
        ?
            identity_1.identity
        : lift_1.operate(function (source, subscriber) {
            var ring = new Array(skipCount);
            var seen = 0;
            source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                var valueIndex = seen++;
                if (valueIndex < skipCount) {
                    ring[valueIndex] = value;
                }
                else {
                    var index = valueIndex % skipCount;
                    var oldValue = ring[index];
                    ring[index] = value;
                    subscriber.next(oldValue);
                }
            }));
            return function () {
                ring = null;
            };
        });
}
exports.skipLast = skipLast;
//# sourceMappingURL=skipLast.js.map

/***/ }),

/***/ 41110:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.skipUntil = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
var noop_1 = __nccwpck_require__(11642);
function skipUntil(notifier) {
    return lift_1.operate(function (source, subscriber) {
        var taking = false;
        var skipSubscriber = OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {
            skipSubscriber === null || skipSubscriber === void 0 ? void 0 : skipSubscriber.unsubscribe();
            taking = true;
        }, noop_1.noop);
        innerFrom_1.innerFrom(notifier).subscribe(skipSubscriber);
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) { return taking && subscriber.next(value); }));
    });
}
exports.skipUntil = skipUntil;
//# sourceMappingURL=skipUntil.js.map

/***/ }),

/***/ 92550:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.skipWhile = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function skipWhile(predicate) {
    return lift_1.operate(function (source, subscriber) {
        var taking = false;
        var index = 0;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) { return (taking || (taking = !predicate(value, index++))) && subscriber.next(value); }));
    });
}
exports.skipWhile = skipWhile;
//# sourceMappingURL=skipWhile.js.map

/***/ }),

/***/ 8748:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.startWith = void 0;
var concat_1 = __nccwpck_require__(4675);
var args_1 = __nccwpck_require__(34890);
var lift_1 = __nccwpck_require__(38669);
function startWith() {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    var scheduler = args_1.popScheduler(values);
    return lift_1.operate(function (source, subscriber) {
        (scheduler ? concat_1.concat(values, source, scheduler) : concat_1.concat(values, source)).subscribe(subscriber);
    });
}
exports.startWith = startWith;
//# sourceMappingURL=startWith.js.map

/***/ }),

/***/ 7224:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.subscribeOn = void 0;
var lift_1 = __nccwpck_require__(38669);
function subscribeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return lift_1.operate(function (source, subscriber) {
        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));
    });
}
exports.subscribeOn = subscribeOn;
//# sourceMappingURL=subscribeOn.js.map

/***/ }),

/***/ 40327:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.switchAll = void 0;
var switchMap_1 = __nccwpck_require__(26704);
var identity_1 = __nccwpck_require__(60283);
function switchAll() {
    return switchMap_1.switchMap(identity_1.identity);
}
exports.switchAll = switchAll;
//# sourceMappingURL=switchAll.js.map

/***/ }),

/***/ 26704:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.switchMap = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function switchMap(project, resultSelector) {
    return lift_1.operate(function (source, subscriber) {
        var innerSubscriber = null;
        var index = 0;
        var isComplete = false;
        var checkComplete = function () { return isComplete && !innerSubscriber && subscriber.complete(); };
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();
            var innerIndex = 0;
            var outerIndex = index++;
            innerFrom_1.innerFrom(project(value, outerIndex)).subscribe((innerSubscriber = OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (innerValue) { return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue); }, function () {
                innerSubscriber = null;
                checkComplete();
            })));
        }, function () {
            isComplete = true;
            checkComplete();
        }));
    });
}
exports.switchMap = switchMap;
//# sourceMappingURL=switchMap.js.map

/***/ }),

/***/ 1713:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.switchMapTo = void 0;
var switchMap_1 = __nccwpck_require__(26704);
var isFunction_1 = __nccwpck_require__(67206);
function switchMapTo(innerObservable, resultSelector) {
    return isFunction_1.isFunction(resultSelector) ? switchMap_1.switchMap(function () { return innerObservable; }, resultSelector) : switchMap_1.switchMap(function () { return innerObservable; });
}
exports.switchMapTo = switchMapTo;
//# sourceMappingURL=switchMapTo.js.map

/***/ }),

/***/ 13355:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.switchScan = void 0;
var switchMap_1 = __nccwpck_require__(26704);
var lift_1 = __nccwpck_require__(38669);
function switchScan(accumulator, seed) {
    return lift_1.operate(function (source, subscriber) {
        var state = seed;
        switchMap_1.switchMap(function (value, index) { return accumulator(state, value, index); }, function (_, innerValue) { return ((state = innerValue), innerValue); })(source).subscribe(subscriber);
        return function () {
            state = null;
        };
    });
}
exports.switchScan = switchScan;
//# sourceMappingURL=switchScan.js.map

/***/ }),

/***/ 33698:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.take = void 0;
var empty_1 = __nccwpck_require__(70437);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function take(count) {
    return count <= 0
        ?
            function () { return empty_1.EMPTY; }
        : lift_1.operate(function (source, subscriber) {
            var seen = 0;
            source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                if (++seen <= count) {
                    subscriber.next(value);
                    if (count <= seen) {
                        subscriber.complete();
                    }
                }
            }));
        });
}
exports.take = take;
//# sourceMappingURL=take.js.map

/***/ }),

/***/ 65041:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.takeLast = void 0;
var empty_1 = __nccwpck_require__(70437);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function takeLast(count) {
    return count <= 0
        ? function () { return empty_1.EMPTY; }
        : lift_1.operate(function (source, subscriber) {
            var buffer = [];
            source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                buffer.push(value);
                count < buffer.length && buffer.shift();
            }, function () {
                var e_1, _a;
                try {
                    for (var buffer_1 = __values(buffer), buffer_1_1 = buffer_1.next(); !buffer_1_1.done; buffer_1_1 = buffer_1.next()) {
                        var value = buffer_1_1.value;
                        subscriber.next(value);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (buffer_1_1 && !buffer_1_1.done && (_a = buffer_1.return)) _a.call(buffer_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                subscriber.complete();
            }, undefined, function () {
                buffer = null;
            }));
        });
}
exports.takeLast = takeLast;
//# sourceMappingURL=takeLast.js.map

/***/ }),

/***/ 55150:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.takeUntil = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
var noop_1 = __nccwpck_require__(11642);
function takeUntil(notifier) {
    return lift_1.operate(function (source, subscriber) {
        innerFrom_1.innerFrom(notifier).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () { return subscriber.complete(); }, noop_1.noop));
        !subscriber.closed && source.subscribe(subscriber);
    });
}
exports.takeUntil = takeUntil;
//# sourceMappingURL=takeUntil.js.map

/***/ }),

/***/ 76700:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.takeWhile = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function takeWhile(predicate, inclusive) {
    if (inclusive === void 0) { inclusive = false; }
    return lift_1.operate(function (source, subscriber) {
        var index = 0;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var result = predicate(value, index++);
            (result || inclusive) && subscriber.next(value);
            !result && subscriber.complete();
        }));
    });
}
exports.takeWhile = takeWhile;
//# sourceMappingURL=takeWhile.js.map

/***/ }),

/***/ 48845:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.tap = void 0;
var isFunction_1 = __nccwpck_require__(67206);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var identity_1 = __nccwpck_require__(60283);
function tap(observerOrNext, error, complete) {
    var tapObserver = isFunction_1.isFunction(observerOrNext) || error || complete
        ?
            { next: observerOrNext, error: error, complete: complete }
        : observerOrNext;
    return tapObserver
        ? lift_1.operate(function (source, subscriber) {
            var _a;
            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);
            var isUnsub = true;
            source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                var _a;
                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);
                subscriber.next(value);
            }, function () {
                var _a;
                isUnsub = false;
                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);
                subscriber.complete();
            }, function (err) {
                var _a;
                isUnsub = false;
                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);
                subscriber.error(err);
            }, function () {
                var _a, _b;
                if (isUnsub) {
                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);
                }
                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);
            }));
        })
        :
            identity_1.identity;
}
exports.tap = tap;
//# sourceMappingURL=tap.js.map

/***/ }),

/***/ 36713:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.throttle = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
function throttle(durationSelector, config) {
    return lift_1.operate(function (source, subscriber) {
        var _a = config !== null && config !== void 0 ? config : {}, _b = _a.leading, leading = _b === void 0 ? true : _b, _c = _a.trailing, trailing = _c === void 0 ? false : _c;
        var hasValue = false;
        var sendValue = null;
        var throttled = null;
        var isComplete = false;
        var endThrottling = function () {
            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();
            throttled = null;
            if (trailing) {
                send();
                isComplete && subscriber.complete();
            }
        };
        var cleanupThrottling = function () {
            throttled = null;
            isComplete && subscriber.complete();
        };
        var startThrottle = function (value) {
            return (throttled = innerFrom_1.innerFrom(durationSelector(value)).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));
        };
        var send = function () {
            if (hasValue) {
                hasValue = false;
                var value = sendValue;
                sendValue = null;
                subscriber.next(value);
                !isComplete && startThrottle(value);
            }
        };
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            hasValue = true;
            sendValue = value;
            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));
        }, function () {
            isComplete = true;
            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();
        }));
    });
}
exports.throttle = throttle;
//# sourceMappingURL=throttle.js.map

/***/ }),

/***/ 83435:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.throttleTime = void 0;
var async_1 = __nccwpck_require__(76072);
var throttle_1 = __nccwpck_require__(36713);
var timer_1 = __nccwpck_require__(59757);
function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) { scheduler = async_1.asyncScheduler; }
    var duration$ = timer_1.timer(duration, scheduler);
    return throttle_1.throttle(function () { return duration$; }, config);
}
exports.throttleTime = throttleTime;
//# sourceMappingURL=throttleTime.js.map

/***/ }),

/***/ 91566:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.throwIfEmpty = void 0;
var EmptyError_1 = __nccwpck_require__(99391);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function throwIfEmpty(errorFactory) {
    if (errorFactory === void 0) { errorFactory = defaultErrorFactory; }
    return lift_1.operate(function (source, subscriber) {
        var hasValue = false;
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            hasValue = true;
            subscriber.next(value);
        }, function () { return (hasValue ? subscriber.complete() : subscriber.error(errorFactory())); }));
    });
}
exports.throwIfEmpty = throwIfEmpty;
function defaultErrorFactory() {
    return new EmptyError_1.EmptyError();
}
//# sourceMappingURL=throwIfEmpty.js.map

/***/ }),

/***/ 14643:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TimeInterval = exports.timeInterval = void 0;
var async_1 = __nccwpck_require__(76072);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function timeInterval(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.asyncScheduler; }
    return lift_1.operate(function (source, subscriber) {
        var last = scheduler.now();
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var now = scheduler.now();
            var interval = now - last;
            last = now;
            subscriber.next(new TimeInterval(value, interval));
        }));
    });
}
exports.timeInterval = timeInterval;
var TimeInterval = (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());
exports.TimeInterval = TimeInterval;
//# sourceMappingURL=timeInterval.js.map

/***/ }),

/***/ 12051:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.timeout = exports.TimeoutError = void 0;
var async_1 = __nccwpck_require__(76072);
var isDate_1 = __nccwpck_require__(60935);
var lift_1 = __nccwpck_require__(38669);
var innerFrom_1 = __nccwpck_require__(57105);
var createErrorClass_1 = __nccwpck_require__(8858);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var executeSchedule_1 = __nccwpck_require__(82877);
exports.TimeoutError = createErrorClass_1.createErrorClass(function (_super) {
    return function TimeoutErrorImpl(info) {
        if (info === void 0) { info = null; }
        _super(this);
        this.message = 'Timeout has occurred';
        this.name = 'TimeoutError';
        this.info = info;
    };
});
function timeout(config, schedulerArg) {
    var _a = (isDate_1.isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config), first = _a.first, each = _a.each, _b = _a.with, _with = _b === void 0 ? timeoutErrorFactory : _b, _c = _a.scheduler, scheduler = _c === void 0 ? schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : async_1.asyncScheduler : _c, _d = _a.meta, meta = _d === void 0 ? null : _d;
    if (first == null && each == null) {
        throw new TypeError('No timeout provided.');
    }
    return lift_1.operate(function (source, subscriber) {
        var originalSourceSubscription;
        var timerSubscription;
        var lastValue = null;
        var seen = 0;
        var startTimer = function (delay) {
            timerSubscription = executeSchedule_1.executeSchedule(subscriber, scheduler, function () {
                try {
                    originalSourceSubscription.unsubscribe();
                    innerFrom_1.innerFrom(_with({
                        meta: meta,
                        lastValue: lastValue,
                        seen: seen,
                    })).subscribe(subscriber);
                }
                catch (err) {
                    subscriber.error(err);
                }
            }, delay);
        };
        originalSourceSubscription = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();
            seen++;
            subscriber.next((lastValue = value));
            each > 0 && startTimer(each);
        }, undefined, undefined, function () {
            if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) {
                timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();
            }
            lastValue = null;
        }));
        !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler.now()) : each);
    });
}
exports.timeout = timeout;
function timeoutErrorFactory(info) {
    throw new exports.TimeoutError(info);
}
//# sourceMappingURL=timeout.js.map

/***/ }),

/***/ 43540:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.timeoutWith = void 0;
var async_1 = __nccwpck_require__(76072);
var isDate_1 = __nccwpck_require__(60935);
var timeout_1 = __nccwpck_require__(12051);
function timeoutWith(due, withObservable, scheduler) {
    var first;
    var each;
    var _with;
    scheduler = scheduler !== null && scheduler !== void 0 ? scheduler : async_1.async;
    if (isDate_1.isValidDate(due)) {
        first = due;
    }
    else if (typeof due === 'number') {
        each = due;
    }
    if (withObservable) {
        _with = function () { return withObservable; };
    }
    else {
        throw new TypeError('No observable provided to switch to');
    }
    if (first == null && each == null) {
        throw new TypeError('No timeout provided.');
    }
    return timeout_1.timeout({
        first: first,
        each: each,
        scheduler: scheduler,
        with: _with,
    });
}
exports.timeoutWith = timeoutWith;
//# sourceMappingURL=timeoutWith.js.map

/***/ }),

/***/ 75518:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.timestamp = void 0;
var dateTimestampProvider_1 = __nccwpck_require__(91395);
var map_1 = __nccwpck_require__(5987);
function timestamp(timestampProvider) {
    if (timestampProvider === void 0) { timestampProvider = dateTimestampProvider_1.dateTimestampProvider; }
    return map_1.map(function (value) { return ({ value: value, timestamp: timestampProvider.now() }); });
}
exports.timestamp = timestamp;
//# sourceMappingURL=timestamp.js.map

/***/ }),

/***/ 35114:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toArray = void 0;
var reduce_1 = __nccwpck_require__(62087);
var lift_1 = __nccwpck_require__(38669);
var arrReducer = function (arr, value) { return (arr.push(value), arr); };
function toArray() {
    return lift_1.operate(function (source, subscriber) {
        reduce_1.reduce(arrReducer, [])(source).subscribe(subscriber);
    });
}
exports.toArray = toArray;
//# sourceMappingURL=toArray.js.map

/***/ }),

/***/ 98255:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.window = void 0;
var Subject_1 = __nccwpck_require__(49944);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var noop_1 = __nccwpck_require__(11642);
var innerFrom_1 = __nccwpck_require__(57105);
function window(windowBoundaries) {
    return lift_1.operate(function (source, subscriber) {
        var windowSubject = new Subject_1.Subject();
        subscriber.next(windowSubject.asObservable());
        var errorHandler = function (err) {
            windowSubject.error(err);
            subscriber.error(err);
        };
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) { return windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.next(value); }, function () {
            windowSubject.complete();
            subscriber.complete();
        }, errorHandler));
        innerFrom_1.innerFrom(windowBoundaries).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {
            windowSubject.complete();
            subscriber.next((windowSubject = new Subject_1.Subject()));
        }, noop_1.noop, errorHandler));
        return function () {
            windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.unsubscribe();
            windowSubject = null;
        };
    });
}
exports.window = window;
//# sourceMappingURL=window.js.map

/***/ }),

/***/ 73144:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.windowCount = void 0;
var Subject_1 = __nccwpck_require__(49944);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) { startWindowEvery = 0; }
    var startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;
    return lift_1.operate(function (source, subscriber) {
        var windows = [new Subject_1.Subject()];
        var starts = [];
        var count = 0;
        subscriber.next(windows[0].asObservable());
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var e_1, _a;
            try {
                for (var windows_1 = __values(windows), windows_1_1 = windows_1.next(); !windows_1_1.done; windows_1_1 = windows_1.next()) {
                    var window_1 = windows_1_1.value;
                    window_1.next(value);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (windows_1_1 && !windows_1_1.done && (_a = windows_1.return)) _a.call(windows_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            var c = count - windowSize + 1;
            if (c >= 0 && c % startEvery === 0) {
                windows.shift().complete();
            }
            if (++count % startEvery === 0) {
                var window_2 = new Subject_1.Subject();
                windows.push(window_2);
                subscriber.next(window_2.asObservable());
            }
        }, function () {
            while (windows.length > 0) {
                windows.shift().complete();
            }
            subscriber.complete();
        }, function (err) {
            while (windows.length > 0) {
                windows.shift().error(err);
            }
            subscriber.error(err);
        }, function () {
            starts = null;
            windows = null;
        }));
    });
}
exports.windowCount = windowCount;
//# sourceMappingURL=windowCount.js.map

/***/ }),

/***/ 2738:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.windowTime = void 0;
var Subject_1 = __nccwpck_require__(49944);
var async_1 = __nccwpck_require__(76072);
var Subscription_1 = __nccwpck_require__(79548);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var arrRemove_1 = __nccwpck_require__(68499);
var args_1 = __nccwpck_require__(34890);
var executeSchedule_1 = __nccwpck_require__(82877);
function windowTime(windowTimeSpan) {
    var _a, _b;
    var otherArgs = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        otherArgs[_i - 1] = arguments[_i];
    }
    var scheduler = (_a = args_1.popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : async_1.asyncScheduler;
    var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;
    var maxWindowSize = otherArgs[1] || Infinity;
    return lift_1.operate(function (source, subscriber) {
        var windowRecords = [];
        var restartOnClose = false;
        var closeWindow = function (record) {
            var window = record.window, subs = record.subs;
            window.complete();
            subs.unsubscribe();
            arrRemove_1.arrRemove(windowRecords, record);
            restartOnClose && startWindow();
        };
        var startWindow = function () {
            if (windowRecords) {
                var subs = new Subscription_1.Subscription();
                subscriber.add(subs);
                var window_1 = new Subject_1.Subject();
                var record_1 = {
                    window: window_1,
                    subs: subs,
                    seen: 0,
                };
                windowRecords.push(record_1);
                subscriber.next(window_1.asObservable());
                executeSchedule_1.executeSchedule(subs, scheduler, function () { return closeWindow(record_1); }, windowTimeSpan);
            }
        };
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            executeSchedule_1.executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);
        }
        else {
            restartOnClose = true;
        }
        startWindow();
        var loop = function (cb) { return windowRecords.slice().forEach(cb); };
        var terminate = function (cb) {
            loop(function (_a) {
                var window = _a.window;
                return cb(window);
            });
            cb(subscriber);
            subscriber.unsubscribe();
        };
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            loop(function (record) {
                record.window.next(value);
                maxWindowSize <= ++record.seen && closeWindow(record);
            });
        }, function () { return terminate(function (consumer) { return consumer.complete(); }); }, function (err) { return terminate(function (consumer) { return consumer.error(err); }); }));
        return function () {
            windowRecords = null;
        };
    });
}
exports.windowTime = windowTime;
//# sourceMappingURL=windowTime.js.map

/***/ }),

/***/ 52741:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.windowToggle = void 0;
var Subject_1 = __nccwpck_require__(49944);
var Subscription_1 = __nccwpck_require__(79548);
var lift_1 = __nccwpck_require__(38669);
var innerFrom_1 = __nccwpck_require__(57105);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var noop_1 = __nccwpck_require__(11642);
var arrRemove_1 = __nccwpck_require__(68499);
function windowToggle(openings, closingSelector) {
    return lift_1.operate(function (source, subscriber) {
        var windows = [];
        var handleError = function (err) {
            while (0 < windows.length) {
                windows.shift().error(err);
            }
            subscriber.error(err);
        };
        innerFrom_1.innerFrom(openings).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (openValue) {
            var window = new Subject_1.Subject();
            windows.push(window);
            var closingSubscription = new Subscription_1.Subscription();
            var closeWindow = function () {
                arrRemove_1.arrRemove(windows, window);
                window.complete();
                closingSubscription.unsubscribe();
            };
            var closingNotifier;
            try {
                closingNotifier = innerFrom_1.innerFrom(closingSelector(openValue));
            }
            catch (err) {
                handleError(err);
                return;
            }
            subscriber.next(window.asObservable());
            closingSubscription.add(closingNotifier.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, closeWindow, noop_1.noop, handleError)));
        }, noop_1.noop));
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            var e_1, _a;
            var windowsCopy = windows.slice();
            try {
                for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {
                    var window_1 = windowsCopy_1_1.value;
                    window_1.next(value);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }, function () {
            while (0 < windows.length) {
                windows.shift().complete();
            }
            subscriber.complete();
        }, handleError, function () {
            while (0 < windows.length) {
                windows.shift().unsubscribe();
            }
        }));
    });
}
exports.windowToggle = windowToggle;
//# sourceMappingURL=windowToggle.js.map

/***/ }),

/***/ 82645:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.windowWhen = void 0;
var Subject_1 = __nccwpck_require__(49944);
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
function windowWhen(closingSelector) {
    return lift_1.operate(function (source, subscriber) {
        var window;
        var closingSubscriber;
        var handleError = function (err) {
            window.error(err);
            subscriber.error(err);
        };
        var openWindow = function () {
            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();
            window === null || window === void 0 ? void 0 : window.complete();
            window = new Subject_1.Subject();
            subscriber.next(window.asObservable());
            var closingNotifier;
            try {
                closingNotifier = innerFrom_1.innerFrom(closingSelector());
            }
            catch (err) {
                handleError(err);
                return;
            }
            closingNotifier.subscribe((closingSubscriber = OperatorSubscriber_1.createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));
        };
        openWindow();
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) { return window.next(value); }, function () {
            window.complete();
            subscriber.complete();
        }, handleError, function () {
            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();
            window = null;
        }));
    });
}
exports.windowWhen = windowWhen;
//# sourceMappingURL=windowWhen.js.map

/***/ }),

/***/ 20501:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.withLatestFrom = void 0;
var lift_1 = __nccwpck_require__(38669);
var OperatorSubscriber_1 = __nccwpck_require__(69549);
var innerFrom_1 = __nccwpck_require__(57105);
var identity_1 = __nccwpck_require__(60283);
var noop_1 = __nccwpck_require__(11642);
var args_1 = __nccwpck_require__(34890);
function withLatestFrom() {
    var inputs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        inputs[_i] = arguments[_i];
    }
    var project = args_1.popResultSelector(inputs);
    return lift_1.operate(function (source, subscriber) {
        var len = inputs.length;
        var otherValues = new Array(len);
        var hasValue = inputs.map(function () { return false; });
        var ready = false;
        var _loop_1 = function (i) {
            innerFrom_1.innerFrom(inputs[i]).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
                otherValues[i] = value;
                if (!ready && !hasValue[i]) {
                    hasValue[i] = true;
                    (ready = hasValue.every(identity_1.identity)) && (hasValue = null);
                }
            }, noop_1.noop));
        };
        for (var i = 0; i < len; i++) {
            _loop_1(i);
        }
        source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {
            if (ready) {
                var values = __spreadArray([value], __read(otherValues));
                subscriber.next(project ? project.apply(void 0, __spreadArray([], __read(values))) : values);
            }
        }));
    });
}
exports.withLatestFrom = withLatestFrom;
//# sourceMappingURL=withLatestFrom.js.map

/***/ }),

/***/ 17600:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.zip = void 0;
var zip_1 = __nccwpck_require__(62504);
var lift_1 = __nccwpck_require__(38669);
function zip() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    return lift_1.operate(function (source, subscriber) {
        zip_1.zip.apply(void 0, __spreadArray([source], __read(sources))).subscribe(subscriber);
    });
}
exports.zip = zip;
//# sourceMappingURL=zip.js.map

/***/ }),

/***/ 92335:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.zipAll = void 0;
var zip_1 = __nccwpck_require__(62504);
var joinAllInternals_1 = __nccwpck_require__(29341);
function zipAll(project) {
    return joinAllInternals_1.joinAllInternals(zip_1.zip, project);
}
exports.zipAll = zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ }),

/***/ 95520:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.zipWith = void 0;
var zip_1 = __nccwpck_require__(17600);
function zipWith() {
    var otherInputs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        otherInputs[_i] = arguments[_i];
    }
    return zip_1.zip.apply(void 0, __spreadArray([], __read(otherInputs)));
}
exports.zipWith = zipWith;
//# sourceMappingURL=zipWith.js.map

/***/ }),

/***/ 11348:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scheduleArray = void 0;
var Observable_1 = __nccwpck_require__(53014);
function scheduleArray(input, scheduler) {
    return new Observable_1.Observable(function (subscriber) {
        var i = 0;
        return scheduler.schedule(function () {
            if (i === input.length) {
                subscriber.complete();
            }
            else {
                subscriber.next(input[i++]);
                if (!subscriber.closed) {
                    this.schedule();
                }
            }
        });
    });
}
exports.scheduleArray = scheduleArray;
//# sourceMappingURL=scheduleArray.js.map

/***/ }),

/***/ 75347:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scheduleAsyncIterable = void 0;
var Observable_1 = __nccwpck_require__(53014);
var executeSchedule_1 = __nccwpck_require__(82877);
function scheduleAsyncIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    return new Observable_1.Observable(function (subscriber) {
        executeSchedule_1.executeSchedule(subscriber, scheduler, function () {
            var iterator = input[Symbol.asyncIterator]();
            executeSchedule_1.executeSchedule(subscriber, scheduler, function () {
                iterator.next().then(function (result) {
                    if (result.done) {
                        subscriber.complete();
                    }
                    else {
                        subscriber.next(result.value);
                    }
                });
            }, 0, true);
        });
    });
}
exports.scheduleAsyncIterable = scheduleAsyncIterable;
//# sourceMappingURL=scheduleAsyncIterable.js.map

/***/ }),

/***/ 59461:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scheduleIterable = void 0;
var Observable_1 = __nccwpck_require__(53014);
var iterator_1 = __nccwpck_require__(85517);
var isFunction_1 = __nccwpck_require__(67206);
var executeSchedule_1 = __nccwpck_require__(82877);
function scheduleIterable(input, scheduler) {
    return new Observable_1.Observable(function (subscriber) {
        var iterator;
        executeSchedule_1.executeSchedule(subscriber, scheduler, function () {
            iterator = input[iterator_1.iterator]();
            executeSchedule_1.executeSchedule(subscriber, scheduler, function () {
                var _a;
                var value;
                var done;
                try {
                    (_a = iterator.next(), value = _a.value, done = _a.done);
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (done) {
                    subscriber.complete();
                }
                else {
                    subscriber.next(value);
                }
            }, 0, true);
        });
        return function () { return isFunction_1.isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };
    });
}
exports.scheduleIterable = scheduleIterable;
//# sourceMappingURL=scheduleIterable.js.map

/***/ }),

/***/ 17096:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scheduleObservable = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var observeOn_1 = __nccwpck_require__(22451);
var subscribeOn_1 = __nccwpck_require__(7224);
function scheduleObservable(input, scheduler) {
    return innerFrom_1.innerFrom(input).pipe(subscribeOn_1.subscribeOn(scheduler), observeOn_1.observeOn(scheduler));
}
exports.scheduleObservable = scheduleObservable;
//# sourceMappingURL=scheduleObservable.js.map

/***/ }),

/***/ 24087:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.schedulePromise = void 0;
var innerFrom_1 = __nccwpck_require__(57105);
var observeOn_1 = __nccwpck_require__(22451);
var subscribeOn_1 = __nccwpck_require__(7224);
function schedulePromise(input, scheduler) {
    return innerFrom_1.innerFrom(input).pipe(subscribeOn_1.subscribeOn(scheduler), observeOn_1.observeOn(scheduler));
}
exports.schedulePromise = schedulePromise;
//# sourceMappingURL=schedulePromise.js.map

/***/ }),

/***/ 5967:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scheduleReadableStreamLike = void 0;
var scheduleAsyncIterable_1 = __nccwpck_require__(75347);
var isReadableStreamLike_1 = __nccwpck_require__(99621);
function scheduleReadableStreamLike(input, scheduler) {
    return scheduleAsyncIterable_1.scheduleAsyncIterable(isReadableStreamLike_1.readableStreamLikeToAsyncGenerator(input), scheduler);
}
exports.scheduleReadableStreamLike = scheduleReadableStreamLike;
//# sourceMappingURL=scheduleReadableStreamLike.js.map

/***/ }),

/***/ 6151:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scheduled = void 0;
var scheduleObservable_1 = __nccwpck_require__(17096);
var schedulePromise_1 = __nccwpck_require__(24087);
var scheduleArray_1 = __nccwpck_require__(11348);
var scheduleIterable_1 = __nccwpck_require__(59461);
var scheduleAsyncIterable_1 = __nccwpck_require__(75347);
var isInteropObservable_1 = __nccwpck_require__(67984);
var isPromise_1 = __nccwpck_require__(65585);
var isArrayLike_1 = __nccwpck_require__(24461);
var isIterable_1 = __nccwpck_require__(94292);
var isAsyncIterable_1 = __nccwpck_require__(44408);
var throwUnobservableError_1 = __nccwpck_require__(97364);
var isReadableStreamLike_1 = __nccwpck_require__(99621);
var scheduleReadableStreamLike_1 = __nccwpck_require__(5967);
function scheduled(input, scheduler) {
    if (input != null) {
        if (isInteropObservable_1.isInteropObservable(input)) {
            return scheduleObservable_1.scheduleObservable(input, scheduler);
        }
        if (isArrayLike_1.isArrayLike(input)) {
            return scheduleArray_1.scheduleArray(input, scheduler);
        }
        if (isPromise_1.isPromise(input)) {
            return schedulePromise_1.schedulePromise(input, scheduler);
        }
        if (isAsyncIterable_1.isAsyncIterable(input)) {
            return scheduleAsyncIterable_1.scheduleAsyncIterable(input, scheduler);
        }
        if (isIterable_1.isIterable(input)) {
            return scheduleIterable_1.scheduleIterable(input, scheduler);
        }
        if (isReadableStreamLike_1.isReadableStreamLike(input)) {
            return scheduleReadableStreamLike_1.scheduleReadableStreamLike(input, scheduler);
        }
    }
    throw throwUnobservableError_1.createInvalidObservableTypeError(input);
}
exports.scheduled = scheduled;
//# sourceMappingURL=scheduled.js.map

/***/ }),

/***/ 83848:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Action = void 0;
var Subscription_1 = __nccwpck_require__(79548);
var Action = (function (_super) {
    __extends(Action, _super);
    function Action(scheduler, work) {
        return _super.call(this) || this;
    }
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        return this;
    };
    return Action;
}(Subscription_1.Subscription));
exports.Action = Action;
//# sourceMappingURL=Action.js.map

/***/ }),

/***/ 95991:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnimationFrameAction = void 0;
var AsyncAction_1 = __nccwpck_require__(13280);
var animationFrameProvider_1 = __nccwpck_require__(62738);
var AnimationFrameAction = (function (_super) {
    __extends(AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider_1.animationFrameProvider.requestAnimationFrame(function () { return scheduler.flush(undefined); }));
    };
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        var _a;
        if (delay === void 0) { delay = 0; }
        if (delay != null ? delay > 0 : this.delay > 0) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        var actions = scheduler.actions;
        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {
            animationFrameProvider_1.animationFrameProvider.cancelAnimationFrame(id);
            scheduler._scheduled = undefined;
        }
        return undefined;
    };
    return AnimationFrameAction;
}(AsyncAction_1.AsyncAction));
exports.AnimationFrameAction = AnimationFrameAction;
//# sourceMappingURL=AnimationFrameAction.js.map

/***/ }),

/***/ 98768:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnimationFrameScheduler = void 0;
var AsyncScheduler_1 = __nccwpck_require__(61673);
var AnimationFrameScheduler = (function (_super) {
    __extends(AnimationFrameScheduler, _super);
    function AnimationFrameScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnimationFrameScheduler.prototype.flush = function (action) {
        this._active = true;
        var flushId = this._scheduled;
        this._scheduled = undefined;
        var actions = this.actions;
        var error;
        action = action || actions.shift();
        do {
            if ((error = action.execute(action.state, action.delay))) {
                break;
            }
        } while ((action = actions[0]) && action.id === flushId && actions.shift());
        this._active = false;
        if (error) {
            while ((action = actions[0]) && action.id === flushId && actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AnimationFrameScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AnimationFrameScheduler = AnimationFrameScheduler;
//# sourceMappingURL=AnimationFrameScheduler.js.map

/***/ }),

/***/ 12424:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AsapAction = void 0;
var AsyncAction_1 = __nccwpck_require__(13280);
var immediateProvider_1 = __nccwpck_require__(63475);
var AsapAction = (function (_super) {
    __extends(AsapAction, _super);
    function AsapAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler._scheduled || (scheduler._scheduled = immediateProvider_1.immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        var _a;
        if (delay === void 0) { delay = 0; }
        if (delay != null ? delay > 0 : this.delay > 0) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        var actions = scheduler.actions;
        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {
            immediateProvider_1.immediateProvider.clearImmediate(id);
            if (scheduler._scheduled === id) {
                scheduler._scheduled = undefined;
            }
        }
        return undefined;
    };
    return AsapAction;
}(AsyncAction_1.AsyncAction));
exports.AsapAction = AsapAction;
//# sourceMappingURL=AsapAction.js.map

/***/ }),

/***/ 76641:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AsapScheduler = void 0;
var AsyncScheduler_1 = __nccwpck_require__(61673);
var AsapScheduler = (function (_super) {
    __extends(AsapScheduler, _super);
    function AsapScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AsapScheduler.prototype.flush = function (action) {
        this._active = true;
        var flushId = this._scheduled;
        this._scheduled = undefined;
        var actions = this.actions;
        var error;
        action = action || actions.shift();
        do {
            if ((error = action.execute(action.state, action.delay))) {
                break;
            }
        } while ((action = actions[0]) && action.id === flushId && actions.shift());
        this._active = false;
        if (error) {
            while ((action = actions[0]) && action.id === flushId && actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AsapScheduler = AsapScheduler;
//# sourceMappingURL=AsapScheduler.js.map

/***/ }),

/***/ 13280:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AsyncAction = void 0;
var Action_1 = __nccwpck_require__(83848);
var intervalProvider_1 = __nccwpck_require__(55341);
var arrRemove_1 = __nccwpck_require__(68499);
var AsyncAction = (function (_super) {
    __extends(AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.pending = false;
        return _this;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        var _a;
        if (delay === void 0) { delay = 0; }
        if (this.closed) {
            return this;
        }
        this.state = state;
        var id = this.id;
        var scheduler = this.scheduler;
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.pending = true;
        this.delay = delay;
        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {
        if (delay === void 0) { delay = 0; }
        return intervalProvider_1.intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay != null && this.delay === delay && this.pending === false) {
            return id;
        }
        if (id != null) {
            intervalProvider_1.intervalProvider.clearInterval(id);
        }
        return undefined;
    };
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, _delay) {
        var errored = false;
        var errorValue;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = e ? e : new Error('Scheduled action threw falsy error');
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype.unsubscribe = function () {
        if (!this.closed) {
            var _a = this, id = _a.id, scheduler = _a.scheduler;
            var actions = scheduler.actions;
            this.work = this.state = this.scheduler = null;
            this.pending = false;
            arrRemove_1.arrRemove(actions, this);
            if (id != null) {
                this.id = this.recycleAsyncId(scheduler, id, null);
            }
            this.delay = null;
            _super.prototype.unsubscribe.call(this);
        }
    };
    return AsyncAction;
}(Action_1.Action));
exports.AsyncAction = AsyncAction;
//# sourceMappingURL=AsyncAction.js.map

/***/ }),

/***/ 61673:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AsyncScheduler = void 0;
var Scheduler_1 = __nccwpck_require__(76243);
var AsyncScheduler = (function (_super) {
    __extends(AsyncScheduler, _super);
    function AsyncScheduler(SchedulerAction, now) {
        if (now === void 0) { now = Scheduler_1.Scheduler.now; }
        var _this = _super.call(this, SchedulerAction, now) || this;
        _this.actions = [];
        _this._active = false;
        return _this;
    }
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this._active) {
            actions.push(action);
            return;
        }
        var error;
        this._active = true;
        do {
            if ((error = action.execute(action.state, action.delay))) {
                break;
            }
        } while ((action = actions.shift()));
        this._active = false;
        if (error) {
            while ((action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(Scheduler_1.Scheduler));
exports.AsyncScheduler = AsyncScheduler;
//# sourceMappingURL=AsyncScheduler.js.map

/***/ }),

/***/ 32161:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.QueueAction = void 0;
var AsyncAction_1 = __nccwpck_require__(13280);
var QueueAction = (function (_super) {
    __extends(QueueAction, _super);
    function QueueAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.flush(this);
        return 0;
    };
    return QueueAction;
}(AsyncAction_1.AsyncAction));
exports.QueueAction = QueueAction;
//# sourceMappingURL=QueueAction.js.map

/***/ }),

/***/ 48527:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.QueueScheduler = void 0;
var AsyncScheduler_1 = __nccwpck_require__(61673);
var QueueScheduler = (function (_super) {
    __extends(QueueScheduler, _super);
    function QueueScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return QueueScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.QueueScheduler = QueueScheduler;
//# sourceMappingURL=QueueScheduler.js.map

/***/ }),

/***/ 75348:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VirtualAction = exports.VirtualTimeScheduler = void 0;
var AsyncAction_1 = __nccwpck_require__(13280);
var Subscription_1 = __nccwpck_require__(79548);
var AsyncScheduler_1 = __nccwpck_require__(61673);
var VirtualTimeScheduler = (function (_super) {
    __extends(VirtualTimeScheduler, _super);
    function VirtualTimeScheduler(schedulerActionCtor, maxFrames) {
        if (schedulerActionCtor === void 0) { schedulerActionCtor = VirtualAction; }
        if (maxFrames === void 0) { maxFrames = Infinity; }
        var _this = _super.call(this, schedulerActionCtor, function () { return _this.frame; }) || this;
        _this.maxFrames = maxFrames;
        _this.frame = 0;
        _this.index = -1;
        return _this;
    }
    VirtualTimeScheduler.prototype.flush = function () {
        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
        var error;
        var action;
        while ((action = actions[0]) && action.delay <= maxFrames) {
            actions.shift();
            this.frame = action.delay;
            if ((error = action.execute(action.state, action.delay))) {
                break;
            }
        }
        if (error) {
            while ((action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    VirtualTimeScheduler.frameTimeFactor = 10;
    return VirtualTimeScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.VirtualTimeScheduler = VirtualTimeScheduler;
var VirtualAction = (function (_super) {
    __extends(VirtualAction, _super);
    function VirtualAction(scheduler, work, index) {
        if (index === void 0) { index = (scheduler.index += 1); }
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.index = index;
        _this.active = true;
        _this.index = scheduler.index = index;
        return _this;
    }
    VirtualAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (Number.isFinite(delay)) {
            if (!this.id) {
                return _super.prototype.schedule.call(this, state, delay);
            }
            this.active = false;
            var action = new VirtualAction(this.scheduler, this.work);
            this.add(action);
            return action.schedule(state, delay);
        }
        else {
            return Subscription_1.Subscription.EMPTY;
        }
    };
    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        this.delay = scheduler.frame + delay;
        var actions = scheduler.actions;
        actions.push(this);
        actions.sort(VirtualAction.sortActions);
        return 1;
    };
    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return undefined;
    };
    VirtualAction.prototype._execute = function (state, delay) {
        if (this.active === true) {
            return _super.prototype._execute.call(this, state, delay);
        }
    };
    VirtualAction.sortActions = function (a, b) {
        if (a.delay === b.delay) {
            if (a.index === b.index) {
                return 0;
            }
            else if (a.index > b.index) {
                return 1;
            }
            else {
                return -1;
            }
        }
        else if (a.delay > b.delay) {
            return 1;
        }
        else {
            return -1;
        }
    };
    return VirtualAction;
}(AsyncAction_1.AsyncAction));
exports.VirtualAction = VirtualAction;
//# sourceMappingURL=VirtualTimeScheduler.js.map

/***/ }),

/***/ 51359:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.animationFrame = exports.animationFrameScheduler = void 0;
var AnimationFrameAction_1 = __nccwpck_require__(95991);
var AnimationFrameScheduler_1 = __nccwpck_require__(98768);
exports.animationFrameScheduler = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);
exports.animationFrame = exports.animationFrameScheduler;
//# sourceMappingURL=animationFrame.js.map

/***/ }),

/***/ 62738:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.animationFrameProvider = void 0;
var Subscription_1 = __nccwpck_require__(79548);
exports.animationFrameProvider = {
    schedule: function (callback) {
        var request = requestAnimationFrame;
        var cancel = cancelAnimationFrame;
        var delegate = exports.animationFrameProvider.delegate;
        if (delegate) {
            request = delegate.requestAnimationFrame;
            cancel = delegate.cancelAnimationFrame;
        }
        var handle = request(function (timestamp) {
            cancel = undefined;
            callback(timestamp);
        });
        return new Subscription_1.Subscription(function () { return cancel === null || cancel === void 0 ? void 0 : cancel(handle); });
    },
    requestAnimationFrame: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var delegate = exports.animationFrameProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, __spreadArray([], __read(args)));
    },
    cancelAnimationFrame: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var delegate = exports.animationFrameProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, __spreadArray([], __read(args)));
    },
    delegate: undefined,
};
//# sourceMappingURL=animationFrameProvider.js.map

/***/ }),

/***/ 43905:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.asap = exports.asapScheduler = void 0;
var AsapAction_1 = __nccwpck_require__(12424);
var AsapScheduler_1 = __nccwpck_require__(76641);
exports.asapScheduler = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);
exports.asap = exports.asapScheduler;
//# sourceMappingURL=asap.js.map

/***/ }),

/***/ 76072:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.async = exports.asyncScheduler = void 0;
var AsyncAction_1 = __nccwpck_require__(13280);
var AsyncScheduler_1 = __nccwpck_require__(61673);
exports.asyncScheduler = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);
exports.async = exports.asyncScheduler;
//# sourceMappingURL=async.js.map

/***/ }),

/***/ 91395:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dateTimestampProvider = void 0;
exports.dateTimestampProvider = {
    now: function () {
        return (exports.dateTimestampProvider.delegate || Date).now();
    },
    delegate: undefined,
};
//# sourceMappingURL=dateTimestampProvider.js.map

/***/ }),

/***/ 63475:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.immediateProvider = void 0;
var Immediate_1 = __nccwpck_require__(73555);
var setImmediate = Immediate_1.Immediate.setImmediate, clearImmediate = Immediate_1.Immediate.clearImmediate;
exports.immediateProvider = {
    setImmediate: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var delegate = exports.immediateProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate).apply(void 0, __spreadArray([], __read(args)));
    },
    clearImmediate: function (handle) {
        var delegate = exports.immediateProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);
    },
    delegate: undefined,
};
//# sourceMappingURL=immediateProvider.js.map

/***/ }),

/***/ 55341:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.intervalProvider = void 0;
exports.intervalProvider = {
    setInterval: function (handler, timeout) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        var delegate = exports.intervalProvider.delegate;
        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {
            return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));
        }
        return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));
    },
    clearInterval: function (handle) {
        var delegate = exports.intervalProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);
    },
    delegate: undefined,
};
//# sourceMappingURL=intervalProvider.js.map

/***/ }),

/***/ 70143:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.performanceTimestampProvider = void 0;
exports.performanceTimestampProvider = {
    now: function () {
        return (exports.performanceTimestampProvider.delegate || performance).now();
    },
    delegate: undefined,
};
//# sourceMappingURL=performanceTimestampProvider.js.map

/***/ }),

/***/ 82059:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.queue = exports.queueScheduler = void 0;
var QueueAction_1 = __nccwpck_require__(32161);
var QueueScheduler_1 = __nccwpck_require__(48527);
exports.queueScheduler = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);
exports.queue = exports.queueScheduler;
//# sourceMappingURL=queue.js.map

/***/ }),

/***/ 1613:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.timeoutProvider = void 0;
exports.timeoutProvider = {
    setTimeout: function (handler, timeout) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        var delegate = exports.timeoutProvider.delegate;
        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {
            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));
        }
        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));
    },
    clearTimeout: function (handle) {
        var delegate = exports.timeoutProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);
    },
    delegate: undefined,
};
//# sourceMappingURL=timeoutProvider.js.map

/***/ }),

/***/ 85517:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.iterator = exports.getSymbolIterator = void 0;
function getSymbolIterator() {
    if (typeof Symbol !== 'function' || !Symbol.iterator) {
        return '@@iterator';
    }
    return Symbol.iterator;
}
exports.getSymbolIterator = getSymbolIterator;
exports.iterator = getSymbolIterator();
//# sourceMappingURL=iterator.js.map

/***/ }),

/***/ 17186:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.observable = void 0;
exports.observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();
//# sourceMappingURL=observable.js.map

/***/ }),

/***/ 36639:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
//# sourceMappingURL=types.js.map

/***/ }),

/***/ 49796:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ArgumentOutOfRangeError = void 0;
var createErrorClass_1 = __nccwpck_require__(8858);
exports.ArgumentOutOfRangeError = createErrorClass_1.createErrorClass(function (_super) {
    return function ArgumentOutOfRangeErrorImpl() {
        _super(this);
        this.name = 'ArgumentOutOfRangeError';
        this.message = 'argument out of range';
    };
});
//# sourceMappingURL=ArgumentOutOfRangeError.js.map

/***/ }),

/***/ 99391:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmptyError = void 0;
var createErrorClass_1 = __nccwpck_require__(8858);
exports.EmptyError = createErrorClass_1.createErrorClass(function (_super) { return function EmptyErrorImpl() {
    _super(this);
    this.name = 'EmptyError';
    this.message = 'no elements in sequence';
}; });
//# sourceMappingURL=EmptyError.js.map

/***/ }),

/***/ 73555:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TestTools = exports.Immediate = void 0;
var nextHandle = 1;
var resolved;
var activeHandles = {};
function findAndClearHandle(handle) {
    if (handle in activeHandles) {
        delete activeHandles[handle];
        return true;
    }
    return false;
}
exports.Immediate = {
    setImmediate: function (cb) {
        var handle = nextHandle++;
        activeHandles[handle] = true;
        if (!resolved) {
            resolved = Promise.resolve();
        }
        resolved.then(function () { return findAndClearHandle(handle) && cb(); });
        return handle;
    },
    clearImmediate: function (handle) {
        findAndClearHandle(handle);
    },
};
exports.TestTools = {
    pending: function () {
        return Object.keys(activeHandles).length;
    }
};
//# sourceMappingURL=Immediate.js.map

/***/ }),

/***/ 74431:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NotFoundError = void 0;
var createErrorClass_1 = __nccwpck_require__(8858);
exports.NotFoundError = createErrorClass_1.createErrorClass(function (_super) {
    return function NotFoundErrorImpl(message) {
        _super(this);
        this.name = 'NotFoundError';
        this.message = message;
    };
});
//# sourceMappingURL=NotFoundError.js.map

/***/ }),

/***/ 95266:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ObjectUnsubscribedError = void 0;
var createErrorClass_1 = __nccwpck_require__(8858);
exports.ObjectUnsubscribedError = createErrorClass_1.createErrorClass(function (_super) {
    return function ObjectUnsubscribedErrorImpl() {
        _super(this);
        this.name = 'ObjectUnsubscribedError';
        this.message = 'object unsubscribed';
    };
});
//# sourceMappingURL=ObjectUnsubscribedError.js.map

/***/ }),

/***/ 49048:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SequenceError = void 0;
var createErrorClass_1 = __nccwpck_require__(8858);
exports.SequenceError = createErrorClass_1.createErrorClass(function (_super) {
    return function SequenceErrorImpl(message) {
        _super(this);
        this.name = 'SequenceError';
        this.message = message;
    };
});
//# sourceMappingURL=SequenceError.js.map

/***/ }),

/***/ 56776:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UnsubscriptionError = void 0;
var createErrorClass_1 = __nccwpck_require__(8858);
exports.UnsubscriptionError = createErrorClass_1.createErrorClass(function (_super) {
    return function UnsubscriptionErrorImpl(errors) {
        _super(this);
        this.message = errors
            ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ')
            : '';
        this.name = 'UnsubscriptionError';
        this.errors = errors;
    };
});
//# sourceMappingURL=UnsubscriptionError.js.map

/***/ }),

/***/ 34890:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.popNumber = exports.popScheduler = exports.popResultSelector = void 0;
var isFunction_1 = __nccwpck_require__(67206);
var isScheduler_1 = __nccwpck_require__(84078);
function last(arr) {
    return arr[arr.length - 1];
}
function popResultSelector(args) {
    return isFunction_1.isFunction(last(args)) ? args.pop() : undefined;
}
exports.popResultSelector = popResultSelector;
function popScheduler(args) {
    return isScheduler_1.isScheduler(last(args)) ? args.pop() : undefined;
}
exports.popScheduler = popScheduler;
function popNumber(args, defaultValue) {
    return typeof last(args) === 'number' ? args.pop() : defaultValue;
}
exports.popNumber = popNumber;
//# sourceMappingURL=args.js.map

/***/ }),

/***/ 12920:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.argsArgArrayOrObject = void 0;
var isArray = Array.isArray;
var getPrototypeOf = Object.getPrototypeOf, objectProto = Object.prototype, getKeys = Object.keys;
function argsArgArrayOrObject(args) {
    if (args.length === 1) {
        var first_1 = args[0];
        if (isArray(first_1)) {
            return { args: first_1, keys: null };
        }
        if (isPOJO(first_1)) {
            var keys = getKeys(first_1);
            return {
                args: keys.map(function (key) { return first_1[key]; }),
                keys: keys,
            };
        }
    }
    return { args: args, keys: null };
}
exports.argsArgArrayOrObject = argsArgArrayOrObject;
function isPOJO(obj) {
    return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;
}
//# sourceMappingURL=argsArgArrayOrObject.js.map

/***/ }),

/***/ 18824:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.argsOrArgArray = void 0;
var isArray = Array.isArray;
function argsOrArgArray(args) {
    return args.length === 1 && isArray(args[0]) ? args[0] : args;
}
exports.argsOrArgArray = argsOrArgArray;
//# sourceMappingURL=argsOrArgArray.js.map

/***/ }),

/***/ 68499:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrRemove = void 0;
function arrRemove(arr, item) {
    if (arr) {
        var index = arr.indexOf(item);
        0 <= index && arr.splice(index, 1);
    }
}
exports.arrRemove = arrRemove;
//# sourceMappingURL=arrRemove.js.map

/***/ }),

/***/ 8858:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createErrorClass = void 0;
function createErrorClass(createImpl) {
    var _super = function (instance) {
        Error.call(instance);
        instance.stack = new Error().stack;
    };
    var ctorFunc = createImpl(_super);
    ctorFunc.prototype = Object.create(Error.prototype);
    ctorFunc.prototype.constructor = ctorFunc;
    return ctorFunc;
}
exports.createErrorClass = createErrorClass;
//# sourceMappingURL=createErrorClass.js.map

/***/ }),

/***/ 57834:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createObject = void 0;
function createObject(keys, values) {
    return keys.reduce(function (result, key, i) { return ((result[key] = values[i]), result); }, {});
}
exports.createObject = createObject;
//# sourceMappingURL=createObject.js.map

/***/ }),

/***/ 31199:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.captureError = exports.errorContext = void 0;
var config_1 = __nccwpck_require__(92233);
var context = null;
function errorContext(cb) {
    if (config_1.config.useDeprecatedSynchronousErrorHandling) {
        var isRoot = !context;
        if (isRoot) {
            context = { errorThrown: false, error: null };
        }
        cb();
        if (isRoot) {
            var _a = context, errorThrown = _a.errorThrown, error = _a.error;
            context = null;
            if (errorThrown) {
                throw error;
            }
        }
    }
    else {
        cb();
    }
}
exports.errorContext = errorContext;
function captureError(err) {
    if (config_1.config.useDeprecatedSynchronousErrorHandling && context) {
        context.errorThrown = true;
        context.error = err;
    }
}
exports.captureError = captureError;
//# sourceMappingURL=errorContext.js.map

/***/ }),

/***/ 82877:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.executeSchedule = void 0;
function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {
    if (delay === void 0) { delay = 0; }
    if (repeat === void 0) { repeat = false; }
    var scheduleSubscription = scheduler.schedule(function () {
        work();
        if (repeat) {
            parentSubscription.add(this.schedule(null, delay));
        }
        else {
            this.unsubscribe();
        }
    }, delay);
    parentSubscription.add(scheduleSubscription);
    if (!repeat) {
        return scheduleSubscription;
    }
}
exports.executeSchedule = executeSchedule;
//# sourceMappingURL=executeSchedule.js.map

/***/ }),

/***/ 60283:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.identity = void 0;
function identity(x) {
    return x;
}
exports.identity = identity;
//# sourceMappingURL=identity.js.map

/***/ }),

/***/ 24461:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isArrayLike = void 0;
exports.isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });
//# sourceMappingURL=isArrayLike.js.map

/***/ }),

/***/ 44408:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isAsyncIterable = void 0;
var isFunction_1 = __nccwpck_require__(67206);
function isAsyncIterable(obj) {
    return Symbol.asyncIterator && isFunction_1.isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);
}
exports.isAsyncIterable = isAsyncIterable;
//# sourceMappingURL=isAsyncIterable.js.map

/***/ }),

/***/ 60935:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isValidDate = void 0;
function isValidDate(value) {
    return value instanceof Date && !isNaN(value);
}
exports.isValidDate = isValidDate;
//# sourceMappingURL=isDate.js.map

/***/ }),

/***/ 67206:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isFunction = void 0;
function isFunction(value) {
    return typeof value === 'function';
}
exports.isFunction = isFunction;
//# sourceMappingURL=isFunction.js.map

/***/ }),

/***/ 67984:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isInteropObservable = void 0;
var observable_1 = __nccwpck_require__(17186);
var isFunction_1 = __nccwpck_require__(67206);
function isInteropObservable(input) {
    return isFunction_1.isFunction(input[observable_1.observable]);
}
exports.isInteropObservable = isInteropObservable;
//# sourceMappingURL=isInteropObservable.js.map

/***/ }),

/***/ 94292:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isIterable = void 0;
var iterator_1 = __nccwpck_require__(85517);
var isFunction_1 = __nccwpck_require__(67206);
function isIterable(input) {
    return isFunction_1.isFunction(input === null || input === void 0 ? void 0 : input[iterator_1.iterator]);
}
exports.isIterable = isIterable;
//# sourceMappingURL=isIterable.js.map

/***/ }),

/***/ 72259:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isObservable = void 0;
var Observable_1 = __nccwpck_require__(53014);
var isFunction_1 = __nccwpck_require__(67206);
function isObservable(obj) {
    return !!obj && (obj instanceof Observable_1.Observable || (isFunction_1.isFunction(obj.lift) && isFunction_1.isFunction(obj.subscribe)));
}
exports.isObservable = isObservable;
//# sourceMappingURL=isObservable.js.map

/***/ }),

/***/ 65585:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isPromise = void 0;
var isFunction_1 = __nccwpck_require__(67206);
function isPromise(value) {
    return isFunction_1.isFunction(value === null || value === void 0 ? void 0 : value.then);
}
exports.isPromise = isPromise;
//# sourceMappingURL=isPromise.js.map

/***/ }),

/***/ 99621:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }
var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isReadableStreamLike = exports.readableStreamLikeToAsyncGenerator = void 0;
var isFunction_1 = __nccwpck_require__(67206);
function readableStreamLikeToAsyncGenerator(readableStream) {
    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {
        var reader, _a, value, done;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    reader = readableStream.getReader();
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, , 9, 10]);
                    _b.label = 2;
                case 2:
                    if (false) {}
                    return [4, __await(reader.read())];
                case 3:
                    _a = _b.sent(), value = _a.value, done = _a.done;
                    if (!done) return [3, 5];
                    return [4, __await(void 0)];
                case 4: return [2, _b.sent()];
                case 5: return [4, __await(value)];
                case 6: return [4, _b.sent()];
                case 7:
                    _b.sent();
                    return [3, 2];
                case 8: return [3, 10];
                case 9:
                    reader.releaseLock();
                    return [7];
                case 10: return [2];
            }
        });
    });
}
exports.readableStreamLikeToAsyncGenerator = readableStreamLikeToAsyncGenerator;
function isReadableStreamLike(obj) {
    return isFunction_1.isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);
}
exports.isReadableStreamLike = isReadableStreamLike;
//# sourceMappingURL=isReadableStreamLike.js.map

/***/ }),

/***/ 84078:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isScheduler = void 0;
var isFunction_1 = __nccwpck_require__(67206);
function isScheduler(value) {
    return value && isFunction_1.isFunction(value.schedule);
}
exports.isScheduler = isScheduler;
//# sourceMappingURL=isScheduler.js.map

/***/ }),

/***/ 38669:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.operate = exports.hasLift = void 0;
var isFunction_1 = __nccwpck_require__(67206);
function hasLift(source) {
    return isFunction_1.isFunction(source === null || source === void 0 ? void 0 : source.lift);
}
exports.hasLift = hasLift;
function operate(init) {
    return function (source) {
        if (hasLift(source)) {
            return source.lift(function (liftedSource) {
                try {
                    return init(liftedSource, this);
                }
                catch (err) {
                    this.error(err);
                }
            });
        }
        throw new TypeError('Unable to lift unknown Observable type');
    };
}
exports.operate = operate;
//# sourceMappingURL=lift.js.map

/***/ }),

/***/ 78934:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mapOneOrManyArgs = void 0;
var map_1 = __nccwpck_require__(5987);
var isArray = Array.isArray;
function callOrApply(fn, args) {
    return isArray(args) ? fn.apply(void 0, __spreadArray([], __read(args))) : fn(args);
}
function mapOneOrManyArgs(fn) {
    return map_1.map(function (args) { return callOrApply(fn, args); });
}
exports.mapOneOrManyArgs = mapOneOrManyArgs;
//# sourceMappingURL=mapOneOrManyArgs.js.map

/***/ }),

/***/ 11642:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.noop = void 0;
function noop() { }
exports.noop = noop;
//# sourceMappingURL=noop.js.map

/***/ }),

/***/ 54338:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.not = void 0;
function not(pred, thisArg) {
    return function (value, index) { return !pred.call(thisArg, value, index); };
}
exports.not = not;
//# sourceMappingURL=not.js.map

/***/ }),

/***/ 49587:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pipeFromArray = exports.pipe = void 0;
var identity_1 = __nccwpck_require__(60283);
function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return pipeFromArray(fns);
}
exports.pipe = pipe;
function pipeFromArray(fns) {
    if (fns.length === 0) {
        return identity_1.identity;
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
exports.pipeFromArray = pipeFromArray;
//# sourceMappingURL=pipe.js.map

/***/ }),

/***/ 92445:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.reportUnhandledError = void 0;
var config_1 = __nccwpck_require__(92233);
var timeoutProvider_1 = __nccwpck_require__(1613);
function reportUnhandledError(err) {
    timeoutProvider_1.timeoutProvider.setTimeout(function () {
        var onUnhandledError = config_1.config.onUnhandledError;
        if (onUnhandledError) {
            onUnhandledError(err);
        }
        else {
            throw err;
        }
    });
}
exports.reportUnhandledError = reportUnhandledError;
//# sourceMappingURL=reportUnhandledError.js.map

/***/ }),

/***/ 97364:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createInvalidObservableTypeError = void 0;
function createInvalidObservableTypeError(input) {
    return new TypeError("You provided " + (input !== null && typeof input === 'object' ? 'an invalid object' : "'" + input + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
}
exports.createInvalidObservableTypeError = createInvalidObservableTypeError;
//# sourceMappingURL=throwUnobservableError.js.map

/***/ }),

/***/ 74294:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(54219);


/***/ }),

/***/ 54219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


var net = __nccwpck_require__(41808);
var tls = __nccwpck_require__(24404);
var http = __nccwpck_require__(13685);
var https = __nccwpck_require__(95687);
var events = __nccwpck_require__(82361);
var assert = __nccwpck_require__(39491);
var util = __nccwpck_require__(73837);


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ 75840:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "v1", ({
  enumerable: true,
  get: function () {
    return _v.default;
  }
}));
Object.defineProperty(exports, "v3", ({
  enumerable: true,
  get: function () {
    return _v2.default;
  }
}));
Object.defineProperty(exports, "v4", ({
  enumerable: true,
  get: function () {
    return _v3.default;
  }
}));
Object.defineProperty(exports, "v5", ({
  enumerable: true,
  get: function () {
    return _v4.default;
  }
}));
Object.defineProperty(exports, "NIL", ({
  enumerable: true,
  get: function () {
    return _nil.default;
  }
}));
Object.defineProperty(exports, "version", ({
  enumerable: true,
  get: function () {
    return _version.default;
  }
}));
Object.defineProperty(exports, "validate", ({
  enumerable: true,
  get: function () {
    return _validate.default;
  }
}));
Object.defineProperty(exports, "stringify", ({
  enumerable: true,
  get: function () {
    return _stringify.default;
  }
}));
Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function () {
    return _parse.default;
  }
}));

var _v = _interopRequireDefault(__nccwpck_require__(78628));

var _v2 = _interopRequireDefault(__nccwpck_require__(86409));

var _v3 = _interopRequireDefault(__nccwpck_require__(85122));

var _v4 = _interopRequireDefault(__nccwpck_require__(79120));

var _nil = _interopRequireDefault(__nccwpck_require__(25332));

var _version = _interopRequireDefault(__nccwpck_require__(81595));

var _validate = _interopRequireDefault(__nccwpck_require__(66900));

var _stringify = _interopRequireDefault(__nccwpck_require__(18950));

var _parse = _interopRequireDefault(__nccwpck_require__(62746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ 4569:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function md5(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('md5').update(bytes).digest();
}

var _default = md5;
exports["default"] = _default;

/***/ }),

/***/ 25332:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = '00000000-0000-0000-0000-000000000000';
exports["default"] = _default;

/***/ }),

/***/ 62746:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(66900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  let v;
  const arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}

var _default = parse;
exports["default"] = _default;

/***/ }),

/***/ 40814:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
exports["default"] = _default;

/***/ }),

/***/ 50807:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = rng;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate

let poolPtr = rnds8Pool.length;

function rng() {
  if (poolPtr > rnds8Pool.length - 16) {
    _crypto.default.randomFillSync(rnds8Pool);

    poolPtr = 0;
  }

  return rnds8Pool.slice(poolPtr, poolPtr += 16);
}

/***/ }),

/***/ 85274:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__nccwpck_require__(6113));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function sha1(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('sha1').update(bytes).digest();
}

var _default = sha1;
exports["default"] = _default;

/***/ }),

/***/ 18950:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(66900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function stringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

var _default = stringify;
exports["default"] = _default;

/***/ }),

/***/ 78628:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(50807));

var _stringify = _interopRequireDefault(__nccwpck_require__(18950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html
let _nodeId;

let _clockseq; // Previous uuid creation time


let _lastMSecs = 0;
let _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  let i = buf && offset || 0;
  const b = buf || new Array(16);
  options = options || {};
  let node = options.node || _nodeId;
  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    const seedBytes = options.random || (options.rng || _rng.default)();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (let n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf || (0, _stringify.default)(b);
}

var _default = v1;
exports["default"] = _default;

/***/ }),

/***/ 86409:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(65998));

var _md = _interopRequireDefault(__nccwpck_require__(4569));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v3 = (0, _v.default)('v3', 0x30, _md.default);
var _default = v3;
exports["default"] = _default;

/***/ }),

/***/ 65998:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
exports.URL = exports.DNS = void 0;

var _stringify = _interopRequireDefault(__nccwpck_require__(18950));

var _parse = _interopRequireDefault(__nccwpck_require__(62746));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  const bytes = [];

  for (let i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
exports.DNS = DNS;
const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
exports.URL = URL;

function _default(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }

    if (typeof namespace === 'string') {
      namespace = (0, _parse.default)(namespace);
    }

    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`


    let bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      offset = offset || 0;

      for (let i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }

      return buf;
    }

    return (0, _stringify.default)(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ 85122:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__nccwpck_require__(50807));

var _stringify = _interopRequireDefault(__nccwpck_require__(18950));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function v4(options, buf, offset) {
  options = options || {};

  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`


  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0, _stringify.default)(rnds);
}

var _default = v4;
exports["default"] = _default;

/***/ }),

/***/ 79120:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__nccwpck_require__(65998));

var _sha = _interopRequireDefault(__nccwpck_require__(85274));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v5 = (0, _v.default)('v5', 0x50, _sha.default);
var _default = v5;
exports["default"] = _default;

/***/ }),

/***/ 66900:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _regex = _interopRequireDefault(__nccwpck_require__(40814));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validate(uuid) {
  return typeof uuid === 'string' && _regex.default.test(uuid);
}

var _default = validate;
exports["default"] = _default;

/***/ }),

/***/ 81595:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__nccwpck_require__(66900));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function version(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  return parseInt(uuid.substr(14, 1), 16);
}

var _default = version;
exports["default"] = _default;

/***/ }),

/***/ 88867:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const WebSocket = __nccwpck_require__(91518);

WebSocket.createWebSocketStream = __nccwpck_require__(41658);
WebSocket.Server = __nccwpck_require__(58887);
WebSocket.Receiver = __nccwpck_require__(25066);
WebSocket.Sender = __nccwpck_require__(36947);

WebSocket.WebSocket = WebSocket;
WebSocket.WebSocketServer = WebSocket.Server;

module.exports = WebSocket;


/***/ }),

/***/ 9436:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { EMPTY_BUFFER } = __nccwpck_require__(15949);

const FastBuffer = Buffer[Symbol.species];

/**
 * Merges an array of buffers into a new buffer.
 *
 * @param {Buffer[]} list The array of buffers to concat
 * @param {Number} totalLength The total length of buffers in the list
 * @return {Buffer} The resulting buffer
 * @public
 */
function concat(list, totalLength) {
  if (list.length === 0) return EMPTY_BUFFER;
  if (list.length === 1) return list[0];

  const target = Buffer.allocUnsafe(totalLength);
  let offset = 0;

  for (let i = 0; i < list.length; i++) {
    const buf = list[i];
    target.set(buf, offset);
    offset += buf.length;
  }

  if (offset < totalLength) {
    return new FastBuffer(target.buffer, target.byteOffset, offset);
  }

  return target;
}

/**
 * Masks a buffer using the given mask.
 *
 * @param {Buffer} source The buffer to mask
 * @param {Buffer} mask The mask to use
 * @param {Buffer} output The buffer where to store the result
 * @param {Number} offset The offset at which to start writing
 * @param {Number} length The number of bytes to mask.
 * @public
 */
function _mask(source, mask, output, offset, length) {
  for (let i = 0; i < length; i++) {
    output[offset + i] = source[i] ^ mask[i & 3];
  }
}

/**
 * Unmasks a buffer using the given mask.
 *
 * @param {Buffer} buffer The buffer to unmask
 * @param {Buffer} mask The mask to use
 * @public
 */
function _unmask(buffer, mask) {
  for (let i = 0; i < buffer.length; i++) {
    buffer[i] ^= mask[i & 3];
  }
}

/**
 * Converts a buffer to an `ArrayBuffer`.
 *
 * @param {Buffer} buf The buffer to convert
 * @return {ArrayBuffer} Converted buffer
 * @public
 */
function toArrayBuffer(buf) {
  if (buf.length === buf.buffer.byteLength) {
    return buf.buffer;
  }

  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);
}

/**
 * Converts `data` to a `Buffer`.
 *
 * @param {*} data The data to convert
 * @return {Buffer} The buffer
 * @throws {TypeError}
 * @public
 */
function toBuffer(data) {
  toBuffer.readOnly = true;

  if (Buffer.isBuffer(data)) return data;

  let buf;

  if (data instanceof ArrayBuffer) {
    buf = new FastBuffer(data);
  } else if (ArrayBuffer.isView(data)) {
    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);
  } else {
    buf = Buffer.from(data);
    toBuffer.readOnly = false;
  }

  return buf;
}

module.exports = {
  concat,
  mask: _mask,
  toArrayBuffer,
  toBuffer,
  unmask: _unmask
};

/* istanbul ignore else  */
if (!process.env.WS_NO_BUFFER_UTIL) {
  try {
    const bufferUtil = __nccwpck_require__(71269);

    module.exports.mask = function (source, mask, output, offset, length) {
      if (length < 48) _mask(source, mask, output, offset, length);
      else bufferUtil.mask(source, mask, output, offset, length);
    };

    module.exports.unmask = function (buffer, mask) {
      if (buffer.length < 32) _unmask(buffer, mask);
      else bufferUtil.unmask(buffer, mask);
    };
  } catch (e) {
    // Continue regardless of the error.
  }
}


/***/ }),

/***/ 15949:
/***/ ((module) => {

"use strict";


module.exports = {
  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],
  EMPTY_BUFFER: Buffer.alloc(0),
  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),
  kListener: Symbol('kListener'),
  kStatusCode: Symbol('status-code'),
  kWebSocket: Symbol('websocket'),
  NOOP: () => {}
};


/***/ }),

/***/ 64561:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { kForOnEventAttribute, kListener } = __nccwpck_require__(15949);

const kCode = Symbol('kCode');
const kData = Symbol('kData');
const kError = Symbol('kError');
const kMessage = Symbol('kMessage');
const kReason = Symbol('kReason');
const kTarget = Symbol('kTarget');
const kType = Symbol('kType');
const kWasClean = Symbol('kWasClean');

/**
 * Class representing an event.
 */
class Event {
  /**
   * Create a new `Event`.
   *
   * @param {String} type The name of the event
   * @throws {TypeError} If the `type` argument is not specified
   */
  constructor(type) {
    this[kTarget] = null;
    this[kType] = type;
  }

  /**
   * @type {*}
   */
  get target() {
    return this[kTarget];
  }

  /**
   * @type {String}
   */
  get type() {
    return this[kType];
  }
}

Object.defineProperty(Event.prototype, 'target', { enumerable: true });
Object.defineProperty(Event.prototype, 'type', { enumerable: true });

/**
 * Class representing a close event.
 *
 * @extends Event
 */
class CloseEvent extends Event {
  /**
   * Create a new `CloseEvent`.
   *
   * @param {String} type The name of the event
   * @param {Object} [options] A dictionary object that allows for setting
   *     attributes via object members of the same name
   * @param {Number} [options.code=0] The status code explaining why the
   *     connection was closed
   * @param {String} [options.reason=''] A human-readable string explaining why
   *     the connection was closed
   * @param {Boolean} [options.wasClean=false] Indicates whether or not the
   *     connection was cleanly closed
   */
  constructor(type, options = {}) {
    super(type);

    this[kCode] = options.code === undefined ? 0 : options.code;
    this[kReason] = options.reason === undefined ? '' : options.reason;
    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;
  }

  /**
   * @type {Number}
   */
  get code() {
    return this[kCode];
  }

  /**
   * @type {String}
   */
  get reason() {
    return this[kReason];
  }

  /**
   * @type {Boolean}
   */
  get wasClean() {
    return this[kWasClean];
  }
}

Object.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });
Object.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });
Object.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });

/**
 * Class representing an error event.
 *
 * @extends Event
 */
class ErrorEvent extends Event {
  /**
   * Create a new `ErrorEvent`.
   *
   * @param {String} type The name of the event
   * @param {Object} [options] A dictionary object that allows for setting
   *     attributes via object members of the same name
   * @param {*} [options.error=null] The error that generated this event
   * @param {String} [options.message=''] The error message
   */
  constructor(type, options = {}) {
    super(type);

    this[kError] = options.error === undefined ? null : options.error;
    this[kMessage] = options.message === undefined ? '' : options.message;
  }

  /**
   * @type {*}
   */
  get error() {
    return this[kError];
  }

  /**
   * @type {String}
   */
  get message() {
    return this[kMessage];
  }
}

Object.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });
Object.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });

/**
 * Class representing a message event.
 *
 * @extends Event
 */
class MessageEvent extends Event {
  /**
   * Create a new `MessageEvent`.
   *
   * @param {String} type The name of the event
   * @param {Object} [options] A dictionary object that allows for setting
   *     attributes via object members of the same name
   * @param {*} [options.data=null] The message content
   */
  constructor(type, options = {}) {
    super(type);

    this[kData] = options.data === undefined ? null : options.data;
  }

  /**
   * @type {*}
   */
  get data() {
    return this[kData];
  }
}

Object.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });

/**
 * This provides methods for emulating the `EventTarget` interface. It's not
 * meant to be used directly.
 *
 * @mixin
 */
const EventTarget = {
  /**
   * Register an event listener.
   *
   * @param {String} type A string representing the event type to listen for
   * @param {(Function|Object)} handler The listener to add
   * @param {Object} [options] An options object specifies characteristics about
   *     the event listener
   * @param {Boolean} [options.once=false] A `Boolean` indicating that the
   *     listener should be invoked at most once after being added. If `true`,
   *     the listener would be automatically removed when invoked.
   * @public
   */
  addEventListener(type, handler, options = {}) {
    for (const listener of this.listeners(type)) {
      if (
        !options[kForOnEventAttribute] &&
        listener[kListener] === handler &&
        !listener[kForOnEventAttribute]
      ) {
        return;
      }
    }

    let wrapper;

    if (type === 'message') {
      wrapper = function onMessage(data, isBinary) {
        const event = new MessageEvent('message', {
          data: isBinary ? data : data.toString()
        });

        event[kTarget] = this;
        callListener(handler, this, event);
      };
    } else if (type === 'close') {
      wrapper = function onClose(code, message) {
        const event = new CloseEvent('close', {
          code,
          reason: message.toString(),
          wasClean: this._closeFrameReceived && this._closeFrameSent
        });

        event[kTarget] = this;
        callListener(handler, this, event);
      };
    } else if (type === 'error') {
      wrapper = function onError(error) {
        const event = new ErrorEvent('error', {
          error,
          message: error.message
        });

        event[kTarget] = this;
        callListener(handler, this, event);
      };
    } else if (type === 'open') {
      wrapper = function onOpen() {
        const event = new Event('open');

        event[kTarget] = this;
        callListener(handler, this, event);
      };
    } else {
      return;
    }

    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];
    wrapper[kListener] = handler;

    if (options.once) {
      this.once(type, wrapper);
    } else {
      this.on(type, wrapper);
    }
  },

  /**
   * Remove an event listener.
   *
   * @param {String} type A string representing the event type to remove
   * @param {(Function|Object)} handler The listener to remove
   * @public
   */
  removeEventListener(type, handler) {
    for (const listener of this.listeners(type)) {
      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {
        this.removeListener(type, listener);
        break;
      }
    }
  }
};

module.exports = {
  CloseEvent,
  ErrorEvent,
  Event,
  EventTarget,
  MessageEvent
};

/**
 * Call an event listener
 *
 * @param {(Function|Object)} listener The listener to call
 * @param {*} thisArg The value to use as `this`` when calling the listener
 * @param {Event} event The event to pass to the listener
 * @private
 */
function callListener(listener, thisArg, event) {
  if (typeof listener === 'object' && listener.handleEvent) {
    listener.handleEvent.call(listener, event);
  } else {
    listener.call(thisArg, event);
  }
}


/***/ }),

/***/ 92035:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { tokenChars } = __nccwpck_require__(86279);

/**
 * Adds an offer to the map of extension offers or a parameter to the map of
 * parameters.
 *
 * @param {Object} dest The map of extension offers or parameters
 * @param {String} name The extension or parameter name
 * @param {(Object|Boolean|String)} elem The extension parameters or the
 *     parameter value
 * @private
 */
function push(dest, name, elem) {
  if (dest[name] === undefined) dest[name] = [elem];
  else dest[name].push(elem);
}

/**
 * Parses the `Sec-WebSocket-Extensions` header into an object.
 *
 * @param {String} header The field value of the header
 * @return {Object} The parsed object
 * @public
 */
function parse(header) {
  const offers = Object.create(null);
  let params = Object.create(null);
  let mustUnescape = false;
  let isEscaping = false;
  let inQuotes = false;
  let extensionName;
  let paramName;
  let start = -1;
  let code = -1;
  let end = -1;
  let i = 0;

  for (; i < header.length; i++) {
    code = header.charCodeAt(i);

    if (extensionName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (
        i !== 0 &&
        (code === 0x20 /* ' ' */ || code === 0x09) /* '\t' */
      ) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        const name = header.slice(start, end);
        if (code === 0x2c) {
          push(offers, name, params);
          params = Object.create(null);
        } else {
          extensionName = name;
        }

        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else if (paramName === undefined) {
      if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (code === 0x20 || code === 0x09) {
        if (end === -1 && start !== -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        push(params, header.slice(start, end), true);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = Object.create(null);
          extensionName = undefined;
        }

        start = end = -1;
      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {
        paramName = header.slice(start, i);
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    } else {
      //
      // The value of a quoted-string after unescaping must conform to the
      // token ABNF, so only token characters are valid.
      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1
      //
      if (isEscaping) {
        if (tokenChars[code] !== 1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
        if (start === -1) start = i;
        else if (!mustUnescape) mustUnescape = true;
        isEscaping = false;
      } else if (inQuotes) {
        if (tokenChars[code] === 1) {
          if (start === -1) start = i;
        } else if (code === 0x22 /* '"' */ && start !== -1) {
          inQuotes = false;
          end = i;
        } else if (code === 0x5c /* '\' */) {
          isEscaping = true;
        } else {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }
      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {
        inQuotes = true;
      } else if (end === -1 && tokenChars[code] === 1) {
        if (start === -1) start = i;
      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {
        if (end === -1) end = i;
      } else if (code === 0x3b || code === 0x2c) {
        if (start === -1) {
          throw new SyntaxError(`Unexpected character at index ${i}`);
        }

        if (end === -1) end = i;
        let value = header.slice(start, end);
        if (mustUnescape) {
          value = value.replace(/\\/g, '');
          mustUnescape = false;
        }
        push(params, paramName, value);
        if (code === 0x2c) {
          push(offers, extensionName, params);
          params = Object.create(null);
          extensionName = undefined;
        }

        paramName = undefined;
        start = end = -1;
      } else {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }
    }
  }

  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {
    throw new SyntaxError('Unexpected end of input');
  }

  if (end === -1) end = i;
  const token = header.slice(start, end);
  if (extensionName === undefined) {
    push(offers, token, params);
  } else {
    if (paramName === undefined) {
      push(params, token, true);
    } else if (mustUnescape) {
      push(params, paramName, token.replace(/\\/g, ''));
    } else {
      push(params, paramName, token);
    }
    push(offers, extensionName, params);
  }

  return offers;
}

/**
 * Builds the `Sec-WebSocket-Extensions` header field value.
 *
 * @param {Object} extensions The map of extensions and parameters to format
 * @return {String} A string representing the given object
 * @public
 */
function format(extensions) {
  return Object.keys(extensions)
    .map((extension) => {
      let configurations = extensions[extension];
      if (!Array.isArray(configurations)) configurations = [configurations];
      return configurations
        .map((params) => {
          return [extension]
            .concat(
              Object.keys(params).map((k) => {
                let values = params[k];
                if (!Array.isArray(values)) values = [values];
                return values
                  .map((v) => (v === true ? k : `${k}=${v}`))
                  .join('; ');
              })
            )
            .join('; ');
        })
        .join(', ');
    })
    .join(', ');
}

module.exports = { format, parse };


/***/ }),

/***/ 41356:
/***/ ((module) => {

"use strict";


const kDone = Symbol('kDone');
const kRun = Symbol('kRun');

/**
 * A very simple job queue with adjustable concurrency. Adapted from
 * https://github.com/STRML/async-limiter
 */
class Limiter {
  /**
   * Creates a new `Limiter`.
   *
   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed
   *     to run concurrently
   */
  constructor(concurrency) {
    this[kDone] = () => {
      this.pending--;
      this[kRun]();
    };
    this.concurrency = concurrency || Infinity;
    this.jobs = [];
    this.pending = 0;
  }

  /**
   * Adds a job to the queue.
   *
   * @param {Function} job The job to run
   * @public
   */
  add(job) {
    this.jobs.push(job);
    this[kRun]();
  }

  /**
   * Removes a job from the queue and runs it if possible.
   *
   * @private
   */
  [kRun]() {
    if (this.pending === this.concurrency) return;

    if (this.jobs.length) {
      const job = this.jobs.shift();

      this.pending++;
      job(this[kDone]);
    }
  }
}

module.exports = Limiter;


/***/ }),

/***/ 56684:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const zlib = __nccwpck_require__(59796);

const bufferUtil = __nccwpck_require__(9436);
const Limiter = __nccwpck_require__(41356);
const { kStatusCode } = __nccwpck_require__(15949);

const FastBuffer = Buffer[Symbol.species];
const TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);
const kPerMessageDeflate = Symbol('permessage-deflate');
const kTotalLength = Symbol('total-length');
const kCallback = Symbol('callback');
const kBuffers = Symbol('buffers');
const kError = Symbol('error');

//
// We limit zlib concurrency, which prevents severe memory fragmentation
// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913
// and https://github.com/websockets/ws/issues/1202
//
// Intentionally global; it's the global thread pool that's an issue.
//
let zlibLimiter;

/**
 * permessage-deflate implementation.
 */
class PerMessageDeflate {
  /**
   * Creates a PerMessageDeflate instance.
   *
   * @param {Object} [options] Configuration options
   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support
   *     for, or request, a custom client window size
   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/
   *     acknowledge disabling of client context takeover
   * @param {Number} [options.concurrencyLimit=10] The number of concurrent
   *     calls to zlib
   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the
   *     use of a custom server window size
   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept
   *     disabling of server context takeover
   * @param {Number} [options.threshold=1024] Size (in bytes) below which
   *     messages should not be compressed if context takeover is disabled
   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on
   *     deflate
   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on
   *     inflate
   * @param {Boolean} [isServer=false] Create the instance in either server or
   *     client mode
   * @param {Number} [maxPayload=0] The maximum allowed message length
   */
  constructor(options, isServer, maxPayload) {
    this._maxPayload = maxPayload | 0;
    this._options = options || {};
    this._threshold =
      this._options.threshold !== undefined ? this._options.threshold : 1024;
    this._isServer = !!isServer;
    this._deflate = null;
    this._inflate = null;

    this.params = null;

    if (!zlibLimiter) {
      const concurrency =
        this._options.concurrencyLimit !== undefined
          ? this._options.concurrencyLimit
          : 10;
      zlibLimiter = new Limiter(concurrency);
    }
  }

  /**
   * @type {String}
   */
  static get extensionName() {
    return 'permessage-deflate';
  }

  /**
   * Create an extension negotiation offer.
   *
   * @return {Object} Extension parameters
   * @public
   */
  offer() {
    const params = {};

    if (this._options.serverNoContextTakeover) {
      params.server_no_context_takeover = true;
    }
    if (this._options.clientNoContextTakeover) {
      params.client_no_context_takeover = true;
    }
    if (this._options.serverMaxWindowBits) {
      params.server_max_window_bits = this._options.serverMaxWindowBits;
    }
    if (this._options.clientMaxWindowBits) {
      params.client_max_window_bits = this._options.clientMaxWindowBits;
    } else if (this._options.clientMaxWindowBits == null) {
      params.client_max_window_bits = true;
    }

    return params;
  }

  /**
   * Accept an extension negotiation offer/response.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Object} Accepted configuration
   * @public
   */
  accept(configurations) {
    configurations = this.normalizeParams(configurations);

    this.params = this._isServer
      ? this.acceptAsServer(configurations)
      : this.acceptAsClient(configurations);

    return this.params;
  }

  /**
   * Releases all resources used by the extension.
   *
   * @public
   */
  cleanup() {
    if (this._inflate) {
      this._inflate.close();
      this._inflate = null;
    }

    if (this._deflate) {
      const callback = this._deflate[kCallback];

      this._deflate.close();
      this._deflate = null;

      if (callback) {
        callback(
          new Error(
            'The deflate stream was closed while data was being processed'
          )
        );
      }
    }
  }

  /**
   *  Accept an extension negotiation offer.
   *
   * @param {Array} offers The extension negotiation offers
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsServer(offers) {
    const opts = this._options;
    const accepted = offers.find((params) => {
      if (
        (opts.serverNoContextTakeover === false &&
          params.server_no_context_takeover) ||
        (params.server_max_window_bits &&
          (opts.serverMaxWindowBits === false ||
            (typeof opts.serverMaxWindowBits === 'number' &&
              opts.serverMaxWindowBits > params.server_max_window_bits))) ||
        (typeof opts.clientMaxWindowBits === 'number' &&
          !params.client_max_window_bits)
      ) {
        return false;
      }

      return true;
    });

    if (!accepted) {
      throw new Error('None of the extension offers can be accepted');
    }

    if (opts.serverNoContextTakeover) {
      accepted.server_no_context_takeover = true;
    }
    if (opts.clientNoContextTakeover) {
      accepted.client_no_context_takeover = true;
    }
    if (typeof opts.serverMaxWindowBits === 'number') {
      accepted.server_max_window_bits = opts.serverMaxWindowBits;
    }
    if (typeof opts.clientMaxWindowBits === 'number') {
      accepted.client_max_window_bits = opts.clientMaxWindowBits;
    } else if (
      accepted.client_max_window_bits === true ||
      opts.clientMaxWindowBits === false
    ) {
      delete accepted.client_max_window_bits;
    }

    return accepted;
  }

  /**
   * Accept the extension negotiation response.
   *
   * @param {Array} response The extension negotiation response
   * @return {Object} Accepted configuration
   * @private
   */
  acceptAsClient(response) {
    const params = response[0];

    if (
      this._options.clientNoContextTakeover === false &&
      params.client_no_context_takeover
    ) {
      throw new Error('Unexpected parameter "client_no_context_takeover"');
    }

    if (!params.client_max_window_bits) {
      if (typeof this._options.clientMaxWindowBits === 'number') {
        params.client_max_window_bits = this._options.clientMaxWindowBits;
      }
    } else if (
      this._options.clientMaxWindowBits === false ||
      (typeof this._options.clientMaxWindowBits === 'number' &&
        params.client_max_window_bits > this._options.clientMaxWindowBits)
    ) {
      throw new Error(
        'Unexpected or invalid parameter "client_max_window_bits"'
      );
    }

    return params;
  }

  /**
   * Normalize parameters.
   *
   * @param {Array} configurations The extension negotiation offers/reponse
   * @return {Array} The offers/response with normalized parameters
   * @private
   */
  normalizeParams(configurations) {
    configurations.forEach((params) => {
      Object.keys(params).forEach((key) => {
        let value = params[key];

        if (value.length > 1) {
          throw new Error(`Parameter "${key}" must have only a single value`);
        }

        value = value[0];

        if (key === 'client_max_window_bits') {
          if (value !== true) {
            const num = +value;
            if (!Number.isInteger(num) || num < 8 || num > 15) {
              throw new TypeError(
                `Invalid value for parameter "${key}": ${value}`
              );
            }
            value = num;
          } else if (!this._isServer) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else if (key === 'server_max_window_bits') {
          const num = +value;
          if (!Number.isInteger(num) || num < 8 || num > 15) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
          value = num;
        } else if (
          key === 'client_no_context_takeover' ||
          key === 'server_no_context_takeover'
        ) {
          if (value !== true) {
            throw new TypeError(
              `Invalid value for parameter "${key}": ${value}`
            );
          }
        } else {
          throw new Error(`Unknown parameter "${key}"`);
        }

        params[key] = value;
      });
    });

    return configurations;
  }

  /**
   * Decompress data. Concurrency limited.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  decompress(data, fin, callback) {
    zlibLimiter.add((done) => {
      this._decompress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Compress data. Concurrency limited.
   *
   * @param {(Buffer|String)} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @public
   */
  compress(data, fin, callback) {
    zlibLimiter.add((done) => {
      this._compress(data, fin, (err, result) => {
        done();
        callback(err, result);
      });
    });
  }

  /**
   * Decompress data.
   *
   * @param {Buffer} data Compressed data
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _decompress(data, fin, callback) {
    const endpoint = this._isServer ? 'client' : 'server';

    if (!this._inflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._inflate = zlib.createInflateRaw({
        ...this._options.zlibInflateOptions,
        windowBits
      });
      this._inflate[kPerMessageDeflate] = this;
      this._inflate[kTotalLength] = 0;
      this._inflate[kBuffers] = [];
      this._inflate.on('error', inflateOnError);
      this._inflate.on('data', inflateOnData);
    }

    this._inflate[kCallback] = callback;

    this._inflate.write(data);
    if (fin) this._inflate.write(TRAILER);

    this._inflate.flush(() => {
      const err = this._inflate[kError];

      if (err) {
        this._inflate.close();
        this._inflate = null;
        callback(err);
        return;
      }

      const data = bufferUtil.concat(
        this._inflate[kBuffers],
        this._inflate[kTotalLength]
      );

      if (this._inflate._readableState.endEmitted) {
        this._inflate.close();
        this._inflate = null;
      } else {
        this._inflate[kTotalLength] = 0;
        this._inflate[kBuffers] = [];

        if (fin && this.params[`${endpoint}_no_context_takeover`]) {
          this._inflate.reset();
        }
      }

      callback(null, data);
    });
  }

  /**
   * Compress data.
   *
   * @param {(Buffer|String)} data Data to compress
   * @param {Boolean} fin Specifies whether or not this is the last fragment
   * @param {Function} callback Callback
   * @private
   */
  _compress(data, fin, callback) {
    const endpoint = this._isServer ? 'server' : 'client';

    if (!this._deflate) {
      const key = `${endpoint}_max_window_bits`;
      const windowBits =
        typeof this.params[key] !== 'number'
          ? zlib.Z_DEFAULT_WINDOWBITS
          : this.params[key];

      this._deflate = zlib.createDeflateRaw({
        ...this._options.zlibDeflateOptions,
        windowBits
      });

      this._deflate[kTotalLength] = 0;
      this._deflate[kBuffers] = [];

      this._deflate.on('data', deflateOnData);
    }

    this._deflate[kCallback] = callback;

    this._deflate.write(data);
    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {
      if (!this._deflate) {
        //
        // The deflate stream was closed while data was being processed.
        //
        return;
      }

      let data = bufferUtil.concat(
        this._deflate[kBuffers],
        this._deflate[kTotalLength]
      );

      if (fin) {
        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);
      }

      //
      // Ensure that the callback will not be called again in
      // `PerMessageDeflate#cleanup()`.
      //
      this._deflate[kCallback] = null;

      this._deflate[kTotalLength] = 0;
      this._deflate[kBuffers] = [];

      if (fin && this.params[`${endpoint}_no_context_takeover`]) {
        this._deflate.reset();
      }

      callback(null, data);
    });
  }
}

module.exports = PerMessageDeflate;

/**
 * The listener of the `zlib.DeflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function deflateOnData(chunk) {
  this[kBuffers].push(chunk);
  this[kTotalLength] += chunk.length;
}

/**
 * The listener of the `zlib.InflateRaw` stream `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function inflateOnData(chunk) {
  this[kTotalLength] += chunk.length;

  if (
    this[kPerMessageDeflate]._maxPayload < 1 ||
    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload
  ) {
    this[kBuffers].push(chunk);
    return;
  }

  this[kError] = new RangeError('Max payload size exceeded');
  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';
  this[kError][kStatusCode] = 1009;
  this.removeListener('data', inflateOnData);
  this.reset();
}

/**
 * The listener of the `zlib.InflateRaw` stream `'error'` event.
 *
 * @param {Error} err The emitted error
 * @private
 */
function inflateOnError(err) {
  //
  // There is no need to call `Zlib#close()` as the handle is automatically
  // closed when an error is emitted.
  //
  this[kPerMessageDeflate]._inflate = null;
  err[kStatusCode] = 1007;
  this[kCallback](err);
}


/***/ }),

/***/ 25066:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { Writable } = __nccwpck_require__(12781);

const PerMessageDeflate = __nccwpck_require__(56684);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  kStatusCode,
  kWebSocket
} = __nccwpck_require__(15949);
const { concat, toArrayBuffer, unmask } = __nccwpck_require__(9436);
const { isValidStatusCode, isValidUTF8 } = __nccwpck_require__(86279);

const FastBuffer = Buffer[Symbol.species];
const promise = Promise.resolve();

//
// `queueMicrotask()` is not available in Node.js < 11.
//
const queueTask =
  typeof queueMicrotask === 'function' ? queueMicrotask : queueMicrotaskShim;

const GET_INFO = 0;
const GET_PAYLOAD_LENGTH_16 = 1;
const GET_PAYLOAD_LENGTH_64 = 2;
const GET_MASK = 3;
const GET_DATA = 4;
const INFLATING = 5;
const WAIT_MICROTASK = 6;

/**
 * HyBi Receiver implementation.
 *
 * @extends Writable
 */
class Receiver extends Writable {
  /**
   * Creates a Receiver instance.
   *
   * @param {Object} [options] Options object
   * @param {String} [options.binaryType=nodebuffer] The type for binary data
   * @param {Object} [options.extensions] An object containing the negotiated
   *     extensions
   * @param {Boolean} [options.isServer=false] Specifies whether to operate in
   *     client or server mode
   * @param {Number} [options.maxPayload=0] The maximum allowed message length
   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
   *     not to skip UTF-8 validation for text and close messages
   */
  constructor(options = {}) {
    super();

    this._binaryType = options.binaryType || BINARY_TYPES[0];
    this._extensions = options.extensions || {};
    this._isServer = !!options.isServer;
    this._maxPayload = options.maxPayload | 0;
    this._skipUTF8Validation = !!options.skipUTF8Validation;
    this[kWebSocket] = undefined;

    this._bufferedBytes = 0;
    this._buffers = [];

    this._compressed = false;
    this._payloadLength = 0;
    this._mask = undefined;
    this._fragmented = 0;
    this._masked = false;
    this._fin = false;
    this._opcode = 0;

    this._totalPayloadLength = 0;
    this._messageLength = 0;
    this._fragments = [];

    this._state = GET_INFO;
    this._loop = false;
  }

  /**
   * Implements `Writable.prototype._write()`.
   *
   * @param {Buffer} chunk The chunk of data to write
   * @param {String} encoding The character encoding of `chunk`
   * @param {Function} cb Callback
   * @private
   */
  _write(chunk, encoding, cb) {
    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();

    this._bufferedBytes += chunk.length;
    this._buffers.push(chunk);
    this.startLoop(cb);
  }

  /**
   * Consumes `n` bytes from the buffered data.
   *
   * @param {Number} n The number of bytes to consume
   * @return {Buffer} The consumed bytes
   * @private
   */
  consume(n) {
    this._bufferedBytes -= n;

    if (n === this._buffers[0].length) return this._buffers.shift();

    if (n < this._buffers[0].length) {
      const buf = this._buffers[0];
      this._buffers[0] = new FastBuffer(
        buf.buffer,
        buf.byteOffset + n,
        buf.length - n
      );

      return new FastBuffer(buf.buffer, buf.byteOffset, n);
    }

    const dst = Buffer.allocUnsafe(n);

    do {
      const buf = this._buffers[0];
      const offset = dst.length - n;

      if (n >= buf.length) {
        dst.set(this._buffers.shift(), offset);
      } else {
        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);
        this._buffers[0] = new FastBuffer(
          buf.buffer,
          buf.byteOffset + n,
          buf.length - n
        );
      }

      n -= buf.length;
    } while (n > 0);

    return dst;
  }

  /**
   * Starts the parsing loop.
   *
   * @param {Function} cb Callback
   * @private
   */
  startLoop(cb) {
    let err;
    this._loop = true;

    do {
      switch (this._state) {
        case GET_INFO:
          err = this.getInfo();
          break;
        case GET_PAYLOAD_LENGTH_16:
          err = this.getPayloadLength16();
          break;
        case GET_PAYLOAD_LENGTH_64:
          err = this.getPayloadLength64();
          break;
        case GET_MASK:
          this.getMask();
          break;
        case GET_DATA:
          err = this.getData(cb);
          break;
        case INFLATING:
          this._loop = false;
          return;
        default:
          //
          // `WAIT_MICROTASK`.
          //
          this._loop = false;

          queueTask(() => {
            this._state = GET_INFO;
            this.startLoop(cb);
          });
          return;
      }
    } while (this._loop);

    cb(err);
  }

  /**
   * Reads the first two bytes of a frame.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getInfo() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    const buf = this.consume(2);

    if ((buf[0] & 0x30) !== 0x00) {
      this._loop = false;
      return error(
        RangeError,
        'RSV2 and RSV3 must be clear',
        true,
        1002,
        'WS_ERR_UNEXPECTED_RSV_2_3'
      );
    }

    const compressed = (buf[0] & 0x40) === 0x40;

    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {
      this._loop = false;
      return error(
        RangeError,
        'RSV1 must be clear',
        true,
        1002,
        'WS_ERR_UNEXPECTED_RSV_1'
      );
    }

    this._fin = (buf[0] & 0x80) === 0x80;
    this._opcode = buf[0] & 0x0f;
    this._payloadLength = buf[1] & 0x7f;

    if (this._opcode === 0x00) {
      if (compressed) {
        this._loop = false;
        return error(
          RangeError,
          'RSV1 must be clear',
          true,
          1002,
          'WS_ERR_UNEXPECTED_RSV_1'
        );
      }

      if (!this._fragmented) {
        this._loop = false;
        return error(
          RangeError,
          'invalid opcode 0',
          true,
          1002,
          'WS_ERR_INVALID_OPCODE'
        );
      }

      this._opcode = this._fragmented;
    } else if (this._opcode === 0x01 || this._opcode === 0x02) {
      if (this._fragmented) {
        this._loop = false;
        return error(
          RangeError,
          `invalid opcode ${this._opcode}`,
          true,
          1002,
          'WS_ERR_INVALID_OPCODE'
        );
      }

      this._compressed = compressed;
    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {
      if (!this._fin) {
        this._loop = false;
        return error(
          RangeError,
          'FIN must be set',
          true,
          1002,
          'WS_ERR_EXPECTED_FIN'
        );
      }

      if (compressed) {
        this._loop = false;
        return error(
          RangeError,
          'RSV1 must be clear',
          true,
          1002,
          'WS_ERR_UNEXPECTED_RSV_1'
        );
      }

      if (
        this._payloadLength > 0x7d ||
        (this._opcode === 0x08 && this._payloadLength === 1)
      ) {
        this._loop = false;
        return error(
          RangeError,
          `invalid payload length ${this._payloadLength}`,
          true,
          1002,
          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'
        );
      }
    } else {
      this._loop = false;
      return error(
        RangeError,
        `invalid opcode ${this._opcode}`,
        true,
        1002,
        'WS_ERR_INVALID_OPCODE'
      );
    }

    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;
    this._masked = (buf[1] & 0x80) === 0x80;

    if (this._isServer) {
      if (!this._masked) {
        this._loop = false;
        return error(
          RangeError,
          'MASK must be set',
          true,
          1002,
          'WS_ERR_EXPECTED_MASK'
        );
      }
    } else if (this._masked) {
      this._loop = false;
      return error(
        RangeError,
        'MASK must be clear',
        true,
        1002,
        'WS_ERR_UNEXPECTED_MASK'
      );
    }

    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;
    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;
    else return this.haveLength();
  }

  /**
   * Gets extended payload length (7+16).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength16() {
    if (this._bufferedBytes < 2) {
      this._loop = false;
      return;
    }

    this._payloadLength = this.consume(2).readUInt16BE(0);
    return this.haveLength();
  }

  /**
   * Gets extended payload length (7+64).
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  getPayloadLength64() {
    if (this._bufferedBytes < 8) {
      this._loop = false;
      return;
    }

    const buf = this.consume(8);
    const num = buf.readUInt32BE(0);

    //
    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned
    // if payload length is greater than this number.
    //
    if (num > Math.pow(2, 53 - 32) - 1) {
      this._loop = false;
      return error(
        RangeError,
        'Unsupported WebSocket frame: payload length > 2^53 - 1',
        false,
        1009,
        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'
      );
    }

    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);
    return this.haveLength();
  }

  /**
   * Payload length has been read.
   *
   * @return {(RangeError|undefined)} A possible error
   * @private
   */
  haveLength() {
    if (this._payloadLength && this._opcode < 0x08) {
      this._totalPayloadLength += this._payloadLength;
      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {
        this._loop = false;
        return error(
          RangeError,
          'Max payload size exceeded',
          false,
          1009,
          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'
        );
      }
    }

    if (this._masked) this._state = GET_MASK;
    else this._state = GET_DATA;
  }

  /**
   * Reads mask bytes.
   *
   * @private
   */
  getMask() {
    if (this._bufferedBytes < 4) {
      this._loop = false;
      return;
    }

    this._mask = this.consume(4);
    this._state = GET_DATA;
  }

  /**
   * Reads data bytes.
   *
   * @param {Function} cb Callback
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  getData(cb) {
    let data = EMPTY_BUFFER;

    if (this._payloadLength) {
      if (this._bufferedBytes < this._payloadLength) {
        this._loop = false;
        return;
      }

      data = this.consume(this._payloadLength);

      if (
        this._masked &&
        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0
      ) {
        unmask(data, this._mask);
      }
    }

    if (this._opcode > 0x07) return this.controlMessage(data);

    if (this._compressed) {
      this._state = INFLATING;
      this.decompress(data, cb);
      return;
    }

    if (data.length) {
      //
      // This message is not compressed so its length is the sum of the payload
      // length of all fragments.
      //
      this._messageLength = this._totalPayloadLength;
      this._fragments.push(data);
    }

    return this.dataMessage();
  }

  /**
   * Decompresses data.
   *
   * @param {Buffer} data Compressed data
   * @param {Function} cb Callback
   * @private
   */
  decompress(data, cb) {
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    perMessageDeflate.decompress(data, this._fin, (err, buf) => {
      if (err) return cb(err);

      if (buf.length) {
        this._messageLength += buf.length;
        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {
          return cb(
            error(
              RangeError,
              'Max payload size exceeded',
              false,
              1009,
              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'
            )
          );
        }

        this._fragments.push(buf);
      }

      const er = this.dataMessage();
      if (er) return cb(er);

      this.startLoop(cb);
    });
  }

  /**
   * Handles a data message.
   *
   * @return {(Error|undefined)} A possible error
   * @private
   */
  dataMessage() {
    if (this._fin) {
      const messageLength = this._messageLength;
      const fragments = this._fragments;

      this._totalPayloadLength = 0;
      this._messageLength = 0;
      this._fragmented = 0;
      this._fragments = [];

      if (this._opcode === 2) {
        let data;

        if (this._binaryType === 'nodebuffer') {
          data = concat(fragments, messageLength);
        } else if (this._binaryType === 'arraybuffer') {
          data = toArrayBuffer(concat(fragments, messageLength));
        } else {
          data = fragments;
        }

        this.emit('message', data, true);
      } else {
        const buf = concat(fragments, messageLength);

        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {
          this._loop = false;
          return error(
            Error,
            'invalid UTF-8 sequence',
            true,
            1007,
            'WS_ERR_INVALID_UTF8'
          );
        }

        this.emit('message', buf, false);
      }
    }

    this._state = WAIT_MICROTASK;
  }

  /**
   * Handles a control message.
   *
   * @param {Buffer} data Data to handle
   * @return {(Error|RangeError|undefined)} A possible error
   * @private
   */
  controlMessage(data) {
    if (this._opcode === 0x08) {
      this._loop = false;

      if (data.length === 0) {
        this.emit('conclude', 1005, EMPTY_BUFFER);
        this.end();

        this._state = GET_INFO;
      } else {
        const code = data.readUInt16BE(0);

        if (!isValidStatusCode(code)) {
          return error(
            RangeError,
            `invalid status code ${code}`,
            true,
            1002,
            'WS_ERR_INVALID_CLOSE_CODE'
          );
        }

        const buf = new FastBuffer(
          data.buffer,
          data.byteOffset + 2,
          data.length - 2
        );

        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {
          return error(
            Error,
            'invalid UTF-8 sequence',
            true,
            1007,
            'WS_ERR_INVALID_UTF8'
          );
        }

        this.emit('conclude', code, buf);
        this.end();

        this._state = GET_INFO;
      }
    } else if (this._opcode === 0x09) {
      this.emit('ping', data);
      this._state = WAIT_MICROTASK;
    } else {
      this.emit('pong', data);
      this._state = WAIT_MICROTASK;
    }
  }
}

module.exports = Receiver;

/**
 * Builds an error object.
 *
 * @param {function(new:Error|RangeError)} ErrorCtor The error constructor
 * @param {String} message The error message
 * @param {Boolean} prefix Specifies whether or not to add a default prefix to
 *     `message`
 * @param {Number} statusCode The status code
 * @param {String} errorCode The exposed error code
 * @return {(Error|RangeError)} The error
 * @private
 */
function error(ErrorCtor, message, prefix, statusCode, errorCode) {
  const err = new ErrorCtor(
    prefix ? `Invalid WebSocket frame: ${message}` : message
  );

  Error.captureStackTrace(err, error);
  err.code = errorCode;
  err[kStatusCode] = statusCode;
  return err;
}

/**
 * A shim for `queueMicrotask()`.
 *
 * @param {Function} cb Callback
 */
function queueMicrotaskShim(cb) {
  promise.then(cb).catch(throwErrorNextTick);
}

/**
 * Throws an error.
 *
 * @param {Error} err The error to throw
 * @private
 */
function throwError(err) {
  throw err;
}

/**
 * Throws an error in the next tick.
 *
 * @param {Error} err The error to throw
 * @private
 */
function throwErrorNextTick(err) {
  process.nextTick(throwError, err);
}


/***/ }),

/***/ 36947:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^Duplex" }] */



const { Duplex } = __nccwpck_require__(12781);
const { randomFillSync } = __nccwpck_require__(6113);

const PerMessageDeflate = __nccwpck_require__(56684);
const { EMPTY_BUFFER } = __nccwpck_require__(15949);
const { isValidStatusCode } = __nccwpck_require__(86279);
const { mask: applyMask, toBuffer } = __nccwpck_require__(9436);

const kByteLength = Symbol('kByteLength');
const maskBuffer = Buffer.alloc(4);

/**
 * HyBi Sender implementation.
 */
class Sender {
  /**
   * Creates a Sender instance.
   *
   * @param {Duplex} socket The connection socket
   * @param {Object} [extensions] An object containing the negotiated extensions
   * @param {Function} [generateMask] The function used to generate the masking
   *     key
   */
  constructor(socket, extensions, generateMask) {
    this._extensions = extensions || {};

    if (generateMask) {
      this._generateMask = generateMask;
      this._maskBuffer = Buffer.alloc(4);
    }

    this._socket = socket;

    this._firstFragment = true;
    this._compress = false;

    this._bufferedBytes = 0;
    this._deflating = false;
    this._queue = [];
  }

  /**
   * Frames a piece of data according to the HyBi WebSocket protocol.
   *
   * @param {(Buffer|String)} data The data to frame
   * @param {Object} options Options object
   * @param {Boolean} [options.fin=false] Specifies whether or not to set the
   *     FIN bit
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking
   *     key
   * @param {Number} options.opcode The opcode
   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be
   *     modified
   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the
   *     RSV1 bit
   * @return {(Buffer|String)[]} The framed data
   * @public
   */
  static frame(data, options) {
    let mask;
    let merge = false;
    let offset = 2;
    let skipMasking = false;

    if (options.mask) {
      mask = options.maskBuffer || maskBuffer;

      if (options.generateMask) {
        options.generateMask(mask);
      } else {
        randomFillSync(mask, 0, 4);
      }

      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;
      offset = 6;
    }

    let dataLength;

    if (typeof data === 'string') {
      if (
        (!options.mask || skipMasking) &&
        options[kByteLength] !== undefined
      ) {
        dataLength = options[kByteLength];
      } else {
        data = Buffer.from(data);
        dataLength = data.length;
      }
    } else {
      dataLength = data.length;
      merge = options.mask && options.readOnly && !skipMasking;
    }

    let payloadLength = dataLength;

    if (dataLength >= 65536) {
      offset += 8;
      payloadLength = 127;
    } else if (dataLength > 125) {
      offset += 2;
      payloadLength = 126;
    }

    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);

    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;
    if (options.rsv1) target[0] |= 0x40;

    target[1] = payloadLength;

    if (payloadLength === 126) {
      target.writeUInt16BE(dataLength, 2);
    } else if (payloadLength === 127) {
      target[2] = target[3] = 0;
      target.writeUIntBE(dataLength, 4, 6);
    }

    if (!options.mask) return [target, data];

    target[1] |= 0x80;
    target[offset - 4] = mask[0];
    target[offset - 3] = mask[1];
    target[offset - 2] = mask[2];
    target[offset - 1] = mask[3];

    if (skipMasking) return [target, data];

    if (merge) {
      applyMask(data, mask, target, offset, dataLength);
      return [target];
    }

    applyMask(data, mask, data, 0, dataLength);
    return [target, data];
  }

  /**
   * Sends a close message to the other peer.
   *
   * @param {Number} [code] The status code component of the body
   * @param {(String|Buffer)} [data] The message component of the body
   * @param {Boolean} [mask=false] Specifies whether or not to mask the message
   * @param {Function} [cb] Callback
   * @public
   */
  close(code, data, mask, cb) {
    let buf;

    if (code === undefined) {
      buf = EMPTY_BUFFER;
    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {
      throw new TypeError('First argument must be a valid error code number');
    } else if (data === undefined || !data.length) {
      buf = Buffer.allocUnsafe(2);
      buf.writeUInt16BE(code, 0);
    } else {
      const length = Buffer.byteLength(data);

      if (length > 123) {
        throw new RangeError('The message must not be greater than 123 bytes');
      }

      buf = Buffer.allocUnsafe(2 + length);
      buf.writeUInt16BE(code, 0);

      if (typeof data === 'string') {
        buf.write(data, 2);
      } else {
        buf.set(data, 2);
      }
    }

    const options = {
      [kByteLength]: buf.length,
      fin: true,
      generateMask: this._generateMask,
      mask,
      maskBuffer: this._maskBuffer,
      opcode: 0x08,
      readOnly: false,
      rsv1: false
    };

    if (this._deflating) {
      this.enqueue([this.dispatch, buf, false, options, cb]);
    } else {
      this.sendFrame(Sender.frame(buf, options), cb);
    }
  }

  /**
   * Sends a ping message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback
   * @public
   */
  ping(data, mask, cb) {
    let byteLength;
    let readOnly;

    if (typeof data === 'string') {
      byteLength = Buffer.byteLength(data);
      readOnly = false;
    } else {
      data = toBuffer(data);
      byteLength = data.length;
      readOnly = toBuffer.readOnly;
    }

    if (byteLength > 125) {
      throw new RangeError('The data size must not be greater than 125 bytes');
    }

    const options = {
      [kByteLength]: byteLength,
      fin: true,
      generateMask: this._generateMask,
      mask,
      maskBuffer: this._maskBuffer,
      opcode: 0x09,
      readOnly,
      rsv1: false
    };

    if (this._deflating) {
      this.enqueue([this.dispatch, data, false, options, cb]);
    } else {
      this.sendFrame(Sender.frame(data, options), cb);
    }
  }

  /**
   * Sends a pong message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback
   * @public
   */
  pong(data, mask, cb) {
    let byteLength;
    let readOnly;

    if (typeof data === 'string') {
      byteLength = Buffer.byteLength(data);
      readOnly = false;
    } else {
      data = toBuffer(data);
      byteLength = data.length;
      readOnly = toBuffer.readOnly;
    }

    if (byteLength > 125) {
      throw new RangeError('The data size must not be greater than 125 bytes');
    }

    const options = {
      [kByteLength]: byteLength,
      fin: true,
      generateMask: this._generateMask,
      mask,
      maskBuffer: this._maskBuffer,
      opcode: 0x0a,
      readOnly,
      rsv1: false
    };

    if (this._deflating) {
      this.enqueue([this.dispatch, data, false, options, cb]);
    } else {
      this.sendFrame(Sender.frame(data, options), cb);
    }
  }

  /**
   * Sends a data message to the other peer.
   *
   * @param {*} data The message to send
   * @param {Object} options Options object
   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary
   *     or text
   * @param {Boolean} [options.compress=false] Specifies whether or not to
   *     compress `data`
   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the
   *     last one
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Function} [cb] Callback
   * @public
   */
  send(data, options, cb) {
    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];
    let opcode = options.binary ? 2 : 1;
    let rsv1 = options.compress;

    let byteLength;
    let readOnly;

    if (typeof data === 'string') {
      byteLength = Buffer.byteLength(data);
      readOnly = false;
    } else {
      data = toBuffer(data);
      byteLength = data.length;
      readOnly = toBuffer.readOnly;
    }

    if (this._firstFragment) {
      this._firstFragment = false;
      if (
        rsv1 &&
        perMessageDeflate &&
        perMessageDeflate.params[
          perMessageDeflate._isServer
            ? 'server_no_context_takeover'
            : 'client_no_context_takeover'
        ]
      ) {
        rsv1 = byteLength >= perMessageDeflate._threshold;
      }
      this._compress = rsv1;
    } else {
      rsv1 = false;
      opcode = 0;
    }

    if (options.fin) this._firstFragment = true;

    if (perMessageDeflate) {
      const opts = {
        [kByteLength]: byteLength,
        fin: options.fin,
        generateMask: this._generateMask,
        mask: options.mask,
        maskBuffer: this._maskBuffer,
        opcode,
        readOnly,
        rsv1
      };

      if (this._deflating) {
        this.enqueue([this.dispatch, data, this._compress, opts, cb]);
      } else {
        this.dispatch(data, this._compress, opts, cb);
      }
    } else {
      this.sendFrame(
        Sender.frame(data, {
          [kByteLength]: byteLength,
          fin: options.fin,
          generateMask: this._generateMask,
          mask: options.mask,
          maskBuffer: this._maskBuffer,
          opcode,
          readOnly,
          rsv1: false
        }),
        cb
      );
    }
  }

  /**
   * Dispatches a message.
   *
   * @param {(Buffer|String)} data The message to send
   * @param {Boolean} [compress=false] Specifies whether or not to compress
   *     `data`
   * @param {Object} options Options object
   * @param {Boolean} [options.fin=false] Specifies whether or not to set the
   *     FIN bit
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Boolean} [options.mask=false] Specifies whether or not to mask
   *     `data`
   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking
   *     key
   * @param {Number} options.opcode The opcode
   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be
   *     modified
   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the
   *     RSV1 bit
   * @param {Function} [cb] Callback
   * @private
   */
  dispatch(data, compress, options, cb) {
    if (!compress) {
      this.sendFrame(Sender.frame(data, options), cb);
      return;
    }

    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];

    this._bufferedBytes += options[kByteLength];
    this._deflating = true;
    perMessageDeflate.compress(data, options.fin, (_, buf) => {
      if (this._socket.destroyed) {
        const err = new Error(
          'The socket was closed while data was being compressed'
        );

        if (typeof cb === 'function') cb(err);

        for (let i = 0; i < this._queue.length; i++) {
          const params = this._queue[i];
          const callback = params[params.length - 1];

          if (typeof callback === 'function') callback(err);
        }

        return;
      }

      this._bufferedBytes -= options[kByteLength];
      this._deflating = false;
      options.readOnly = false;
      this.sendFrame(Sender.frame(buf, options), cb);
      this.dequeue();
    });
  }

  /**
   * Executes queued send operations.
   *
   * @private
   */
  dequeue() {
    while (!this._deflating && this._queue.length) {
      const params = this._queue.shift();

      this._bufferedBytes -= params[3][kByteLength];
      Reflect.apply(params[0], this, params.slice(1));
    }
  }

  /**
   * Enqueues a send operation.
   *
   * @param {Array} params Send operation parameters.
   * @private
   */
  enqueue(params) {
    this._bufferedBytes += params[3][kByteLength];
    this._queue.push(params);
  }

  /**
   * Sends a frame.
   *
   * @param {Buffer[]} list The frame to send
   * @param {Function} [cb] Callback
   * @private
   */
  sendFrame(list, cb) {
    if (list.length === 2) {
      this._socket.cork();
      this._socket.write(list[0]);
      this._socket.write(list[1], cb);
      this._socket.uncork();
    } else {
      this._socket.write(list[0], cb);
    }
  }
}

module.exports = Sender;


/***/ }),

/***/ 41658:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { Duplex } = __nccwpck_require__(12781);

/**
 * Emits the `'close'` event on a stream.
 *
 * @param {Duplex} stream The stream.
 * @private
 */
function emitClose(stream) {
  stream.emit('close');
}

/**
 * The listener of the `'end'` event.
 *
 * @private
 */
function duplexOnEnd() {
  if (!this.destroyed && this._writableState.finished) {
    this.destroy();
  }
}

/**
 * The listener of the `'error'` event.
 *
 * @param {Error} err The error
 * @private
 */
function duplexOnError(err) {
  this.removeListener('error', duplexOnError);
  this.destroy();
  if (this.listenerCount('error') === 0) {
    // Do not suppress the throwing behavior.
    this.emit('error', err);
  }
}

/**
 * Wraps a `WebSocket` in a duplex stream.
 *
 * @param {WebSocket} ws The `WebSocket` to wrap
 * @param {Object} [options] The options for the `Duplex` constructor
 * @return {Duplex} The duplex stream
 * @public
 */
function createWebSocketStream(ws, options) {
  let terminateOnDestroy = true;

  const duplex = new Duplex({
    ...options,
    autoDestroy: false,
    emitClose: false,
    objectMode: false,
    writableObjectMode: false
  });

  ws.on('message', function message(msg, isBinary) {
    const data =
      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;

    if (!duplex.push(data)) ws.pause();
  });

  ws.once('error', function error(err) {
    if (duplex.destroyed) return;

    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.
    //
    // - If the `'error'` event is emitted before the `'open'` event, then
    //   `ws.terminate()` is a noop as no socket is assigned.
    // - Otherwise, the error is re-emitted by the listener of the `'error'`
    //   event of the `Receiver` object. The listener already closes the
    //   connection by calling `ws.close()`. This allows a close frame to be
    //   sent to the other peer. If `ws.terminate()` is called right after this,
    //   then the close frame might not be sent.
    terminateOnDestroy = false;
    duplex.destroy(err);
  });

  ws.once('close', function close() {
    if (duplex.destroyed) return;

    duplex.push(null);
  });

  duplex._destroy = function (err, callback) {
    if (ws.readyState === ws.CLOSED) {
      callback(err);
      process.nextTick(emitClose, duplex);
      return;
    }

    let called = false;

    ws.once('error', function error(err) {
      called = true;
      callback(err);
    });

    ws.once('close', function close() {
      if (!called) callback(err);
      process.nextTick(emitClose, duplex);
    });

    if (terminateOnDestroy) ws.terminate();
  };

  duplex._final = function (callback) {
    if (ws.readyState === ws.CONNECTING) {
      ws.once('open', function open() {
        duplex._final(callback);
      });
      return;
    }

    // If the value of the `_socket` property is `null` it means that `ws` is a
    // client websocket and the handshake failed. In fact, when this happens, a
    // socket is never assigned to the websocket. Wait for the `'error'` event
    // that will be emitted by the websocket.
    if (ws._socket === null) return;

    if (ws._socket._writableState.finished) {
      callback();
      if (duplex._readableState.endEmitted) duplex.destroy();
    } else {
      ws._socket.once('finish', function finish() {
        // `duplex` is not destroyed here because the `'end'` event will be
        // emitted on `duplex` after this `'finish'` event. The EOF signaling
        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.
        callback();
      });
      ws.close();
    }
  };

  duplex._read = function () {
    if (ws.isPaused) ws.resume();
  };

  duplex._write = function (chunk, encoding, callback) {
    if (ws.readyState === ws.CONNECTING) {
      ws.once('open', function open() {
        duplex._write(chunk, encoding, callback);
      });
      return;
    }

    ws.send(chunk, callback);
  };

  duplex.on('end', duplexOnEnd);
  duplex.on('error', duplexOnError);
  return duplex;
}

module.exports = createWebSocketStream;


/***/ }),

/***/ 36668:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { tokenChars } = __nccwpck_require__(86279);

/**
 * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.
 *
 * @param {String} header The field value of the header
 * @return {Set} The subprotocol names
 * @public
 */
function parse(header) {
  const protocols = new Set();
  let start = -1;
  let end = -1;
  let i = 0;

  for (i; i < header.length; i++) {
    const code = header.charCodeAt(i);

    if (end === -1 && tokenChars[code] === 1) {
      if (start === -1) start = i;
    } else if (
      i !== 0 &&
      (code === 0x20 /* ' ' */ || code === 0x09) /* '\t' */
    ) {
      if (end === -1 && start !== -1) end = i;
    } else if (code === 0x2c /* ',' */) {
      if (start === -1) {
        throw new SyntaxError(`Unexpected character at index ${i}`);
      }

      if (end === -1) end = i;

      const protocol = header.slice(start, end);

      if (protocols.has(protocol)) {
        throw new SyntaxError(`The "${protocol}" subprotocol is duplicated`);
      }

      protocols.add(protocol);
      start = end = -1;
    } else {
      throw new SyntaxError(`Unexpected character at index ${i}`);
    }
  }

  if (start === -1 || end !== -1) {
    throw new SyntaxError('Unexpected end of input');
  }

  const protocol = header.slice(start, i);

  if (protocols.has(protocol)) {
    throw new SyntaxError(`The "${protocol}" subprotocol is duplicated`);
  }

  protocols.add(protocol);
  return protocols;
}

module.exports = { parse };


/***/ }),

/***/ 86279:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { isUtf8 } = __nccwpck_require__(14300);

//
// Allowed token characters:
//
// '!', '#', '$', '%', '&', ''', '*', '+', '-',
// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'
//
// tokenChars[32] === 0 // ' '
// tokenChars[33] === 1 // '!'
// tokenChars[34] === 0 // '"'
// ...
//
// prettier-ignore
const tokenChars = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31
  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63
  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127
];

/**
 * Checks if a status code is allowed in a close frame.
 *
 * @param {Number} code The status code
 * @return {Boolean} `true` if the status code is valid, else `false`
 * @public
 */
function isValidStatusCode(code) {
  return (
    (code >= 1000 &&
      code <= 1014 &&
      code !== 1004 &&
      code !== 1005 &&
      code !== 1006) ||
    (code >= 3000 && code <= 4999)
  );
}

/**
 * Checks if a given buffer contains only correct UTF-8.
 * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by
 * Markus Kuhn.
 *
 * @param {Buffer} buf The buffer to check
 * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`
 * @public
 */
function _isValidUTF8(buf) {
  const len = buf.length;
  let i = 0;

  while (i < len) {
    if ((buf[i] & 0x80) === 0) {
      // 0xxxxxxx
      i++;
    } else if ((buf[i] & 0xe0) === 0xc0) {
      // 110xxxxx 10xxxxxx
      if (
        i + 1 === len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i] & 0xfe) === 0xc0 // Overlong
      ) {
        return false;
      }

      i += 2;
    } else if ((buf[i] & 0xf0) === 0xe0) {
      // 1110xxxx 10xxxxxx 10xxxxxx
      if (
        i + 2 >= len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i + 2] & 0xc0) !== 0x80 ||
        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong
        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)
      ) {
        return false;
      }

      i += 3;
    } else if ((buf[i] & 0xf8) === 0xf0) {
      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
      if (
        i + 3 >= len ||
        (buf[i + 1] & 0xc0) !== 0x80 ||
        (buf[i + 2] & 0xc0) !== 0x80 ||
        (buf[i + 3] & 0xc0) !== 0x80 ||
        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong
        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||
        buf[i] > 0xf4 // > U+10FFFF
      ) {
        return false;
      }

      i += 4;
    } else {
      return false;
    }
  }

  return true;
}

module.exports = {
  isValidStatusCode,
  isValidUTF8: _isValidUTF8,
  tokenChars
};

if (isUtf8) {
  module.exports.isValidUTF8 = function (buf) {
    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);
  };
} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {
  try {
    const isValidUTF8 = __nccwpck_require__(24592);

    module.exports.isValidUTF8 = function (buf) {
      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);
    };
  } catch (e) {
    // Continue regardless of the error.
  }
}


/***/ }),

/***/ 58887:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^Duplex$" }] */



const EventEmitter = __nccwpck_require__(82361);
const http = __nccwpck_require__(13685);
const { Duplex } = __nccwpck_require__(12781);
const { createHash } = __nccwpck_require__(6113);

const extension = __nccwpck_require__(92035);
const PerMessageDeflate = __nccwpck_require__(56684);
const subprotocol = __nccwpck_require__(36668);
const WebSocket = __nccwpck_require__(91518);
const { GUID, kWebSocket } = __nccwpck_require__(15949);

const keyRegex = /^[+/0-9A-Za-z]{22}==$/;

const RUNNING = 0;
const CLOSING = 1;
const CLOSED = 2;

/**
 * Class representing a WebSocket server.
 *
 * @extends EventEmitter
 */
class WebSocketServer extends EventEmitter {
  /**
   * Create a `WebSocketServer` instance.
   *
   * @param {Object} options Configuration options
   * @param {Number} [options.backlog=511] The maximum length of the queue of
   *     pending connections
   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to
   *     track clients
   * @param {Function} [options.handleProtocols] A hook to handle protocols
   * @param {String} [options.host] The hostname where to bind the server
   * @param {Number} [options.maxPayload=104857600] The maximum allowed message
   *     size
   * @param {Boolean} [options.noServer=false] Enable no server mode
   * @param {String} [options.path] Accept only connections matching this path
   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable
   *     permessage-deflate
   * @param {Number} [options.port] The port where to bind the server
   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S
   *     server to use
   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
   *     not to skip UTF-8 validation for text and close messages
   * @param {Function} [options.verifyClient] A hook to reject connections
   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`
   *     class to use. It must be the `WebSocket` class or class that extends it
   * @param {Function} [callback] A listener for the `listening` event
   */
  constructor(options, callback) {
    super();

    options = {
      maxPayload: 100 * 1024 * 1024,
      skipUTF8Validation: false,
      perMessageDeflate: false,
      handleProtocols: null,
      clientTracking: true,
      verifyClient: null,
      noServer: false,
      backlog: null, // use default (511 as implemented in net.js)
      server: null,
      host: null,
      path: null,
      port: null,
      WebSocket,
      ...options
    };

    if (
      (options.port == null && !options.server && !options.noServer) ||
      (options.port != null && (options.server || options.noServer)) ||
      (options.server && options.noServer)
    ) {
      throw new TypeError(
        'One and only one of the "port", "server", or "noServer" options ' +
          'must be specified'
      );
    }

    if (options.port != null) {
      this._server = http.createServer((req, res) => {
        const body = http.STATUS_CODES[426];

        res.writeHead(426, {
          'Content-Length': body.length,
          'Content-Type': 'text/plain'
        });
        res.end(body);
      });
      this._server.listen(
        options.port,
        options.host,
        options.backlog,
        callback
      );
    } else if (options.server) {
      this._server = options.server;
    }

    if (this._server) {
      const emitConnection = this.emit.bind(this, 'connection');

      this._removeListeners = addListeners(this._server, {
        listening: this.emit.bind(this, 'listening'),
        error: this.emit.bind(this, 'error'),
        upgrade: (req, socket, head) => {
          this.handleUpgrade(req, socket, head, emitConnection);
        }
      });
    }

    if (options.perMessageDeflate === true) options.perMessageDeflate = {};
    if (options.clientTracking) {
      this.clients = new Set();
      this._shouldEmitClose = false;
    }

    this.options = options;
    this._state = RUNNING;
  }

  /**
   * Returns the bound address, the address family name, and port of the server
   * as reported by the operating system if listening on an IP socket.
   * If the server is listening on a pipe or UNIX domain socket, the name is
   * returned as a string.
   *
   * @return {(Object|String|null)} The address of the server
   * @public
   */
  address() {
    if (this.options.noServer) {
      throw new Error('The server is operating in "noServer" mode');
    }

    if (!this._server) return null;
    return this._server.address();
  }

  /**
   * Stop the server from accepting new connections and emit the `'close'` event
   * when all existing connections are closed.
   *
   * @param {Function} [cb] A one-time listener for the `'close'` event
   * @public
   */
  close(cb) {
    if (this._state === CLOSED) {
      if (cb) {
        this.once('close', () => {
          cb(new Error('The server is not running'));
        });
      }

      process.nextTick(emitClose, this);
      return;
    }

    if (cb) this.once('close', cb);

    if (this._state === CLOSING) return;
    this._state = CLOSING;

    if (this.options.noServer || this.options.server) {
      if (this._server) {
        this._removeListeners();
        this._removeListeners = this._server = null;
      }

      if (this.clients) {
        if (!this.clients.size) {
          process.nextTick(emitClose, this);
        } else {
          this._shouldEmitClose = true;
        }
      } else {
        process.nextTick(emitClose, this);
      }
    } else {
      const server = this._server;

      this._removeListeners();
      this._removeListeners = this._server = null;

      //
      // The HTTP/S server was created internally. Close it, and rely on its
      // `'close'` event.
      //
      server.close(() => {
        emitClose(this);
      });
    }
  }

  /**
   * See if a given request should be handled by this server instance.
   *
   * @param {http.IncomingMessage} req Request object to inspect
   * @return {Boolean} `true` if the request is valid, else `false`
   * @public
   */
  shouldHandle(req) {
    if (this.options.path) {
      const index = req.url.indexOf('?');
      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;

      if (pathname !== this.options.path) return false;
    }

    return true;
  }

  /**
   * Handle a HTTP Upgrade request.
   *
   * @param {http.IncomingMessage} req The request object
   * @param {Duplex} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @public
   */
  handleUpgrade(req, socket, head, cb) {
    socket.on('error', socketOnError);

    const key = req.headers['sec-websocket-key'];
    const version = +req.headers['sec-websocket-version'];

    if (req.method !== 'GET') {
      const message = 'Invalid HTTP method';
      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);
      return;
    }

    if (req.headers.upgrade.toLowerCase() !== 'websocket') {
      const message = 'Invalid Upgrade header';
      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
      return;
    }

    if (!key || !keyRegex.test(key)) {
      const message = 'Missing or invalid Sec-WebSocket-Key header';
      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
      return;
    }

    if (version !== 8 && version !== 13) {
      const message = 'Missing or invalid Sec-WebSocket-Version header';
      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
      return;
    }

    if (!this.shouldHandle(req)) {
      abortHandshake(socket, 400);
      return;
    }

    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];
    let protocols = new Set();

    if (secWebSocketProtocol !== undefined) {
      try {
        protocols = subprotocol.parse(secWebSocketProtocol);
      } catch (err) {
        const message = 'Invalid Sec-WebSocket-Protocol header';
        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
        return;
      }
    }

    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];
    const extensions = {};

    if (
      this.options.perMessageDeflate &&
      secWebSocketExtensions !== undefined
    ) {
      const perMessageDeflate = new PerMessageDeflate(
        this.options.perMessageDeflate,
        true,
        this.options.maxPayload
      );

      try {
        const offers = extension.parse(secWebSocketExtensions);

        if (offers[PerMessageDeflate.extensionName]) {
          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);
          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;
        }
      } catch (err) {
        const message =
          'Invalid or unacceptable Sec-WebSocket-Extensions header';
        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);
        return;
      }
    }

    //
    // Optionally call external client verification handler.
    //
    if (this.options.verifyClient) {
      const info = {
        origin:
          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],
        secure: !!(req.socket.authorized || req.socket.encrypted),
        req
      };

      if (this.options.verifyClient.length === 2) {
        this.options.verifyClient(info, (verified, code, message, headers) => {
          if (!verified) {
            return abortHandshake(socket, code || 401, message, headers);
          }

          this.completeUpgrade(
            extensions,
            key,
            protocols,
            req,
            socket,
            head,
            cb
          );
        });
        return;
      }

      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);
    }

    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);
  }

  /**
   * Upgrade the connection to WebSocket.
   *
   * @param {Object} extensions The accepted extensions
   * @param {String} key The value of the `Sec-WebSocket-Key` header
   * @param {Set} protocols The subprotocols
   * @param {http.IncomingMessage} req The request object
   * @param {Duplex} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Function} cb Callback
   * @throws {Error} If called more than once with the same socket
   * @private
   */
  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {
    //
    // Destroy the socket if the client has already sent a FIN packet.
    //
    if (!socket.readable || !socket.writable) return socket.destroy();

    if (socket[kWebSocket]) {
      throw new Error(
        'server.handleUpgrade() was called more than once with the same ' +
          'socket, possibly due to a misconfiguration'
      );
    }

    if (this._state > RUNNING) return abortHandshake(socket, 503);

    const digest = createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    const headers = [
      'HTTP/1.1 101 Switching Protocols',
      'Upgrade: websocket',
      'Connection: Upgrade',
      `Sec-WebSocket-Accept: ${digest}`
    ];

    const ws = new this.options.WebSocket(null);

    if (protocols.size) {
      //
      // Optionally call external protocol selection handler.
      //
      const protocol = this.options.handleProtocols
        ? this.options.handleProtocols(protocols, req)
        : protocols.values().next().value;

      if (protocol) {
        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);
        ws._protocol = protocol;
      }
    }

    if (extensions[PerMessageDeflate.extensionName]) {
      const params = extensions[PerMessageDeflate.extensionName].params;
      const value = extension.format({
        [PerMessageDeflate.extensionName]: [params]
      });
      headers.push(`Sec-WebSocket-Extensions: ${value}`);
      ws._extensions = extensions;
    }

    //
    // Allow external modification/inspection of handshake headers.
    //
    this.emit('headers', headers, req);

    socket.write(headers.concat('\r\n').join('\r\n'));
    socket.removeListener('error', socketOnError);

    ws.setSocket(socket, head, {
      maxPayload: this.options.maxPayload,
      skipUTF8Validation: this.options.skipUTF8Validation
    });

    if (this.clients) {
      this.clients.add(ws);
      ws.on('close', () => {
        this.clients.delete(ws);

        if (this._shouldEmitClose && !this.clients.size) {
          process.nextTick(emitClose, this);
        }
      });
    }

    cb(ws, req);
  }
}

module.exports = WebSocketServer;

/**
 * Add event listeners on an `EventEmitter` using a map of <event, listener>
 * pairs.
 *
 * @param {EventEmitter} server The event emitter
 * @param {Object.<String, Function>} map The listeners to add
 * @return {Function} A function that will remove the added listeners when
 *     called
 * @private
 */
function addListeners(server, map) {
  for (const event of Object.keys(map)) server.on(event, map[event]);

  return function removeListeners() {
    for (const event of Object.keys(map)) {
      server.removeListener(event, map[event]);
    }
  };
}

/**
 * Emit a `'close'` event on an `EventEmitter`.
 *
 * @param {EventEmitter} server The event emitter
 * @private
 */
function emitClose(server) {
  server._state = CLOSED;
  server.emit('close');
}

/**
 * Handle socket errors.
 *
 * @private
 */
function socketOnError() {
  this.destroy();
}

/**
 * Close the connection when preconditions are not fulfilled.
 *
 * @param {Duplex} socket The socket of the upgrade request
 * @param {Number} code The HTTP response status code
 * @param {String} [message] The HTTP response body
 * @param {Object} [headers] Additional HTTP response headers
 * @private
 */
function abortHandshake(socket, code, message, headers) {
  //
  // The socket is writable unless the user destroyed or ended it before calling
  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user
  // error. Handling this does not make much sense as the worst that can happen
  // is that some of the data written by the user might be discarded due to the
  // call to `socket.end()` below, which triggers an `'error'` event that in
  // turn causes the socket to be destroyed.
  //
  message = message || http.STATUS_CODES[code];
  headers = {
    Connection: 'close',
    'Content-Type': 'text/html',
    'Content-Length': Buffer.byteLength(message),
    ...headers
  };

  socket.once('finish', socket.destroy);

  socket.end(
    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\r\n` +
      Object.keys(headers)
        .map((h) => `${h}: ${headers[h]}`)
        .join('\r\n') +
      '\r\n\r\n' +
      message
  );
}

/**
 * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least
 * one listener for it, otherwise call `abortHandshake()`.
 *
 * @param {WebSocketServer} server The WebSocket server
 * @param {http.IncomingMessage} req The request object
 * @param {Duplex} socket The socket of the upgrade request
 * @param {Number} code The HTTP response status code
 * @param {String} message The HTTP response body
 * @private
 */
function abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {
  if (server.listenerCount('wsClientError')) {
    const err = new Error(message);
    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);

    server.emit('wsClientError', err, socket, req);
  } else {
    abortHandshake(socket, code, message);
  }
}


/***/ }),

/***/ 91518:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "^Duplex|Readable$" }] */



const EventEmitter = __nccwpck_require__(82361);
const https = __nccwpck_require__(95687);
const http = __nccwpck_require__(13685);
const net = __nccwpck_require__(41808);
const tls = __nccwpck_require__(24404);
const { randomBytes, createHash } = __nccwpck_require__(6113);
const { Duplex, Readable } = __nccwpck_require__(12781);
const { URL } = __nccwpck_require__(57310);

const PerMessageDeflate = __nccwpck_require__(56684);
const Receiver = __nccwpck_require__(25066);
const Sender = __nccwpck_require__(36947);
const {
  BINARY_TYPES,
  EMPTY_BUFFER,
  GUID,
  kForOnEventAttribute,
  kListener,
  kStatusCode,
  kWebSocket,
  NOOP
} = __nccwpck_require__(15949);
const {
  EventTarget: { addEventListener, removeEventListener }
} = __nccwpck_require__(64561);
const { format, parse } = __nccwpck_require__(92035);
const { toBuffer } = __nccwpck_require__(9436);

const closeTimeout = 30 * 1000;
const kAborted = Symbol('kAborted');
const protocolVersions = [8, 13];
const readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];
const subprotocolRegex = /^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;

/**
 * Class representing a WebSocket.
 *
 * @extends EventEmitter
 */
class WebSocket extends EventEmitter {
  /**
   * Create a new `WebSocket`.
   *
   * @param {(String|URL)} address The URL to which to connect
   * @param {(String|String[])} [protocols] The subprotocols
   * @param {Object} [options] Connection options
   */
  constructor(address, protocols, options) {
    super();

    this._binaryType = BINARY_TYPES[0];
    this._closeCode = 1006;
    this._closeFrameReceived = false;
    this._closeFrameSent = false;
    this._closeMessage = EMPTY_BUFFER;
    this._closeTimer = null;
    this._extensions = {};
    this._paused = false;
    this._protocol = '';
    this._readyState = WebSocket.CONNECTING;
    this._receiver = null;
    this._sender = null;
    this._socket = null;

    if (address !== null) {
      this._bufferedAmount = 0;
      this._isServer = false;
      this._redirects = 0;

      if (protocols === undefined) {
        protocols = [];
      } else if (!Array.isArray(protocols)) {
        if (typeof protocols === 'object' && protocols !== null) {
          options = protocols;
          protocols = [];
        } else {
          protocols = [protocols];
        }
      }

      initAsClient(this, address, protocols, options);
    } else {
      this._isServer = true;
    }
  }

  /**
   * This deviates from the WHATWG interface since ws doesn't support the
   * required default "blob" type (instead we define a custom "nodebuffer"
   * type).
   *
   * @type {String}
   */
  get binaryType() {
    return this._binaryType;
  }

  set binaryType(type) {
    if (!BINARY_TYPES.includes(type)) return;

    this._binaryType = type;

    //
    // Allow to change `binaryType` on the fly.
    //
    if (this._receiver) this._receiver._binaryType = type;
  }

  /**
   * @type {Number}
   */
  get bufferedAmount() {
    if (!this._socket) return this._bufferedAmount;

    return this._socket._writableState.length + this._sender._bufferedBytes;
  }

  /**
   * @type {String}
   */
  get extensions() {
    return Object.keys(this._extensions).join();
  }

  /**
   * @type {Boolean}
   */
  get isPaused() {
    return this._paused;
  }

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onclose() {
    return null;
  }

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onerror() {
    return null;
  }

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onopen() {
    return null;
  }

  /**
   * @type {Function}
   */
  /* istanbul ignore next */
  get onmessage() {
    return null;
  }

  /**
   * @type {String}
   */
  get protocol() {
    return this._protocol;
  }

  /**
   * @type {Number}
   */
  get readyState() {
    return this._readyState;
  }

  /**
   * @type {String}
   */
  get url() {
    return this._url;
  }

  /**
   * Set up the socket and the internal resources.
   *
   * @param {Duplex} socket The network socket between the server and client
   * @param {Buffer} head The first packet of the upgraded stream
   * @param {Object} options Options object
   * @param {Function} [options.generateMask] The function used to generate the
   *     masking key
   * @param {Number} [options.maxPayload=0] The maximum allowed message size
   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
   *     not to skip UTF-8 validation for text and close messages
   * @private
   */
  setSocket(socket, head, options) {
    const receiver = new Receiver({
      binaryType: this.binaryType,
      extensions: this._extensions,
      isServer: this._isServer,
      maxPayload: options.maxPayload,
      skipUTF8Validation: options.skipUTF8Validation
    });

    this._sender = new Sender(socket, this._extensions, options.generateMask);
    this._receiver = receiver;
    this._socket = socket;

    receiver[kWebSocket] = this;
    socket[kWebSocket] = this;

    receiver.on('conclude', receiverOnConclude);
    receiver.on('drain', receiverOnDrain);
    receiver.on('error', receiverOnError);
    receiver.on('message', receiverOnMessage);
    receiver.on('ping', receiverOnPing);
    receiver.on('pong', receiverOnPong);

    //
    // These methods may not be available if `socket` is just a `Duplex`.
    //
    if (socket.setTimeout) socket.setTimeout(0);
    if (socket.setNoDelay) socket.setNoDelay();

    if (head.length > 0) socket.unshift(head);

    socket.on('close', socketOnClose);
    socket.on('data', socketOnData);
    socket.on('end', socketOnEnd);
    socket.on('error', socketOnError);

    this._readyState = WebSocket.OPEN;
    this.emit('open');
  }

  /**
   * Emit the `'close'` event.
   *
   * @private
   */
  emitClose() {
    if (!this._socket) {
      this._readyState = WebSocket.CLOSED;
      this.emit('close', this._closeCode, this._closeMessage);
      return;
    }

    if (this._extensions[PerMessageDeflate.extensionName]) {
      this._extensions[PerMessageDeflate.extensionName].cleanup();
    }

    this._receiver.removeAllListeners();
    this._readyState = WebSocket.CLOSED;
    this.emit('close', this._closeCode, this._closeMessage);
  }

  /**
   * Start a closing handshake.
   *
   *          +----------+   +-----------+   +----------+
   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -
   *    |     +----------+   +-----------+   +----------+     |
   *          +----------+   +-----------+         |
   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING
   *          +----------+   +-----------+   |
   *    |           |                        |   +---+        |
   *                +------------------------+-->|fin| - - - -
   *    |         +---+                      |   +---+
   *     - - - - -|fin|<---------------------+
   *              +---+
   *
   * @param {Number} [code] Status code explaining why the connection is closing
   * @param {(String|Buffer)} [data] The reason why the connection is
   *     closing
   * @public
   */
  close(code, data) {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      abortHandshake(this, this._req, msg);
      return;
    }

    if (this.readyState === WebSocket.CLOSING) {
      if (
        this._closeFrameSent &&
        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)
      ) {
        this._socket.end();
      }

      return;
    }

    this._readyState = WebSocket.CLOSING;
    this._sender.close(code, data, !this._isServer, (err) => {
      //
      // This error is handled by the `'error'` listener on the socket. We only
      // want to know if the close frame has been sent here.
      //
      if (err) return;

      this._closeFrameSent = true;

      if (
        this._closeFrameReceived ||
        this._receiver._writableState.errorEmitted
      ) {
        this._socket.end();
      }
    });

    //
    // Specify a timeout for the closing handshake to complete.
    //
    this._closeTimer = setTimeout(
      this._socket.destroy.bind(this._socket),
      closeTimeout
    );
  }

  /**
   * Pause the socket.
   *
   * @public
   */
  pause() {
    if (
      this.readyState === WebSocket.CONNECTING ||
      this.readyState === WebSocket.CLOSED
    ) {
      return;
    }

    this._paused = true;
    this._socket.pause();
  }

  /**
   * Send a ping.
   *
   * @param {*} [data] The data to send
   * @param {Boolean} [mask] Indicates whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when the ping is sent
   * @public
   */
  ping(data, mask, cb) {
    if (this.readyState === WebSocket.CONNECTING) {
      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
    }

    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (typeof data === 'number') data = data.toString();

    if (this.readyState !== WebSocket.OPEN) {
      sendAfterClose(this, data, cb);
      return;
    }

    if (mask === undefined) mask = !this._isServer;
    this._sender.ping(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Send a pong.
   *
   * @param {*} [data] The data to send
   * @param {Boolean} [mask] Indicates whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when the pong is sent
   * @public
   */
  pong(data, mask, cb) {
    if (this.readyState === WebSocket.CONNECTING) {
      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
    }

    if (typeof data === 'function') {
      cb = data;
      data = mask = undefined;
    } else if (typeof mask === 'function') {
      cb = mask;
      mask = undefined;
    }

    if (typeof data === 'number') data = data.toString();

    if (this.readyState !== WebSocket.OPEN) {
      sendAfterClose(this, data, cb);
      return;
    }

    if (mask === undefined) mask = !this._isServer;
    this._sender.pong(data || EMPTY_BUFFER, mask, cb);
  }

  /**
   * Resume the socket.
   *
   * @public
   */
  resume() {
    if (
      this.readyState === WebSocket.CONNECTING ||
      this.readyState === WebSocket.CLOSED
    ) {
      return;
    }

    this._paused = false;
    if (!this._receiver._writableState.needDrain) this._socket.resume();
  }

  /**
   * Send a data message.
   *
   * @param {*} data The message to send
   * @param {Object} [options] Options object
   * @param {Boolean} [options.binary] Specifies whether `data` is binary or
   *     text
   * @param {Boolean} [options.compress] Specifies whether or not to compress
   *     `data`
   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the
   *     last one
   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`
   * @param {Function} [cb] Callback which is executed when data is written out
   * @public
   */
  send(data, options, cb) {
    if (this.readyState === WebSocket.CONNECTING) {
      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');
    }

    if (typeof options === 'function') {
      cb = options;
      options = {};
    }

    if (typeof data === 'number') data = data.toString();

    if (this.readyState !== WebSocket.OPEN) {
      sendAfterClose(this, data, cb);
      return;
    }

    const opts = {
      binary: typeof data !== 'string',
      mask: !this._isServer,
      compress: true,
      fin: true,
      ...options
    };

    if (!this._extensions[PerMessageDeflate.extensionName]) {
      opts.compress = false;
    }

    this._sender.send(data || EMPTY_BUFFER, opts, cb);
  }

  /**
   * Forcibly close the connection.
   *
   * @public
   */
  terminate() {
    if (this.readyState === WebSocket.CLOSED) return;
    if (this.readyState === WebSocket.CONNECTING) {
      const msg = 'WebSocket was closed before the connection was established';
      abortHandshake(this, this._req, msg);
      return;
    }

    if (this._socket) {
      this._readyState = WebSocket.CLOSING;
      this._socket.destroy();
    }
  }
}

/**
 * @constant {Number} CONNECTING
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'CONNECTING', {
  enumerable: true,
  value: readyStates.indexOf('CONNECTING')
});

/**
 * @constant {Number} CONNECTING
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'CONNECTING', {
  enumerable: true,
  value: readyStates.indexOf('CONNECTING')
});

/**
 * @constant {Number} OPEN
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'OPEN', {
  enumerable: true,
  value: readyStates.indexOf('OPEN')
});

/**
 * @constant {Number} OPEN
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'OPEN', {
  enumerable: true,
  value: readyStates.indexOf('OPEN')
});

/**
 * @constant {Number} CLOSING
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'CLOSING', {
  enumerable: true,
  value: readyStates.indexOf('CLOSING')
});

/**
 * @constant {Number} CLOSING
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'CLOSING', {
  enumerable: true,
  value: readyStates.indexOf('CLOSING')
});

/**
 * @constant {Number} CLOSED
 * @memberof WebSocket
 */
Object.defineProperty(WebSocket, 'CLOSED', {
  enumerable: true,
  value: readyStates.indexOf('CLOSED')
});

/**
 * @constant {Number} CLOSED
 * @memberof WebSocket.prototype
 */
Object.defineProperty(WebSocket.prototype, 'CLOSED', {
  enumerable: true,
  value: readyStates.indexOf('CLOSED')
});

[
  'binaryType',
  'bufferedAmount',
  'extensions',
  'isPaused',
  'protocol',
  'readyState',
  'url'
].forEach((property) => {
  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });
});

//
// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.
// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface
//
['open', 'error', 'close', 'message'].forEach((method) => {
  Object.defineProperty(WebSocket.prototype, `on${method}`, {
    enumerable: true,
    get() {
      for (const listener of this.listeners(method)) {
        if (listener[kForOnEventAttribute]) return listener[kListener];
      }

      return null;
    },
    set(handler) {
      for (const listener of this.listeners(method)) {
        if (listener[kForOnEventAttribute]) {
          this.removeListener(method, listener);
          break;
        }
      }

      if (typeof handler !== 'function') return;

      this.addEventListener(method, handler, {
        [kForOnEventAttribute]: true
      });
    }
  });
});

WebSocket.prototype.addEventListener = addEventListener;
WebSocket.prototype.removeEventListener = removeEventListener;

module.exports = WebSocket;

/**
 * Initialize a WebSocket client.
 *
 * @param {WebSocket} websocket The client to initialize
 * @param {(String|URL)} address The URL to which to connect
 * @param {Array} protocols The subprotocols
 * @param {Object} [options] Connection options
 * @param {Boolean} [options.followRedirects=false] Whether or not to follow
 *     redirects
 * @param {Function} [options.generateMask] The function used to generate the
 *     masking key
 * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the
 *     handshake request
 * @param {Number} [options.maxPayload=104857600] The maximum allowed message
 *     size
 * @param {Number} [options.maxRedirects=10] The maximum number of redirects
 *     allowed
 * @param {String} [options.origin] Value of the `Origin` or
 *     `Sec-WebSocket-Origin` header
 * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable
 *     permessage-deflate
 * @param {Number} [options.protocolVersion=13] Value of the
 *     `Sec-WebSocket-Version` header
 * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or
 *     not to skip UTF-8 validation for text and close messages
 * @private
 */
function initAsClient(websocket, address, protocols, options) {
  const opts = {
    protocolVersion: protocolVersions[1],
    maxPayload: 100 * 1024 * 1024,
    skipUTF8Validation: false,
    perMessageDeflate: true,
    followRedirects: false,
    maxRedirects: 10,
    ...options,
    createConnection: undefined,
    socketPath: undefined,
    hostname: undefined,
    protocol: undefined,
    timeout: undefined,
    method: 'GET',
    host: undefined,
    path: undefined,
    port: undefined
  };

  if (!protocolVersions.includes(opts.protocolVersion)) {
    throw new RangeError(
      `Unsupported protocol version: ${opts.protocolVersion} ` +
        `(supported versions: ${protocolVersions.join(', ')})`
    );
  }

  let parsedUrl;

  if (address instanceof URL) {
    parsedUrl = address;
  } else {
    try {
      parsedUrl = new URL(address);
    } catch (e) {
      throw new SyntaxError(`Invalid URL: ${address}`);
    }
  }

  if (parsedUrl.protocol === 'http:') {
    parsedUrl.protocol = 'ws:';
  } else if (parsedUrl.protocol === 'https:') {
    parsedUrl.protocol = 'wss:';
  }

  websocket._url = parsedUrl.href;

  const isSecure = parsedUrl.protocol === 'wss:';
  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';
  let invalidUrlMessage;

  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {
    invalidUrlMessage =
      'The URL\'s protocol must be one of "ws:", "wss:", ' +
      '"http:", "https", or "ws+unix:"';
  } else if (isIpcUrl && !parsedUrl.pathname) {
    invalidUrlMessage = "The URL's pathname is empty";
  } else if (parsedUrl.hash) {
    invalidUrlMessage = 'The URL contains a fragment identifier';
  }

  if (invalidUrlMessage) {
    const err = new SyntaxError(invalidUrlMessage);

    if (websocket._redirects === 0) {
      throw err;
    } else {
      emitErrorAndClose(websocket, err);
      return;
    }
  }

  const defaultPort = isSecure ? 443 : 80;
  const key = randomBytes(16).toString('base64');
  const request = isSecure ? https.request : http.request;
  const protocolSet = new Set();
  let perMessageDeflate;

  opts.createConnection = isSecure ? tlsConnect : netConnect;
  opts.defaultPort = opts.defaultPort || defaultPort;
  opts.port = parsedUrl.port || defaultPort;
  opts.host = parsedUrl.hostname.startsWith('[')
    ? parsedUrl.hostname.slice(1, -1)
    : parsedUrl.hostname;
  opts.headers = {
    ...opts.headers,
    'Sec-WebSocket-Version': opts.protocolVersion,
    'Sec-WebSocket-Key': key,
    Connection: 'Upgrade',
    Upgrade: 'websocket'
  };
  opts.path = parsedUrl.pathname + parsedUrl.search;
  opts.timeout = opts.handshakeTimeout;

  if (opts.perMessageDeflate) {
    perMessageDeflate = new PerMessageDeflate(
      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},
      false,
      opts.maxPayload
    );
    opts.headers['Sec-WebSocket-Extensions'] = format({
      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()
    });
  }
  if (protocols.length) {
    for (const protocol of protocols) {
      if (
        typeof protocol !== 'string' ||
        !subprotocolRegex.test(protocol) ||
        protocolSet.has(protocol)
      ) {
        throw new SyntaxError(
          'An invalid or duplicated subprotocol was specified'
        );
      }

      protocolSet.add(protocol);
    }

    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');
  }
  if (opts.origin) {
    if (opts.protocolVersion < 13) {
      opts.headers['Sec-WebSocket-Origin'] = opts.origin;
    } else {
      opts.headers.Origin = opts.origin;
    }
  }
  if (parsedUrl.username || parsedUrl.password) {
    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;
  }

  if (isIpcUrl) {
    const parts = opts.path.split(':');

    opts.socketPath = parts[0];
    opts.path = parts[1];
  }

  let req;

  if (opts.followRedirects) {
    if (websocket._redirects === 0) {
      websocket._originalIpc = isIpcUrl;
      websocket._originalSecure = isSecure;
      websocket._originalHostOrSocketPath = isIpcUrl
        ? opts.socketPath
        : parsedUrl.host;

      const headers = options && options.headers;

      //
      // Shallow copy the user provided options so that headers can be changed
      // without mutating the original object.
      //
      options = { ...options, headers: {} };

      if (headers) {
        for (const [key, value] of Object.entries(headers)) {
          options.headers[key.toLowerCase()] = value;
        }
      }
    } else if (websocket.listenerCount('redirect') === 0) {
      const isSameHost = isIpcUrl
        ? websocket._originalIpc
          ? opts.socketPath === websocket._originalHostOrSocketPath
          : false
        : websocket._originalIpc
        ? false
        : parsedUrl.host === websocket._originalHostOrSocketPath;

      if (!isSameHost || (websocket._originalSecure && !isSecure)) {
        //
        // Match curl 7.77.0 behavior and drop the following headers. These
        // headers are also dropped when following a redirect to a subdomain.
        //
        delete opts.headers.authorization;
        delete opts.headers.cookie;

        if (!isSameHost) delete opts.headers.host;

        opts.auth = undefined;
      }
    }

    //
    // Match curl 7.77.0 behavior and make the first `Authorization` header win.
    // If the `Authorization` header is set, then there is nothing to do as it
    // will take precedence.
    //
    if (opts.auth && !options.headers.authorization) {
      options.headers.authorization =
        'Basic ' + Buffer.from(opts.auth).toString('base64');
    }

    req = websocket._req = request(opts);

    if (websocket._redirects) {
      //
      // Unlike what is done for the `'upgrade'` event, no early exit is
      // triggered here if the user calls `websocket.close()` or
      // `websocket.terminate()` from a listener of the `'redirect'` event. This
      // is because the user can also call `request.destroy()` with an error
      // before calling `websocket.close()` or `websocket.terminate()` and this
      // would result in an error being emitted on the `request` object with no
      // `'error'` event listeners attached.
      //
      websocket.emit('redirect', websocket.url, req);
    }
  } else {
    req = websocket._req = request(opts);
  }

  if (opts.timeout) {
    req.on('timeout', () => {
      abortHandshake(websocket, req, 'Opening handshake has timed out');
    });
  }

  req.on('error', (err) => {
    if (req === null || req[kAborted]) return;

    req = websocket._req = null;
    emitErrorAndClose(websocket, err);
  });

  req.on('response', (res) => {
    const location = res.headers.location;
    const statusCode = res.statusCode;

    if (
      location &&
      opts.followRedirects &&
      statusCode >= 300 &&
      statusCode < 400
    ) {
      if (++websocket._redirects > opts.maxRedirects) {
        abortHandshake(websocket, req, 'Maximum redirects exceeded');
        return;
      }

      req.abort();

      let addr;

      try {
        addr = new URL(location, address);
      } catch (e) {
        const err = new SyntaxError(`Invalid URL: ${location}`);
        emitErrorAndClose(websocket, err);
        return;
      }

      initAsClient(websocket, addr, protocols, options);
    } else if (!websocket.emit('unexpected-response', req, res)) {
      abortHandshake(
        websocket,
        req,
        `Unexpected server response: ${res.statusCode}`
      );
    }
  });

  req.on('upgrade', (res, socket, head) => {
    websocket.emit('upgrade', res);

    //
    // The user may have closed the connection from a listener of the
    // `'upgrade'` event.
    //
    if (websocket.readyState !== WebSocket.CONNECTING) return;

    req = websocket._req = null;

    if (res.headers.upgrade.toLowerCase() !== 'websocket') {
      abortHandshake(websocket, socket, 'Invalid Upgrade header');
      return;
    }

    const digest = createHash('sha1')
      .update(key + GUID)
      .digest('base64');

    if (res.headers['sec-websocket-accept'] !== digest) {
      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');
      return;
    }

    const serverProt = res.headers['sec-websocket-protocol'];
    let protError;

    if (serverProt !== undefined) {
      if (!protocolSet.size) {
        protError = 'Server sent a subprotocol but none was requested';
      } else if (!protocolSet.has(serverProt)) {
        protError = 'Server sent an invalid subprotocol';
      }
    } else if (protocolSet.size) {
      protError = 'Server sent no subprotocol';
    }

    if (protError) {
      abortHandshake(websocket, socket, protError);
      return;
    }

    if (serverProt) websocket._protocol = serverProt;

    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];

    if (secWebSocketExtensions !== undefined) {
      if (!perMessageDeflate) {
        const message =
          'Server sent a Sec-WebSocket-Extensions header but no extension ' +
          'was requested';
        abortHandshake(websocket, socket, message);
        return;
      }

      let extensions;

      try {
        extensions = parse(secWebSocketExtensions);
      } catch (err) {
        const message = 'Invalid Sec-WebSocket-Extensions header';
        abortHandshake(websocket, socket, message);
        return;
      }

      const extensionNames = Object.keys(extensions);

      if (
        extensionNames.length !== 1 ||
        extensionNames[0] !== PerMessageDeflate.extensionName
      ) {
        const message = 'Server indicated an extension that was not requested';
        abortHandshake(websocket, socket, message);
        return;
      }

      try {
        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);
      } catch (err) {
        const message = 'Invalid Sec-WebSocket-Extensions header';
        abortHandshake(websocket, socket, message);
        return;
      }

      websocket._extensions[PerMessageDeflate.extensionName] =
        perMessageDeflate;
    }

    websocket.setSocket(socket, head, {
      generateMask: opts.generateMask,
      maxPayload: opts.maxPayload,
      skipUTF8Validation: opts.skipUTF8Validation
    });
  });

  if (opts.finishRequest) {
    opts.finishRequest(req, websocket);
  } else {
    req.end();
  }
}

/**
 * Emit the `'error'` and `'close'` events.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {Error} The error to emit
 * @private
 */
function emitErrorAndClose(websocket, err) {
  websocket._readyState = WebSocket.CLOSING;
  websocket.emit('error', err);
  websocket.emitClose();
}

/**
 * Create a `net.Socket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {net.Socket} The newly created socket used to start the connection
 * @private
 */
function netConnect(options) {
  options.path = options.socketPath;
  return net.connect(options);
}

/**
 * Create a `tls.TLSSocket` and initiate a connection.
 *
 * @param {Object} options Connection options
 * @return {tls.TLSSocket} The newly created socket used to start the connection
 * @private
 */
function tlsConnect(options) {
  options.path = undefined;

  if (!options.servername && options.servername !== '') {
    options.servername = net.isIP(options.host) ? '' : options.host;
  }

  return tls.connect(options);
}

/**
 * Abort the handshake and emit an error.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to
 *     abort or the socket to destroy
 * @param {String} message The error message
 * @private
 */
function abortHandshake(websocket, stream, message) {
  websocket._readyState = WebSocket.CLOSING;

  const err = new Error(message);
  Error.captureStackTrace(err, abortHandshake);

  if (stream.setHeader) {
    stream[kAborted] = true;
    stream.abort();

    if (stream.socket && !stream.socket.destroyed) {
      //
      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if
      // called after the request completed. See
      // https://github.com/websockets/ws/issues/1869.
      //
      stream.socket.destroy();
    }

    process.nextTick(emitErrorAndClose, websocket, err);
  } else {
    stream.destroy(err);
    stream.once('error', websocket.emit.bind(websocket, 'error'));
    stream.once('close', websocket.emitClose.bind(websocket));
  }
}

/**
 * Handle cases where the `ping()`, `pong()`, or `send()` methods are called
 * when the `readyState` attribute is `CLOSING` or `CLOSED`.
 *
 * @param {WebSocket} websocket The WebSocket instance
 * @param {*} [data] The data to send
 * @param {Function} [cb] Callback
 * @private
 */
function sendAfterClose(websocket, data, cb) {
  if (data) {
    const length = toBuffer(data).length;

    //
    // The `_bufferedAmount` property is used only when the peer is a client and
    // the opening handshake fails. Under these circumstances, in fact, the
    // `setSocket()` method is not called, so the `_socket` and `_sender`
    // properties are set to `null`.
    //
    if (websocket._socket) websocket._sender._bufferedBytes += length;
    else websocket._bufferedAmount += length;
  }

  if (cb) {
    const err = new Error(
      `WebSocket is not open: readyState ${websocket.readyState} ` +
        `(${readyStates[websocket.readyState]})`
    );
    process.nextTick(cb, err);
  }
}

/**
 * The listener of the `Receiver` `'conclude'` event.
 *
 * @param {Number} code The status code
 * @param {Buffer} reason The reason for closing
 * @private
 */
function receiverOnConclude(code, reason) {
  const websocket = this[kWebSocket];

  websocket._closeFrameReceived = true;
  websocket._closeMessage = reason;
  websocket._closeCode = code;

  if (websocket._socket[kWebSocket] === undefined) return;

  websocket._socket.removeListener('data', socketOnData);
  process.nextTick(resume, websocket._socket);

  if (code === 1005) websocket.close();
  else websocket.close(code, reason);
}

/**
 * The listener of the `Receiver` `'drain'` event.
 *
 * @private
 */
function receiverOnDrain() {
  const websocket = this[kWebSocket];

  if (!websocket.isPaused) websocket._socket.resume();
}

/**
 * The listener of the `Receiver` `'error'` event.
 *
 * @param {(RangeError|Error)} err The emitted error
 * @private
 */
function receiverOnError(err) {
  const websocket = this[kWebSocket];

  if (websocket._socket[kWebSocket] !== undefined) {
    websocket._socket.removeListener('data', socketOnData);

    //
    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See
    // https://github.com/websockets/ws/issues/1940.
    //
    process.nextTick(resume, websocket._socket);

    websocket.close(err[kStatusCode]);
  }

  websocket.emit('error', err);
}

/**
 * The listener of the `Receiver` `'finish'` event.
 *
 * @private
 */
function receiverOnFinish() {
  this[kWebSocket].emitClose();
}

/**
 * The listener of the `Receiver` `'message'` event.
 *
 * @param {Buffer|ArrayBuffer|Buffer[])} data The message
 * @param {Boolean} isBinary Specifies whether the message is binary or not
 * @private
 */
function receiverOnMessage(data, isBinary) {
  this[kWebSocket].emit('message', data, isBinary);
}

/**
 * The listener of the `Receiver` `'ping'` event.
 *
 * @param {Buffer} data The data included in the ping frame
 * @private
 */
function receiverOnPing(data) {
  const websocket = this[kWebSocket];

  websocket.pong(data, !websocket._isServer, NOOP);
  websocket.emit('ping', data);
}

/**
 * The listener of the `Receiver` `'pong'` event.
 *
 * @param {Buffer} data The data included in the pong frame
 * @private
 */
function receiverOnPong(data) {
  this[kWebSocket].emit('pong', data);
}

/**
 * Resume a readable stream
 *
 * @param {Readable} stream The readable stream
 * @private
 */
function resume(stream) {
  stream.resume();
}

/**
 * The listener of the socket `'close'` event.
 *
 * @private
 */
function socketOnClose() {
  const websocket = this[kWebSocket];

  this.removeListener('close', socketOnClose);
  this.removeListener('data', socketOnData);
  this.removeListener('end', socketOnEnd);

  websocket._readyState = WebSocket.CLOSING;

  let chunk;

  //
  // The close frame might not have been received or the `'end'` event emitted,
  // for example, if the socket was destroyed due to an error. Ensure that the
  // `receiver` stream is closed after writing any remaining buffered data to
  // it. If the readable side of the socket is in flowing mode then there is no
  // buffered data as everything has been already written and `readable.read()`
  // will return `null`. If instead, the socket is paused, any possible buffered
  // data will be read as a single chunk.
  //
  if (
    !this._readableState.endEmitted &&
    !websocket._closeFrameReceived &&
    !websocket._receiver._writableState.errorEmitted &&
    (chunk = websocket._socket.read()) !== null
  ) {
    websocket._receiver.write(chunk);
  }

  websocket._receiver.end();

  this[kWebSocket] = undefined;

  clearTimeout(websocket._closeTimer);

  if (
    websocket._receiver._writableState.finished ||
    websocket._receiver._writableState.errorEmitted
  ) {
    websocket.emitClose();
  } else {
    websocket._receiver.on('error', receiverOnFinish);
    websocket._receiver.on('finish', receiverOnFinish);
  }
}

/**
 * The listener of the socket `'data'` event.
 *
 * @param {Buffer} chunk A chunk of data
 * @private
 */
function socketOnData(chunk) {
  if (!this[kWebSocket]._receiver.write(chunk)) {
    this.pause();
  }
}

/**
 * The listener of the socket `'end'` event.
 *
 * @private
 */
function socketOnEnd() {
  const websocket = this[kWebSocket];

  websocket._readyState = WebSocket.CLOSING;
  websocket._receiver.end();
  this.end();
}

/**
 * The listener of the socket `'error'` event.
 *
 * @private
 */
function socketOnError() {
  const websocket = this[kWebSocket];

  this.removeListener('error', socketOnError);
  this.on('error', NOOP);

  if (websocket) {
    websocket._readyState = WebSocket.CLOSING;
    this.destroy();
  }
}


/***/ }),

/***/ 31713:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const core = __nccwpck_require__(42186)
const { Abi, ContractPromise } = __nccwpck_require__(90392)
const { ApiPromise, WsProvider, Keyring } = __nccwpck_require__(47196)
const { cryptoWaitReady } = __nccwpck_require__(37723)
/**
 * The main function for the action.
 * @returns {Promise<void>} Resolves when the action is complete.
 */
async function run() {
  try {
    const wsProviderUrl = core.getInput('ws-provider-url', { required: true })
    const mnemonicPhrase = core.getInput('mnemonic-phrase', { required: true })
    const contractAddress = core.getInput('contract-address', {
      required: true
    })
    const contractAbi = core.getInput('contract-abi', { required: true })
    const contributionId = +core.getInput('contribution-id', { required: true })
    const contributorIdentity = +core.getInput('contributor-identity', {
      required: true
    })

    await cryptoWaitReady()

    // Create a keyring instance
    const keyring = new Keyring({ type: 'sr25519' })

    // Add an account, straight mnemonic
    const account = keyring.addFromMnemonic(mnemonicPhrase)
    // fix
    const gasLimit = 3000n * 1000000n
    const storageDepositLimit = null

    // Construct API provider
    const wsProvider = new WsProvider(wsProviderUrl)
    const api = await ApiPromise.create({ provider: wsProvider })
    await api.isReady
    const abi = new Abi(
      JSON.parse(contractAbi),
      api.registry.getChainProperties()
    )

    const contract = new ContractPromise(api, abi, contractAddress)

    await contract.tx
      .approve(
        { storageDepositLimit, gasLimit },
        contributionId,
        contributorIdentity
      )
      .signAndSend(account, result => {
        if (result.status.isFinalized) {
          core.setOutput('hash', result.txHash.toHuman())
        }
      })
  } catch (error) {
    // Fail the workflow run if an error occurs
    core.setFailed(error.message)
  }
}

module.exports = {
  run
}


/***/ }),

/***/ 71269:
/***/ ((module) => {

module.exports = eval("require")("bufferutil");


/***/ }),

/***/ 24592:
/***/ ((module) => {

module.exports = eval("require")("utf-8-validate");


/***/ }),

/***/ 39491:
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ 14300:
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ 6113:
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ 82361:
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ 57147:
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ 13685:
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ 95687:
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ 41808:
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ 72254:
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ 6005:
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ 87561:
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ 88849:
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ 22286:
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ 87503:
/***/ ((module) => {

"use strict";
module.exports = require("node:net");

/***/ }),

/***/ 49411:
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ }),

/***/ 97742:
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ 84492:
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ 72477:
/***/ ((module) => {

"use strict";
module.exports = require("node:stream/web");

/***/ }),

/***/ 41041:
/***/ ((module) => {

"use strict";
module.exports = require("node:url");

/***/ }),

/***/ 47261:
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ 65628:
/***/ ((module) => {

"use strict";
module.exports = require("node:zlib");

/***/ }),

/***/ 22037:
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ 71017:
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ 12781:
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ 24404:
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ 57310:
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ 73837:
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ 71267:
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ 59796:
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ 92768:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Abi = void 0;
const types_1 = __nccwpck_require__(79405);
const types_create_1 = __nccwpck_require__(49134);
const util_1 = __nccwpck_require__(29795);
const toLatest_js_1 = __nccwpck_require__(88166);
const l = (0, util_1.logger)('Abi');
const PRIMITIVE_ALWAYS = ['AccountId', 'AccountIndex', 'Address', 'Balance'];
function findMessage(list, messageOrId) {
    const message = (0, util_1.isNumber)(messageOrId)
        ? list[messageOrId]
        : (0, util_1.isString)(messageOrId)
            ? list.find(({ identifier }) => [identifier, (0, util_1.stringCamelCase)(identifier)].includes(messageOrId.toString()))
            : messageOrId;
    return (0, util_1.assertReturn)(message, () => `Attempted to call an invalid contract interface, ${(0, util_1.stringify)(messageOrId)}`);
}
function getLatestMeta(registry, json) {
    // this is for V1, V2, V3
    const vx = toLatest_js_1.enumVersions.find((v) => (0, util_1.isObject)(json[v]));
    // this was added in V4
    const jsonVersion = json.version;
    if (!vx && jsonVersion && !toLatest_js_1.enumVersions.find((v) => v === `V${jsonVersion}`)) {
        throw new Error(`Unable to handle version ${jsonVersion}`);
    }
    const metadata = registry.createType('ContractMetadata', vx
        ? { [vx]: json[vx] }
        : jsonVersion
            ? { [`V${jsonVersion}`]: json }
            : { V0: json });
    const converter = toLatest_js_1.convertVersions.find(([v]) => metadata[`is${v}`]);
    if (!converter) {
        throw new Error(`Unable to convert ABI with version ${metadata.type} to latest`);
    }
    return converter[1](registry, metadata[`as${converter[0]}`]);
}
function parseJson(json, chainProperties) {
    const registry = new types_1.TypeRegistry();
    const info = registry.createType('ContractProjectInfo', json);
    const latest = getLatestMeta(registry, json);
    const lookup = registry.createType('PortableRegistry', { types: latest.types }, true);
    // attach the lookup to the registry - now the types are known
    registry.setLookup(lookup);
    if (chainProperties) {
        registry.setChainProperties(chainProperties);
    }
    // warm-up the actual type, pre-use
    lookup.types.forEach(({ id }) => lookup.getTypeDef(id));
    return [json, registry, latest, info];
}
/**
 * @internal
 * Determines if the given input value is a ContractTypeSpec
 */
function isTypeSpec(value) {
    return !!value && value instanceof Map && !(0, util_1.isUndefined)(value.type) && !(0, util_1.isUndefined)(value.displayName);
}
/**
 * @internal
 * Determines if the given input value is an Option
 */
function isOption(value) {
    return !!value && value instanceof types_1.Option;
}
class Abi {
    constructor(abiJson, chainProperties) {
        this.environment = new Map();
        this.__internal__createArgs = (args, spec) => {
            return args.map(({ label, type }, index) => {
                try {
                    if (!(0, util_1.isObject)(type)) {
                        throw new Error('Invalid type definition found');
                    }
                    const displayName = type.displayName.length
                        ? type.displayName[type.displayName.length - 1].toString()
                        : undefined;
                    const camelName = (0, util_1.stringCamelCase)(label);
                    if (displayName && PRIMITIVE_ALWAYS.includes(displayName)) {
                        return {
                            name: camelName,
                            type: {
                                info: types_create_1.TypeDefInfo.Plain,
                                type: displayName
                            }
                        };
                    }
                    const typeDef = this.registry.lookup.getTypeDef(type.type);
                    return {
                        name: camelName,
                        type: displayName && !typeDef.type.startsWith(displayName)
                            ? { displayName, ...typeDef }
                            : typeDef
                    };
                }
                catch (error) {
                    l.error(`Error expanding argument ${index} in ${(0, util_1.stringify)(spec)}`);
                    throw error;
                }
            });
        };
        this.__internal__createEvent = (spec, index) => {
            const args = this.__internal__createArgs(spec.args, spec);
            const event = {
                args,
                docs: spec.docs.map((d) => d.toString()),
                fromU8a: (data) => ({
                    args: this.__internal__decodeArgs(args, data),
                    event
                }),
                identifier: spec.label.toString(),
                index
            };
            return event;
        };
        this.__internal__createMessage = (spec, index, add = {}) => {
            const args = this.__internal__createArgs(spec.args, spec);
            const identifier = spec.label.toString();
            const message = {
                ...add,
                args,
                docs: spec.docs.map((d) => d.toString()),
                fromU8a: (data) => ({
                    args: this.__internal__decodeArgs(args, data),
                    message
                }),
                identifier,
                index,
                isDefault: spec.default.isTrue,
                method: (0, util_1.stringCamelCase)(identifier),
                path: identifier.split('::').map((s) => (0, util_1.stringCamelCase)(s)),
                selector: spec.selector,
                toU8a: (params) => this.__internal__encodeArgs(spec, args, params)
            };
            return message;
        };
        this.__internal__decodeArgs = (args, data) => {
            // for decoding we expect the input to be just the arg data, no selectors
            // no length added (this allows use with events as well)
            let offset = 0;
            return args.map(({ type: { lookupName, type } }) => {
                const value = this.registry.createType(lookupName || type, data.subarray(offset));
                offset += value.encodedLength;
                return value;
            });
        };
        this.__internal__decodeMessage = (type, list, data) => {
            const [, trimmed] = (0, util_1.compactStripLength)(data);
            const selector = trimmed.subarray(0, 4);
            const message = list.find((m) => m.selector.eq(selector));
            if (!message) {
                throw new Error(`Unable to find ${type} with selector ${(0, util_1.u8aToHex)(selector)}`);
            }
            return message.fromU8a(trimmed.subarray(4));
        };
        this.__internal__encodeArgs = ({ label, selector }, args, data) => {
            if (data.length !== args.length) {
                throw new Error(`Expected ${args.length} arguments to contract message '${label.toString()}', found ${data.length}`);
            }
            return (0, util_1.compactAddLength)((0, util_1.u8aConcat)(this.registry.createType('ContractSelector', selector).toU8a(), ...args.map(({ type: { lookupName, type } }, index) => this.registry.createType(lookupName || type, data[index]).toU8a())));
        };
        [this.json, this.registry, this.metadata, this.info] = parseJson((0, util_1.isString)(abiJson)
            ? JSON.parse(abiJson)
            : abiJson, chainProperties);
        this.constructors = this.metadata.spec.constructors.map((spec, index) => this.__internal__createMessage(spec, index, {
            isConstructor: true,
            isDefault: spec.default.isTrue,
            isPayable: spec.payable.isTrue,
            returnType: spec.returnType.isSome
                ? this.registry.lookup.getTypeDef(spec.returnType.unwrap().type)
                : null
        }));
        this.events = this.metadata.spec.events.map((spec, index) => this.__internal__createEvent(spec, index));
        this.messages = this.metadata.spec.messages.map((spec, index) => this.__internal__createMessage(spec, index, {
            isDefault: spec.default.isTrue,
            isMutating: spec.mutates.isTrue,
            isPayable: spec.payable.isTrue,
            returnType: spec.returnType.isSome
                ? this.registry.lookup.getTypeDef(spec.returnType.unwrap().type)
                : null
        }));
        // NOTE See the rationale for having Option<...> values in the actual
        // ContractEnvironmentV4 structure definition in interfaces/contractsAbi
        // (Due to conversions, the fields may not exist)
        for (const [key, opt] of this.metadata.spec.environment.entries()) {
            if (isOption(opt)) {
                if (opt.isSome) {
                    const value = opt.unwrap();
                    if ((0, util_1.isBn)(value)) {
                        this.environment.set(key, value);
                    }
                    else if (isTypeSpec(value)) {
                        this.environment.set(key, this.registry.lookup.getTypeDef(value.type));
                    }
                    else {
                        throw new Error(`Invalid environment definition for ${key}:: Expected either Number or ContractTypeSpec`);
                    }
                }
            }
            else {
                throw new Error(`Expected Option<*> definition for ${key} in ContractEnvironment`);
            }
        }
    }
    /**
     * Warning: Unstable API, bound to change
     */
    decodeEvent(data) {
        const index = data[0];
        const event = this.events[index];
        if (!event) {
            throw new Error(`Unable to find event with index ${index}`);
        }
        return event.fromU8a(data.subarray(1));
    }
    /**
     * Warning: Unstable API, bound to change
     */
    decodeConstructor(data) {
        return this.__internal__decodeMessage('message', this.constructors, data);
    }
    /**
     * Warning: Unstable API, bound to change
     */
    decodeMessage(data) {
        return this.__internal__decodeMessage('message', this.messages, data);
    }
    findConstructor(constructorOrId) {
        return findMessage(this.constructors, constructorOrId);
    }
    findMessage(messageOrId) {
        return findMessage(this.messages, messageOrId);
    }
}
exports.Abi = Abi;


/***/ }),

/***/ 88166:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.convertVersions = exports.v0ToLatest = exports.v1ToLatest = exports.v2ToLatest = exports.v3ToLatest = exports.v4ToLatest = exports.enumVersions = void 0;
const toV1_js_1 = __nccwpck_require__(20453);
const toV2_js_1 = __nccwpck_require__(13357);
const toV3_js_1 = __nccwpck_require__(75502);
const toV4_js_1 = __nccwpck_require__(51948);
exports.enumVersions = ['V4', 'V3', 'V2', 'V1'];
function createConverter(next, step) {
    return (registry, input) => next(registry, step(registry, input));
}
function v4ToLatest(_registry, v4) {
    return v4;
}
exports.v4ToLatest = v4ToLatest;
exports.v3ToLatest = createConverter(v4ToLatest, toV4_js_1.v3ToV4);
exports.v2ToLatest = createConverter(exports.v3ToLatest, toV3_js_1.v2ToV3);
exports.v1ToLatest = createConverter(exports.v2ToLatest, toV2_js_1.v1ToV2);
exports.v0ToLatest = createConverter(exports.v1ToLatest, toV1_js_1.v0ToV1);
exports.convertVersions = [
    ['V4', v4ToLatest],
    ['V3', exports.v3ToLatest],
    ['V2', exports.v2ToLatest],
    ['V1', exports.v1ToLatest],
    ['V0', exports.v0ToLatest]
];


/***/ }),

/***/ 20453:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v0ToV1 = void 0;
const types_1 = __nccwpck_require__(79405);
const util_1 = __nccwpck_require__(29795);
function v0ToV1Names(all) {
    return all.map((e) => (0, util_1.objectSpread)({}, e, {
        name: Array.isArray(e.name)
            ? e.name
            : [e.name]
    }));
}
function v0ToV1(registry, v0) {
    if (!v0.metadataVersion.length) {
        throw new Error('Invalid format for V0 (detected) contract metadata');
    }
    return registry.createType('ContractMetadataV1', (0, util_1.objectSpread)({}, v0, {
        spec: (0, util_1.objectSpread)({}, v0.spec, {
            constructors: v0ToV1Names(v0.spec.constructors),
            messages: v0ToV1Names(v0.spec.messages)
        }),
        types: (0, types_1.convertSiV0toV1)(registry, v0.types)
    }));
}
exports.v0ToV1 = v0ToV1;


/***/ }),

/***/ 13357:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v1ToV2 = void 0;
const util_1 = __nccwpck_require__(29795);
const ARG_TYPES = {
    ContractConstructorSpec: 'ContractMessageParamSpecV2',
    ContractEventSpec: 'ContractEventParamSpecV2',
    ContractMessageSpec: 'ContractMessageParamSpecV2'
};
function v1ToV2Label(entry) {
    return (0, util_1.objectSpread)({}, entry, {
        label: Array.isArray(entry.name)
            ? entry.name.join('::')
            : entry.name
    });
}
function v1ToV2Labels(registry, outType, all) {
    return all.map((e) => registry.createType(`${outType}V2`, (0, util_1.objectSpread)(v1ToV2Label(e), {
        args: e.args.map((a) => registry.createType(ARG_TYPES[outType], v1ToV2Label(a)))
    })));
}
function v1ToV2(registry, v1) {
    return registry.createType('ContractMetadataV2', (0, util_1.objectSpread)({}, v1, {
        spec: (0, util_1.objectSpread)({}, v1.spec, {
            constructors: v1ToV2Labels(registry, 'ContractConstructorSpec', v1.spec.constructors),
            events: v1ToV2Labels(registry, 'ContractEventSpec', v1.spec.events),
            messages: v1ToV2Labels(registry, 'ContractMessageSpec', v1.spec.messages)
        })
    }));
}
exports.v1ToV2 = v1ToV2;


/***/ }),

/***/ 75502:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v2ToV3 = void 0;
const util_1 = __nccwpck_require__(29795);
function v2ToV3(registry, v2) {
    return registry.createType('ContractMetadataV3', (0, util_1.objectSpread)({}, v2, {
        spec: (0, util_1.objectSpread)({}, v2.spec, {
            constructors: v2.spec.constructors.map((c) => 
            // V3 introduces the payable flag on constructors, for <V3, it is always true
            registry.createType('ContractConstructorSpecV3', (0, util_1.objectSpread)({}, c, { payable: true })))
        })
    }));
}
exports.v2ToV3 = v2ToV3;


/***/ }),

/***/ 51948:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v3ToV4 = void 0;
const util_1 = __nccwpck_require__(29795);
function v3ToV4(registry, v3) {
    return registry.createType('ContractMetadataV4', (0, util_1.objectSpread)({}, v3, {
        spec: (0, util_1.objectSpread)({}, v3.spec, {
            constructors: v3.spec.constructors.map((c) => registry.createType('ContractConstructorSpecV4', (0, util_1.objectSpread)({}, c))),
            messages: v3.spec.messages.map((m) => registry.createType('ContractMessageSpecV3', (0, util_1.objectSpread)({}, m)))
        })
    }));
}
exports.v3ToV4 = v3ToV4;


/***/ }),

/***/ 72642:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Base = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(92768);
class Base {
    constructor(api, abi, decorateMethod) {
        if (!api || !api.isConnected || !api.tx) {
            throw new Error('Your API has not been initialized correctly and is not connected to a chain');
        }
        else if (!api.tx.contracts || !(0, util_1.isFunction)(api.tx.contracts.instantiateWithCode) || api.tx.contracts.instantiateWithCode.meta.args.length !== 6) {
            throw new Error('The runtime does not expose api.tx.contracts.instantiateWithCode with storageDepositLimit');
        }
        else if (!api.call.contractsApi || !(0, util_1.isFunction)(api.call.contractsApi.call)) {
            throw new Error('Your runtime does not expose the api.call.contractsApi.call runtime interfaces');
        }
        this.abi = abi instanceof index_js_1.Abi
            ? abi
            : new index_js_1.Abi(abi, api.registry.getChainProperties());
        this.api = api;
        this._decorateMethod = decorateMethod;
        this._isWeightV1 = !api.registry.createType('Weight').proofSize;
    }
    get registry() {
        return this.api.registry;
    }
}
exports.Base = Base;


/***/ }),

/***/ 95362:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extendBlueprint = exports.Blueprint = exports.BlueprintSubmittableResult = void 0;
const api_1 = __nccwpck_require__(47196);
const util_1 = __nccwpck_require__(29795);
const util_js_1 = __nccwpck_require__(31907);
const Base_js_1 = __nccwpck_require__(72642);
const Contract_js_1 = __nccwpck_require__(89182);
const util_js_2 = __nccwpck_require__(75157);
class BlueprintSubmittableResult extends api_1.SubmittableResult {
    constructor(result, contract) {
        super(result);
        this.contract = contract;
    }
}
exports.BlueprintSubmittableResult = BlueprintSubmittableResult;
class Blueprint extends Base_js_1.Base {
    constructor(api, abi, codeHash, decorateMethod) {
        super(api, abi, decorateMethod);
        this.__internal__tx = {};
        this.__internal__deploy = (constructorOrId, { gasLimit = util_1.BN_ZERO, salt, storageDepositLimit = null, value = util_1.BN_ZERO }, params) => {
            return this.api.tx.contracts.instantiate(value, 
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore jiggle v1 weights, metadata points to latest
            this._isWeightV1
                ? (0, util_js_2.convertWeight)(gasLimit).v1Weight
                : (0, util_js_2.convertWeight)(gasLimit).v2Weight, storageDepositLimit, this.codeHash, this.abi.findConstructor(constructorOrId).toU8a(params), (0, util_js_2.encodeSalt)(salt)).withResultTransform((result) => new BlueprintSubmittableResult(result, (0, util_js_1.applyOnEvent)(result, ['Instantiated'], ([record]) => new Contract_js_1.Contract(this.api, this.abi, record.event.data[1], this._decorateMethod))));
        };
        this.codeHash = this.registry.createType('Hash', codeHash);
        this.abi.constructors.forEach((c) => {
            if ((0, util_1.isUndefined)(this.__internal__tx[c.method])) {
                this.__internal__tx[c.method] = (0, util_js_2.createBluePrintTx)(c, (o, p) => this.__internal__deploy(c, o, p));
            }
        });
    }
    get tx() {
        return this.__internal__tx;
    }
}
exports.Blueprint = Blueprint;
function extendBlueprint(type, decorateMethod) {
    var _a;
    return _a = class extends Blueprint {
            constructor(api, abi, codeHash) {
                super(api, abi, codeHash, decorateMethod);
            }
        },
        _a.__BlueprintType = type,
        _a;
}
exports.extendBlueprint = extendBlueprint;


/***/ }),

/***/ 52925:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extendCode = exports.Code = exports.CodeSubmittableResult = void 0;
const api_1 = __nccwpck_require__(47196);
const util_1 = __nccwpck_require__(29795);
const util_js_1 = __nccwpck_require__(31907);
const Base_js_1 = __nccwpck_require__(72642);
const Blueprint_js_1 = __nccwpck_require__(95362);
const Contract_js_1 = __nccwpck_require__(89182);
const util_js_2 = __nccwpck_require__(75157);
class CodeSubmittableResult extends api_1.SubmittableResult {
    constructor(result, blueprint, contract) {
        super(result);
        this.blueprint = blueprint;
        this.contract = contract;
    }
}
exports.CodeSubmittableResult = CodeSubmittableResult;
function isValidCode(code) {
    return (0, util_1.isWasm)(code) || (0, util_1.isRiscV)(code);
}
class Code extends Base_js_1.Base {
    constructor(api, abi, wasm, decorateMethod) {
        super(api, abi, decorateMethod);
        this.__internal__tx = {};
        this.__internal__instantiate = (constructorOrId, { gasLimit = util_1.BN_ZERO, salt, storageDepositLimit = null, value = util_1.BN_ZERO }, params) => {
            return this.api.tx.contracts.instantiateWithCode(value, 
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore jiggle v1 weights, metadata points to latest
            this._isWeightV1
                ? (0, util_js_2.convertWeight)(gasLimit).v1Weight
                : (0, util_js_2.convertWeight)(gasLimit).v2Weight, storageDepositLimit, (0, util_1.compactAddLength)(this.code), this.abi.findConstructor(constructorOrId).toU8a(params), (0, util_js_2.encodeSalt)(salt)).withResultTransform((result) => new CodeSubmittableResult(result, ...((0, util_js_1.applyOnEvent)(result, ['CodeStored', 'Instantiated'], (records) => records.reduce(([blueprint, contract], { event }) => this.api.events.contracts.Instantiated.is(event)
                ? [blueprint, new Contract_js_1.Contract(this.api, this.abi, event.data[1], this._decorateMethod)]
                : this.api.events.contracts.CodeStored.is(event)
                    ? [new Blueprint_js_1.Blueprint(this.api, this.abi, event.data[0], this._decorateMethod), contract]
                    : [blueprint, contract], [undefined, undefined])) || [undefined, undefined])));
        };
        this.code = isValidCode(this.abi.info.source.wasm)
            ? this.abi.info.source.wasm
            : (0, util_1.u8aToU8a)(wasm);
        if (!isValidCode(this.code)) {
            throw new Error('Invalid code provided');
        }
        this.abi.constructors.forEach((c) => {
            if ((0, util_1.isUndefined)(this.__internal__tx[c.method])) {
                this.__internal__tx[c.method] = (0, util_js_2.createBluePrintTx)(c, (o, p) => this.__internal__instantiate(c, o, p));
            }
        });
    }
    get tx() {
        return this.__internal__tx;
    }
}
exports.Code = Code;
function extendCode(type, decorateMethod) {
    var _a;
    return _a = class extends Code {
            constructor(api, abi, wasm) {
                super(api, abi, wasm, decorateMethod);
            }
        },
        _a.__CodeType = type,
        _a;
}
exports.extendCode = extendCode;


/***/ }),

/***/ 89182:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extendContract = exports.Contract = exports.ContractSubmittableResult = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const api_1 = __nccwpck_require__(47196);
const util_1 = __nccwpck_require__(29795);
const util_js_1 = __nccwpck_require__(31907);
const Base_js_1 = __nccwpck_require__(72642);
const util_js_2 = __nccwpck_require__(75157);
const MAX_CALL_GAS = new util_1.BN(5000000000000).isub(util_1.BN_ONE);
const l = (0, util_1.logger)('Contract');
function createQuery(meta, fn) {
    return (0, util_js_2.withMeta)(meta, (origin, options, ...params) => fn(origin, options, params));
}
function createTx(meta, fn) {
    return (0, util_js_2.withMeta)(meta, (options, ...params) => fn(options, params));
}
class ContractSubmittableResult extends api_1.SubmittableResult {
    constructor(result, contractEvents) {
        super(result);
        this.contractEvents = contractEvents;
    }
}
exports.ContractSubmittableResult = ContractSubmittableResult;
class Contract extends Base_js_1.Base {
    constructor(api, abi, address, decorateMethod) {
        super(api, abi, decorateMethod);
        this.__internal__query = {};
        this.__internal__tx = {};
        this.__internal__getGas = (_gasLimit, isCall = false) => {
            const weight = (0, util_js_2.convertWeight)(_gasLimit);
            if (weight.v1Weight.gt(util_1.BN_ZERO)) {
                return weight;
            }
            return (0, util_js_2.convertWeight)(isCall
                ? MAX_CALL_GAS
                : (0, util_js_2.convertWeight)(this.api.consts.system.blockWeights
                    ? this.api.consts.system.blockWeights.maxBlock
                    : this.api.consts.system['maximumBlockWeight']).v1Weight.muln(64).div(util_1.BN_HUNDRED));
        };
        this.__internal__exec = (messageOrId, { gasLimit = util_1.BN_ZERO, storageDepositLimit = null, value = util_1.BN_ZERO }, params) => {
            return this.api.tx.contracts.call(this.address, value, 
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore jiggle v1 weights, metadata points to latest
            this._isWeightV1
                ? (0, util_js_2.convertWeight)(gasLimit).v1Weight
                : (0, util_js_2.convertWeight)(gasLimit).v2Weight, storageDepositLimit, this.abi.findMessage(messageOrId).toU8a(params)).withResultTransform((result) => 
            // ContractEmitted is the current generation, ContractExecution is the previous generation
            new ContractSubmittableResult(result, (0, util_js_1.applyOnEvent)(result, ['ContractEmitted', 'ContractExecution'], (records) => records
                .map(({ event: { data: [, data] } }) => {
                try {
                    return this.abi.decodeEvent(data);
                }
                catch (error) {
                    l.error(`Unable to decode contract event: ${error.message}`);
                    return null;
                }
            })
                .filter((decoded) => !!decoded))));
        };
        this.__internal__read = (messageOrId, { gasLimit = util_1.BN_ZERO, storageDepositLimit = null, value = util_1.BN_ZERO }, params) => {
            const message = this.abi.findMessage(messageOrId);
            return {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
                send: this._decorateMethod((origin) => this.api.rx.call.contractsApi.call(origin, this.address, value, 
                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore jiggle v1 weights, metadata points to latest
                this._isWeightV1
                    ? this.__internal__getGas(gasLimit, true).v1Weight
                    : this.__internal__getGas(gasLimit, true).v2Weight, storageDepositLimit, message.toU8a(params)).pipe((0, rxjs_1.map)(({ debugMessage, gasConsumed, gasRequired, result, storageDeposit }) => ({
                    debugMessage,
                    gasConsumed,
                    gasRequired: gasRequired && !(0, util_js_2.convertWeight)(gasRequired).v1Weight.isZero()
                        ? gasRequired
                        : gasConsumed,
                    output: result.isOk && message.returnType
                        ? this.abi.registry.createTypeUnsafe(message.returnType.lookupName || message.returnType.type, [result.asOk.data.toU8a(true)], { isPedantic: true })
                        : null,
                    result,
                    storageDeposit
                }))))
            };
        };
        this.address = this.registry.createType('AccountId', address);
        this.abi.messages.forEach((m) => {
            if ((0, util_1.isUndefined)(this.__internal__tx[m.method])) {
                this.__internal__tx[m.method] = createTx(m, (o, p) => this.__internal__exec(m, o, p));
            }
            if ((0, util_1.isUndefined)(this.__internal__query[m.method])) {
                this.__internal__query[m.method] = createQuery(m, (f, o, p) => this.__internal__read(m, o, p).send(f));
            }
        });
    }
    get query() {
        return this.__internal__query;
    }
    get tx() {
        return this.__internal__tx;
    }
}
exports.Contract = Contract;
function extendContract(type, decorateMethod) {
    var _a;
    return _a = class extends Contract {
            constructor(api, abi, address) {
                super(api, abi, address, decorateMethod);
            }
        },
        _a.__ContractType = type,
        _a;
}
exports.extendContract = extendContract;


/***/ }),

/***/ 41261:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extendContract = exports.Contract = exports.extendCode = exports.CodeSubmittableResult = exports.Code = exports.extendBlueprint = exports.BlueprintSubmittableResult = exports.Blueprint = void 0;
var Blueprint_js_1 = __nccwpck_require__(95362);
Object.defineProperty(exports, "Blueprint", ({ enumerable: true, get: function () { return Blueprint_js_1.Blueprint; } }));
Object.defineProperty(exports, "BlueprintSubmittableResult", ({ enumerable: true, get: function () { return Blueprint_js_1.BlueprintSubmittableResult; } }));
Object.defineProperty(exports, "extendBlueprint", ({ enumerable: true, get: function () { return Blueprint_js_1.extendBlueprint; } }));
var Code_js_1 = __nccwpck_require__(52925);
Object.defineProperty(exports, "Code", ({ enumerable: true, get: function () { return Code_js_1.Code; } }));
Object.defineProperty(exports, "CodeSubmittableResult", ({ enumerable: true, get: function () { return Code_js_1.CodeSubmittableResult; } }));
Object.defineProperty(exports, "extendCode", ({ enumerable: true, get: function () { return Code_js_1.extendCode; } }));
var Contract_js_1 = __nccwpck_require__(89182);
Object.defineProperty(exports, "Contract", ({ enumerable: true, get: function () { return Contract_js_1.Contract; } }));
Object.defineProperty(exports, "extendContract", ({ enumerable: true, get: function () { return Contract_js_1.extendContract; } }));


/***/ }),

/***/ 75157:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isWeightV2 = exports.convertWeight = exports.encodeSalt = exports.createBluePrintWithId = exports.createBluePrintTx = exports.withMeta = exports.EMPTY_SALT = void 0;
const types_1 = __nccwpck_require__(79405);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
exports.EMPTY_SALT = new Uint8Array();
function withMeta(meta, creator) {
    creator.meta = meta;
    return creator;
}
exports.withMeta = withMeta;
function createBluePrintTx(meta, fn) {
    return withMeta(meta, (options, ...params) => fn(options, params));
}
exports.createBluePrintTx = createBluePrintTx;
function createBluePrintWithId(fn) {
    return (constructorOrId, options, ...params) => fn(constructorOrId, options, params);
}
exports.createBluePrintWithId = createBluePrintWithId;
function encodeSalt(salt = (0, util_crypto_1.randomAsU8a)()) {
    return salt instanceof types_1.Bytes
        ? salt
        : salt?.length
            ? (0, util_1.compactAddLength)((0, util_1.u8aToU8a)(salt))
            : exports.EMPTY_SALT;
}
exports.encodeSalt = encodeSalt;
function convertWeight(weight) {
    const [refTime, proofSize] = isWeightV2(weight)
        ? [weight.refTime.toBn(), weight.proofSize.toBn()]
        : [(0, util_1.bnToBn)(weight), undefined];
    return {
        v1Weight: refTime,
        v2Weight: { proofSize, refTime }
    };
}
exports.convertWeight = convertWeight;
function isWeightV2(weight) {
    return !!weight.proofSize;
}
exports.isWeightV2 = isWeightV2;


/***/ }),

/***/ 83738:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = exports.Abi = void 0;
const tslib_1 = __nccwpck_require__(41371);
var index_js_1 = __nccwpck_require__(92768);
Object.defineProperty(exports, "Abi", ({ enumerable: true, get: function () { return index_js_1.Abi; } }));
var packageInfo_js_1 = __nccwpck_require__(94781);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
tslib_1.__exportStar(__nccwpck_require__(1139), exports);
tslib_1.__exportStar(__nccwpck_require__(57278), exports);


/***/ }),

/***/ 21749:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(95973);
const packageInfo_2 = __nccwpck_require__(74402);
exports["default"] = [packageInfo_1.packageInfo, packageInfo_2.packageInfo];


/***/ }),

/***/ 11305:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(41371);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(21749));
const packageInfo_js_1 = __nccwpck_require__(94781);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 90392:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(41371);
__nccwpck_require__(11305);
tslib_1.__exportStar(__nccwpck_require__(83738), exports);


/***/ }),

/***/ 94781:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/api-contract', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 1139:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ContractPromise = exports.CodePromise = exports.BlueprintPromise = void 0;
const api_1 = __nccwpck_require__(47196);
const index_js_1 = __nccwpck_require__(41261);
class BlueprintPromise extends index_js_1.Blueprint {
    constructor(api, abi, codeHash) {
        super(api, abi, codeHash, api_1.toPromiseMethod);
    }
}
exports.BlueprintPromise = BlueprintPromise;
class CodePromise extends index_js_1.Code {
    constructor(api, abi, wasm) {
        super(api, abi, wasm, api_1.toPromiseMethod);
    }
}
exports.CodePromise = CodePromise;
class ContractPromise extends index_js_1.Contract {
    constructor(api, abi, address) {
        super(api, abi, address, api_1.toPromiseMethod);
    }
}
exports.ContractPromise = ContractPromise;


/***/ }),

/***/ 57278:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ContractRx = exports.CodeRx = exports.BlueprintRx = void 0;
const api_1 = __nccwpck_require__(47196);
const index_js_1 = __nccwpck_require__(41261);
class BlueprintRx extends index_js_1.Blueprint {
    constructor(api, abi, codeHash) {
        super(api, abi, codeHash, api_1.toRxMethod);
    }
}
exports.BlueprintRx = BlueprintRx;
class CodeRx extends index_js_1.Code {
    constructor(api, abi, wasm) {
        super(api, abi, wasm, api_1.toRxMethod);
    }
}
exports.CodeRx = CodeRx;
class ContractRx extends index_js_1.Contract {
    constructor(api, abi, address) {
        super(api, abi, address, api_1.toRxMethod);
    }
}
exports.ContractRx = ContractRx;


/***/ }),

/***/ 31907:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.applyOnEvent = void 0;
function applyOnEvent(result, types, fn) {
    if (result.isInBlock || result.isFinalized) {
        const records = result.filterRecords('contracts', types);
        if (records.length) {
            return fn(records);
        }
    }
    return undefined;
}
exports.applyOnEvent = applyOnEvent;


/***/ }),

/***/ 40092:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.accountId = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @name accountId
 * @param {(Address | AccountId | AccountIndex | string | null)} address - An accounts address in various formats.
 * @description  An [[AccountId]]
 */
function accountId(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (address) => {
        const decoded = (0, util_1.isU8a)(address)
            ? address
            : (0, util_crypto_1.decodeAddress)((address || '').toString());
        if (decoded.length > 8) {
            return (0, rxjs_1.of)(api.registry.createType('AccountId', decoded));
        }
        const accountIndex = api.registry.createType('AccountIndex', decoded);
        return api.derive.accounts.indexToId(accountIndex.toString()).pipe((0, rxjs_1.map)((a) => (0, util_1.assertReturn)(a, 'Unable to retrieve accountId')));
    });
}
exports.accountId = accountId;


/***/ }),

/***/ 18452:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.flags = exports._flags = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function parseFlags(address, [electionsMembers, councilMembers, technicalCommitteeMembers, societyMembers, sudoKey]) {
    const addrStr = address?.toString();
    const isIncluded = (id) => id.toString() === addrStr;
    return {
        isCouncil: (electionsMembers?.map((r) => Array.isArray(r) ? r[0] : r.who) || councilMembers || []).some(isIncluded),
        isSociety: (societyMembers || []).some(isIncluded),
        isSudo: sudoKey?.toString() === addrStr,
        isTechCommittee: (technicalCommitteeMembers || []).some(isIncluded)
    };
}
function _flags(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => {
        const results = [undefined, [], [], [], undefined];
        const calls = [
            (api.query.elections || api.query['phragmenElection'] || api.query['electionsPhragmen'])?.members,
            api.query.council?.members,
            api.query.technicalCommittee?.members,
            api.query.society?.members,
            api.query.sudo?.key
        ];
        const filtered = calls.filter((c) => c);
        if (!filtered.length) {
            return (0, rxjs_1.of)(results);
        }
        return api.queryMulti(filtered).pipe((0, rxjs_1.map)((values) => {
            let resultIndex = -1;
            for (let i = 0, count = calls.length; i < count; i++) {
                if ((0, util_1.isFunction)(calls[i])) {
                    results[i] = values[++resultIndex];
                }
            }
            return results;
        }));
    });
}
exports._flags = _flags;
/**
 * @name info
 * @description Returns account membership flags
 */
function flags(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (address) => api.derive.accounts._flags().pipe((0, rxjs_1.map)((r) => parseFlags(address, r))));
}
exports.flags = flags;


/***/ }),

/***/ 74759:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.idAndIndex = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @name idAndIndex
 * @param {(Address | AccountId | AccountIndex | Uint8Array | string | null)} address - An accounts address in various formats.
 * @description  An array containing the [[AccountId]] and [[AccountIndex]] as optional values.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.idAndIndex('F7Hs', ([id, ix]) => {
 *   console.log(`AccountId #${id} with corresponding AccountIndex ${ix}`);
 * });
 * ```
 */
function idAndIndex(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (address) => {
        try {
            // yes, this can fail, don't care too much, catch will catch it
            const decoded = (0, util_1.isU8a)(address)
                ? address
                : (0, util_crypto_1.decodeAddress)((address || '').toString());
            if (decoded.length > 8) {
                const accountId = api.registry.createType('AccountId', decoded);
                return api.derive.accounts.idToIndex(accountId).pipe((0, rxjs_1.map)((accountIndex) => [accountId, accountIndex]));
            }
            const accountIndex = api.registry.createType('AccountIndex', decoded);
            return api.derive.accounts.indexToId(accountIndex.toString()).pipe((0, rxjs_1.map)((accountId) => [accountId, accountIndex]));
        }
        catch {
            return (0, rxjs_1.of)([undefined, undefined]);
        }
    });
}
exports.idAndIndex = idAndIndex;


/***/ }),

/***/ 89845:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.idToIndex = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @name idToIndex
 * @param {( AccountId | string )} accountId - An accounts Id in different formats.
 * @returns Returns the corresponding AccountIndex.
 * @example
 * <BR>
 *
 * ```javascript
 * const ALICE = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';
 * api.derive.accounts.idToIndex(ALICE, (accountIndex) => {
 *   console.log(`The AccountIndex of ${ALICE} is ${accountIndex}`);
 * });
 * ```
 */
function idToIndex(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId) => api.derive.accounts.indexes().pipe((0, rxjs_1.map)((indexes) => indexes[accountId.toString()])));
}
exports.idToIndex = idToIndex;


/***/ }),

/***/ 79127:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasIdentityMulti = exports.hasIdentity = exports.identity = exports._identity = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const UNDEF_HEX = { toHex: () => undefined };
function dataAsString(data) {
    return data.isRaw
        ? (0, util_1.u8aToString)(data.asRaw.toU8a(true))
        : data.isNone
            ? undefined
            : data.toHex();
}
function extractOther(additional) {
    return additional.reduce((other, [_key, _value]) => {
        const key = dataAsString(_key);
        const value = dataAsString(_value);
        if (key && value) {
            other[key] = value;
        }
        return other;
    }, {});
}
function extractIdentity(identityOfOpt, superOf) {
    if (!identityOfOpt?.isSome) {
        return { judgements: [] };
    }
    const { info, judgements } = identityOfOpt.unwrap();
    const topDisplay = dataAsString(info.display);
    return {
        display: (superOf && dataAsString(superOf[1])) || topDisplay,
        displayParent: superOf && topDisplay,
        email: dataAsString(info.email),
        image: dataAsString(info.image),
        judgements,
        legal: dataAsString(info.legal),
        other: extractOther(info.additional),
        parent: superOf?.[0],
        pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),
        riot: dataAsString(info.riot),
        twitter: dataAsString(info.twitter),
        web: dataAsString(info.web)
    };
}
function getParent(api, identityOfOpt, superOfOpt) {
    if (identityOfOpt?.isSome) {
        // this identity has something set
        return (0, rxjs_1.of)([identityOfOpt, undefined]);
    }
    else if (superOfOpt?.isSome) {
        const superOf = superOfOpt.unwrap();
        return (0, rxjs_1.combineLatest)([
            api.derive.accounts._identity(superOf[0]).pipe((0, rxjs_1.map)(([info]) => info)),
            (0, rxjs_1.of)(superOf)
        ]);
    }
    // nothing of value returned
    return (0, rxjs_1.of)([undefined, undefined]);
}
function _identity(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId) => accountId && api.query.identity?.identityOf
        ? (0, rxjs_1.combineLatest)([
            api.query.identity.identityOf(accountId),
            api.query.identity.superOf(accountId)
        ])
        : (0, rxjs_1.of)([undefined, undefined]));
}
exports._identity = _identity;
/**
 * @name identity
 * @description Returns identity info for an account
 */
function identity(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId) => api.derive.accounts._identity(accountId).pipe((0, rxjs_1.switchMap)(([identityOfOpt, superOfOpt]) => getParent(api, identityOfOpt, superOfOpt)), (0, rxjs_1.map)(([identityOfOpt, superOf]) => extractIdentity(identityOfOpt, superOf))));
}
exports.identity = identity;
exports.hasIdentity = (0, index_js_1.firstMemo)((api, accountId) => api.derive.accounts.hasIdentityMulti([accountId]));
function hasIdentityMulti(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIds) => api.query.identity?.identityOf
        ? (0, rxjs_1.combineLatest)([
            api.query.identity.identityOf.multi(accountIds),
            api.query.identity.superOf.multi(accountIds)
        ]).pipe((0, rxjs_1.map)(([identities, supers]) => identities.map((identityOfOpt, index) => {
            const superOfOpt = supers[index];
            const parentId = superOfOpt && superOfOpt.isSome
                ? superOfOpt.unwrap()[0].toString()
                : undefined;
            let display;
            if (identityOfOpt && identityOfOpt.isSome) {
                const value = dataAsString(identityOfOpt.unwrap().info.display);
                if (value && !(0, util_1.isHex)(value)) {
                    display = value;
                }
            }
            return { display, hasIdentity: !!(display || parentId), parentId };
        })))
        : (0, rxjs_1.of)(accountIds.map(() => ({ hasIdentity: false }))));
}
exports.hasIdentityMulti = hasIdentityMulti;


/***/ }),

/***/ 58406:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(40092), exports);
tslib_1.__exportStar(__nccwpck_require__(18452), exports);
tslib_1.__exportStar(__nccwpck_require__(74759), exports);
tslib_1.__exportStar(__nccwpck_require__(79127), exports);
tslib_1.__exportStar(__nccwpck_require__(89845), exports);
tslib_1.__exportStar(__nccwpck_require__(1337), exports);
tslib_1.__exportStar(__nccwpck_require__(95886), exports);
tslib_1.__exportStar(__nccwpck_require__(36740), exports);


/***/ }),

/***/ 95886:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.indexToId = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @name indexToId
 * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.
 * @returns Returns the corresponding AccountId.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.indexToId('F7Hs', (accountId) => {
 *   console.log(`The AccountId of F7Hs is ${accountId}`);
 * });
 * ```
 */
function indexToId(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIndex) => api.query.indices
        ? api.query.indices.accounts(accountIndex).pipe((0, rxjs_1.map)((optResult) => optResult.unwrapOr([])[0]))
        : (0, rxjs_1.of)(undefined));
}
exports.indexToId = indexToId;


/***/ }),

/***/ 1337:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.indexes = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
let indicesCache = null;
function queryAccounts(api) {
    return api.query.indices.accounts.entries().pipe((0, rxjs_1.map)((entries) => entries.reduce((indexes, [key, idOpt]) => {
        if (idOpt.isSome) {
            indexes[idOpt.unwrap()[0].toString()] = api.registry.createType('AccountIndex', key.args[0]);
        }
        return indexes;
    }, {})));
}
/**
 * @name indexes
 * @returns Returns all the indexes on the system.
 * @description This is an unwieldly query since it loops through
 * all of the enumsets and returns all of the values found. This could be up to 32k depending
 * on the number of active accounts in the system
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.indexes((indexes) => {
 *   console.log('All existing AccountIndexes', indexes);
 * });
 * ```
 */
function indexes(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => indicesCache
        ? (0, rxjs_1.of)(indicesCache)
        : (api.query.indices
            ? queryAccounts(api).pipe((0, rxjs_1.startWith)({}))
            : (0, rxjs_1.of)({})).pipe((0, rxjs_1.map)((indices) => {
            indicesCache = indices;
            return indices;
        })));
}
exports.indexes = indexes;


/***/ }),

/***/ 36740:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.info = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function retrieveNick(api, accountId) {
    return (accountId && api.query['nicks']?.['nameOf']
        ? api.query['nicks']['nameOf'](accountId)
        : (0, rxjs_1.of)(undefined)).pipe((0, rxjs_1.map)((nameOf) => nameOf?.isSome
        ? (0, util_1.u8aToString)(nameOf.unwrap()[0]).substring(0, api.consts['nicks']['maxLength'].toNumber())
        : undefined));
}
/**
 * @name info
 * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname
 */
function info(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (address) => api.derive.accounts.idAndIndex(address).pipe((0, rxjs_1.switchMap)(([accountId, accountIndex]) => (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)({ accountId, accountIndex }),
        api.derive.accounts.identity(accountId),
        retrieveNick(api, accountId)
    ])), (0, rxjs_1.map)(([{ accountId, accountIndex }, identity, nickname]) => ({
        accountId, accountIndex, identity, nickname
    }))));
}
exports.info = info;


/***/ }),

/***/ 44302:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prime = exports.proposals = exports.proposalHashes = exports.proposalCount = exports.proposal = exports.hasProposals = exports.members = void 0;
const index_js_1 = __nccwpck_require__(3818);
exports.members = (0, index_js_1.members)('allianceMotion');
exports.hasProposals = (0, index_js_1.hasProposals)('allianceMotion');
exports.proposal = (0, index_js_1.proposal)('allianceMotion');
exports.proposalCount = (0, index_js_1.proposalCount)('allianceMotion');
exports.proposalHashes = (0, index_js_1.proposalHashes)('allianceMotion');
exports.proposals = (0, index_js_1.proposals)('allianceMotion');
exports.prime = (0, index_js_1.prime)('allianceMotion');


/***/ }),

/***/ 33831:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.get = exports.all = exports._getIds = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(15991);
function orderBags(ids, bags) {
    const sorted = ids
        .map((id, index) => ({
        bag: bags[index].unwrapOr(null),
        id,
        key: id.toString()
    }))
        .sort((a, b) => b.id.cmp(a.id));
    const max = sorted.length - 1;
    return sorted.map((entry, index) => (0, util_1.objectSpread)(entry, {
        bagLower: index === max
            ? util_1.BN_ZERO
            : sorted[index + 1].id,
        bagUpper: entry.id,
        index
    }));
}
function _getIds(instanceId, api) {
    const query = (0, util_js_1.getQueryInterface)(api);
    return (0, index_js_1.memo)(instanceId, (_ids) => {
        const ids = _ids.map((id) => (0, util_1.bnToBn)(id));
        return ids.length
            ? query.listBags.multi(ids).pipe((0, rxjs_1.map)((bags) => orderBags(ids, bags)))
            : (0, rxjs_1.of)([]);
    });
}
exports._getIds = _getIds;
function all(instanceId, api) {
    const query = (0, util_js_1.getQueryInterface)(api);
    return (0, index_js_1.memo)(instanceId, () => query.listBags.keys().pipe((0, rxjs_1.switchMap)((keys) => api.derive.bagsList._getIds(keys.map(({ args: [id] }) => id))), (0, rxjs_1.map)((list) => list.filter(({ bag }) => bag))));
}
exports.all = all;
function get(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (id) => api.derive.bagsList._getIds([(0, util_1.bnToBn)(id)]).pipe((0, rxjs_1.map)((bags) => bags[0])));
}
exports.get = get;


/***/ }),

/***/ 82291:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getExpanded = exports.expand = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function expand(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (bag) => api.derive.bagsList.listNodes(bag.bag).pipe((0, rxjs_1.map)((nodes) => (0, util_1.objectSpread)({ nodes }, bag))));
}
exports.expand = expand;
function getExpanded(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (id) => api.derive.bagsList.get(id).pipe((0, rxjs_1.switchMap)((bag) => api.derive.bagsList.expand(bag))));
}
exports.getExpanded = getExpanded;


/***/ }),

/***/ 95463:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(33831), exports);
tslib_1.__exportStar(__nccwpck_require__(82291), exports);
tslib_1.__exportStar(__nccwpck_require__(22811), exports);


/***/ }),

/***/ 22811:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.listNodes = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(15991);
function traverseLinks(api, head) {
    const subject = new rxjs_1.BehaviorSubject(head);
    const query = (0, util_js_1.getQueryInterface)(api);
    return subject.pipe((0, rxjs_1.switchMap)((account) => query.listNodes(account)), (0, rxjs_1.tap)((node) => {
        (0, util_1.nextTick)(() => {
            node.isSome && node.value.next.isSome
                ? subject.next(node.unwrap().next.unwrap())
                : subject.complete();
        });
    }), (0, rxjs_1.toArray)(), // toArray since we want to startSubject to be completed
    (0, rxjs_1.map)((all) => all.map((o) => o.unwrap())));
}
function listNodes(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (bag) => bag && bag.head.isSome
        ? traverseLinks(api, bag.head.unwrap())
        : (0, rxjs_1.of)([]));
}
exports.listNodes = listNodes;


/***/ }),

/***/ 15991:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getQueryInterface = void 0;
function getQueryInterface(api) {
    return (
    // latest substrate & polkadot
    api.query.voterList ||
        // previous substrate
        api.query['voterBagsList'] ||
        api.query['bagsList']);
}
exports.getQueryInterface = getQueryInterface;


/***/ }),

/***/ 1841:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.account = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function zeroBalance(api) {
    return api.registry.createType('Balance');
}
function getBalance(api, [freeBalance, reservedBalance, frozenFee, frozenMisc]) {
    const votingBalance = api.registry.createType('Balance', freeBalance.toBn());
    return {
        freeBalance,
        frozenFee,
        frozenMisc,
        reservedBalance,
        votingBalance
    };
}
function calcBalances(api, [accountId, [accountNonce, [primary, ...additional]]]) {
    return (0, util_1.objectSpread)({
        accountId,
        accountNonce,
        additional: additional.map((b) => getBalance(api, b))
    }, getBalance(api, primary));
}
function queryBalancesFree(api, accountId) {
    return (0, rxjs_1.combineLatest)([
        api.query.balances['freeBalance'](accountId),
        api.query.balances['reservedBalance'](accountId),
        api.query.system['accountNonce'](accountId)
    ]).pipe((0, rxjs_1.map)(([freeBalance, reservedBalance, accountNonce]) => [
        accountNonce,
        [[freeBalance, reservedBalance, zeroBalance(api), zeroBalance(api)]]
    ]));
}
function queryNonceOnly(api, accountId) {
    const fill = (nonce) => [
        nonce,
        [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]
    ];
    return (0, util_1.isFunction)(api.query.system.account)
        ? api.query.system.account(accountId).pipe((0, rxjs_1.map)(({ nonce }) => fill(nonce)))
        : (0, util_1.isFunction)(api.query.system['accountNonce'])
            ? api.query.system['accountNonce'](accountId).pipe((0, rxjs_1.map)((nonce) => fill(nonce)))
            : (0, rxjs_1.of)(fill(api.registry.createType('Index')));
}
function queryBalancesAccount(api, accountId, modules = ['balances']) {
    const balances = modules
        .map((m) => api.derive[m]?.customAccount || api.query[m]?.account)
        .filter((q) => (0, util_1.isFunction)(q));
    const extract = (nonce, data) => [
        nonce,
        data.map(({ feeFrozen, free, miscFrozen, reserved }) => [free, reserved, feeFrozen, miscFrozen])
    ];
    // NOTE this is for the first case where we do have instances specified
    return balances.length
        ? (0, util_1.isFunction)(api.query.system.account)
            ? (0, rxjs_1.combineLatest)([
                api.query.system.account(accountId),
                ...balances.map((c) => c(accountId))
            ]).pipe((0, rxjs_1.map)(([{ nonce }, ...balances]) => extract(nonce, balances)))
            : (0, rxjs_1.combineLatest)([
                api.query.system['accountNonce'](accountId),
                ...balances.map((c) => c(accountId))
            ]).pipe((0, rxjs_1.map)(([nonce, ...balances]) => extract(nonce, balances)))
        : queryNonceOnly(api, accountId);
}
function querySystemAccount(api, accountId) {
    // AccountInfo is current, support old, eg. Edgeware
    return api.query.system.account(accountId).pipe((0, rxjs_1.map)((infoOrTuple) => {
        const data = infoOrTuple.nonce
            ? infoOrTuple.data
            : infoOrTuple[1];
        const nonce = infoOrTuple.nonce || infoOrTuple[0];
        if (!data || data.isEmpty) {
            return [
                nonce,
                [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]
            ];
        }
        const { feeFrozen, free, miscFrozen, reserved } = data;
        return [
            nonce,
            [[free, reserved, feeFrozen, miscFrozen]]
        ];
    }));
}
/**
 * @name account
 * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.
 * @returns An object containing the results of various balance queries
 * @example
 * <BR>
 *
 * ```javascript
 * const ALICE = 'F7Hs';
 *
 * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {
 *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);
 * });
 * ```
 */
function account(instanceId, api) {
    const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName, 'balances');
    const nonDefaultBalances = balanceInstances && balanceInstances[0] !== 'balances';
    return (0, index_js_1.memo)(instanceId, (address) => api.derive.accounts.accountId(address).pipe((0, rxjs_1.switchMap)((accountId) => (accountId
        ? (0, rxjs_1.combineLatest)([
            (0, rxjs_1.of)(accountId),
            nonDefaultBalances
                ? queryBalancesAccount(api, accountId, balanceInstances)
                : (0, util_1.isFunction)(api.query.system?.account)
                    ? querySystemAccount(api, accountId)
                    : (0, util_1.isFunction)(api.query.balances?.account)
                        ? queryBalancesAccount(api, accountId)
                        : (0, util_1.isFunction)(api.query.balances?.['freeBalance'])
                            ? queryBalancesFree(api, accountId)
                            : queryNonceOnly(api, accountId)
        ])
        : (0, rxjs_1.of)([api.registry.createType('AccountId'), [
                api.registry.createType('Index'),
                [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]
            ]]))), (0, rxjs_1.map)((result) => calcBalances(api, result))));
}
exports.account = account;


/***/ }),

/***/ 70192:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.all = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const VESTING_ID = '0x76657374696e6720';
function calcLocked(api, bestNumber, locks) {
    let lockedBalance = api.registry.createType('Balance');
    let lockedBreakdown = [];
    let vestingLocked = api.registry.createType('Balance');
    let allLocked = false;
    if (Array.isArray(locks)) {
        // only get the locks that are valid until passed the current block
        lockedBreakdown = locks.filter(({ until }) => !until || (bestNumber && until.gt(bestNumber)));
        allLocked = lockedBreakdown.some(({ amount }) => amount && amount.isMax());
        vestingLocked = api.registry.createType('Balance', lockedBreakdown.filter(({ id }) => id.eq(VESTING_ID)).reduce((result, { amount }) => result.iadd(amount), new util_1.BN(0)));
        // get the maximum of the locks according to https://github.com/paritytech/substrate/blob/master/srml/balances/src/lib.rs#L699
        const notAll = lockedBreakdown.filter(({ amount }) => amount && !amount.isMax());
        if (notAll.length) {
            lockedBalance = api.registry.createType('Balance', (0, util_1.bnMax)(...notAll.map(({ amount }) => amount)));
        }
    }
    return { allLocked, lockedBalance, lockedBreakdown, vestingLocked };
}
function calcShared(api, bestNumber, data, locks) {
    const { allLocked, lockedBalance, lockedBreakdown, vestingLocked } = calcLocked(api, bestNumber, locks);
    return (0, util_1.objectSpread)({}, data, {
        availableBalance: api.registry.createType('Balance', allLocked ? 0 : (0, util_1.bnMax)(new util_1.BN(0), data?.freeBalance ? data.freeBalance.sub(lockedBalance) : new util_1.BN(0))),
        lockedBalance,
        lockedBreakdown,
        vestingLocked
    });
}
function calcVesting(bestNumber, shared, _vesting) {
    // Calculate the vesting balances,
    //  - offset = balance locked at startingBlock
    //  - perBlock is the unlock amount
    const vesting = _vesting || [];
    const isVesting = !shared.vestingLocked.isZero();
    const vestedBalances = vesting.map(({ locked, perBlock, startingBlock }) => bestNumber.gt(startingBlock)
        ? (0, util_1.bnMin)(locked, perBlock.mul(bestNumber.sub(startingBlock)))
        : util_1.BN_ZERO);
    const vestedBalance = vestedBalances.reduce((all, value) => all.iadd(value), new util_1.BN(0));
    const vestingTotal = vesting.reduce((all, { locked }) => all.iadd(locked), new util_1.BN(0));
    return {
        isVesting,
        vestedBalance,
        vestedClaimable: isVesting
            ? shared.vestingLocked.sub(vestingTotal.sub(vestedBalance))
            : util_1.BN_ZERO,
        vesting: vesting
            .map(({ locked, perBlock, startingBlock }, index) => ({
            endBlock: locked.div(perBlock).iadd(startingBlock),
            locked,
            perBlock,
            startingBlock,
            vested: vestedBalances[index]
        }))
            .filter(({ locked }) => !locked.isZero()),
        vestingTotal
    };
}
function calcBalances(api, result) {
    const [data, [vesting, allLocks, namedReserves], bestNumber] = result;
    const shared = calcShared(api, bestNumber, data, allLocks[0]);
    return (0, util_1.objectSpread)(shared, calcVesting(bestNumber, shared, vesting), {
        accountId: data.accountId,
        accountNonce: data.accountNonce,
        additional: allLocks
            .slice(1)
            .map((l, index) => calcShared(api, bestNumber, data.additional[index], l)),
        namedReserves
    });
}
function queryOld(api, accountId) {
    return (0, rxjs_1.combineLatest)([
        api.query.balances.locks(accountId),
        api.query.balances['vesting'](accountId)
    ]).pipe((0, rxjs_1.map)(([locks, optVesting]) => {
        let vestingNew = null;
        if (optVesting.isSome) {
            const { offset: locked, perBlock, startingBlock } = optVesting.unwrap();
            vestingNew = api.registry.createType('VestingInfo', { locked, perBlock, startingBlock });
        }
        return [
            vestingNew
                ? [vestingNew]
                : null,
            [locks],
            []
        ];
    }));
}
const isNonNullable = (nullable) => !!nullable;
function createCalls(calls) {
    return [
        calls.map((c) => !c),
        calls.filter(isNonNullable)
    ];
}
function queryCurrent(api, accountId, balanceInstances = ['balances']) {
    const [lockEmpty, lockQueries] = createCalls(balanceInstances.map((m) => api.derive[m]?.customLocks || api.query[m]?.locks));
    const [reserveEmpty, reserveQueries] = createCalls(balanceInstances.map((m) => api.query[m]?.reserves));
    return (0, rxjs_1.combineLatest)([
        api.query.vesting?.vesting
            ? api.query.vesting.vesting(accountId)
            : (0, rxjs_1.of)(api.registry.createType('Option<VestingInfo>')),
        lockQueries.length
            ? (0, rxjs_1.combineLatest)(lockQueries.map((c) => c(accountId)))
            : (0, rxjs_1.of)([]),
        reserveQueries.length
            ? (0, rxjs_1.combineLatest)(reserveQueries.map((c) => c(accountId)))
            : (0, rxjs_1.of)([])
    ]).pipe((0, rxjs_1.map)(([opt, locks, reserves]) => {
        let offsetLock = -1;
        let offsetReserve = -1;
        const vesting = opt.unwrapOr(null);
        return [
            vesting
                ? Array.isArray(vesting)
                    ? vesting
                    : [vesting]
                : null,
            lockEmpty.map((e) => e ? api.registry.createType('Vec<BalanceLock>') : locks[++offsetLock]),
            reserveEmpty.map((e) => e ? api.registry.createType('Vec<PalletBalancesReserveData>') : reserves[++offsetReserve])
        ];
    }));
}
/**
 * @name all
 * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.
 * @returns An object containing the results of various balance queries
 * @example
 * <BR>
 *
 * ```javascript
 * const ALICE = 'F7Hs';
 *
 * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {
 *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);
 * });
 * ```
 */
function all(instanceId, api) {
    const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName, 'balances');
    return (0, index_js_1.memo)(instanceId, (address) => (0, rxjs_1.combineLatest)([
        api.derive.balances.account(address),
        (0, util_1.isFunction)(api.query.system?.account) || (0, util_1.isFunction)(api.query.balances?.account)
            ? queryCurrent(api, address, balanceInstances)
            : queryOld(api, address)
    ]).pipe((0, rxjs_1.switchMap)(([account, locks]) => (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(account),
        (0, rxjs_1.of)(locks),
        api.derive.chain.bestNumber()
    ])), (0, rxjs_1.map)((result) => calcBalances(api, result))));
}
exports.all = all;


/***/ }),

/***/ 27885:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.votingBalance = exports.all = void 0;
const tslib_1 = __nccwpck_require__(32305);
const all_js_1 = __nccwpck_require__(70192);
Object.defineProperty(exports, "all", ({ enumerable: true, get: function () { return all_js_1.all; } }));
tslib_1.__exportStar(__nccwpck_require__(1841), exports);
tslib_1.__exportStar(__nccwpck_require__(7955), exports);
const votingBalance = all_js_1.all;
exports.votingBalance = votingBalance;


/***/ }),

/***/ 7955:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.votingBalances = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function votingBalances(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (addresses) => !addresses?.length
        ? (0, rxjs_1.of)([])
        : (0, rxjs_1.combineLatest)(addresses.map((accountId) => api.derive.balances.account(accountId))));
}
exports.votingBalances = votingBalances;


/***/ }),

/***/ 53562:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bounties = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const filterBountyProposals_js_1 = __nccwpck_require__(19274);
function parseResult([maybeBounties, maybeDescriptions, ids, bountyProposals]) {
    const bounties = [];
    maybeBounties.forEach((bounty, index) => {
        if (bounty.isSome) {
            bounties.push({
                bounty: bounty.unwrap(),
                description: maybeDescriptions[index].unwrapOrDefault().toUtf8(),
                index: ids[index],
                proposals: bountyProposals.filter((bountyProposal) => bountyProposal.proposal && ids[index].eq(bountyProposal.proposal.args[0]))
            });
        }
    });
    return bounties;
}
function bounties(instanceId, api) {
    const bountyBase = api.query.bounties || api.query.treasury;
    return (0, index_js_1.memo)(instanceId, () => bountyBase.bounties
        ? (0, rxjs_1.combineLatest)([
            bountyBase.bountyCount(),
            api.query.council
                ? api.query.council.proposalCount()
                : (0, rxjs_1.of)(0)
        ]).pipe((0, rxjs_1.switchMap)(() => (0, rxjs_1.combineLatest)([
            bountyBase.bounties.keys(),
            api.derive.council
                ? api.derive.council.proposals()
                : (0, rxjs_1.of)([])
        ])), (0, rxjs_1.switchMap)(([keys, proposals]) => {
            const ids = keys.map(({ args: [id] }) => id);
            return (0, rxjs_1.combineLatest)([
                bountyBase.bounties.multi(ids),
                bountyBase.bountyDescriptions.multi(ids),
                (0, rxjs_1.of)(ids),
                (0, rxjs_1.of)((0, filterBountyProposals_js_1.filterBountiesProposals)(api, proposals))
            ]);
        }), (0, rxjs_1.map)(parseResult))
        : (0, rxjs_1.of)(parseResult([[], [], [], []])));
}
exports.bounties = bounties;


/***/ }),

/***/ 19274:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.filterBountiesProposals = void 0;
function filterBountiesProposals(api, allProposals) {
    const bountyTxBase = api.tx.bounties ? api.tx.bounties : api.tx.treasury;
    const bountyProposalCalls = [bountyTxBase.approveBounty, bountyTxBase.closeBounty, bountyTxBase.proposeCurator, bountyTxBase.unassignCurator];
    return allProposals.filter((proposal) => bountyProposalCalls.find((bountyCall) => proposal.proposal && bountyCall.is(proposal.proposal)));
}
exports.filterBountiesProposals = filterBountiesProposals;


/***/ }),

/***/ 52008:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(53562), exports);


/***/ }),

/***/ 50402:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getAvailableDerives = exports.lazyDeriveSection = void 0;
const tslib_1 = __nccwpck_require__(32305);
const index_js_1 = __nccwpck_require__(42358);
Object.defineProperty(exports, "lazyDeriveSection", ({ enumerable: true, get: function () { return index_js_1.lazyDeriveSection; } }));
const derive_js_1 = __nccwpck_require__(25495);
tslib_1.__exportStar(__nccwpck_require__(25495), exports);
tslib_1.__exportStar(__nccwpck_require__(51920), exports);
const checks = {
    allianceMotion: {
        instances: ['allianceMotion'],
        methods: []
    },
    bagsList: {
        instances: ['voterBagsList', 'voterList', 'bagsList'],
        methods: [],
        withDetect: true
    },
    contracts: {
        instances: ['contracts'],
        methods: []
    },
    council: {
        instances: ['council'],
        methods: [],
        withDetect: true
    },
    crowdloan: {
        instances: ['crowdloan'],
        methods: []
    },
    democracy: {
        instances: ['democracy'],
        methods: []
    },
    elections: {
        instances: ['phragmenElection', 'electionsPhragmen', 'elections', 'council'],
        methods: [],
        withDetect: true
    },
    imOnline: {
        instances: ['imOnline'],
        methods: []
    },
    membership: {
        instances: ['membership'],
        methods: []
    },
    parachains: {
        instances: ['parachains', 'registrar'],
        methods: []
    },
    session: {
        instances: ['session'],
        methods: []
    },
    society: {
        instances: ['society'],
        methods: []
    },
    staking: {
        instances: ['staking'],
        methods: ['erasRewardPoints']
    },
    technicalCommittee: {
        instances: ['technicalCommittee'],
        methods: [],
        withDetect: true
    },
    treasury: {
        instances: ['treasury'],
        methods: []
    }
};
function getModuleInstances(api, specName, moduleName) {
    return api.registry.getModuleInstances(specName, moduleName) || [];
}
/**
 * Returns an object that will inject `api` into all the functions inside
 * `allSections`, and keep the object architecture of `allSections`.
 */
/** @internal */
function injectFunctions(instanceId, api, derives) {
    const result = {};
    const names = Object.keys(derives);
    const keys = Object.keys(api.query);
    const specName = api.runtimeVersion.specName;
    const filterKeys = (q) => keys.includes(q);
    const filterInstances = (q) => getModuleInstances(api, specName, q).some(filterKeys);
    const filterMethods = (all) => (m) => all.some((q) => keys.includes(q) && api.query[q][m]);
    const getKeys = (s) => Object.keys(derives[s]);
    const creator = (s, m) => derives[s][m](instanceId, api);
    const isIncluded = (c) => (!checks[c] || ((checks[c].instances.some(filterKeys) && (!checks[c].methods.length ||
        checks[c].methods.every(filterMethods(checks[c].instances)))) ||
        (checks[c].withDetect &&
            checks[c].instances.some(filterInstances))));
    for (let i = 0, count = names.length; i < count; i++) {
        const name = names[i];
        isIncluded(name) &&
            (0, index_js_1.lazyDeriveSection)(result, name, getKeys, creator);
    }
    return result;
}
/** @internal */
function getAvailableDerives(instanceId, api, custom = {}) {
    return {
        ...injectFunctions(instanceId, api, derive_js_1.derive),
        ...injectFunctions(instanceId, api, custom)
    };
}
exports.getAvailableDerives = getAvailableDerives;


/***/ }),

/***/ 93348:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bestNumber = void 0;
const util_js_1 = __nccwpck_require__(12443);
/**
 * @name bestNumber
 * @returns The latest block number.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.bestNumber((blockNumber) => {
 *   console.log(`the current best block is #${blockNumber}`);
 * });
 * ```
 */
exports.bestNumber = (0, util_js_1.createBlockNumberDerive)((api) => api.rpc.chain.subscribeNewHeads());


/***/ }),

/***/ 10329:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bestNumberFinalized = void 0;
const util_js_1 = __nccwpck_require__(12443);
/**
 * @name bestNumberFinalized
 * @returns A BlockNumber
 * @description Get the latest finalized block number.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.bestNumberFinalized((blockNumber) => {
 *   console.log(`the current finalized block is #${blockNumber}`);
 * });
 * ```
 */
exports.bestNumberFinalized = (0, util_js_1.createBlockNumberDerive)((api) => api.rpc.chain.subscribeFinalizedHeads());


/***/ }),

/***/ 57964:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bestNumberLag = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @name bestNumberLag
 * @returns A number of blocks
 * @description Calculates the lag between finalized head and best head
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.bestNumberLag((lag) => {
 *   console.log(`finalized is ${lag} blocks behind head`);
 * });
 * ```
 */
function bestNumberLag(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => (0, rxjs_1.combineLatest)([
        api.derive.chain.bestNumber(),
        api.derive.chain.bestNumberFinalized()
    ]).pipe((0, rxjs_1.map)(([bestNumber, bestNumberFinalized]) => api.registry.createType('BlockNumber', bestNumber.sub(bestNumberFinalized)))));
}
exports.bestNumberLag = bestNumberLag;


/***/ }),

/***/ 93469:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getBlock = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(51920);
const index_js_2 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(12443);
/**
 * @name getBlock
 * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.
 * @description Get a specific block (e.g. rpc.chain.getBlock) and extend it with the author
 * @example
 * <BR>
 *
 * ```javascript
 * const { author, block } = await api.derive.chain.getBlock('0x123...456');
 *
 * console.log(`block #${block.header.number} was authored by ${author}`);
 * ```
 */
function getBlock(instanceId, api) {
    return (0, index_js_2.memo)(instanceId, (blockHash) => (0, rxjs_1.combineLatest)([
        api.rpc.chain.getBlock(blockHash),
        api.queryAt(blockHash)
    ]).pipe((0, rxjs_1.switchMap)(([signedBlock, queryAt]) => (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(signedBlock),
        queryAt.system.events(),
        (0, util_js_1.getAuthorDetails)(api, signedBlock.block.header, blockHash)
    ])), (0, rxjs_1.map)(([signedBlock, events, [, validators, author]]) => (0, index_js_1.createSignedBlockExtended)(events.registry, signedBlock, events, validators, author))));
}
exports.getBlock = getBlock;


/***/ }),

/***/ 34626:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getBlockByNumber = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function getBlockByNumber(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (blockNumber) => api.rpc.chain.getBlockHash(blockNumber).pipe((0, rxjs_1.switchMap)((h) => api.derive.chain.getBlock(h))));
}
exports.getBlockByNumber = getBlockByNumber;


/***/ }),

/***/ 88007:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getHeader = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(51920);
const index_js_2 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(12443);
/**
 * @name getHeader
 * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.
 * @returns An array containing the block header and the block author
 * @description Get a specific block header and extend it with the author
 * @example
 * <BR>
 *
 * ```javascript
 * const { author, number } = await api.derive.chain.getHeader('0x123...456');
 *
 * console.log(`block #${number} was authored by ${author}`);
 * ```
 */
function getHeader(instanceId, api) {
    return (0, index_js_2.memo)(instanceId, (blockHash) => api.rpc.chain.getHeader(blockHash).pipe((0, rxjs_1.switchMap)((header) => (0, util_js_1.getAuthorDetails)(api, header, blockHash)), (0, rxjs_1.map)(([header, validators, author]) => (0, index_js_1.createHeaderExtended)((validators || header).registry, header, validators, author))));
}
exports.getHeader = getHeader;


/***/ }),

/***/ 20761:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(93348), exports);
tslib_1.__exportStar(__nccwpck_require__(10329), exports);
tslib_1.__exportStar(__nccwpck_require__(57964), exports);
tslib_1.__exportStar(__nccwpck_require__(93469), exports);
tslib_1.__exportStar(__nccwpck_require__(34626), exports);
tslib_1.__exportStar(__nccwpck_require__(88007), exports);
tslib_1.__exportStar(__nccwpck_require__(51995), exports);
tslib_1.__exportStar(__nccwpck_require__(69933), exports);
tslib_1.__exportStar(__nccwpck_require__(3153), exports);
tslib_1.__exportStar(__nccwpck_require__(31265), exports);


/***/ }),

/***/ 51995:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.subscribeFinalizedBlocks = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @name subscribeFinalizedBlocks
 * @returns The finalized block & events for that block
 */
function subscribeFinalizedBlocks(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.derive.chain.subscribeFinalizedHeads().pipe((0, rxjs_1.switchMap)((header) => api.derive.chain.getBlock(header.createdAtHash || header.hash))));
}
exports.subscribeFinalizedBlocks = subscribeFinalizedBlocks;


/***/ }),

/***/ 69933:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.subscribeFinalizedHeads = exports._getHeaderRange = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
/**
 * Returns a header range from startHash to to (not including) endHash, i.e. lastBlock.parentHash === endHash
 */
function _getHeaderRange(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (startHash, endHash, prev = []) => api.rpc.chain.getHeader(startHash).pipe((0, rxjs_1.switchMap)((header) => header.parentHash.eq(endHash)
        ? (0, rxjs_1.of)([header, ...prev])
        : api.derive.chain._getHeaderRange(header.parentHash, endHash, [header, ...prev]))));
}
exports._getHeaderRange = _getHeaderRange;
/**
 * @name subscribeFinalizedHeads
 * @description An observable of the finalized block headers. Unlike the base
 * chain.subscribeFinalizedHeads this does not skip any headers. Since finalization
 * may skip specific blocks (finalization happens in terms of chains), this version
 * of the derive tracks missing headers (since last  retrieved) and provides them
 * to the caller
 */
function subscribeFinalizedHeads(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => {
        let prevHash = null;
        return api.rpc.chain.subscribeFinalizedHeads().pipe((0, rxjs_1.switchMap)((header) => {
            const endHash = prevHash;
            const startHash = header.parentHash;
            prevHash = header.createdAtHash = header.hash;
            return endHash === null || startHash.eq(endHash)
                ? (0, rxjs_1.of)(header)
                : api.derive.chain._getHeaderRange(startHash, endHash, [header]).pipe((0, rxjs_1.switchMap)((headers) => (0, rxjs_1.from)(headers)));
        }));
    });
}
exports.subscribeFinalizedHeads = subscribeFinalizedHeads;


/***/ }),

/***/ 3153:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.subscribeNewBlocks = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @name subscribeNewBlocks
 * @returns The latest block & events for that block
 */
function subscribeNewBlocks(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.derive.chain.subscribeNewHeads().pipe((0, rxjs_1.switchMap)((header) => api.derive.chain.getBlock(header.createdAtHash || header.hash))));
}
exports.subscribeNewBlocks = subscribeNewBlocks;


/***/ }),

/***/ 31265:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.subscribeNewHeads = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(51920);
const index_js_2 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(12443);
/**
 * @name subscribeNewHeads
 * @returns A header with the current header (including extracted author)
 * @description An observable of the current block header and it's author
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.subscribeNewHeads((header) => {
 *   console.log(`block #${header.number} was authored by ${header.author}`);
 * });
 * ```
 */
function subscribeNewHeads(instanceId, api) {
    return (0, index_js_2.memo)(instanceId, () => api.rpc.chain.subscribeNewHeads().pipe((0, rxjs_1.switchMap)((header) => (0, util_js_1.getAuthorDetails)(api, header)), (0, rxjs_1.map)(([header, validators, author]) => {
        header.createdAtHash = header.hash;
        return (0, index_js_1.createHeaderExtended)(header.registry, header, validators, author);
    })));
}
exports.subscribeNewHeads = subscribeNewHeads;


/***/ }),

/***/ 12443:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getAuthorDetails = exports.createBlockNumberDerive = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function createBlockNumberDerive(fn) {
    return (instanceId, api) => (0, index_js_1.memo)(instanceId, () => fn(api).pipe((0, rxjs_1.map)(index_js_1.unwrapBlockNumber)));
}
exports.createBlockNumberDerive = createBlockNumberDerive;
/** @internal */
function getAuthorDetailsWithAt(header, queryAt) {
    const validators = queryAt.session?.validators
        ? queryAt.session.validators()
        : (0, rxjs_1.of)(null);
    // nimbus consensus stores the session key of the block author in header logs
    const { logs: [log] } = header.digest;
    const loggedAuthor = (log && ((log.isConsensus && log.asConsensus[0].isNimbus && log.asConsensus[1]) ||
        (log.isPreRuntime && log.asPreRuntime[0].isNimbus && log.asPreRuntime[1])));
    if (loggedAuthor) {
        // use the author mapping pallet, if available (ie: moonbeam, moonriver), to map session (nimbus) key to author (collator/validator) key
        if (queryAt['authorMapping']?.['mappingWithDeposit']) {
            return (0, rxjs_1.combineLatest)([
                (0, rxjs_1.of)(header),
                validators,
                queryAt['authorMapping']['mappingWithDeposit'](loggedAuthor).pipe((0, rxjs_1.map)((o) => o.unwrapOr({ account: null }).account))
            ]);
        }
        // fall back to session and parachain staking pallets, if available (ie: manta, calamari), to map session (nimbus) key to author (collator) key
        if (queryAt['parachainStaking']?.['selectedCandidates'] && queryAt.session?.nextKeys) {
            const loggedHex = loggedAuthor.toHex();
            return (0, rxjs_1.combineLatest)([
                (0, rxjs_1.of)(header),
                validators,
                queryAt['parachainStaking']['selectedCandidates']().pipe((0, rxjs_1.mergeMap)((selectedCandidates) => (0, rxjs_1.combineLatest)([
                    (0, rxjs_1.of)(selectedCandidates),
                    queryAt.session.nextKeys.multi(selectedCandidates).pipe((0, rxjs_1.map)((nextKeys) => nextKeys.findIndex((o) => o.unwrapOrDefault().nimbus.toHex() === loggedHex)))
                ])), (0, rxjs_1.map)(([selectedCandidates, index]) => index === -1
                    ? null
                    : selectedCandidates[index]))
            ]);
        }
    }
    // normal operation, non-mapping
    return (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(header),
        validators,
        (0, rxjs_1.of)(null)
    ]);
}
function getAuthorDetails(api, header, blockHash) {
    // For on-chain state, we need to retrieve it as per the start
    // of the block being constructed, i.e. session validators would
    // be at the point of the block construction, not when all operations
    // has been supplied.
    //
    // However for the first block (no parentHash available), we would
    // just use the as-is
    return api.queryAt(header.parentHash.isEmpty
        ? blockHash || header.hash
        : header.parentHash).pipe((0, rxjs_1.switchMap)((queryAt) => getAuthorDetailsWithAt(header, queryAt)));
}
exports.getAuthorDetails = getAuthorDetails;


/***/ }),

/***/ 71644:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.callMethod = exports.withSection = exports.getInstance = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function getInstance(api, section) {
    const instances = api.registry.getModuleInstances(api.runtimeVersion.specName, section);
    const name = instances?.length
        ? instances[0]
        : section;
    return api.query[name];
}
exports.getInstance = getInstance;
function withSection(section, fn) {
    return (instanceId, api) => (0, index_js_1.memo)(instanceId, fn(getInstance(api, section), api, instanceId));
}
exports.withSection = withSection;
function callMethod(method, empty) {
    return (section) => withSection(section, (query) => () => (0, util_1.isFunction)(query?.[method])
        ? query[method]()
        : (0, rxjs_1.of)(empty));
}
exports.callMethod = callMethod;


/***/ }),

/***/ 3818:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(47309), exports);
tslib_1.__exportStar(__nccwpck_require__(40562), exports);
tslib_1.__exportStar(__nccwpck_require__(90394), exports);


/***/ }),

/***/ 47309:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.members = void 0;
const helpers_js_1 = __nccwpck_require__(71644);
exports.members = (0, helpers_js_1.callMethod)('members', []);


/***/ }),

/***/ 40562:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prime = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const helpers_js_1 = __nccwpck_require__(71644);
function prime(section) {
    return (0, helpers_js_1.withSection)(section, (query) => () => (0, util_1.isFunction)(query?.prime)
        ? query.prime().pipe((0, rxjs_1.map)((o) => o.unwrapOr(null)))
        : (0, rxjs_1.of)(null));
}
exports.prime = prime;


/***/ }),

/***/ 90394:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.proposalHashes = exports.proposalCount = exports.proposal = exports.proposals = exports.hasProposals = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const helpers_js_1 = __nccwpck_require__(71644);
function parse(api, [hashes, proposals, votes]) {
    return proposals.map((o, index) => ({
        hash: api.registry.createType('Hash', hashes[index]),
        proposal: o && o.isSome
            ? o.unwrap()
            : null,
        votes: votes[index].unwrapOr(null)
    }));
}
function _proposalsFrom(api, query, hashes) {
    return ((0, util_1.isFunction)(query?.proposals) && hashes.length
        ? (0, rxjs_1.combineLatest)([
            (0, rxjs_1.of)(hashes),
            // this should simply be api.query[section].proposalOf.multi<Option<Proposal>>(hashes),
            // however we have had cases on Edgeware where the indices have moved around after an
            // upgrade, which results in invalid on-chain data
            query.proposalOf.multi(hashes).pipe((0, rxjs_1.catchError)(() => (0, rxjs_1.of)(hashes.map(() => null)))),
            query.voting.multi(hashes)
        ])
        : (0, rxjs_1.of)([[], [], []])).pipe((0, rxjs_1.map)((r) => parse(api, r)));
}
function hasProposals(section) {
    return (0, helpers_js_1.withSection)(section, (query) => () => (0, rxjs_1.of)((0, util_1.isFunction)(query?.proposals)));
}
exports.hasProposals = hasProposals;
function proposals(section) {
    return (0, helpers_js_1.withSection)(section, (query, api) => () => api.derive[section].proposalHashes().pipe((0, rxjs_1.switchMap)((all) => _proposalsFrom(api, query, all))));
}
exports.proposals = proposals;
function proposal(section) {
    return (0, helpers_js_1.withSection)(section, (query, api) => (hash) => (0, util_1.isFunction)(query?.proposals)
        ? (0, index_js_1.firstObservable)(_proposalsFrom(api, query, [hash]))
        : (0, rxjs_1.of)(null));
}
exports.proposal = proposal;
exports.proposalCount = (0, helpers_js_1.callMethod)('proposalCount', null);
exports.proposalHashes = (0, helpers_js_1.callMethod)('proposals', []);


/***/ }),

/***/ 32212:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fees = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function queryConstants(api) {
    return (0, rxjs_1.of)([
        // deprecated
        api.consts.contracts['callBaseFee'] || api.registry.createType('Balance'),
        api.consts.contracts['contractFee'] || api.registry.createType('Balance'),
        api.consts.contracts['creationFee'] || api.registry.createType('Balance'),
        api.consts.contracts['transactionBaseFee'] || api.registry.createType('Balance'),
        api.consts.contracts['transactionByteFee'] || api.registry.createType('Balance'),
        api.consts.contracts['transferFee'] || api.registry.createType('Balance'),
        // current
        api.consts.contracts['rentByteFee'] || api.registry.createType('Balance'),
        api.consts.contracts['rentDepositOffset'] || api.registry.createType('Balance'),
        api.consts.contracts['surchargeReward'] || api.registry.createType('Balance'),
        api.consts.contracts['tombstoneDeposit'] || api.registry.createType('Balance')
    ]);
}
/**
 * @name fees
 * @returns An object containing the combined results of the queries for
 * all relevant contract fees as declared in the substrate chain spec.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.contracts.fees(([creationFee, transferFee]) => {
 *   console.log(`The fee for creating a new contract on this chain is ${creationFee} units. The fee required to call this contract is ${transferFee} units.`);
 * });
 * ```
 */
function fees(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => {
        return queryConstants(api).pipe((0, rxjs_1.map)(([callBaseFee, contractFee, creationFee, transactionBaseFee, transactionByteFee, transferFee, rentByteFee, rentDepositOffset, surchargeReward, tombstoneDeposit]) => ({
            callBaseFee,
            contractFee,
            creationFee,
            rentByteFee,
            rentDepositOffset,
            surchargeReward,
            tombstoneDeposit,
            transactionBaseFee,
            transactionByteFee,
            transferFee
        })));
    });
}
exports.fees = fees;


/***/ }),

/***/ 5328:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(32212), exports);


/***/ }),

/***/ 24595:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prime = exports.proposals = exports.proposalHashes = exports.proposalCount = exports.proposal = exports.hasProposals = exports.members = void 0;
const tslib_1 = __nccwpck_require__(32305);
const index_js_1 = __nccwpck_require__(3818);
tslib_1.__exportStar(__nccwpck_require__(14418), exports);
tslib_1.__exportStar(__nccwpck_require__(90820), exports);
exports.members = (0, index_js_1.members)('council');
exports.hasProposals = (0, index_js_1.hasProposals)('council');
exports.proposal = (0, index_js_1.proposal)('council');
exports.proposalCount = (0, index_js_1.proposalCount)('council');
exports.proposalHashes = (0, index_js_1.proposalHashes)('council');
exports.proposals = (0, index_js_1.proposals)('council');
exports.prime = (0, index_js_1.prime)('council');


/***/ }),

/***/ 14418:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.votes = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function isVoter(value) {
    return !Array.isArray(value);
}
function retrieveStakeOf(elections) {
    return elections['stakeOf'].entries().pipe((0, rxjs_1.map)((entries) => entries.map(([{ args: [accountId] }, stake]) => [accountId, stake])));
}
function retrieveVoteOf(elections) {
    return elections['votesOf'].entries().pipe((0, rxjs_1.map)((entries) => entries.map(([{ args: [accountId] }, votes]) => [accountId, votes])));
}
function retrievePrev(api, elections) {
    return (0, rxjs_1.combineLatest)([
        retrieveStakeOf(elections),
        retrieveVoteOf(elections)
    ]).pipe((0, rxjs_1.map)(([stakes, votes]) => {
        const result = [];
        votes.forEach(([voter, votes]) => {
            result.push([voter, { stake: api.registry.createType('Balance'), votes }]);
        });
        stakes.forEach(([staker, stake]) => {
            const entry = result.find(([voter]) => voter.eq(staker));
            if (entry) {
                entry[1].stake = stake;
            }
            else {
                result.push([staker, { stake, votes: [] }]);
            }
        });
        return result;
    }));
}
function retrieveCurrent(elections) {
    return elections.voting.entries().pipe((0, rxjs_1.map)((entries) => entries.map(([{ args: [accountId] }, value]) => [
        accountId,
        isVoter(value)
            ? { stake: value.stake, votes: value.votes }
            : { stake: value[0], votes: value[1] }
    ])));
}
function votes(instanceId, api) {
    const elections = api.query.elections || api.query['phragmenElection'] || api.query['electionsPhragmen'];
    return (0, index_js_1.memo)(instanceId, () => elections
        ? elections['stakeOf']
            ? retrievePrev(api, elections)
            : retrieveCurrent(elections)
        : (0, rxjs_1.of)([]));
}
exports.votes = votes;


/***/ }),

/***/ 90820:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.votesOf = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function votesOf(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId) => api.derive.council.votes().pipe((0, rxjs_1.map)((votes) => (votes.find(([from]) => from.eq(accountId)) ||
        [null, { stake: api.registry.createType('Balance'), votes: [] }])[1])));
}
exports.votesOf = votesOf;


/***/ }),

/***/ 31555:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.childKey = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const index_js_1 = __nccwpck_require__(42358);
function createChildKey(info) {
    return (0, util_1.u8aToHex)((0, util_1.u8aConcat)(':child_storage:default:', (0, util_crypto_1.blake2AsU8a)((0, util_1.u8aConcat)('crowdloan', (info.fundIndex || info.trieIndex).toU8a()))));
}
function childKey(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (paraId) => api.query['crowdloan']['funds'](paraId).pipe((0, rxjs_1.map)((optInfo) => optInfo.isSome
        ? createChildKey(optInfo.unwrap())
        : null)));
}
exports.childKey = childKey;


/***/ }),

/***/ 70253:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.contributions = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(69700);
const PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)
function _getUpdates(api, paraId) {
    let added = [];
    let removed = [];
    return api.query.system.events().pipe((0, rxjs_1.switchMap)((events) => {
        const changes = (0, util_js_1.extractContributed)(paraId, events);
        if (changes.added.length || changes.removed.length) {
            added = added.concat(...changes.added);
            removed = removed.concat(...changes.removed);
            return (0, rxjs_1.of)({ added, addedDelta: changes.added, blockHash: events.createdAtHash?.toHex() || '-', removed, removedDelta: changes.removed });
        }
        return rxjs_1.EMPTY;
    }), (0, rxjs_1.startWith)({ added, addedDelta: [], blockHash: '-', removed, removedDelta: [] }));
}
function _eventTriggerAll(api, paraId) {
    return api.query.system.events().pipe((0, rxjs_1.switchMap)((events) => {
        const items = events.filter(({ event: { data: [eventParaId], method, section } }) => section === 'crowdloan' &&
            ['AllRefunded', 'Dissolved', 'PartiallyRefunded'].includes(method) &&
            eventParaId.eq(paraId));
        return items.length
            ? (0, rxjs_1.of)(events.createdAtHash?.toHex() || '-')
            : rxjs_1.EMPTY;
    }), (0, rxjs_1.startWith)('-'));
}
function _getKeysPaged(api, childKey) {
    const subject = new rxjs_1.BehaviorSubject(undefined);
    return subject.pipe((0, rxjs_1.switchMap)((startKey) => api.rpc.childstate.getKeysPaged(childKey, '0x', PAGE_SIZE_K, startKey)), (0, rxjs_1.tap)((keys) => {
        (0, util_1.nextTick)(() => {
            keys.length === PAGE_SIZE_K
                ? subject.next(keys[PAGE_SIZE_K - 1].toHex())
                : subject.complete();
        });
    }), (0, rxjs_1.toArray)(), // toArray since we want to startSubject to be completed
    (0, rxjs_1.map)((keyArr) => (0, util_1.arrayFlatten)(keyArr)));
}
function _getAll(api, paraId, childKey) {
    return _eventTriggerAll(api, paraId).pipe((0, rxjs_1.switchMap)(() => (0, util_1.isFunction)(api.rpc.childstate.getKeysPaged)
        ? _getKeysPaged(api, childKey)
        : api.rpc.childstate.getKeys(childKey, '0x')), (0, rxjs_1.map)((keys) => keys.map((k) => k.toHex())));
}
function _contributions(api, paraId, childKey) {
    return (0, rxjs_1.combineLatest)([
        _getAll(api, paraId, childKey),
        _getUpdates(api, paraId)
    ]).pipe((0, rxjs_1.map)(([keys, { added, blockHash, removed }]) => {
        const contributorsMap = {};
        keys.forEach((k) => {
            contributorsMap[k] = true;
        });
        added.forEach((k) => {
            contributorsMap[k] = true;
        });
        removed.forEach((k) => {
            delete contributorsMap[k];
        });
        return {
            blockHash,
            contributorsHex: Object.keys(contributorsMap)
        };
    }));
}
function contributions(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (paraId) => api.derive.crowdloan.childKey(paraId).pipe((0, rxjs_1.switchMap)((childKey) => childKey
        ? _contributions(api, paraId, childKey)
        : (0, rxjs_1.of)({ blockHash: '-', contributorsHex: [] }))));
}
exports.contributions = contributions;


/***/ }),

/***/ 54313:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(31555), exports);
tslib_1.__exportStar(__nccwpck_require__(70253), exports);
tslib_1.__exportStar(__nccwpck_require__(57839), exports);


/***/ }),

/***/ 57839:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ownContributions = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(69700);
function _getValues(api, childKey, keys) {
    // We actually would love to use multi-keys https://github.com/paritytech/substrate/issues/9203
    return (0, rxjs_1.combineLatest)(keys.map((k) => api.rpc.childstate.getStorage(childKey, k))).pipe((0, rxjs_1.map)((values) => values
        .map((v) => api.registry.createType('Option<StorageData>', v))
        .map((o) => o.isSome
        ? api.registry.createType('Balance', o.unwrap())
        : api.registry.createType('Balance'))
        .reduce((all, b, index) => (0, util_1.objectSpread)(all, { [keys[index]]: b }), {})));
}
function _watchOwnChanges(api, paraId, childkey, keys) {
    return api.query.system.events().pipe((0, rxjs_1.switchMap)((events) => {
        const changes = (0, util_js_1.extractContributed)(paraId, events);
        const filtered = keys.filter((k) => changes.added.includes(k) ||
            changes.removed.includes(k));
        return filtered.length
            ? _getValues(api, childkey, filtered)
            : rxjs_1.EMPTY;
    }), (0, rxjs_1.startWith)({}));
}
function _contributions(api, paraId, childKey, keys) {
    return (0, rxjs_1.combineLatest)([
        _getValues(api, childKey, keys),
        _watchOwnChanges(api, paraId, childKey, keys)
    ]).pipe((0, rxjs_1.map)(([all, latest]) => (0, util_1.objectSpread)({}, all, latest)));
}
function ownContributions(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (paraId, keys) => api.derive.crowdloan.childKey(paraId).pipe((0, rxjs_1.switchMap)((childKey) => childKey && keys.length
        ? _contributions(api, paraId, childKey, keys)
        : (0, rxjs_1.of)({}))));
}
exports.ownContributions = ownContributions;


/***/ }),

/***/ 69700:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extractContributed = void 0;
function extractContributed(paraId, events) {
    const added = [];
    const removed = [];
    return events
        .filter(({ event: { data: [, eventParaId], method, section } }) => section === 'crowdloan' &&
        ['Contributed', 'Withdrew'].includes(method) &&
        eventParaId.eq(paraId))
        .reduce((result, { event: { data: [accountId], method } }) => {
        if (method === 'Contributed') {
            result.added.push(accountId.toHex());
        }
        else {
            result.removed.push(accountId.toHex());
        }
        return result;
    }, { added, blockHash: events.createdAtHash?.toHex() || '-', removed });
}
exports.extractContributed = extractContributed;


/***/ }),

/***/ 69143:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dispatchQueue = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const types_1 = __nccwpck_require__(79405);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(28219);
const DEMOCRACY_ID = (0, util_1.stringToHex)('democrac');
function isMaybeHashedOrBounded(call) {
    // check for enum
    return call instanceof types_1.Enum;
}
function isBounded(call) {
    // check for type
    return call.isInline || call.isLegacy || call.isLookup;
}
function queryQueue(api) {
    return api.query.democracy['dispatchQueue']().pipe((0, rxjs_1.switchMap)((dispatches) => (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(dispatches),
        api.derive.democracy.preimages(dispatches.map(([, hash]) => hash))
    ])), (0, rxjs_1.map)(([dispatches, images]) => dispatches.map(([at, imageHash, index], dispatchIndex) => ({
        at,
        image: images[dispatchIndex],
        imageHash: (0, util_js_1.getImageHashBounded)(imageHash),
        index
    }))));
}
function schedulerEntries(api) {
    // We don't get entries, but rather we get the keys (triggered via finished referendums) and
    // the subscribe to those keys - this means we pickup when the schedulers actually executes
    // at a block, the entry for that block will become empty
    return api.derive.democracy.referendumsFinished().pipe((0, rxjs_1.switchMap)(() => api.query.scheduler.agenda.keys()), (0, rxjs_1.switchMap)((keys) => {
        const blockNumbers = keys.map(({ args: [blockNumber] }) => blockNumber);
        return blockNumbers.length
            ? (0, rxjs_1.combineLatest)([
                (0, rxjs_1.of)(blockNumbers),
                // this should simply be api.query.scheduler.agenda.multi,
                // however we have had cases on Darwinia where the indices have moved around after an
                // upgrade, which results in invalid on-chain data
                api.query.scheduler.agenda.multi(blockNumbers).pipe((0, rxjs_1.catchError)(() => (0, rxjs_1.of)(blockNumbers.map(() => []))))
            ])
            : (0, rxjs_1.of)([[], []]);
    }));
}
function queryScheduler(api) {
    return schedulerEntries(api).pipe((0, rxjs_1.switchMap)(([blockNumbers, agendas]) => {
        const result = [];
        blockNumbers.forEach((at, index) => {
            (agendas[index] || []).filter((o) => o.isSome).forEach((o) => {
                const scheduled = o.unwrap();
                if (scheduled.maybeId.isSome) {
                    const id = scheduled.maybeId.unwrap().toHex();
                    if (id.startsWith(DEMOCRACY_ID)) {
                        const imageHash = isMaybeHashedOrBounded(scheduled.call)
                            ? isBounded(scheduled.call)
                                ? (0, util_js_1.getImageHashBounded)(scheduled.call)
                                : scheduled.call.isHash
                                    ? scheduled.call.asHash.toHex()
                                    : scheduled.call.asValue.args[0].toHex()
                            : scheduled.call.args[0].toHex();
                        result.push({ at, imageHash, index: api.registry.createType('(u64, ReferendumIndex)', id)[1] });
                    }
                }
            });
        });
        return (0, rxjs_1.combineLatest)([
            (0, rxjs_1.of)(result),
            result.length
                ? api.derive.democracy.preimages(result.map(({ imageHash }) => imageHash))
                : (0, rxjs_1.of)([])
        ]);
    }), (0, rxjs_1.map)(([infos, images]) => infos.map((info, index) => (0, util_1.objectSpread)({ image: images[index] }, info))));
}
function dispatchQueue(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => (0, util_1.isFunction)(api.query.scheduler?.agenda)
        ? queryScheduler(api)
        : api.query.democracy['dispatchQueue']
            ? queryQueue(api)
            : (0, rxjs_1.of)([]));
}
exports.dispatchQueue = dispatchQueue;


/***/ }),

/***/ 97469:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(69143), exports);
tslib_1.__exportStar(__nccwpck_require__(43273), exports);
tslib_1.__exportStar(__nccwpck_require__(42179), exports);
tslib_1.__exportStar(__nccwpck_require__(8869), exports);
tslib_1.__exportStar(__nccwpck_require__(16497), exports);
tslib_1.__exportStar(__nccwpck_require__(85745), exports);
tslib_1.__exportStar(__nccwpck_require__(77974), exports);
tslib_1.__exportStar(__nccwpck_require__(7513), exports);
tslib_1.__exportStar(__nccwpck_require__(9057), exports);
tslib_1.__exportStar(__nccwpck_require__(27627), exports);
tslib_1.__exportStar(__nccwpck_require__(61912), exports);


/***/ }),

/***/ 43273:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.locks = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const LOCKUPS = [0, 1, 2, 4, 8, 16, 32];
function parseEnd(api, vote, { approved, end }) {
    return [
        end,
        (approved.isTrue && vote.isAye) || (approved.isFalse && vote.isNay)
            ? end.add((api.consts.democracy.voteLockingPeriod ||
                api.consts.democracy.enactmentPeriod).muln(LOCKUPS[vote.conviction.index]))
            : util_1.BN_ZERO
    ];
}
function parseLock(api, [referendumId, accountVote], referendum) {
    const { balance, vote } = accountVote.asStandard;
    const [referendumEnd, unlockAt] = referendum.isFinished
        ? parseEnd(api, vote, referendum.asFinished)
        : [util_1.BN_ZERO, util_1.BN_ZERO];
    return { balance, isDelegated: false, isFinished: referendum.isFinished, referendumEnd, referendumId, unlockAt, vote };
}
function delegateLocks(api, { balance, conviction, target }) {
    return api.derive.democracy.locks(target).pipe((0, rxjs_1.map)((available) => available.map(({ isFinished, referendumEnd, referendumId, unlockAt, vote }) => ({
        balance,
        isDelegated: true,
        isFinished,
        referendumEnd,
        referendumId,
        unlockAt: unlockAt.isZero()
            ? unlockAt
            : referendumEnd.add((api.consts.democracy.voteLockingPeriod ||
                api.consts.democracy.enactmentPeriod).muln(LOCKUPS[conviction.index])),
        vote: api.registry.createType('Vote', { aye: vote.isAye, conviction })
    }))));
}
function directLocks(api, { votes }) {
    if (!votes.length) {
        return (0, rxjs_1.of)([]);
    }
    return api.query.democracy.referendumInfoOf.multi(votes.map(([referendumId]) => referendumId)).pipe((0, rxjs_1.map)((referendums) => votes
        .map((vote, index) => [vote, referendums[index].unwrapOr(null)])
        .filter((item) => !!item[1] && (0, util_1.isUndefined)(item[1].end) && item[0][1].isStandard)
        .map(([directVote, referendum]) => parseLock(api, directVote, referendum))));
}
function locks(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId) => api.query.democracy.votingOf
        ? api.query.democracy.votingOf(accountId).pipe((0, rxjs_1.switchMap)((voting) => voting.isDirect
            ? directLocks(api, voting.asDirect)
            : voting.isDelegating
                ? delegateLocks(api, voting.asDelegating)
                : (0, rxjs_1.of)([])))
        : (0, rxjs_1.of)([]));
}
exports.locks = locks;


/***/ }),

/***/ 42179:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nextExternal = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(28219);
function withImage(api, nextOpt) {
    if (nextOpt.isNone) {
        return (0, rxjs_1.of)(null);
    }
    const [hash, threshold] = nextOpt.unwrap();
    return api.derive.democracy.preimage(hash).pipe((0, rxjs_1.map)((image) => ({
        image,
        imageHash: (0, util_js_1.getImageHashBounded)(hash),
        threshold
    })));
}
function nextExternal(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.democracy?.nextExternal
        ? api.query.democracy.nextExternal().pipe((0, rxjs_1.switchMap)((nextOpt) => withImage(api, nextOpt)))
        : (0, rxjs_1.of)(null));
}
exports.nextExternal = nextExternal;


/***/ }),

/***/ 8869:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.preimage = exports.preimages = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(28219);
function isDemocracyPreimage(api, imageOpt) {
    return !!imageOpt && !api.query.democracy['dispatchQueue'];
}
function constructProposal(api, [bytes, proposer, balance, at]) {
    let proposal;
    try {
        proposal = api.registry.createType('Call', bytes.toU8a(true));
    }
    catch (error) {
        console.error(error);
    }
    return { at, balance, proposal, proposer };
}
function parseDemocracy(api, imageOpt) {
    if (imageOpt.isNone) {
        return;
    }
    if (isDemocracyPreimage(api, imageOpt)) {
        const status = imageOpt.unwrap();
        if (status.isMissing) {
            return;
        }
        const { data, deposit, provider, since } = status.asAvailable;
        return constructProposal(api, [data, provider, deposit, since]);
    }
    return constructProposal(api, imageOpt.unwrap());
}
function parseImage(api, [proposalHash, status, bytes]) {
    if (!status) {
        return undefined;
    }
    const [proposer, balance] = status.isUnrequested
        ? status.asUnrequested.deposit
        : status.asRequested.deposit.unwrapOrDefault();
    let proposal;
    if (bytes) {
        try {
            proposal = api.registry.createType('Call', bytes.toU8a(true));
        }
        catch (error) {
            console.error(error);
        }
    }
    return { at: util_1.BN_ZERO, balance, proposal, proposalHash, proposer };
}
function getDemocracyImages(api, bounded) {
    const hashes = bounded.map((b) => (0, util_js_1.getImageHashBounded)(b));
    return api.query.democracy['preimages'].multi(hashes).pipe((0, rxjs_1.map)((images) => images.map((imageOpt) => parseDemocracy(api, imageOpt))));
}
function getImages(api, bounded) {
    const hashes = bounded.map((b) => (0, util_js_1.getImageHashBounded)(b));
    const bytesType = api.registry.lookup.getTypeDef(api.query.preimage.preimageFor.creator.meta.type.asMap.key).type;
    return api.query.preimage.statusFor.multi(hashes).pipe((0, rxjs_1.switchMap)((optStatus) => {
        const statuses = optStatus.map((o) => o.unwrapOr(null));
        const keys = statuses
            .map((s, i) => s
            ? bytesType === 'H256'
                // first generation
                ? hashes[i]
                // current generation (H256,u32)
                : s.isRequested
                    ? [hashes[i], s.asRequested.len.unwrapOr(0)]
                    : [hashes[i], s.asUnrequested.len]
            : null)
            .filter((p) => !!p);
        return api.query.preimage.preimageFor.multi(keys).pipe((0, rxjs_1.map)((optBytes) => {
            let ptr = -1;
            return statuses
                .map((s, i) => s
                ? [hashes[i], s, optBytes[++ptr].unwrapOr(null)]
                : [hashes[i], null, null])
                .map((v) => parseImage(api, v));
        }));
    }));
}
function preimages(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (hashes) => hashes.length
        ? (0, util_1.isFunction)(api.query.democracy['preimages'])
            ? getDemocracyImages(api, hashes)
            : (0, util_1.isFunction)(api.query.preimage.preimageFor)
                ? getImages(api, hashes)
                : (0, rxjs_1.of)([])
        : (0, rxjs_1.of)([]));
}
exports.preimages = preimages;
exports.preimage = (0, index_js_1.firstMemo)((api, hash) => api.derive.democracy.preimages([hash]));


/***/ }),

/***/ 16497:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.proposals = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(28219);
function isNewDepositors(depositors) {
    // Detect balance...
    return (0, util_1.isFunction)(depositors[1].mul);
}
function parse([proposals, images, optDepositors]) {
    return proposals
        .filter(([, , proposer], index) => !!(optDepositors[index]?.isSome) && !proposer.isEmpty)
        .map(([index, hash, proposer], proposalIndex) => {
        const depositors = optDepositors[proposalIndex].unwrap();
        return (0, util_1.objectSpread)({
            image: images[proposalIndex],
            imageHash: (0, util_js_1.getImageHashBounded)(hash),
            index,
            proposer
        }, isNewDepositors(depositors)
            ? { balance: depositors[1], seconds: depositors[0] }
            : { balance: depositors[0], seconds: depositors[1] });
    });
}
function proposals(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => (0, util_1.isFunction)(api.query.democracy?.publicProps)
        ? api.query.democracy.publicProps().pipe((0, rxjs_1.switchMap)((proposals) => proposals.length
            ? (0, rxjs_1.combineLatest)([
                (0, rxjs_1.of)(proposals),
                api.derive.democracy.preimages(proposals.map(([, hash]) => hash)),
                api.query.democracy.depositOf.multi(proposals.map(([index]) => index))
            ])
            : (0, rxjs_1.of)([[], [], []])), (0, rxjs_1.map)(parse))
        : (0, rxjs_1.of)([]));
}
exports.proposals = proposals;


/***/ }),

/***/ 85745:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.referendumIds = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function referendumIds(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.democracy?.lowestUnbaked
        ? api.queryMulti([
            api.query.democracy.lowestUnbaked,
            api.query.democracy.referendumCount
        ]).pipe((0, rxjs_1.map)(([first, total]) => total.gt(first)
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            ? [...Array(total.sub(first).toNumber())].map((_, i) => first.addn(i))
            : []))
        : (0, rxjs_1.of)([]));
}
exports.referendumIds = referendumIds;


/***/ }),

/***/ 77974:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.referendums = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function referendums(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.derive.democracy.referendumsActive().pipe((0, rxjs_1.switchMap)((referendums) => referendums.length
        ? (0, rxjs_1.combineLatest)([
            (0, rxjs_1.of)(referendums),
            api.derive.democracy._referendumsVotes(referendums)
        ])
        : (0, rxjs_1.of)([[], []])), (0, rxjs_1.map)(([referendums, votes]) => referendums.map((referendum, index) => (0, util_1.objectSpread)({}, referendum, votes[index])))));
}
exports.referendums = referendums;


/***/ }),

/***/ 7513:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.referendumsActive = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function referendumsActive(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.derive.democracy.referendumIds().pipe((0, rxjs_1.switchMap)((ids) => ids.length
        ? api.derive.democracy.referendumsInfo(ids)
        : (0, rxjs_1.of)([]))));
}
exports.referendumsActive = referendumsActive;


/***/ }),

/***/ 9057:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.referendumsFinished = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function referendumsFinished(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.derive.democracy.referendumIds().pipe((0, rxjs_1.switchMap)((ids) => api.query.democracy.referendumInfoOf.multi(ids)), (0, rxjs_1.map)((infos) => infos
        .map((o) => o.unwrapOr(null))
        .filter((info) => !!info && info.isFinished)
        .map((info) => info.asFinished))));
}
exports.referendumsFinished = referendumsFinished;


/***/ }),

/***/ 27627:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.referendumsInfo = exports._referendumInfo = exports._referendumsVotes = exports._referendumVotes = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(28219);
function votesPrev(api, referendumId) {
    return api.query.democracy['votersFor'](referendumId).pipe((0, rxjs_1.switchMap)((votersFor) => (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(votersFor),
        votersFor.length
            ? api.query.democracy['voteOf'].multi(votersFor.map((accountId) => [referendumId, accountId]))
            : (0, rxjs_1.of)([]),
        api.derive.balances.votingBalances(votersFor)
    ])), (0, rxjs_1.map)(([votersFor, votes, balances]) => votersFor.map((accountId, index) => ({
        accountId,
        balance: balances[index].votingBalance || api.registry.createType('Balance'),
        isDelegating: false,
        vote: votes[index] || api.registry.createType('Vote')
    }))));
}
function extractVotes(mapped, referendumId) {
    return mapped
        .filter(([, voting]) => voting.isDirect)
        .map(([accountId, voting]) => [
        accountId,
        voting.asDirect.votes.filter(([idx]) => idx.eq(referendumId))
    ])
        .filter(([, directVotes]) => !!directVotes.length)
        .reduce((result, [accountId, votes]) => 
    // FIXME We are ignoring split votes
    votes.reduce((result, [, vote]) => {
        if (vote.isStandard) {
            result.push((0, util_1.objectSpread)({
                accountId,
                isDelegating: false
            }, vote.asStandard));
        }
        return result;
    }, result), []);
}
function votesCurr(api, referendumId) {
    return api.query.democracy.votingOf.entries().pipe((0, rxjs_1.map)((allVoting) => {
        const mapped = allVoting.map(([{ args: [accountId] }, voting]) => [accountId, voting]);
        const votes = extractVotes(mapped, referendumId);
        const delegations = mapped
            .filter(([, voting]) => voting.isDelegating)
            .map(([accountId, voting]) => [accountId, voting.asDelegating]);
        // add delegations
        delegations.forEach(([accountId, { balance, conviction, target }]) => {
            // Are we delegating to a delegator
            const toDelegator = delegations.find(([accountId]) => accountId.eq(target));
            const to = votes.find(({ accountId }) => accountId.eq(toDelegator ? toDelegator[0] : target));
            // this delegation has a target
            if (to) {
                votes.push({
                    accountId,
                    balance,
                    isDelegating: true,
                    vote: api.registry.createType('Vote', { aye: to.vote.isAye, conviction })
                });
            }
        });
        return votes;
    }));
}
function _referendumVotes(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (referendum) => (0, rxjs_1.combineLatest)([
        api.derive.democracy.sqrtElectorate(),
        (0, util_1.isFunction)(api.query.democracy.votingOf)
            ? votesCurr(api, referendum.index)
            : votesPrev(api, referendum.index)
    ]).pipe((0, rxjs_1.map)(([sqrtElectorate, votes]) => (0, util_js_1.calcVotes)(sqrtElectorate, referendum, votes))));
}
exports._referendumVotes = _referendumVotes;
function _referendumsVotes(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (referendums) => referendums.length
        ? (0, rxjs_1.combineLatest)(referendums.map((referendum) => api.derive.democracy._referendumVotes(referendum)))
        : (0, rxjs_1.of)([]));
}
exports._referendumsVotes = _referendumsVotes;
function _referendumInfo(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (index, info) => {
        const status = (0, util_js_1.getStatus)(info);
        return status
            ? api.derive.democracy.preimage(status.proposal ||
                status.proposalHash).pipe((0, rxjs_1.map)((image) => ({
                image,
                imageHash: (0, util_js_1.getImageHash)(status),
                index: api.registry.createType('ReferendumIndex', index),
                status
            })))
            : (0, rxjs_1.of)(null);
    });
}
exports._referendumInfo = _referendumInfo;
function referendumsInfo(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (ids) => ids.length
        ? api.query.democracy.referendumInfoOf.multi(ids).pipe((0, rxjs_1.switchMap)((infos) => (0, rxjs_1.combineLatest)(ids.map((id, index) => api.derive.democracy._referendumInfo(id, infos[index])))), (0, rxjs_1.map)((infos) => infos.filter((r) => !!r)))
        : (0, rxjs_1.of)([]));
}
exports.referendumsInfo = referendumsInfo;


/***/ }),

/***/ 61912:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sqrtElectorate = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function sqrtElectorate(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.balances.totalIssuance().pipe((0, rxjs_1.map)(util_1.bnSqrt)));
}
exports.sqrtElectorate = sqrtElectorate;


/***/ }),

/***/ 28219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getImageHash = exports.getImageHashBounded = exports.getStatus = exports.calcVotes = exports.calcPassing = exports.compareRationals = void 0;
const util_1 = __nccwpck_require__(29795);
function isOldInfo(info) {
    return !!info.proposalHash;
}
function isCurrentStatus(status) {
    return !!status.tally;
}
function compareRationals(n1, d1, n2, d2) {
    while (true) {
        const q1 = n1.div(d1);
        const q2 = n2.div(d2);
        if (q1.lt(q2)) {
            return true;
        }
        else if (q2.lt(q1)) {
            return false;
        }
        const r1 = n1.mod(d1);
        const r2 = n2.mod(d2);
        if (r2.isZero()) {
            return false;
        }
        else if (r1.isZero()) {
            return true;
        }
        n1 = d2;
        n2 = d1;
        d1 = r2;
        d2 = r1;
    }
}
exports.compareRationals = compareRationals;
function calcPassingOther(threshold, sqrtElectorate, { votedAye, votedNay, votedTotal }) {
    const sqrtVoters = (0, util_1.bnSqrt)(votedTotal);
    return sqrtVoters.isZero()
        ? false
        : threshold.isSuperMajorityApprove
            ? compareRationals(votedNay, sqrtVoters, votedAye, sqrtElectorate)
            : compareRationals(votedNay, sqrtElectorate, votedAye, sqrtVoters);
}
function calcPassing(threshold, sqrtElectorate, state) {
    return threshold.isSimpleMajority
        ? state.votedAye.gt(state.votedNay)
        : calcPassingOther(threshold, sqrtElectorate, state);
}
exports.calcPassing = calcPassing;
function calcVotesPrev(votesFor) {
    return votesFor.reduce((state, derived) => {
        const { balance, vote } = derived;
        const isDefault = vote.conviction.index === 0;
        const counted = balance
            .muln(isDefault ? 1 : vote.conviction.index)
            .divn(isDefault ? 10 : 1);
        if (vote.isAye) {
            state.allAye.push(derived);
            state.voteCountAye++;
            state.votedAye.iadd(counted);
        }
        else {
            state.allNay.push(derived);
            state.voteCountNay++;
            state.votedNay.iadd(counted);
        }
        state.voteCount++;
        state.votedTotal.iadd(counted);
        return state;
    }, { allAye: [], allNay: [], voteCount: 0, voteCountAye: 0, voteCountNay: 0, votedAye: new util_1.BN(0), votedNay: new util_1.BN(0), votedTotal: new util_1.BN(0) });
}
function calcVotesCurrent(tally, votes) {
    const allAye = [];
    const allNay = [];
    votes.forEach((derived) => {
        if (derived.vote.isAye) {
            allAye.push(derived);
        }
        else {
            allNay.push(derived);
        }
    });
    return {
        allAye,
        allNay,
        voteCount: allAye.length + allNay.length,
        voteCountAye: allAye.length,
        voteCountNay: allNay.length,
        votedAye: tally.ayes,
        votedNay: tally.nays,
        votedTotal: tally.turnout
    };
}
function calcVotes(sqrtElectorate, referendum, votes) {
    const state = isCurrentStatus(referendum.status)
        ? calcVotesCurrent(referendum.status.tally, votes)
        : calcVotesPrev(votes);
    return (0, util_1.objectSpread)({}, state, {
        isPassing: calcPassing(referendum.status.threshold, sqrtElectorate, state),
        votes
    });
}
exports.calcVotes = calcVotes;
function getStatus(info) {
    if (info.isNone) {
        return null;
    }
    const unwrapped = info.unwrap();
    return isOldInfo(unwrapped)
        ? unwrapped
        : unwrapped.isOngoing
            ? unwrapped.asOngoing
            // done, we don't include it here... only currently active
            : null;
}
exports.getStatus = getStatus;
function getImageHashBounded(hash) {
    return hash.isLegacy
        ? hash.asLegacy.hash_.toHex()
        : hash.isLookup
            ? hash.asLookup.hash_.toHex()
            // for inline, use the actual Bytes hash
            : hash.isInline
                ? hash.asInline.hash.toHex()
                : (0, util_1.isString)(hash)
                    ? (0, util_1.isHex)(hash)
                        ? hash
                        : (0, util_1.stringToHex)(hash)
                    : (0, util_1.isU8a)(hash)
                        ? (0, util_1.u8aToHex)(hash)
                        : hash.toHex();
}
exports.getImageHashBounded = getImageHashBounded;
function getImageHash(status) {
    return getImageHashBounded(status.proposal ||
        status.proposalHash);
}
exports.getImageHash = getImageHash;


/***/ }),

/***/ 25495:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.derive = void 0;
const tslib_1 = __nccwpck_require__(32305);
const accounts = tslib_1.__importStar(__nccwpck_require__(58406));
const alliance = tslib_1.__importStar(__nccwpck_require__(44302));
const bagsList = tslib_1.__importStar(__nccwpck_require__(95463));
const balances = tslib_1.__importStar(__nccwpck_require__(27885));
const bounties = tslib_1.__importStar(__nccwpck_require__(52008));
const chain = tslib_1.__importStar(__nccwpck_require__(20761));
const contracts = tslib_1.__importStar(__nccwpck_require__(5328));
const council = tslib_1.__importStar(__nccwpck_require__(24595));
const crowdloan = tslib_1.__importStar(__nccwpck_require__(54313));
const democracy = tslib_1.__importStar(__nccwpck_require__(97469));
const elections = tslib_1.__importStar(__nccwpck_require__(49368));
const imOnline = tslib_1.__importStar(__nccwpck_require__(15405));
const membership = tslib_1.__importStar(__nccwpck_require__(9540));
const parachains = tslib_1.__importStar(__nccwpck_require__(77393));
const session = tslib_1.__importStar(__nccwpck_require__(78327));
const society = tslib_1.__importStar(__nccwpck_require__(25960));
const staking = tslib_1.__importStar(__nccwpck_require__(91742));
const technicalCommittee = tslib_1.__importStar(__nccwpck_require__(11189));
const treasury = tslib_1.__importStar(__nccwpck_require__(78512));
const tx = tslib_1.__importStar(__nccwpck_require__(24330));
exports.derive = { accounts, alliance, bagsList, balances, bounties, chain, contracts, council, crowdloan, democracy, elections, imOnline, membership, parachains, session, society, staking, technicalCommittee, treasury, tx };


/***/ }),

/***/ 36168:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = [];


/***/ }),

/***/ 45426:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(36168));
const packageInfo_js_1 = __nccwpck_require__(11970);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 49368:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(37249), exports);


/***/ }),

/***/ 37249:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.info = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function isSeatHolder(value) {
    return !Array.isArray(value);
}
function isCandidateTuple(value) {
    return Array.isArray(value);
}
function getAccountTuple(value) {
    return isSeatHolder(value)
        ? [value.who, value.stake]
        : value;
}
function getCandidate(value) {
    return isCandidateTuple(value)
        ? value[0]
        : value;
}
function sortAccounts([, balanceA], [, balanceB]) {
    return balanceB.cmp(balanceA);
}
function getConstants(api, elections) {
    return elections
        ? {
            candidacyBond: api.consts[elections].candidacyBond,
            desiredRunnersUp: api.consts[elections].desiredRunnersUp,
            desiredSeats: api.consts[elections].desiredMembers,
            termDuration: api.consts[elections].termDuration,
            votingBond: api.consts[elections]['votingBond'],
            votingBondBase: api.consts[elections].votingBondBase,
            votingBondFactor: api.consts[elections].votingBondFactor
        }
        : {};
}
function getModules(api) {
    const [council] = api.registry.getModuleInstances(api.runtimeVersion.specName, 'council') || ['council'];
    const elections = api.query['phragmenElection']
        ? 'phragmenElection'
        : api.query['electionsPhragmen']
            ? 'electionsPhragmen'
            : api.query.elections
                ? 'elections'
                : null;
    return [council, elections];
}
function queryAll(api, council, elections) {
    return api.queryMulti([
        api.query[council].members,
        api.query[elections].candidates,
        api.query[elections].members,
        api.query[elections].runnersUp
    ]);
}
function queryCouncil(api, council) {
    return (0, rxjs_1.combineLatest)([
        api.query[council].members(),
        (0, rxjs_1.of)([]),
        (0, rxjs_1.of)([]),
        (0, rxjs_1.of)([])
    ]);
}
/**
 * @name info
 * @returns An object containing the combined results of the storage queries for
 * all relevant election module properties.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.elections.info(({ members, candidates }) => {
 *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);
 * });
 * ```
 */
function info(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => {
        const [council, elections] = getModules(api);
        return (elections
            ? queryAll(api, council, elections)
            : queryCouncil(api, council)).pipe((0, rxjs_1.map)(([councilMembers, candidates, members, runnersUp]) => (0, util_1.objectSpread)({}, getConstants(api, elections), {
            candidateCount: api.registry.createType('u32', candidates.length),
            candidates: candidates.map(getCandidate),
            members: members.length
                ? members.map(getAccountTuple).sort(sortAccounts)
                : councilMembers.map((a) => [a, api.registry.createType('Balance')]),
            runnersUp: runnersUp.map(getAccountTuple).sort(sortAccounts)
        })));
    });
}
exports.info = info;


/***/ }),

/***/ 15405:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(20306), exports);


/***/ }),

/***/ 20306:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.receivedHeartbeats = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function mapResult([result, validators, heartbeats, numBlocks]) {
    validators.forEach((validator, index) => {
        const validatorId = validator.toString();
        const blockCount = numBlocks[index];
        const hasMessage = !heartbeats[index].isEmpty;
        const prev = result[validatorId];
        if (!prev || prev.hasMessage !== hasMessage || !prev.blockCount.eq(blockCount)) {
            result[validatorId] = {
                blockCount,
                hasMessage,
                isOnline: hasMessage || blockCount.gt(util_1.BN_ZERO)
            };
        }
    });
    return result;
}
/**
 * @description Return a boolean array indicating whether the passed accounts had received heartbeats in the current session
 */
function receivedHeartbeats(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.imOnline?.receivedHeartbeats
        ? api.derive.staking.overview().pipe((0, rxjs_1.switchMap)(({ currentIndex, validators }) => (0, rxjs_1.combineLatest)([
            (0, rxjs_1.of)({}),
            (0, rxjs_1.of)(validators),
            api.query.imOnline.receivedHeartbeats.multi(validators.map((_address, index) => [currentIndex, index])),
            api.query.imOnline.authoredBlocks.multi(validators.map((address) => [currentIndex, address]))
        ])), (0, rxjs_1.map)(mapResult))
        : (0, rxjs_1.of)({}));
}
exports.receivedHeartbeats = receivedHeartbeats;


/***/ }),

/***/ 17913:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
__nccwpck_require__(45426);
tslib_1.__exportStar(__nccwpck_require__(50402), exports);


/***/ }),

/***/ 9540:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prime = exports.proposals = exports.proposalHashes = exports.proposalCount = exports.proposal = exports.hasProposals = exports.members = void 0;
const index_js_1 = __nccwpck_require__(3818);
exports.members = (0, index_js_1.members)('membership');
exports.hasProposals = (0, index_js_1.hasProposals)('membership');
exports.proposal = (0, index_js_1.proposal)('membership');
exports.proposalCount = (0, index_js_1.proposalCount)('membership');
exports.proposalHashes = (0, index_js_1.proposalHashes)('membership');
exports.proposals = (0, index_js_1.proposals)('membership');
exports.prime = (0, index_js_1.prime)('membership');


/***/ }),

/***/ 11970:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/api-derive', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 77393:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(15628), exports);
tslib_1.__exportStar(__nccwpck_require__(51885), exports);


/***/ }),

/***/ 15628:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.info = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(46674);
function parseActive(id, active) {
    const found = active.find(([paraId]) => paraId === id);
    if (found && found[1].isSome) {
        const [collatorId, retriable] = found[1].unwrap();
        return (0, util_1.objectSpread)({ collatorId }, retriable.isWithRetries
            ? {
                isRetriable: true,
                retries: retriable.asWithRetries.toNumber()
            }
            : {
                isRetriable: false,
                retries: 0
            });
    }
    return null;
}
function parseCollators(id, collatorQueue) {
    return collatorQueue.map((queue) => {
        const found = queue.find(([paraId]) => paraId === id);
        return found ? found[1] : null;
    });
}
function parse(id, [active, retryQueue, selectedThreads, didUpdate, info, pendingSwap, heads, relayDispatchQueue]) {
    if (info.isNone) {
        return null;
    }
    return {
        active: parseActive(id, active),
        didUpdate: (0, util_js_1.didUpdateToBool)(didUpdate, id),
        heads,
        id,
        info: (0, util_1.objectSpread)({ id }, info.unwrap()),
        pendingSwapId: pendingSwap.unwrapOr(null),
        relayDispatchQueue,
        retryCollators: parseCollators(id, retryQueue),
        selectedCollators: parseCollators(id, selectedThreads)
    };
}
function info(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (id) => api.query['registrar'] && api.query['parachains']
        ? api.queryMulti([
            api.query['registrar']['active'],
            api.query['registrar']['retryQueue'],
            api.query['registrar']['selectedThreads'],
            api.query['parachains']['didUpdate'],
            [api.query['registrar']['paras'], id],
            [api.query['registrar']['pendingSwap'], id],
            [api.query['parachains']['heads'], id],
            [api.query['parachains']['relayDispatchQueue'], id]
        ])
            .pipe((0, rxjs_1.map)((result) => parse(api.registry.createType('ParaId', id), result)))
        : (0, rxjs_1.of)(null));
}
exports.info = info;


/***/ }),

/***/ 51885:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.overview = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(46674);
function parse([ids, didUpdate, relayDispatchQueueSizes, infos, pendingSwaps]) {
    return ids.map((id, index) => ({
        didUpdate: (0, util_js_1.didUpdateToBool)(didUpdate, id),
        id,
        info: (0, util_1.objectSpread)({ id }, infos[index].unwrapOr(null)),
        pendingSwapId: pendingSwaps[index].unwrapOr(null),
        relayDispatchQueueSize: relayDispatchQueueSizes[index][0].toNumber()
    }));
}
function overview(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query['registrar']?.['parachains'] && api.query['parachains']
        ? api.query['registrar']['parachains']().pipe((0, rxjs_1.switchMap)((paraIds) => (0, rxjs_1.combineLatest)([
            (0, rxjs_1.of)(paraIds),
            api.query['parachains']['didUpdate'](),
            api.query['parachains']['relayDispatchQueueSize'].multi(paraIds),
            api.query['registrar']['paras'].multi(paraIds),
            api.query['registrar']['pendingSwap'].multi(paraIds)
        ])), (0, rxjs_1.map)(parse))
        : (0, rxjs_1.of)([]));
}
exports.overview = overview;


/***/ }),

/***/ 46674:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.didUpdateToBool = void 0;
function didUpdateToBool(didUpdate, id) {
    return didUpdate.isSome
        ? didUpdate.unwrap().some((paraId) => paraId.eq(id))
        : false;
}
exports.didUpdateToBool = didUpdateToBool;


/***/ }),

/***/ 78327:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(61394), exports);
tslib_1.__exportStar(__nccwpck_require__(11833), exports);
tslib_1.__exportStar(__nccwpck_require__(51117), exports);


/***/ }),

/***/ 61394:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.indexes = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function parse([currentIndex, activeEra, activeEraStart, currentEra, validatorCount]) {
    return {
        activeEra,
        activeEraStart,
        currentEra,
        currentIndex,
        validatorCount
    };
}
function queryStaking(api) {
    return api.queryMulti([
        api.query.session.currentIndex,
        api.query.staking.activeEra,
        api.query.staking.currentEra,
        api.query.staking.validatorCount
    ]).pipe((0, rxjs_1.map)(([currentIndex, activeOpt, currentEra, validatorCount]) => {
        const { index, start } = activeOpt.unwrapOrDefault();
        return parse([
            currentIndex,
            index,
            start,
            currentEra.unwrapOrDefault(),
            validatorCount
        ]);
    }));
}
function querySession(api) {
    return api.query.session.currentIndex().pipe((0, rxjs_1.map)((currentIndex) => parse([
        currentIndex,
        api.registry.createType('EraIndex'),
        api.registry.createType('Option<Moment>'),
        api.registry.createType('EraIndex'),
        api.registry.createType('u32')
    ])));
}
function empty(api) {
    return (0, rxjs_1.of)(parse([
        api.registry.createType('SessionIndex', 1),
        api.registry.createType('EraIndex'),
        api.registry.createType('Option<Moment>'),
        api.registry.createType('EraIndex'),
        api.registry.createType('u32')
    ]));
}
function indexes(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.session
        ? api.query.staking
            ? queryStaking(api)
            : querySession(api)
        : empty(api));
}
exports.indexes = indexes;


/***/ }),

/***/ 11833:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.info = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras
 */
function info(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.derive.session.indexes().pipe((0, rxjs_1.map)((indexes) => {
        const sessionLength = api.consts?.babe?.epochDuration || api.registry.createType('u64', 1);
        const sessionsPerEra = api.consts?.staking?.sessionsPerEra || api.registry.createType('SessionIndex', 1);
        return (0, util_1.objectSpread)({
            eraLength: api.registry.createType('BlockNumber', sessionsPerEra.mul(sessionLength)),
            isEpoch: !!api.query.babe,
            sessionLength,
            sessionsPerEra
        }, indexes);
    })));
}
exports.info = info;


/***/ }),

/***/ 51117:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sessionProgress = exports.eraProgress = exports.eraLength = exports.progress = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function withProgressField(field) {
    return (instanceId, api) => (0, index_js_1.memo)(instanceId, () => api.derive.session.progress().pipe((0, rxjs_1.map)((info) => info[field])));
}
function createDerive(api, info, [currentSlot, epochIndex, epochOrGenesisStartSlot, activeEraStartSessionIndex]) {
    const epochStartSlot = epochIndex.mul(info.sessionLength).iadd(epochOrGenesisStartSlot);
    const sessionProgress = currentSlot.sub(epochStartSlot);
    const eraProgress = info.currentIndex.sub(activeEraStartSessionIndex).imul(info.sessionLength).iadd(sessionProgress);
    return (0, util_1.objectSpread)({
        eraProgress: api.registry.createType('BlockNumber', eraProgress),
        sessionProgress: api.registry.createType('BlockNumber', sessionProgress)
    }, info);
}
function queryAura(api) {
    return api.derive.session.info().pipe((0, rxjs_1.map)((info) => (0, util_1.objectSpread)({
        eraProgress: api.registry.createType('BlockNumber'),
        sessionProgress: api.registry.createType('BlockNumber')
    }, info)));
}
function queryBabe(api) {
    return api.derive.session.info().pipe((0, rxjs_1.switchMap)((info) => (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(info),
        // we may have no staking, but have babe (permissioned)
        api.query.staking?.erasStartSessionIndex
            ? api.queryMulti([
                api.query.babe.currentSlot,
                api.query.babe.epochIndex,
                api.query.babe.genesisSlot,
                [api.query.staking.erasStartSessionIndex, info.activeEra]
            ])
            : api.queryMulti([
                api.query.babe.currentSlot,
                api.query.babe.epochIndex,
                api.query.babe.genesisSlot
            ])
    ])), (0, rxjs_1.map)(([info, [currentSlot, epochIndex, genesisSlot, optStartIndex]]) => [
        info, [currentSlot, epochIndex, genesisSlot, optStartIndex && optStartIndex.isSome ? optStartIndex.unwrap() : api.registry.createType('SessionIndex', 1)]
    ]));
}
/**
 * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras
 */
function progress(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.babe
        ? queryBabe(api).pipe((0, rxjs_1.map)(([info, slots]) => createDerive(api, info, slots)))
        : queryAura(api));
}
exports.progress = progress;
exports.eraLength = withProgressField('eraLength');
exports.eraProgress = withProgressField('eraProgress');
exports.sessionProgress = withProgressField('sessionProgress');


/***/ }),

/***/ 14445:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.candidates = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function getPrev(api) {
    return api.query.society.candidates().pipe((0, rxjs_1.switchMap)((candidates) => (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(candidates),
        api.query.society['suspendedCandidates'].multi(candidates.map(({ who }) => who))
    ])), (0, rxjs_1.map)(([candidates, suspended]) => candidates.map(({ kind, value, who }, index) => ({
        accountId: who,
        isSuspended: suspended[index].isSome,
        kind,
        value
    }))));
}
function getCurr(api) {
    return api.query.society.candidates.entries().pipe((0, rxjs_1.map)((entries) => entries
        .filter(([, opt]) => opt.isSome)
        .map(([{ args: [accountId] }, opt]) => [accountId, opt.unwrap()])
        // FIXME We are missing the new fields from the candidate record
        .map(([accountId, { bid, kind }]) => ({
        accountId,
        isSuspended: false,
        kind,
        value: bid
    }))));
}
/**
 * @description Get the candidate info for a society
 */
function candidates(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.society['suspendedCandidates'] && api.query.society.candidates.creator.meta.type.isPlain
        ? getPrev(api)
        : getCurr(api));
}
exports.candidates = candidates;


/***/ }),

/***/ 25960:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(14445), exports);
tslib_1.__exportStar(__nccwpck_require__(54889), exports);
tslib_1.__exportStar(__nccwpck_require__(86119), exports);
tslib_1.__exportStar(__nccwpck_require__(66244), exports);


/***/ }),

/***/ 54889:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.info = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @description Get the overall info for a society
 */
function info(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => (0, rxjs_1.combineLatest)([
        api.query.society.bids(),
        api.query.society['defender']
            ? api.query.society['defender']()
            : (0, rxjs_1.of)(undefined),
        api.query.society.founder(),
        api.query.society.head(),
        api.query.society['maxMembers']
            ? api.query.society['maxMembers']()
            : (0, rxjs_1.of)(undefined),
        api.query.society.pot()
    ]).pipe((0, rxjs_1.map)(([bids, defender, founder, head, maxMembers, pot]) => ({
        bids,
        defender: defender?.unwrapOr(undefined),
        founder: founder.unwrapOr(undefined),
        hasDefender: (defender?.isSome && head.isSome && !head.eq(defender)) || false,
        head: head.unwrapOr(undefined),
        maxMembers,
        pot
    }))));
}
exports.info = info;


/***/ }),

/***/ 86119:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.member = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @description Get the member info for a society
 */
function member(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId) => api.derive.society._members([accountId]).pipe((0, rxjs_1.map)(([result]) => result)));
}
exports.member = member;


/***/ }),

/***/ 66244:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.members = exports._members = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function _membersPrev(api, accountIds) {
    return (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(accountIds),
        api.query.society.payouts.multi(accountIds),
        api.query.society['strikes'].multi(accountIds),
        api.query.society.defenderVotes.multi(accountIds),
        api.query.society.suspendedMembers.multi(accountIds),
        api.query.society['vouching'].multi(accountIds)
    ]).pipe((0, rxjs_1.map)(([accountIds, payouts, strikes, defenderVotes, suspended, vouching]) => accountIds.map((accountId, index) => ({
        accountId,
        isDefenderVoter: defenderVotes[index].isSome,
        isSuspended: suspended[index].isTrue,
        payouts: payouts[index],
        strikes: strikes[index],
        vote: defenderVotes[index].unwrapOr(undefined),
        vouching: vouching[index].unwrapOr(undefined)
    }))));
}
function _membersCurr(api, accountIds) {
    return (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(accountIds),
        api.query.society.members.multi(accountIds),
        api.query.society.payouts.multi(accountIds),
        api.query.society.defenderVotes.multi(accountIds),
        api.query.society.suspendedMembers.multi(accountIds)
    ]).pipe((0, rxjs_1.map)(([accountIds, members, payouts, defenderVotes, suspendedMembers]) => accountIds
        .map((accountId, index) => members[index].isSome
        ? {
            accountId,
            isDefenderVoter: defenderVotes[index].isSome
                ? defenderVotes[index].unwrap().approve.isTrue
                : false,
            isSuspended: suspendedMembers[index].isSome,
            member: members[index].unwrap(),
            payouts: payouts[index].payouts
        }
        : null)
        .filter((m) => !!m)
        .map(({ accountId, isDefenderVoter, isSuspended, member, payouts }) => ({
        accountId,
        isDefenderVoter,
        isSuspended,
        payouts,
        strikes: member.strikes,
        vouching: member.vouching.unwrapOr(undefined)
    }))));
}
function _members(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIds) => api.query.society.members.creator.meta.type.isMap
        ? _membersCurr(api, accountIds)
        : _membersPrev(api, accountIds));
}
exports._members = _members;
/**
 * @description Get the member info for a society
 */
function members(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.society.members.creator.meta.type.isMap
        ? api.query.society.members.keys().pipe((0, rxjs_1.switchMap)((keys) => api.derive.society._members(keys.map(({ args: [accountId] }) => accountId))))
        : api.query.society.members().pipe((0, rxjs_1.switchMap)((members) => api.derive.society._members(members))));
}
exports.members = members;


/***/ }),

/***/ 81018:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.account = exports.accounts = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const QUERY_OPTS = {
    withDestination: true,
    withLedger: true,
    withNominations: true,
    withPrefs: true
};
function groupByEra(list) {
    return list.reduce((map, { era, value }) => {
        const key = era.toString();
        map[key] = (map[key] || util_1.BN_ZERO).add(value.unwrap());
        return map;
    }, {});
}
function calculateUnlocking(api, stakingLedger, sessionInfo) {
    const results = Object
        .entries(groupByEra((stakingLedger?.unlocking || []).filter(({ era }) => era.unwrap().gt(sessionInfo.activeEra))))
        .map(([eraString, value]) => ({
        remainingEras: new util_1.BN(eraString).isub(sessionInfo.activeEra),
        value: api.registry.createType('Balance', value)
    }));
    return results.length
        ? results
        : undefined;
}
function redeemableSum(api, stakingLedger, sessionInfo) {
    return api.registry.createType('Balance', (stakingLedger?.unlocking || []).reduce((total, { era, value }) => {
        // aligns with https://github.com/paritytech/substrate/blob/fdfdc73f9e64dc47934b72eb9af3e1989e4ba699/frame/staking/src/pallet/mod.rs#L973-L975
        // (ensure currentEra >= era passed, as per https://github.com/paritytech/substrate/blob/fdfdc73f9e64dc47934b72eb9af3e1989e4ba699/frame/staking/src/lib.rs#L477-L494)
        // NOTE: Previously we used activeEra >= era, which is incorrect for the last session
        return era.unwrap().gt(sessionInfo.currentEra)
            ? total
            : total.iadd(value.unwrap());
    }, new util_1.BN(0)));
}
function parseResult(api, sessionInfo, keys, query) {
    return (0, util_1.objectSpread)({}, keys, query, {
        redeemable: redeemableSum(api, query.stakingLedger, sessionInfo),
        unlocking: calculateUnlocking(api, query.stakingLedger, sessionInfo)
    });
}
/**
 * @description From a list of stashes, fill in all the relevant staking details
 */
function accounts(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIds, opts = QUERY_OPTS) => api.derive.session.info().pipe((0, rxjs_1.switchMap)((sessionInfo) => (0, rxjs_1.combineLatest)([
        api.derive.staking.keysMulti(accountIds),
        api.derive.staking.queryMulti(accountIds, opts)
    ]).pipe((0, rxjs_1.map)(([keys, queries]) => queries.map((q, index) => parseResult(api, sessionInfo, keys[index], q)))))));
}
exports.accounts = accounts;
/**
 * @description From a stash, retrieve the controllerId and fill in all the relevant staking details
 */
exports.account = (0, index_js_1.firstMemo)((api, accountId, opts) => api.derive.staking.accounts([accountId], opts));


/***/ }),

/***/ 48752:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.filterCachedEras = exports.setEraMultiCache = exports.setEraCache = exports.getEraMultiCache = exports.getEraCache = void 0;
const index_js_1 = __nccwpck_require__(42358);
function getEraCache(CACHE_KEY, era, withActive) {
    const cacheKey = `${CACHE_KEY}-${era.toString()}`;
    return [
        cacheKey,
        withActive
            ? undefined
            : index_js_1.deriveCache.get(cacheKey)
    ];
}
exports.getEraCache = getEraCache;
function getEraMultiCache(CACHE_KEY, eras, withActive) {
    const cached = withActive
        ? []
        : eras
            .map((e) => index_js_1.deriveCache.get(`${CACHE_KEY}-${e.toString()}`))
            .filter((v) => !!v);
    return cached;
}
exports.getEraMultiCache = getEraMultiCache;
function setEraCache(cacheKey, withActive, value) {
    !withActive && index_js_1.deriveCache.set(cacheKey, value);
    return value;
}
exports.setEraCache = setEraCache;
function setEraMultiCache(CACHE_KEY, withActive, values) {
    !withActive && values.forEach((v) => index_js_1.deriveCache.set(`${CACHE_KEY}-${v.era.toString()}`, v));
    return values;
}
exports.setEraMultiCache = setEraMultiCache;
function filterCachedEras(eras, cached, query) {
    return eras
        .map((e) => cached.find(({ era }) => e.eq(era)) ||
        query.find(({ era }) => e.eq(era)))
        .filter((e) => !!e);
}
exports.filterCachedEras = filterCachedEras;


/***/ }),

/***/ 79439:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.currentPoints = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @description Retrieve the staking overview, including elected and points earned
 */
function currentPoints(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.derive.session.indexes().pipe((0, rxjs_1.switchMap)(({ activeEra }) => api.query.staking.erasRewardPoints(activeEra))));
}
exports.currentPoints = currentPoints;


/***/ }),

/***/ 33237:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.electedInfo = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const DEFAULT_FLAGS = { withController: true, withExposure: true, withPrefs: true };
function combineAccounts(nextElected, validators) {
    return (0, util_1.arrayFlatten)([nextElected, validators.filter((v) => !nextElected.find((n) => n.eq(v)))]);
}
function electedInfo(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (flags = DEFAULT_FLAGS) => api.derive.staking.validators().pipe((0, rxjs_1.switchMap)(({ nextElected, validators }) => api.derive.staking.queryMulti(combineAccounts(nextElected, validators), flags).pipe((0, rxjs_1.map)((info) => ({
        info,
        nextElected,
        validators
    }))))));
}
exports.electedInfo = electedInfo;


/***/ }),

/***/ 90875:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.erasExposure = exports._erasExposure = exports.eraExposure = exports._eraExposure = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const cache_js_1 = __nccwpck_require__(48752);
const util_js_1 = __nccwpck_require__(90126);
const CACHE_KEY = 'eraExposure';
function mapStakers(era, stakers) {
    const nominators = {};
    const validators = {};
    stakers.forEach(([key, exposure]) => {
        const validatorId = key.args[1].toString();
        validators[validatorId] = exposure;
        exposure.others.forEach(({ who }, validatorIndex) => {
            const nominatorId = who.toString();
            nominators[nominatorId] = nominators[nominatorId] || [];
            nominators[nominatorId].push({ validatorId, validatorIndex });
        });
    });
    return { era, nominators, validators };
}
function _eraExposure(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (era, withActive = false) => {
        const [cacheKey, cached] = (0, cache_js_1.getEraCache)(CACHE_KEY, era, withActive);
        return cached
            ? (0, rxjs_1.of)(cached)
            : api.query.staking.erasStakersClipped.entries(era).pipe((0, rxjs_1.map)((r) => (0, cache_js_1.setEraCache)(cacheKey, withActive, mapStakers(era, r))));
    });
}
exports._eraExposure = _eraExposure;
exports.eraExposure = (0, util_js_1.singleEra)('_eraExposure');
exports._erasExposure = (0, util_js_1.combineEras)('_eraExposure');
exports.erasExposure = (0, util_js_1.erasHistoricApply)('_erasExposure');


/***/ }),

/***/ 76868:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.erasHistoric = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function erasHistoric(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (withActive) => (0, rxjs_1.combineLatest)([
        api.query.staking.activeEra(),
        api.consts.staking.historyDepth
            ? (0, rxjs_1.of)(api.consts.staking.historyDepth)
            : api.query.staking['historyDepth']()
    ]).pipe((0, rxjs_1.map)(([activeEraOpt, historyDepth]) => {
        const result = [];
        const max = historyDepth.toNumber();
        const activeEra = activeEraOpt.unwrapOrDefault().index;
        let lastEra = activeEra;
        while (lastEra.gte(util_1.BN_ZERO) && (result.length < max)) {
            if ((lastEra !== activeEra) || (withActive === true)) {
                result.push(api.registry.createType('EraIndex', lastEra));
            }
            lastEra = lastEra.sub(util_1.BN_ONE);
        }
        // go from oldest to newest
        return result.reverse();
    })));
}
exports.erasHistoric = erasHistoric;


/***/ }),

/***/ 69053:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.erasPoints = exports._erasPoints = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const cache_js_1 = __nccwpck_require__(48752);
const util_js_1 = __nccwpck_require__(90126);
const CACHE_KEY = 'eraPoints';
function mapValidators({ individual }) {
    return [...individual.entries()]
        .filter(([, points]) => points.gt(util_1.BN_ZERO))
        .reduce((result, [validatorId, points]) => {
        result[validatorId.toString()] = points;
        return result;
    }, {});
}
function mapPoints(eras, points) {
    return eras.map((era, index) => ({
        era,
        eraPoints: points[index].total,
        validators: mapValidators(points[index])
    }));
}
function _erasPoints(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (eras, withActive) => {
        if (!eras.length) {
            return (0, rxjs_1.of)([]);
        }
        const cached = (0, cache_js_1.getEraMultiCache)(CACHE_KEY, eras, withActive);
        const remaining = (0, util_js_1.filterEras)(eras, cached);
        return !remaining.length
            ? (0, rxjs_1.of)(cached)
            : api.query.staking.erasRewardPoints.multi(remaining).pipe((0, rxjs_1.map)((p) => (0, cache_js_1.filterCachedEras)(eras, cached, (0, cache_js_1.setEraMultiCache)(CACHE_KEY, withActive, mapPoints(remaining, p)))));
    });
}
exports._erasPoints = _erasPoints;
exports.erasPoints = (0, util_js_1.erasHistoricApply)('_erasPoints');


/***/ }),

/***/ 33737:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.erasPrefs = exports._erasPrefs = exports.eraPrefs = exports._eraPrefs = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const cache_js_1 = __nccwpck_require__(48752);
const util_js_1 = __nccwpck_require__(90126);
const CACHE_KEY = 'eraPrefs';
function mapPrefs(era, all) {
    const validators = {};
    all.forEach(([key, prefs]) => {
        validators[key.args[1].toString()] = prefs;
    });
    return { era, validators };
}
function _eraPrefs(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (era, withActive) => {
        const [cacheKey, cached] = (0, cache_js_1.getEraCache)(CACHE_KEY, era, withActive);
        return cached
            ? (0, rxjs_1.of)(cached)
            : api.query.staking.erasValidatorPrefs.entries(era).pipe((0, rxjs_1.map)((r) => (0, cache_js_1.setEraCache)(cacheKey, withActive, mapPrefs(era, r))));
    });
}
exports._eraPrefs = _eraPrefs;
exports.eraPrefs = (0, util_js_1.singleEra)('_eraPrefs');
exports._erasPrefs = (0, util_js_1.combineEras)('_eraPrefs');
exports.erasPrefs = (0, util_js_1.erasHistoricApply)('_erasPrefs');


/***/ }),

/***/ 27252:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.erasRewards = exports._erasRewards = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const cache_js_1 = __nccwpck_require__(48752);
const util_js_1 = __nccwpck_require__(90126);
const CACHE_KEY = 'eraRewards';
function mapRewards(eras, optRewards) {
    return eras.map((era, index) => ({
        era,
        eraReward: optRewards[index].unwrapOrDefault()
    }));
}
function _erasRewards(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (eras, withActive) => {
        if (!eras.length) {
            return (0, rxjs_1.of)([]);
        }
        const cached = (0, cache_js_1.getEraMultiCache)(CACHE_KEY, eras, withActive);
        const remaining = (0, util_js_1.filterEras)(eras, cached);
        if (!remaining.length) {
            return (0, rxjs_1.of)(cached);
        }
        return api.query.staking.erasValidatorReward.multi(remaining).pipe((0, rxjs_1.map)((r) => (0, cache_js_1.filterCachedEras)(eras, cached, (0, cache_js_1.setEraMultiCache)(CACHE_KEY, withActive, mapRewards(remaining, r)))));
    });
}
exports._erasRewards = _erasRewards;
exports.erasRewards = (0, util_js_1.erasHistoricApply)('_erasRewards');


/***/ }),

/***/ 55591:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.erasSlashes = exports._erasSlashes = exports.eraSlashes = exports._eraSlashes = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const cache_js_1 = __nccwpck_require__(48752);
const util_js_1 = __nccwpck_require__(90126);
const CACHE_KEY = 'eraSlashes';
function mapSlashes(era, noms, vals) {
    const nominators = {};
    const validators = {};
    noms.forEach(([key, optBalance]) => {
        nominators[key.args[1].toString()] = optBalance.unwrap();
    });
    vals.forEach(([key, optRes]) => {
        validators[key.args[1].toString()] = optRes.unwrapOrDefault()[1];
    });
    return { era, nominators, validators };
}
function _eraSlashes(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (era, withActive) => {
        const [cacheKey, cached] = (0, cache_js_1.getEraCache)(CACHE_KEY, era, withActive);
        return cached
            ? (0, rxjs_1.of)(cached)
            : (0, rxjs_1.combineLatest)([
                api.query.staking.nominatorSlashInEra.entries(era),
                api.query.staking.validatorSlashInEra.entries(era)
            ]).pipe((0, rxjs_1.map)(([n, v]) => (0, cache_js_1.setEraCache)(cacheKey, withActive, mapSlashes(era, n, v))));
    });
}
exports._eraSlashes = _eraSlashes;
exports.eraSlashes = (0, util_js_1.singleEra)('_eraSlashes');
exports._erasSlashes = (0, util_js_1.combineEras)('_eraSlashes');
exports.erasSlashes = (0, util_js_1.erasHistoricApply)('_erasSlashes');


/***/ }),

/***/ 91742:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(81018), exports);
tslib_1.__exportStar(__nccwpck_require__(79439), exports);
tslib_1.__exportStar(__nccwpck_require__(33237), exports);
tslib_1.__exportStar(__nccwpck_require__(90875), exports);
tslib_1.__exportStar(__nccwpck_require__(76868), exports);
tslib_1.__exportStar(__nccwpck_require__(69053), exports);
tslib_1.__exportStar(__nccwpck_require__(33737), exports);
tslib_1.__exportStar(__nccwpck_require__(27252), exports);
tslib_1.__exportStar(__nccwpck_require__(55591), exports);
tslib_1.__exportStar(__nccwpck_require__(75486), exports);
tslib_1.__exportStar(__nccwpck_require__(59991), exports);
tslib_1.__exportStar(__nccwpck_require__(9612), exports);
tslib_1.__exportStar(__nccwpck_require__(5034), exports);
tslib_1.__exportStar(__nccwpck_require__(73263), exports);
tslib_1.__exportStar(__nccwpck_require__(68147), exports);
tslib_1.__exportStar(__nccwpck_require__(23673), exports);
tslib_1.__exportStar(__nccwpck_require__(58701), exports);
tslib_1.__exportStar(__nccwpck_require__(47735), exports);
tslib_1.__exportStar(__nccwpck_require__(84393), exports);
tslib_1.__exportStar(__nccwpck_require__(46250), exports);
tslib_1.__exportStar(__nccwpck_require__(78613), exports);
tslib_1.__exportStar(__nccwpck_require__(46601), exports);


/***/ }),

/***/ 75486:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keysMulti = exports.keys = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function extractsIds(stashId, queuedKeys, nextKeys) {
    const sessionIds = (queuedKeys.find(([currentId]) => currentId.eq(stashId)) || [undefined, []])[1];
    const nextSessionIds = nextKeys.unwrapOr([]);
    return {
        nextSessionIds: Array.isArray(nextSessionIds)
            ? nextSessionIds
            : [...nextSessionIds.values()],
        sessionIds: Array.isArray(sessionIds)
            ? sessionIds
            : [...sessionIds.values()]
    };
}
exports.keys = (0, index_js_1.firstMemo)((api, stashId) => api.derive.staking.keysMulti([stashId]));
function keysMulti(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (stashIds) => stashIds.length
        ? api.query.session.queuedKeys().pipe((0, rxjs_1.switchMap)((queuedKeys) => (0, rxjs_1.combineLatest)([
            (0, rxjs_1.of)(queuedKeys),
            api.consts['session']?.['dedupKeyPrefix']
                ? api.query.session.nextKeys.multi(stashIds.map((s) => [api.consts['session']['dedupKeyPrefix'], s]))
                : (0, rxjs_1.combineLatest)(stashIds.map((s) => api.query.session.nextKeys(s)))
        ])), (0, rxjs_1.map)(([queuedKeys, nextKeys]) => stashIds.map((stashId, index) => extractsIds(stashId, queuedKeys, nextKeys[index]))))
        : (0, rxjs_1.of)([]));
}
exports.keysMulti = keysMulti;


/***/ }),

/***/ 59991:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.overview = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
/**
 * @description Retrieve the staking overview, including elected and points earned
 */
function overview(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => (0, rxjs_1.combineLatest)([
        api.derive.session.indexes(),
        api.derive.staking.validators()
    ]).pipe((0, rxjs_1.map)(([indexes, { nextElected, validators }]) => (0, util_1.objectSpread)({}, indexes, {
        nextElected,
        validators
    }))));
}
exports.overview = overview;


/***/ }),

/***/ 9612:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ownExposures = exports.ownExposure = exports._ownExposures = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(90126);
function _ownExposures(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId, eras, _withActive) => eras.length
        ? (0, rxjs_1.combineLatest)([
            (0, rxjs_1.combineLatest)(eras.map((e) => api.query.staking.erasStakersClipped(e, accountId))),
            (0, rxjs_1.combineLatest)(eras.map((e) => api.query.staking.erasStakers(e, accountId)))
        ]).pipe((0, rxjs_1.map)(([clp, exp]) => eras.map((era, index) => ({ clipped: clp[index], era, exposure: exp[index] }))))
        : (0, rxjs_1.of)([]));
}
exports._ownExposures = _ownExposures;
exports.ownExposure = (0, index_js_1.firstMemo)((api, accountId, era) => api.derive.staking._ownExposures(accountId, [era], true));
exports.ownExposures = (0, util_js_1.erasHistoricApplyAccount)('_ownExposures');


/***/ }),

/***/ 5034:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ownSlashes = exports.ownSlash = exports._ownSlashes = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(90126);
function _ownSlashes(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId, eras, _withActive) => eras.length
        ? (0, rxjs_1.combineLatest)([
            (0, rxjs_1.combineLatest)(eras.map((e) => api.query.staking.validatorSlashInEra(e, accountId))),
            (0, rxjs_1.combineLatest)(eras.map((e) => api.query.staking.nominatorSlashInEra(e, accountId)))
        ]).pipe((0, rxjs_1.map)(([vals, noms]) => eras.map((era, index) => ({
            era,
            total: vals[index].isSome
                ? vals[index].unwrap()[1]
                : noms[index].unwrapOrDefault()
        }))))
        : (0, rxjs_1.of)([]));
}
exports._ownSlashes = _ownSlashes;
exports.ownSlash = (0, index_js_1.firstMemo)((api, accountId, era) => api.derive.staking._ownSlashes(accountId, [era], true));
exports.ownSlashes = (0, util_js_1.erasHistoricApplyAccount)('_ownSlashes');


/***/ }),

/***/ 73263:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.queryMulti = exports.query = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function parseDetails(stashId, controllerIdOpt, nominatorsOpt, rewardDestination, validatorPrefs, exposure, stakingLedgerOpt) {
    return {
        accountId: stashId,
        controllerId: controllerIdOpt?.unwrapOr(null) || null,
        exposure,
        nominators: nominatorsOpt.isSome
            ? nominatorsOpt.unwrap().targets
            : [],
        rewardDestination,
        stakingLedger: stakingLedgerOpt.unwrapOrDefault(),
        stashId,
        validatorPrefs
    };
}
function getLedgers(api, optIds, { withLedger = false }) {
    const ids = optIds
        .filter((o) => withLedger && !!o && o.isSome)
        .map((o) => o.unwrap());
    const emptyLed = api.registry.createType('Option<StakingLedger>');
    return (ids.length
        ? (0, rxjs_1.combineLatest)(ids.map((s) => api.query.staking.ledger(s)))
        : (0, rxjs_1.of)([])).pipe((0, rxjs_1.map)((optLedgers) => {
        let offset = -1;
        return optIds.map((o) => o && o.isSome
            ? optLedgers[++offset] || emptyLed
            : emptyLed);
    }));
}
function getStashInfo(api, stashIds, activeEra, { withController, withDestination, withExposure, withLedger, withNominations, withPrefs }) {
    const emptyNoms = api.registry.createType('Option<Nominations>');
    const emptyRewa = api.registry.createType('RewardDestination');
    const emptyExpo = api.registry.createType('Exposure');
    const emptyPrefs = api.registry.createType('ValidatorPrefs');
    return (0, rxjs_1.combineLatest)([
        withController || withLedger
            ? (0, rxjs_1.combineLatest)(stashIds.map((s) => api.query.staking.bonded(s)))
            : (0, rxjs_1.of)(stashIds.map(() => null)),
        withNominations
            ? (0, rxjs_1.combineLatest)(stashIds.map((s) => api.query.staking.nominators(s)))
            : (0, rxjs_1.of)(stashIds.map(() => emptyNoms)),
        withDestination
            ? (0, rxjs_1.combineLatest)(stashIds.map((s) => api.query.staking.payee(s)))
            : (0, rxjs_1.of)(stashIds.map(() => emptyRewa)),
        withPrefs
            ? (0, rxjs_1.combineLatest)(stashIds.map((s) => api.query.staking.validators(s)))
            : (0, rxjs_1.of)(stashIds.map(() => emptyPrefs)),
        withExposure
            ? (0, rxjs_1.combineLatest)(stashIds.map((s) => api.query.staking.erasStakers(activeEra, s)))
            : (0, rxjs_1.of)(stashIds.map(() => emptyExpo))
    ]);
}
function getBatch(api, activeEra, stashIds, flags) {
    return getStashInfo(api, stashIds, activeEra, flags).pipe((0, rxjs_1.switchMap)(([controllerIdOpt, nominatorsOpt, rewardDestination, validatorPrefs, exposure]) => getLedgers(api, controllerIdOpt, flags).pipe((0, rxjs_1.map)((stakingLedgerOpts) => stashIds.map((stashId, index) => parseDetails(stashId, controllerIdOpt[index], nominatorsOpt[index], rewardDestination[index], validatorPrefs[index], exposure[index], stakingLedgerOpts[index]))))));
}
/**
 * @description From a stash, retrieve the controllerId and all relevant details
 */
exports.query = (0, index_js_1.firstMemo)((api, accountId, flags) => api.derive.staking.queryMulti([accountId], flags));
function queryMulti(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIds, flags) => api.derive.session.indexes().pipe((0, rxjs_1.switchMap)(({ activeEra }) => {
        const stashIds = accountIds.map((a) => api.registry.createType('AccountId', a));
        return stashIds.length
            ? getBatch(api, activeEra, stashIds, flags)
            : (0, rxjs_1.of)([]);
    })));
}
exports.queryMulti = queryMulti;


/***/ }),

/***/ 68147:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stakerExposure = exports.stakerExposures = exports._stakerExposures = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function _stakerExposures(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIds, eras, withActive = false) => {
        const stakerIds = accountIds.map((a) => api.registry.createType('AccountId', a).toString());
        return api.derive.staking._erasExposure(eras, withActive).pipe((0, rxjs_1.map)((exposures) => stakerIds.map((stakerId) => exposures.map(({ era, nominators: allNominators, validators: allValidators }) => {
            const isValidator = !!allValidators[stakerId];
            const validators = {};
            const nominating = allNominators[stakerId] || [];
            if (isValidator) {
                validators[stakerId] = allValidators[stakerId];
            }
            else if (nominating) {
                nominating.forEach(({ validatorId }) => {
                    validators[validatorId] = allValidators[validatorId];
                });
            }
            return { era, isEmpty: !Object.keys(validators).length, isValidator, nominating, validators };
        }))));
    });
}
exports._stakerExposures = _stakerExposures;
function stakerExposures(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIds, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, rxjs_1.switchMap)((eras) => api.derive.staking._stakerExposures(accountIds, eras, withActive))));
}
exports.stakerExposures = stakerExposures;
exports.stakerExposure = (0, index_js_1.firstMemo)((api, accountId, withActive) => api.derive.staking.stakerExposures([accountId], withActive));


/***/ }),

/***/ 23673:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stakerPoints = exports._stakerPoints = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(90126);
function _stakerPoints(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId, eras, withActive) => {
        const stakerId = api.registry.createType('AccountId', accountId).toString();
        return api.derive.staking._erasPoints(eras, withActive).pipe((0, rxjs_1.map)((points) => points.map(({ era, eraPoints, validators }) => ({
            era,
            eraPoints,
            points: validators[stakerId] || api.registry.createType('RewardPoint')
        }))));
    });
}
exports._stakerPoints = _stakerPoints;
exports.stakerPoints = (0, util_js_1.erasHistoricApplyAccount)('_stakerPoints');


/***/ }),

/***/ 58701:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stakerPrefs = exports._stakerPrefs = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(90126);
function _stakerPrefs(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId, eras, _withActive) => api.query.staking.erasValidatorPrefs.multi(eras.map((e) => [e, accountId])).pipe((0, rxjs_1.map)((all) => all.map((validatorPrefs, index) => ({
        era: eras[index],
        validatorPrefs
    })))));
}
exports._stakerPrefs = _stakerPrefs;
exports.stakerPrefs = (0, util_js_1.erasHistoricApplyAccount)('_stakerPrefs');


/***/ }),

/***/ 47735:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stakerRewardsMulti = exports.stakerRewardsMultiEras = exports.stakerRewards = exports._stakerRewards = exports._stakerRewardsEras = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
function parseRewards(api, stashId, [erasPoints, erasPrefs, erasRewards], exposures) {
    return exposures.map(({ era, isEmpty, isValidator, nominating, validators: eraValidators }) => {
        const { eraPoints, validators: allValPoints } = erasPoints.find((p) => p.era.eq(era)) || { eraPoints: util_1.BN_ZERO, validators: {} };
        const { eraReward } = erasRewards.find((r) => r.era.eq(era)) || { eraReward: api.registry.createType('Balance') };
        const { validators: allValPrefs } = erasPrefs.find((p) => p.era.eq(era)) || { validators: {} };
        const validators = {};
        const stakerId = stashId.toString();
        Object.entries(eraValidators).forEach(([validatorId, exposure]) => {
            const valPoints = allValPoints[validatorId] || util_1.BN_ZERO;
            const valComm = allValPrefs[validatorId]?.commission.unwrap() || util_1.BN_ZERO;
            const expTotal = exposure.total?.unwrap() || util_1.BN_ZERO;
            let avail = util_1.BN_ZERO;
            let value;
            if (!(expTotal.isZero() || valPoints.isZero() || eraPoints.isZero())) {
                avail = eraReward.mul(valPoints).div(eraPoints);
                const valCut = valComm.mul(avail).div(util_1.BN_BILLION);
                let staked;
                if (validatorId === stakerId) {
                    staked = exposure.own.unwrap();
                }
                else {
                    const stakerExp = exposure.others.find(({ who }) => who.eq(stakerId));
                    staked = stakerExp
                        ? stakerExp.value.unwrap()
                        : util_1.BN_ZERO;
                }
                value = avail.sub(valCut).imul(staked).div(expTotal).iadd(validatorId === stakerId ? valCut : util_1.BN_ZERO);
            }
            validators[validatorId] = {
                total: api.registry.createType('Balance', avail),
                value: api.registry.createType('Balance', value)
            };
        });
        return {
            era,
            eraReward,
            isEmpty,
            isValidator,
            nominating,
            validators
        };
    });
}
function allUniqValidators(rewards) {
    return rewards.reduce(([all, perStash], rewards) => {
        const uniq = [];
        perStash.push(uniq);
        rewards.forEach(({ validators }) => Object.keys(validators).forEach((validatorId) => {
            if (!uniq.includes(validatorId)) {
                uniq.push(validatorId);
                if (!all.includes(validatorId)) {
                    all.push(validatorId);
                }
            }
        }));
        return [all, perStash];
    }, [[], []]);
}
function removeClaimed(validators, queryValidators, reward) {
    const rm = [];
    Object.keys(reward.validators).forEach((validatorId) => {
        const index = validators.indexOf(validatorId);
        if (index !== -1) {
            const valLedger = queryValidators[index].stakingLedger;
            if (valLedger?.claimedRewards.some((e) => reward.era.eq(e))) {
                rm.push(validatorId);
            }
        }
    });
    rm.forEach((validatorId) => {
        delete reward.validators[validatorId];
    });
}
function filterRewards(eras, valInfo, { rewards, stakingLedger }) {
    const filter = eras.filter((e) => !stakingLedger.claimedRewards.some((s) => s.eq(e)));
    const validators = valInfo.map(([v]) => v);
    const queryValidators = valInfo.map(([, q]) => q);
    return rewards
        .filter(({ isEmpty }) => !isEmpty)
        .filter((reward) => {
        if (!filter.some((e) => reward.era.eq(e))) {
            return false;
        }
        removeClaimed(validators, queryValidators, reward);
        return true;
    })
        .filter(({ validators }) => Object.keys(validators).length !== 0)
        .map((reward) => (0, util_1.objectSpread)({}, reward, {
        nominators: reward.nominating.filter((n) => reward.validators[n.validatorId])
    }));
}
function _stakerRewardsEras(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (eras, withActive = false) => (0, rxjs_1.combineLatest)([
        api.derive.staking._erasPoints(eras, withActive),
        api.derive.staking._erasPrefs(eras, withActive),
        api.derive.staking._erasRewards(eras, withActive)
    ]));
}
exports._stakerRewardsEras = _stakerRewardsEras;
function _stakerRewards(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIds, eras, withActive = false) => (0, rxjs_1.combineLatest)([
        api.derive.staking.queryMulti(accountIds, { withLedger: true }),
        api.derive.staking._stakerExposures(accountIds, eras, withActive),
        api.derive.staking._stakerRewardsEras(eras, withActive)
    ]).pipe((0, rxjs_1.switchMap)(([queries, exposures, erasResult]) => {
        const allRewards = queries.map(({ stakingLedger, stashId }, index) => (!stashId || !stakingLedger)
            ? []
            : parseRewards(api, stashId, erasResult, exposures[index]));
        if (withActive) {
            return (0, rxjs_1.of)(allRewards);
        }
        const [allValidators, stashValidators] = allUniqValidators(allRewards);
        return api.derive.staking.queryMulti(allValidators, { withLedger: true }).pipe((0, rxjs_1.map)((queriedVals) => queries.map(({ stakingLedger }, index) => filterRewards(eras, stashValidators[index]
            .map((validatorId) => [
            validatorId,
            queriedVals.find((q) => q.accountId.eq(validatorId))
        ])
            .filter((v) => !!v[1]), {
            rewards: allRewards[index],
            stakingLedger
        }))));
    })));
}
exports._stakerRewards = _stakerRewards;
exports.stakerRewards = (0, index_js_1.firstMemo)((api, accountId, withActive) => api.derive.staking.erasHistoric(withActive).pipe((0, rxjs_1.switchMap)((eras) => api.derive.staking._stakerRewards([accountId], eras, withActive))));
function stakerRewardsMultiEras(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIds, eras) => accountIds.length && eras.length
        ? api.derive.staking._stakerRewards(accountIds, eras, false)
        : (0, rxjs_1.of)([]));
}
exports.stakerRewardsMultiEras = stakerRewardsMultiEras;
function stakerRewardsMulti(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountIds, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, rxjs_1.switchMap)((eras) => api.derive.staking.stakerRewardsMultiEras(accountIds, eras))));
}
exports.stakerRewardsMulti = stakerRewardsMulti;


/***/ }),

/***/ 84393:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stakerSlashes = exports._stakerSlashes = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const util_js_1 = __nccwpck_require__(90126);
function _stakerSlashes(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (accountId, eras, withActive) => {
        const stakerId = api.registry.createType('AccountId', accountId).toString();
        return api.derive.staking._erasSlashes(eras, withActive).pipe((0, rxjs_1.map)((slashes) => slashes.map(({ era, nominators, validators }) => ({
            era,
            total: nominators[stakerId] || validators[stakerId] || api.registry.createType('Balance')
        }))));
    });
}
exports._stakerSlashes = _stakerSlashes;
exports.stakerSlashes = (0, util_js_1.erasHistoricApplyAccount)('_stakerSlashes');


/***/ }),

/***/ 46250:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stashes = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function onBondedEvent(api) {
    let current = Date.now();
    return api.query.system.events().pipe((0, rxjs_1.map)((events) => {
        current = events.filter(({ event, phase }) => {
            try {
                return phase.isApplyExtrinsic &&
                    event.section === 'staking' &&
                    event.method === 'Bonded';
            }
            catch {
                return false;
            }
        })
            ? Date.now()
            : current;
        return current;
    }), (0, rxjs_1.startWith)(current), (0, index_js_1.drr)({ skipTimeout: true }));
}
/**
 * @description Retrieve the list of all validator stashes
 */
function stashes(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => onBondedEvent(api).pipe((0, rxjs_1.switchMap)(() => api.query.staking.validators.keys()), (0, rxjs_1.map)((keys) => keys.map(({ args: [v] }) => v).filter((a) => a))));
}
exports.stashes = stashes;


/***/ }),

/***/ 90126:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.combineEras = exports.singleEra = exports.erasHistoricApplyAccount = exports.erasHistoricApply = exports.filterEras = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const ERA_CHUNK_SIZE = 14;
function chunkEras(eras, fn) {
    const chunked = (0, util_1.arrayChunk)(eras, ERA_CHUNK_SIZE);
    let index = 0;
    const subject = new rxjs_1.BehaviorSubject(chunked[index]);
    return subject.pipe((0, rxjs_1.switchMap)(fn), (0, rxjs_1.tap)(() => {
        (0, util_1.nextTick)(() => {
            index++;
            index === chunked.length
                ? subject.complete()
                : subject.next(chunked[index]);
        });
    }), (0, rxjs_1.toArray)(), (0, rxjs_1.map)(util_1.arrayFlatten));
}
function filterEras(eras, list) {
    return eras.filter((e) => !list.some(({ era }) => e.eq(era)));
}
exports.filterEras = filterEras;
function erasHistoricApply(fn) {
    return (instanceId, api) => 
    // Cannot quite get the typing right, but it is right in the code
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    (0, index_js_1.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, rxjs_1.switchMap)((e) => api.derive.staking[fn](e, withActive))));
}
exports.erasHistoricApply = erasHistoricApply;
function erasHistoricApplyAccount(fn) {
    return (instanceId, api) => 
    // Cannot quite get the typing right, but it is right in the code
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    (0, index_js_1.memo)(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, rxjs_1.switchMap)((e) => api.derive.staking[fn](accountId, e, withActive))));
}
exports.erasHistoricApplyAccount = erasHistoricApplyAccount;
function singleEra(fn) {
    return (instanceId, api) => 
    // Cannot quite get the typing right, but it is right in the code
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    (0, index_js_1.memo)(instanceId, (era) => api.derive.staking[fn](era, true));
}
exports.singleEra = singleEra;
function combineEras(fn) {
    return (instanceId, api) => 
    // Cannot quite get the typing right, but it is right in the code
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    (0, index_js_1.memo)(instanceId, (eras, withActive) => !eras.length
        ? (0, rxjs_1.of)([])
        : chunkEras(eras, (eras) => (0, rxjs_1.combineLatest)(eras.map((e) => api.derive.staking[fn](e, withActive)))));
}
exports.combineEras = combineEras;


/***/ }),

/***/ 78613:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.validators = exports.nextElected = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function nextElected(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.staking.erasStakers
        ? api.derive.session.indexes().pipe(
        // only populate for next era in the last session, so track both here - entries are not
        // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh
        (0, rxjs_1.switchMap)(({ currentEra }) => api.query.staking.erasStakers.keys(currentEra)), (0, rxjs_1.map)((keys) => keys.map(({ args: [, accountId] }) => accountId)))
        : api.query.staking['currentElected']());
}
exports.nextElected = nextElected;
/**
 * @description Retrieve latest list of validators
 */
function validators(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => 
    // Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works
    // in all actual real-world deployed chains, it does create some confusion for limited template chains
    (0, rxjs_1.combineLatest)([
        api.query.session
            ? api.query.session.validators()
            : (0, rxjs_1.of)([]),
        api.query.staking
            ? api.derive.staking.nextElected()
            : (0, rxjs_1.of)([])
    ]).pipe((0, rxjs_1.map)(([validators, nextElected]) => ({
        nextElected: nextElected.length
            ? nextElected
            : validators,
        validators
    }))));
}
exports.validators = validators;


/***/ }),

/***/ 46601:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.waitingInfo = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
const DEFAULT_FLAGS = { withController: true, withPrefs: true };
function waitingInfo(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (flags = DEFAULT_FLAGS) => (0, rxjs_1.combineLatest)([
        api.derive.staking.validators(),
        api.derive.staking.stashes()
    ]).pipe((0, rxjs_1.switchMap)(([{ nextElected }, stashes]) => {
        const elected = nextElected.map((a) => a.toString());
        const waiting = stashes.filter((v) => !elected.includes(v.toString()));
        return api.derive.staking.queryMulti(waiting, flags).pipe((0, rxjs_1.map)((info) => ({
            info,
            waiting
        })));
    })));
}
exports.waitingInfo = waitingInfo;


/***/ }),

/***/ 11189:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prime = exports.proposals = exports.proposalHashes = exports.proposalCount = exports.proposal = exports.hasProposals = exports.members = void 0;
const index_js_1 = __nccwpck_require__(3818);
exports.members = (0, index_js_1.members)('technicalCommittee');
exports.hasProposals = (0, index_js_1.hasProposals)('technicalCommittee');
exports.proposal = (0, index_js_1.proposal)('technicalCommittee');
exports.proposalCount = (0, index_js_1.proposalCount)('technicalCommittee');
exports.proposalHashes = (0, index_js_1.proposalHashes)('technicalCommittee');
exports.proposals = (0, index_js_1.proposals)('technicalCommittee');
exports.prime = (0, index_js_1.prime)('technicalCommittee');


/***/ }),

/***/ 78512:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(9536), exports);


/***/ }),

/***/ 9536:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.proposals = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function parseResult(api, { allIds, allProposals, approvalIds, councilProposals, proposalCount }) {
    const approvals = [];
    const proposals = [];
    const councilTreasury = councilProposals.filter(({ proposal }) => proposal && (api.tx.treasury.approveProposal.is(proposal) ||
        api.tx.treasury.rejectProposal.is(proposal)));
    allIds.forEach((id, index) => {
        if (allProposals[index].isSome) {
            const council = councilTreasury
                .filter(({ proposal }) => proposal && id.eq(proposal.args[0]))
                .sort((a, b) => a.proposal && b.proposal
                ? a.proposal.method.localeCompare(b.proposal.method)
                : a.proposal
                    ? -1
                    : 1);
            const isApproval = approvalIds.some((approvalId) => approvalId.eq(id));
            const derived = { council, id, proposal: allProposals[index].unwrap() };
            if (isApproval) {
                approvals.push(derived);
            }
            else {
                proposals.push(derived);
            }
        }
    });
    return { approvals, proposalCount, proposals };
}
function retrieveProposals(api, proposalCount, approvalIds) {
    const proposalIds = [];
    const count = proposalCount.toNumber();
    for (let index = 0; index < count; index++) {
        if (!approvalIds.some((id) => id.eqn(index))) {
            proposalIds.push(api.registry.createType('ProposalIndex', index));
        }
    }
    const allIds = [...proposalIds, ...approvalIds];
    return (0, rxjs_1.combineLatest)([
        api.query.treasury.proposals.multi(allIds),
        api.derive.council
            ? api.derive.council.proposals()
            : (0, rxjs_1.of)([])
    ]).pipe((0, rxjs_1.map)(([allProposals, councilProposals]) => parseResult(api, { allIds, allProposals, approvalIds, councilProposals, proposalCount })));
}
/**
 * @description Retrieve all active and approved treasury proposals, along with their info
 */
function proposals(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, () => api.query.treasury
        ? (0, rxjs_1.combineLatest)([
            api.query.treasury.proposalCount(),
            api.query.treasury.approvals()
        ]).pipe((0, rxjs_1.switchMap)(([proposalCount, approvalIds]) => retrieveProposals(api, proposalCount, approvalIds)))
        : (0, rxjs_1.of)({
            approvals: [],
            proposalCount: api.registry.createType('ProposalIndex'),
            proposals: []
        }));
}
exports.proposals = proposals;


/***/ }),

/***/ 36301:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MORTAL_PERIOD = exports.MAX_FINALITY_LAG = exports.FALLBACK_PERIOD = exports.FALLBACK_MAX_HASH_COUNT = void 0;
const util_1 = __nccwpck_require__(29795);
exports.FALLBACK_MAX_HASH_COUNT = 250;
exports.FALLBACK_PERIOD = new util_1.BN(6 * 1000);
exports.MAX_FINALITY_LAG = new util_1.BN(5);
exports.MORTAL_PERIOD = new util_1.BN(5 * 60 * 1000);


/***/ }),

/***/ 86539:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.events = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const index_js_1 = __nccwpck_require__(42358);
function events(instanceId, api) {
    return (0, index_js_1.memo)(instanceId, (blockHash) => (0, rxjs_1.combineLatest)([
        api.rpc.chain.getBlock(blockHash),
        api.queryAt(blockHash).pipe((0, rxjs_1.switchMap)((queryAt) => queryAt.system.events()))
    ]).pipe((0, rxjs_1.map)(([block, events]) => ({ block, events }))));
}
exports.events = events;


/***/ }),

/***/ 24330:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(32305);
tslib_1.__exportStar(__nccwpck_require__(86539), exports);
tslib_1.__exportStar(__nccwpck_require__(55496), exports);


/***/ }),

/***/ 55496:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.signingInfo = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(42358);
const constants_js_1 = __nccwpck_require__(36301);
function latestNonce(api, address) {
    return api.derive.balances.account(address).pipe((0, rxjs_1.map)(({ accountNonce }) => accountNonce));
}
function nextNonce(api, address) {
    return api.rpc.system?.accountNextIndex
        ? api.rpc.system.accountNextIndex(address)
        : latestNonce(api, address);
}
function signingHeader(api) {
    return (0, rxjs_1.combineLatest)([
        api.rpc.chain.getHeader().pipe((0, rxjs_1.switchMap)((header) => 
        // check for chains at genesis (until block 1 is produced, e.g. 6s), since
        // we do need to allow transactions at chain start (also dev/seal chains)
        header.parentHash.isEmpty
            ? (0, rxjs_1.of)(header)
            // in the case of the current block, we use the parent to minimize the
            // impact of forks on the system, but not completely remove it
            : api.rpc.chain.getHeader(header.parentHash).pipe((0, rxjs_1.catchError)(() => (0, rxjs_1.of)(header))))),
        api.rpc.chain.getFinalizedHead().pipe((0, rxjs_1.switchMap)((hash) => api.rpc.chain.getHeader(hash).pipe((0, rxjs_1.catchError)(() => (0, rxjs_1.of)(null)))))
    ]).pipe((0, rxjs_1.map)(([current, finalized]) => 
    // determine the hash to use, current when lag > max, else finalized
    !finalized || (0, index_js_1.unwrapBlockNumber)(current).sub((0, index_js_1.unwrapBlockNumber)(finalized)).gt(constants_js_1.MAX_FINALITY_LAG)
        ? current
        : finalized));
}
function signingInfo(_instanceId, api) {
    // no memo, we want to do this fresh on each run
    return (address, nonce, era) => (0, rxjs_1.combineLatest)([
        // retrieve nonce if none was specified
        (0, util_1.isUndefined)(nonce)
            ? latestNonce(api, address)
            : nonce === -1
                ? nextNonce(api, address)
                : (0, rxjs_1.of)(api.registry.createType('Index', nonce)),
        // if no era (create) or era > 0 (mortal), do block retrieval
        ((0, util_1.isUndefined)(era) || ((0, util_1.isNumber)(era) && era > 0))
            ? signingHeader(api)
            : (0, rxjs_1.of)(null)
    ]).pipe((0, rxjs_1.map)(([nonce, header]) => ({
        header,
        mortalLength: Math.min(api.consts.system?.blockHashCount?.toNumber() || constants_js_1.FALLBACK_MAX_HASH_COUNT, constants_js_1.MORTAL_PERIOD
            .div(api.consts.babe?.expectedBlockTime ||
            api.consts.timestamp?.minimumPeriod.muln(2) ||
            constants_js_1.FALLBACK_PERIOD)
            .iadd(constants_js_1.MAX_FINALITY_LAG)
            .toNumber()),
        nonce
    })));
}
exports.signingInfo = signingInfo;


/***/ }),

/***/ 56947:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createHeaderExtended = void 0;
const util_js_1 = __nccwpck_require__(61802);
function createHeaderExtended(registry, header, validators, author) {
    // an instance of the base extrinsic for us to extend
    const HeaderBase = registry.createClass('Header');
    class Implementation extends HeaderBase {
        constructor(registry, header, validators, author) {
            super(registry, header);
            this.__internal__author = author || (0, util_js_1.extractAuthor)(this.digest, validators || []);
            this.createdAtHash = header?.createdAtHash;
        }
        /**
         * @description Convenience method, returns the author for the block
         */
        get author() {
            return this.__internal__author;
        }
    }
    return new Implementation(registry, header, validators, author);
}
exports.createHeaderExtended = createHeaderExtended;


/***/ }),

/***/ 51464:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createSignedBlockExtended = void 0;
const util_js_1 = __nccwpck_require__(61802);
function mapExtrinsics(extrinsics, records) {
    return extrinsics.map((extrinsic, index) => {
        let dispatchError;
        let dispatchInfo;
        const events = records
            .filter(({ phase }) => phase.isApplyExtrinsic && phase.asApplyExtrinsic.eq(index))
            .map(({ event }) => {
            if (event.section === 'system') {
                if (event.method === 'ExtrinsicSuccess') {
                    dispatchInfo = event.data[0];
                }
                else if (event.method === 'ExtrinsicFailed') {
                    dispatchError = event.data[0];
                    dispatchInfo = event.data[1];
                }
            }
            return event;
        });
        return { dispatchError, dispatchInfo, events, extrinsic };
    });
}
function createSignedBlockExtended(registry, block, events, validators, author) {
    // an instance of the base extrinsic for us to extend
    const SignedBlockBase = registry.createClass('SignedBlock');
    class Implementation extends SignedBlockBase {
        constructor(registry, block, events, validators, author) {
            super(registry, block);
            this.__internal__author = author || (0, util_js_1.extractAuthor)(this.block.header.digest, validators || []);
            this.__internal__events = events || [];
            this.__internal__extrinsics = mapExtrinsics(this.block.extrinsics, this.__internal__events);
            this.createdAtHash = block?.createdAtHash;
        }
        /**
         * @description Convenience method, returns the author for the block
         */
        get author() {
            return this.__internal__author;
        }
        /**
         * @description Convenience method, returns the events associated with the block
         */
        get events() {
            return this.__internal__events;
        }
        /**
         * @description Returns the extrinsics and their events, mapped
         */
        get extrinsics() {
            return this.__internal__extrinsics;
        }
    }
    return new Implementation(registry, block, events, validators, author);
}
exports.createSignedBlockExtended = createSignedBlockExtended;


/***/ }),

/***/ 51920:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createSignedBlockExtended = exports.createHeaderExtended = void 0;
var HeaderExtended_js_1 = __nccwpck_require__(56947);
Object.defineProperty(exports, "createHeaderExtended", ({ enumerable: true, get: function () { return HeaderExtended_js_1.createHeaderExtended; } }));
var SignedBlockExtended_js_1 = __nccwpck_require__(51464);
Object.defineProperty(exports, "createSignedBlockExtended", ({ enumerable: true, get: function () { return SignedBlockExtended_js_1.createSignedBlockExtended; } }));


/***/ }),

/***/ 61802:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extractAuthor = void 0;
function extractAuthor(digest, sessionValidators) {
    const [citem] = digest.logs.filter((e) => e.isConsensus);
    const [pitem] = digest.logs.filter((e) => e.isPreRuntime);
    const [sitem] = digest.logs.filter((e) => e.isSeal);
    let accountId;
    try {
        // This is critical to be first for BABE (before Consensus)
        // If not first, we end up dropping the author at session-end
        if (pitem) {
            const [engine, data] = pitem.asPreRuntime;
            accountId = engine.extractAuthor(data, sessionValidators);
        }
        if (!accountId && citem) {
            const [engine, data] = citem.asConsensus;
            accountId = engine.extractAuthor(data, sessionValidators);
        }
        // SEAL, still used in e.g. Kulupu for pow
        if (!accountId && sitem) {
            const [engine, data] = sitem.asSeal;
            accountId = engine.extractAuthor(data, sessionValidators);
        }
    }
    catch {
        // ignore
    }
    return accountId;
}
exports.extractAuthor = extractAuthor;


/***/ }),

/***/ 13296:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.approvalFlagsToBools = void 0;
/** @internal */
function approvalFlagsToBools(flags) {
    const bools = [];
    for (let i = 0, count = flags.length; i < count; i++) {
        const str = flags[i].toString(2);
        // read from lowest bit to highest
        for (const bit of str.split('').reverse()) {
            bools.push(!!parseInt(bit, 10));
        }
    }
    // slice off trailing "false" values, as in substrate
    const lastApproval = bools.lastIndexOf(true);
    return lastApproval >= 0
        ? bools.slice(0, lastApproval + 1)
        : [];
}
exports.approvalFlagsToBools = approvalFlagsToBools;


/***/ }),

/***/ 60841:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.unwrapBlockNumber = void 0;
const util_1 = __nccwpck_require__(29795);
function unwrapBlockNumber(hdr) {
    return (0, util_1.isCompact)(hdr.number)
        ? hdr.number.unwrap()
        : hdr.number;
}
exports.unwrapBlockNumber = unwrapBlockNumber;


/***/ }),

/***/ 37823:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deriveCache = exports.setDeriveCache = void 0;
const cacheImpl_js_1 = __nccwpck_require__(83765);
const CHACHE_EXPIRY = 7 * (24 * 60) * (60 * 1000);
let deriveCache;
function wrapCache(keyStart, cache) {
    return {
        del: (partial) => cache.del(`${keyStart}${partial}`),
        forEach: cache.forEach,
        get: (partial) => {
            const key = `${keyStart}${partial}`;
            const cached = cache.get(key);
            if (cached) {
                cached.x = Date.now();
                cache.set(key, cached);
                return cached.v;
            }
            return undefined;
        },
        set: (partial, v) => {
            cache.set(`${keyStart}${partial}`, { v, x: Date.now() });
        }
    };
}
function clearCache(cache) {
    // clear all expired values
    const now = Date.now();
    const all = [];
    cache.forEach((key, { x }) => {
        ((now - x) > CHACHE_EXPIRY) && all.push(key);
    });
    // don't do delete inside loop, just in-case
    all.forEach((key) => cache.del(key));
}
function setDeriveCache(prefix = '', cache) {
    exports.deriveCache = deriveCache = cache
        ? wrapCache(`derive:${prefix}:`, cache)
        : cacheImpl_js_1.deriveNoopCache;
    if (cache) {
        clearCache(cache);
    }
}
exports.setDeriveCache = setDeriveCache;
setDeriveCache();


/***/ }),

/***/ 83765:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deriveNoopCache = exports.deriveMapCache = void 0;
const mapCache = new Map();
exports.deriveMapCache = {
    del: (key) => {
        mapCache.delete(key);
    },
    forEach: (cb) => {
        for (const [k, v] of mapCache.entries()) {
            cb(k, v);
        }
    },
    get: (key) => {
        return mapCache.get(key);
    },
    set: (key, value) => {
        mapCache.set(key, value);
    }
};
exports.deriveNoopCache = {
    del: () => undefined,
    forEach: () => undefined,
    get: () => undefined,
    set: (_, value) => value
};


/***/ }),

/***/ 87915:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.firstMemo = exports.firstObservable = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const rpc_core_1 = __nccwpck_require__(48377);
function firstObservable(obs) {
    return obs.pipe((0, rxjs_1.map)(([a]) => a));
}
exports.firstObservable = firstObservable;
function firstMemo(fn) {
    return (instanceId, api) => (0, rpc_core_1.memo)(instanceId, (...args) => firstObservable(fn(api, ...args)));
}
exports.firstMemo = firstMemo;


/***/ }),

/***/ 42358:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.memo = exports.drr = void 0;
const tslib_1 = __nccwpck_require__(32305);
var rpc_core_1 = __nccwpck_require__(48377);
Object.defineProperty(exports, "drr", ({ enumerable: true, get: function () { return rpc_core_1.drr; } }));
Object.defineProperty(exports, "memo", ({ enumerable: true, get: function () { return rpc_core_1.memo; } }));
tslib_1.__exportStar(__nccwpck_require__(13296), exports);
tslib_1.__exportStar(__nccwpck_require__(60841), exports);
tslib_1.__exportStar(__nccwpck_require__(37823), exports);
tslib_1.__exportStar(__nccwpck_require__(83765), exports);
tslib_1.__exportStar(__nccwpck_require__(87915), exports);
tslib_1.__exportStar(__nccwpck_require__(61590), exports);


/***/ }),

/***/ 61590:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lazyDeriveSection = void 0;
const util_1 = __nccwpck_require__(29795);
function lazyDeriveSection(result, section, getKeys, creator) {
    (0, util_1.lazyMethod)(result, section, () => (0, util_1.lazyMethods)({}, getKeys(section), (method) => creator(section, method)));
}
exports.lazyDeriveSection = lazyDeriveSection;


/***/ }),

/***/ 28902:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Decorate = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const api_derive_1 = __nccwpck_require__(17913);
const rpc_core_1 = __nccwpck_require__(48377);
const rpc_provider_1 = __nccwpck_require__(53278);
const types_1 = __nccwpck_require__(79405);
const types_known_1 = __nccwpck_require__(43909);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const index_js_1 = __nccwpck_require__(61766);
const augmentObject_js_1 = __nccwpck_require__(19378);
const decorate_js_1 = __nccwpck_require__(41805);
const validate_js_1 = __nccwpck_require__(52881);
const Events_js_1 = __nccwpck_require__(92406);
const find_js_1 = __nccwpck_require__(464);
const PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)
const PAGE_SIZE_V = 250; // limited since the data may be > 16MB (e.g. misfiring elections)
const PAGE_SIZE_Q = 50; // queue of pending storage queries (mapped together, next tick)
const l = (0, util_1.logger)('api/init');
let instanceCounter = 0;
function getAtQueryFn(api, { method, section }) {
    return (0, util_1.assertReturn)(api.rx.query[section] && api.rx.query[section][method], () => `query.${section}.${method} is not available in this version of the metadata`);
}
class Decorate extends Events_js_1.Events {
    /**
     * @description Create an instance of the class
     *
     * @param options Options object to create API instance or a Provider instance
     *
     * @example
     * <BR>
     *
     * ```javascript
     * import Api from '@polkadot/api/promise';
     *
     * const api = new Api().isReady();
     *
     * api.rpc.subscribeNewHeads((header) => {
     *   console.log(`new block #${header.number.toNumber()}`);
     * });
     * ```
     */
    constructor(options, type, decorateMethod) {
        super();
        this.__internal__runtimeLog = {};
        this.__internal__storageGetQ = [];
        this.__internal__storageSubQ = [];
        // HACK Use BN import so decorateDerive works... yes, wtf.
        this.__phantom = new util_1.BN(0);
        this._call = {};
        this._consts = {};
        this._errors = {};
        this._events = {};
        this._extrinsicType = types_1.GenericExtrinsic.LATEST_EXTRINSIC_VERSION;
        this._isReady = false;
        this._query = {};
        this._runtimeMap = {};
        this._rx = { call: {}, consts: {}, query: {}, tx: {} };
        /**
         * Put the `this.onCall` function of ApiRx here, because it is needed by
         * `api._rx`.
         */
        this._rxDecorateMethod = (method) => {
            return method;
        };
        this.__internal__instanceId = `${++instanceCounter}`;
        this.__internal__registry = options.source?.registry || options.registry || new types_1.TypeRegistry();
        this._rx.callAt = (blockHash, knownVersion) => (0, rxjs_1.from)(this.at(blockHash, knownVersion)).pipe((0, rxjs_1.map)((a) => a.rx.call));
        this._rx.queryAt = (blockHash, knownVersion) => (0, rxjs_1.from)(this.at(blockHash, knownVersion)).pipe((0, rxjs_1.map)((a) => a.rx.query));
        this._rx.registry = this.__internal__registry;
        this._decorateMethod = decorateMethod;
        this._options = options;
        this._type = type;
        const provider = options.source
            ? options.source._rpcCore.provider.isClonable
                ? options.source._rpcCore.provider.clone()
                : options.source._rpcCore.provider
            : (options.provider || new rpc_provider_1.WsProvider());
        // The RPC interface decorates the known interfaces on init
        this._rpcCore = new rpc_core_1.RpcCore(this.__internal__instanceId, this.__internal__registry, {
            isPedantic: this._options.isPedantic,
            provider,
            userRpc: this._options.rpc
        });
        this._isConnected = new rxjs_1.BehaviorSubject(this._rpcCore.provider.isConnected);
        this._rx.hasSubscriptions = this._rpcCore.provider.hasSubscriptions;
    }
    /**
     * @description Return the current used registry
     */
    get registry() {
        return this.__internal__registry;
    }
    /**
     * @description Creates an instance of a type as registered
     */
    createType(type, ...params) {
        return this.__internal__registry.createType(type, ...params);
    }
    /**
     * @description Register additional user-defined of chain-specific types in the type registry
     */
    registerTypes(types) {
        types && this.__internal__registry.register(types);
    }
    /**
     * @returns `true` if the API operates with subscriptions
     */
    get hasSubscriptions() {
        return this._rpcCore.provider.hasSubscriptions;
    }
    /**
     * @returns `true` if the API decorate multi-key queries
     */
    get supportMulti() {
        return this._rpcCore.provider.hasSubscriptions || !!this._rpcCore.state.queryStorageAt;
    }
    _emptyDecorated(registry, blockHash) {
        return {
            call: {},
            consts: {},
            errors: {},
            events: {},
            query: {},
            registry,
            rx: {
                call: {},
                query: {}
            },
            tx: (0, index_js_1.createSubmittable)(this._type, this._rx, this._decorateMethod, registry, blockHash)
        };
    }
    _createDecorated(registry, fromEmpty, decoratedApi, blockHash) {
        if (!decoratedApi) {
            decoratedApi = this._emptyDecorated(registry.registry, blockHash);
        }
        if (fromEmpty || !registry.decoratedMeta) {
            registry.decoratedMeta = (0, types_1.expandMetadata)(registry.registry, registry.metadata);
        }
        const runtime = this._decorateCalls(registry, this._decorateMethod, blockHash);
        const runtimeRx = this._decorateCalls(registry, this._rxDecorateMethod, blockHash);
        const storage = this._decorateStorage(registry.decoratedMeta, this._decorateMethod, blockHash);
        const storageRx = this._decorateStorage(registry.decoratedMeta, this._rxDecorateMethod, blockHash);
        (0, augmentObject_js_1.augmentObject)('consts', registry.decoratedMeta.consts, decoratedApi.consts, fromEmpty);
        (0, augmentObject_js_1.augmentObject)('errors', registry.decoratedMeta.errors, decoratedApi.errors, fromEmpty);
        (0, augmentObject_js_1.augmentObject)('events', registry.decoratedMeta.events, decoratedApi.events, fromEmpty);
        (0, augmentObject_js_1.augmentObject)('query', storage, decoratedApi.query, fromEmpty);
        (0, augmentObject_js_1.augmentObject)('query', storageRx, decoratedApi.rx.query, fromEmpty);
        (0, augmentObject_js_1.augmentObject)('call', runtime, decoratedApi.call, fromEmpty);
        (0, augmentObject_js_1.augmentObject)('call', runtimeRx, decoratedApi.rx.call, fromEmpty);
        decoratedApi.findCall = (callIndex) => (0, find_js_1.findCall)(registry.registry, callIndex);
        decoratedApi.findError = (errorIndex) => (0, find_js_1.findError)(registry.registry, errorIndex);
        decoratedApi.queryMulti = blockHash
            ? this._decorateMultiAt(decoratedApi, this._decorateMethod, blockHash)
            : this._decorateMulti(this._decorateMethod);
        decoratedApi.runtimeVersion = registry.runtimeVersion;
        return {
            createdAt: blockHash,
            decoratedApi,
            decoratedMeta: registry.decoratedMeta
        };
    }
    _injectMetadata(registry, fromEmpty = false) {
        // clear the decoration, we are redoing it here
        if (fromEmpty || !registry.decoratedApi) {
            registry.decoratedApi = this._emptyDecorated(registry.registry);
        }
        const { decoratedApi, decoratedMeta } = this._createDecorated(registry, fromEmpty, registry.decoratedApi);
        this._call = decoratedApi.call;
        this._consts = decoratedApi.consts;
        this._errors = decoratedApi.errors;
        this._events = decoratedApi.events;
        this._query = decoratedApi.query;
        this._rx.call = decoratedApi.rx.call;
        this._rx.query = decoratedApi.rx.query;
        const tx = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);
        const rxtx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);
        if (fromEmpty || !this._extrinsics) {
            this._extrinsics = tx;
            this._rx.tx = rxtx;
        }
        else {
            (0, augmentObject_js_1.augmentObject)('tx', tx, this._extrinsics, false);
            (0, augmentObject_js_1.augmentObject)(null, rxtx, this._rx.tx, false);
        }
        (0, augmentObject_js_1.augmentObject)(null, decoratedMeta.consts, this._rx.consts, fromEmpty);
        this.emit('decorated');
    }
    /**
     * @deprecated
     * backwards compatible endpoint for metadata injection, may be removed in the future (However, it is still useful for testing injection)
     */
    injectMetadata(metadata, fromEmpty, registry) {
        this._injectMetadata({ counter: 0, metadata, registry: registry || this.__internal__registry, runtimeVersion: this.__internal__registry.createType('RuntimeVersionPartial') }, fromEmpty);
    }
    _decorateFunctionMeta(input, output) {
        output.meta = input.meta;
        output.method = input.method;
        output.section = input.section;
        output.toJSON = input.toJSON;
        if (input.callIndex) {
            output.callIndex = input.callIndex;
        }
        return output;
    }
    // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following
    // manner to cater for both old and new:
    //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)
    //   - when non-zero, remove anything that is not in the array (we don't do this)
    _filterRpc(methods, additional) {
        // add any specific user-base RPCs
        if (Object.keys(additional).length !== 0) {
            this._rpcCore.addUserInterfaces(additional);
            // re-decorate, only adding any new additional interfaces
            this._decorateRpc(this._rpcCore, this._decorateMethod, this._rpc);
            this._decorateRpc(this._rpcCore, this._rxDecorateMethod, this._rx.rpc);
        }
        // extract the actual sections from the methods (this is useful when
        // we try and create mappings to runtime names via a hash mapping)
        const sectionMap = {};
        for (let i = 0, count = methods.length; i < count; i++) {
            const [section] = methods[i].split('_');
            sectionMap[section] = true;
        }
        // convert the actual section names into an easy name lookup
        const sections = Object.keys(sectionMap);
        for (let i = 0, count = sections.length; i < count; i++) {
            const nameA = (0, util_1.stringUpperFirst)(sections[i]);
            const nameB = `${nameA}Api`;
            this._runtimeMap[(0, util_crypto_1.blake2AsHex)(nameA, 64)] = nameA;
            this._runtimeMap[(0, util_crypto_1.blake2AsHex)(nameB, 64)] = nameB;
        }
        // finally we filter the actual methods to expose
        this._filterRpcMethods(methods);
    }
    _filterRpcMethods(exposed) {
        const hasResults = exposed.length !== 0;
        const allKnown = [...this._rpcCore.mapping.entries()];
        const allKeys = [];
        const count = allKnown.length;
        for (let i = 0; i < count; i++) {
            const [, { alias, endpoint, method, pubsub, section }] = allKnown[i];
            allKeys.push(`${section}_${method}`);
            if (pubsub) {
                allKeys.push(`${section}_${pubsub[1]}`);
                allKeys.push(`${section}_${pubsub[2]}`);
            }
            if (alias) {
                allKeys.push(...alias);
            }
            if (endpoint) {
                allKeys.push(endpoint);
            }
        }
        const unknown = exposed.filter((k) => !allKeys.includes(k) &&
            !k.includes('_unstable_'));
        if (unknown.length && !this._options.noInitWarn) {
            l.warn(`RPC methods not decorated: ${unknown.join(', ')}`);
        }
        // loop through all entries we have (populated in decorate) and filter as required
        // only remove when we have results and method missing, or with no results if optional
        for (let i = 0; i < count; i++) {
            const [k, { method, section }] = allKnown[i];
            if (hasResults && !exposed.includes(k) && k !== 'rpc_methods') {
                if (this._rpc[section]) {
                    delete this._rpc[section][method];
                    delete this._rx.rpc[section][method];
                }
            }
        }
    }
    _rpcSubmitter(decorateMethod) {
        const method = (method, ...params) => {
            return (0, rxjs_1.from)(this._rpcCore.provider.send(method, params));
        };
        return decorateMethod(method);
    }
    _decorateRpc(rpc, decorateMethod, input = this._rpcSubmitter(decorateMethod)) {
        const out = input;
        const decorateFn = (section, method) => {
            const source = rpc[section][method];
            const fn = decorateMethod(source, { methodName: method });
            fn.meta = source.meta;
            fn.raw = decorateMethod(source.raw, { methodName: method });
            return fn;
        };
        for (let s = 0, scount = rpc.sections.length; s < scount; s++) {
            const section = rpc.sections[s];
            if (!Object.prototype.hasOwnProperty.call(out, section)) {
                const methods = Object.keys(rpc[section]);
                const decorateInternal = (method) => decorateFn(section, method);
                for (let m = 0, mcount = methods.length; m < mcount; m++) {
                    const method = methods[m];
                    //  skip subscriptions where we have a non-subscribe interface
                    if (this.hasSubscriptions || !(method.startsWith('subscribe') || method.startsWith('unsubscribe'))) {
                        if (!Object.prototype.hasOwnProperty.call(out, section)) {
                            out[section] = {};
                        }
                        (0, util_1.lazyMethod)(out[section], method, decorateInternal);
                    }
                }
            }
        }
        return out;
    }
    // add all definition entries
    _addRuntimeDef(result, additional) {
        if (!additional) {
            return;
        }
        const entries = Object.entries(additional);
        for (let j = 0, ecount = entries.length; j < ecount; j++) {
            const [key, defs] = entries[j];
            if (result[key]) {
                // we have this one already, step through for new versions or
                // new methods and add those as applicable
                for (let k = 0, dcount = defs.length; k < dcount; k++) {
                    const def = defs[k];
                    const prev = result[key].find(({ version }) => def.version === version);
                    if (prev) {
                        // interleave the new methods with the old - last definition wins
                        (0, util_1.objectSpread)(prev.methods, def.methods);
                    }
                    else {
                        // we don't have this specific version, add it
                        result[key].push(def);
                    }
                }
            }
            else {
                // we don't have this runtime definition, add it as-is
                result[key] = defs;
            }
        }
    }
    // extract all runtime definitions
    _getRuntimeDefs(registry, specName, chain = '') {
        const result = {};
        const defValues = Object.values(types_1.typeDefinitions);
        // options > chain/spec > built-in, apply in reverse order with
        // methods overriding previous definitions (or interleave missing)
        for (let i = 0, count = defValues.length; i < count; i++) {
            this._addRuntimeDef(result, defValues[i].runtime);
        }
        this._addRuntimeDef(result, (0, types_known_1.getSpecRuntime)(registry, chain, specName));
        this._addRuntimeDef(result, this._options.runtime);
        return Object.entries(result);
    }
    // pre-metadata decoration
    _decorateCalls({ registry, runtimeVersion: { apis, specName, specVersion } }, decorateMethod, blockHash) {
        const result = {};
        const named = {};
        const hashes = {};
        const sections = this._getRuntimeDefs(registry, specName, this._runtimeChain);
        const older = [];
        const implName = `${specName.toString()}/${specVersion.toString()}`;
        const hasLogged = this.__internal__runtimeLog[implName] || false;
        this.__internal__runtimeLog[implName] = true;
        for (let i = 0, scount = sections.length; i < scount; i++) {
            const [_section, secs] = sections[i];
            const sectionHash = (0, util_crypto_1.blake2AsHex)(_section, 64);
            const rtApi = apis.find(([a]) => a.eq(sectionHash));
            hashes[sectionHash] = true;
            if (rtApi) {
                const all = secs.map(({ version }) => version).sort();
                const sec = secs.find(({ version }) => rtApi[1].eq(version));
                if (sec) {
                    const section = (0, util_1.stringCamelCase)(_section);
                    const methods = Object.entries(sec.methods);
                    if (methods.length) {
                        if (!named[section]) {
                            named[section] = {};
                        }
                        for (let m = 0, mcount = methods.length; m < mcount; m++) {
                            const [_method, def] = methods[m];
                            const method = (0, util_1.stringCamelCase)(_method);
                            named[section][method] = (0, util_1.objectSpread)({ method, name: `${_section}_${_method}`, section, sectionHash }, def);
                        }
                    }
                }
                else {
                    older.push(`${_section}/${rtApi[1].toString()} (${all.join('/')} known)`);
                }
            }
        }
        // find the runtimes that we don't have hashes for
        const notFound = apis
            .map(([a, v]) => [a.toHex(), v.toString()])
            .filter(([a]) => !hashes[a])
            .map(([a, v]) => `${this._runtimeMap[a] || a}/${v}`);
        if (!this._options.noInitWarn && !hasLogged) {
            if (older.length) {
                l.warn(`${implName}: Not decorating runtime apis without matching versions: ${older.join(', ')}`);
            }
            if (notFound.length) {
                l.warn(`${implName}: Not decorating unknown runtime apis: ${notFound.join(', ')}`);
            }
        }
        const stateCall = blockHash
            ? (name, bytes) => this._rpcCore.state.call(name, bytes, blockHash)
            : (name, bytes) => this._rpcCore.state.call(name, bytes);
        const lazySection = (section) => (0, util_1.lazyMethods)({}, Object.keys(named[section]), (method) => this._decorateCall(registry, named[section][method], stateCall, decorateMethod));
        const modules = Object.keys(named);
        for (let i = 0, count = modules.length; i < count; i++) {
            (0, util_1.lazyMethod)(result, modules[i], lazySection);
        }
        return result;
    }
    _decorateCall(registry, def, stateCall, decorateMethod) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        const decorated = decorateMethod((...args) => {
            if (args.length !== def.params.length) {
                throw new Error(`${def.name}:: Expected ${def.params.length} arguments, found ${args.length}`);
            }
            const bytes = registry.createType('Raw', (0, util_1.u8aConcatStrict)(args.map((a, i) => registry.createTypeUnsafe(def.params[i].type, [a]).toU8a())));
            return stateCall(def.name, bytes).pipe((0, rxjs_1.map)((r) => registry.createTypeUnsafe(def.type, [r])));
        });
        decorated.meta = def;
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return decorated;
    }
    // only be called if supportMulti is true
    _decorateMulti(decorateMethod) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return decorateMethod((keys) => keys.length
            ? (this.hasSubscriptions
                ? this._rpcCore.state.subscribeStorage
                : this._rpcCore.state.queryStorageAt)(keys.map((args) => Array.isArray(args)
                ? args[0].creator.meta.type.isPlain
                    ? [args[0].creator]
                    : args[0].creator.meta.type.asMap.hashers.length === 1
                        ? [args[0].creator, args.slice(1)]
                        : [args[0].creator, ...args.slice(1)]
                : [args.creator]))
            : (0, rxjs_1.of)([]));
    }
    _decorateMultiAt(atApi, decorateMethod, blockHash) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return decorateMethod((calls) => calls.length
            ? this._rpcCore.state.queryStorageAt(calls.map((args) => {
                if (Array.isArray(args)) {
                    const { creator } = getAtQueryFn(atApi, args[0].creator);
                    return creator.meta.type.isPlain
                        ? [creator]
                        : creator.meta.type.asMap.hashers.length === 1
                            ? [creator, args.slice(1)]
                            : [creator, ...args.slice(1)];
                }
                return [getAtQueryFn(atApi, args.creator).creator];
            }), blockHash)
            : (0, rxjs_1.of)([]));
    }
    _decorateExtrinsics({ tx }, decorateMethod) {
        const result = (0, index_js_1.createSubmittable)(this._type, this._rx, decorateMethod);
        const lazySection = (section) => (0, util_1.lazyMethods)({}, Object.keys(tx[section]), (method) => method.startsWith('$')
            ? tx[section][method]
            : this._decorateExtrinsicEntry(tx[section][method], result));
        const sections = Object.keys(tx);
        for (let i = 0, count = sections.length; i < count; i++) {
            (0, util_1.lazyMethod)(result, sections[i], lazySection);
        }
        return result;
    }
    _decorateExtrinsicEntry(method, creator) {
        const decorated = (...params) => creator(method(...params));
        // pass through the `.is`
        decorated.is = (other) => method.is(other);
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return this._decorateFunctionMeta(method, decorated);
    }
    _decorateStorage({ query, registry }, decorateMethod, blockHash) {
        const result = {};
        const lazySection = (section) => (0, util_1.lazyMethods)({}, Object.keys(query[section]), (method) => blockHash
            ? this._decorateStorageEntryAt(registry, query[section][method], decorateMethod, blockHash)
            : this._decorateStorageEntry(query[section][method], decorateMethod));
        const sections = Object.keys(query);
        for (let i = 0, count = sections.length; i < count; i++) {
            (0, util_1.lazyMethod)(result, sections[i], lazySection);
        }
        return result;
    }
    _decorateStorageEntry(creator, decorateMethod) {
        const getArgs = (args, registry) => (0, validate_js_1.extractStorageArgs)(registry || this.__internal__registry, creator, args);
        const getQueryAt = (blockHash) => (0, rxjs_1.from)(this.at(blockHash)).pipe((0, rxjs_1.map)((api) => getAtQueryFn(api, creator)));
        // Disable this where it occurs for each field we are decorating
        /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */
        const decorated = this._decorateStorageCall(creator, decorateMethod);
        decorated.creator = creator;
        // eslint-disable-next-line deprecation/deprecation
        decorated.at = decorateMethod((blockHash, ...args) => getQueryAt(blockHash).pipe((0, rxjs_1.switchMap)((q) => q(...args))));
        decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args)));
        decorated.is = (key) => key.section === creator.section &&
            key.method === creator.method;
        decorated.key = (...args) => (0, util_1.u8aToHex)((0, util_1.compactStripLength)(creator(...args))[1]);
        decorated.keyPrefix = (...args) => (0, util_1.u8aToHex)(creator.keyPrefix(...args));
        decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args)));
        // eslint-disable-next-line deprecation/deprecation
        decorated.sizeAt = decorateMethod((blockHash, ...args) => getQueryAt(blockHash).pipe((0, rxjs_1.switchMap)((q) => this._rpcCore.state.getStorageSize(getArgs(args, q.creator.meta.registry), blockHash))));
        // .keys() & .entries() only available on map types
        if (creator.iterKey && creator.meta.type.isMap) {
            decorated.entries = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (...args) => this._retrieveMapEntries(creator, null, args)));
            // eslint-disable-next-line deprecation/deprecation
            decorated.entriesAt = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (blockHash, ...args) => getQueryAt(blockHash).pipe((0, rxjs_1.switchMap)((q) => this._retrieveMapEntries(q.creator, blockHash, args)))));
            decorated.entriesPaged = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (opts) => this._retrieveMapEntriesPaged(creator, undefined, opts)));
            decorated.keys = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (...args) => this._retrieveMapKeys(creator, null, args)));
            // eslint-disable-next-line deprecation/deprecation
            decorated.keysAt = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (blockHash, ...args) => getQueryAt(blockHash).pipe((0, rxjs_1.switchMap)((q) => this._retrieveMapKeys(q.creator, blockHash, args)))));
            decorated.keysPaged = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (opts) => this._retrieveMapKeysPaged(creator, undefined, opts)));
        }
        if (this.supportMulti && creator.meta.type.isMap) {
            // When using double map storage function, user need to pass double map key as an array
            decorated.multi = decorateMethod((args) => creator.meta.type.asMap.hashers.length === 1
                ? this._retrieveMulti(args.map((a) => [creator, [a]]))
                : this._retrieveMulti(args.map((a) => [creator, a])));
        }
        /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */
        return this._decorateFunctionMeta(creator, decorated);
    }
    _decorateStorageEntryAt(registry, creator, decorateMethod, blockHash) {
        const getArgs = (args) => (0, validate_js_1.extractStorageArgs)(registry, creator, args);
        // Disable this where it occurs for each field we are decorating
        /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */
        const decorated = decorateMethod((...args) => this._rpcCore.state.getStorage(getArgs(args), blockHash));
        decorated.creator = creator;
        decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args), blockHash));
        decorated.is = (key) => key.section === creator.section &&
            key.method === creator.method;
        decorated.key = (...args) => (0, util_1.u8aToHex)((0, util_1.compactStripLength)(creator(...args))[1]);
        decorated.keyPrefix = (...keys) => (0, util_1.u8aToHex)(creator.keyPrefix(...keys));
        decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args), blockHash));
        // .keys() & .entries() only available on map types
        if (creator.iterKey && creator.meta.type.isMap) {
            decorated.entries = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (...args) => this._retrieveMapEntries(creator, blockHash, args)));
            decorated.entriesPaged = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (opts) => this._retrieveMapEntriesPaged(creator, blockHash, opts)));
            decorated.keys = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (...args) => this._retrieveMapKeys(creator, blockHash, args)));
            decorated.keysPaged = decorateMethod((0, rpc_core_1.memo)(this.__internal__instanceId, (opts) => this._retrieveMapKeysPaged(creator, blockHash, opts)));
        }
        if (this.supportMulti && creator.meta.type.isMap) {
            // When using double map storage function, user need to pass double map key as an array
            decorated.multi = decorateMethod((args) => creator.meta.type.asMap.hashers.length === 1
                ? this._retrieveMulti(args.map((a) => [creator, [a]]), blockHash)
                : this._retrieveMulti(args.map((a) => [creator, a]), blockHash));
        }
        /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */
        return this._decorateFunctionMeta(creator, decorated);
    }
    _queueStorage(call, queue) {
        const query = queue === this.__internal__storageSubQ
            ? this._rpcCore.state.subscribeStorage
            : this._rpcCore.state.queryStorageAt;
        let queueIdx = queue.length - 1;
        let valueIdx = 0;
        let valueObs;
        // if we don't have queue entries yet,
        // or the current queue has fired (see from below),
        // or the current queue has the max entries,
        // then we create a new queue
        if (queueIdx === -1 || !queue[queueIdx] || queue[queueIdx][1].length === PAGE_SIZE_Q) {
            queueIdx++;
            valueObs = (0, rxjs_1.from)(
            // we delay the execution until the next tick, this allows
            // any queries made in this timeframe to be added to the same
            // queue for a single query
            new Promise((resolve) => {
                (0, util_1.nextTick)(() => {
                    // get all the calls in this instance, resolve with it
                    // and then clear the queue so we don't add more
                    // (anything after this will be added to a new queue)
                    const calls = queue[queueIdx][1];
                    delete queue[queueIdx];
                    resolve(calls);
                });
            })).pipe((0, rxjs_1.switchMap)((calls) => query(calls)));
            queue.push([valueObs, [call]]);
        }
        else {
            valueObs = queue[queueIdx][0];
            valueIdx = queue[queueIdx][1].length;
            queue[queueIdx][1].push(call);
        }
        return valueObs.pipe(
        // return the single value at this index
        (0, rxjs_1.map)((values) => values[valueIdx]));
    }
    // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)
    // we make a subscription, alternatively we push this through a single-shot query
    _decorateStorageCall(creator, decorateMethod) {
        const memoed = (0, rpc_core_1.memo)(this.__internal__instanceId, (...args) => {
            const call = (0, validate_js_1.extractStorageArgs)(this.__internal__registry, creator, args);
            if (!this.hasSubscriptions) {
                return this._rpcCore.state.getStorage(call);
            }
            return this._queueStorage(call, this.__internal__storageSubQ);
        });
        return decorateMethod(memoed, {
            methodName: creator.method,
            overrideNoSub: (...args) => this._queueStorage((0, validate_js_1.extractStorageArgs)(this.__internal__registry, creator, args), this.__internal__storageGetQ)
        });
    }
    // retrieve a set of values for a specific set of keys - here we chunk the keys into PAGE_SIZE sizes
    _retrieveMulti(keys, blockHash) {
        if (!keys.length) {
            return (0, rxjs_1.of)([]);
        }
        const query = this.hasSubscriptions && !blockHash
            ? this._rpcCore.state.subscribeStorage
            : this._rpcCore.state.queryStorageAt;
        if (keys.length <= PAGE_SIZE_V) {
            return blockHash
                ? query(keys, blockHash)
                : query(keys);
        }
        return (0, rxjs_1.combineLatest)((0, util_1.arrayChunk)(keys, PAGE_SIZE_V).map((k) => blockHash
            ? query(k, blockHash)
            : query(k))).pipe((0, rxjs_1.map)(util_1.arrayFlatten));
    }
    _retrieveMapKeys({ iterKey, meta, method, section }, at, args) {
        if (!iterKey || !meta.type.isMap) {
            throw new Error('keys can only be retrieved on maps');
        }
        const headKey = iterKey(...args).toHex();
        const startSubject = new rxjs_1.BehaviorSubject(headKey);
        const query = at
            ? (startKey) => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey, at)
            : (startKey) => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey);
        const setMeta = (key) => key.setMeta(meta, section, method);
        return startSubject.pipe((0, rxjs_1.switchMap)(query), (0, rxjs_1.map)((keys) => keys.map(setMeta)), (0, rxjs_1.tap)((keys) => (0, util_1.nextTick)(() => {
            keys.length === PAGE_SIZE_K
                ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex())
                : startSubject.complete();
        })), (0, rxjs_1.toArray)(), // toArray since we want to startSubject to be completed
        (0, rxjs_1.map)(util_1.arrayFlatten));
    }
    _retrieveMapKeysPaged({ iterKey, meta, method, section }, at, opts) {
        if (!iterKey || !meta.type.isMap) {
            throw new Error('keys can only be retrieved on maps');
        }
        const setMeta = (key) => key.setMeta(meta, section, method);
        const query = at
            ? (headKey) => this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey, at)
            : (headKey) => this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey);
        return query(iterKey(...opts.args).toHex()).pipe((0, rxjs_1.map)((keys) => keys.map(setMeta)));
    }
    _retrieveMapEntries(entry, at, args) {
        const query = at
            ? (keys) => this._rpcCore.state.queryStorageAt(keys, at)
            : (keys) => this._rpcCore.state.queryStorageAt(keys);
        return this._retrieveMapKeys(entry, at, args).pipe((0, rxjs_1.switchMap)((keys) => keys.length
            ? (0, rxjs_1.combineLatest)((0, util_1.arrayChunk)(keys, PAGE_SIZE_V).map(query)).pipe((0, rxjs_1.map)((valsArr) => (0, util_1.arrayFlatten)(valsArr).map((value, index) => [keys[index], value])))
            : (0, rxjs_1.of)([])));
    }
    _retrieveMapEntriesPaged(entry, at, opts) {
        const query = at
            ? (keys) => this._rpcCore.state.queryStorageAt(keys, at)
            : (keys) => this._rpcCore.state.queryStorageAt(keys);
        return this._retrieveMapKeysPaged(entry, at, opts).pipe((0, rxjs_1.switchMap)((keys) => keys.length
            ? query(keys).pipe((0, rxjs_1.map)((valsArr) => valsArr.map((value, index) => [keys[index], value])))
            : (0, rxjs_1.of)([])));
    }
    _decorateDeriveRx(decorateMethod) {
        const specName = this._runtimeVersion?.specName.toString();
        // Pull in derive from api-derive
        const available = (0, api_derive_1.getAvailableDerives)(this.__internal__instanceId, this._rx, (0, util_1.objectSpread)({}, this._options.derives, this._options.typesBundle?.spec?.[specName || '']?.derives));
        return (0, decorate_js_1.decorateDeriveSections)(decorateMethod, available);
    }
    _decorateDerive(decorateMethod) {
        return (0, decorate_js_1.decorateDeriveSections)(decorateMethod, this._rx.derive);
    }
}
exports.Decorate = Decorate;


/***/ }),

/***/ 92406:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Events = void 0;
const eventemitter3_1 = __nccwpck_require__(11848);
class Events {
    constructor() {
        this.__internal__eventemitter = new eventemitter3_1.EventEmitter();
    }
    emit(type, ...args) {
        return this.__internal__eventemitter.emit(type, ...args);
    }
    /**
     * @description Attach an eventemitter handler to listen to a specific event
     *
     * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`
     * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.on('connected', (): void => {
     *   console.log('API has been connected to the endpoint');
     * });
     *
     * api.on('disconnected', (): void => {
     *   console.log('API has been disconnected from the endpoint');
     * });
     * ```
     */
    on(type, handler) {
        this.__internal__eventemitter.on(type, handler);
        return this;
    }
    /**
     * @description Remove the given eventemitter handler
     *
     * @param type The type of event the callback was attached to. Available events are `connected`, `disconnected`, `ready` and `error`
     * @param handler The callback to unregister.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * const handler = (): void => {
     *  console.log('Connected !);
     * };
     *
     * // Start listening
     * api.on('connected', handler);
     *
     * // Stop listening
     * api.off('connected', handler);
     * ```
     */
    off(type, handler) {
        this.__internal__eventemitter.removeListener(type, handler);
        return this;
    }
    /**
     * @description Attach an one-time eventemitter handler to listen to a specific event
     *
     * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`
     * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.once('connected', (): void => {
     *   console.log('API has been connected to the endpoint');
     * });
     *
     * api.once('disconnected', (): void => {
     *   console.log('API has been disconnected from the endpoint');
     * });
     * ```
     */
    once(type, handler) {
        this.__internal__eventemitter.once(type, handler);
        return this;
    }
}
exports.Events = Events;


/***/ }),

/***/ 94011:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Getters = void 0;
const packageInfo_js_1 = __nccwpck_require__(95973);
const find_js_1 = __nccwpck_require__(464);
const Init_js_1 = __nccwpck_require__(9824);
function assertResult(value) {
    if (value === undefined) {
        throw new Error("Api interfaces needs to be initialized before using, wait for 'isReady'");
    }
    return value;
}
class Getters extends Init_js_1.Init {
    /**
     * @description Runtime call interfaces (currently untyped, only decorated via API options)
     */
    get call() {
        return assertResult(this._call);
    }
    /**
     * @description Contains the parameter types (constants) of all modules.
     *
     * The values are instances of the appropriate type and are accessible using `section`.`constantName`,
     *
     * @example
     * <BR>
     *
     * ```javascript
     * console.log(api.consts.democracy.enactmentPeriod.toString())
     * ```
     */
    get consts() {
        return assertResult(this._consts);
    }
    /**
     * @description Derived results that are injected into the API, allowing for combinations of various query results.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.derive.chain.bestNumber((number) => {
     *   console.log('best number', number);
     * });
     * ```
     */
    get derive() {
        return assertResult(this._derive);
    }
    /**
     * @description Errors from metadata
     */
    get errors() {
        return assertResult(this._errors);
    }
    /**
     * @description Events from metadata
     */
    get events() {
        return assertResult(this._events);
    }
    /**
     * @description  Returns the version of extrinsics in-use on this chain
     */
    get extrinsicVersion() {
        return this._extrinsicType;
    }
    /**
     * @description Contains the genesis Hash of the attached chain. Apart from being useful to determine the actual chain, it can also be used to sign immortal transactions.
     */
    get genesisHash() {
        return assertResult(this._genesisHash);
    }
    /**
     * @description true is the underlying provider is connected
     */
    get isConnected() {
        return this._isConnected.getValue();
    }
    /**
     * @description The library information name & version (from package.json)
     */
    get libraryInfo() {
        return `${packageInfo_js_1.packageInfo.name} v${packageInfo_js_1.packageInfo.version}`;
    }
    /**
     * @description Contains all the chain state modules and their subsequent methods in the API. These are attached dynamically from the runtime metadata.
     *
     * All calls inside the namespace, is denoted by `section`.`method` and may take an optional query parameter. As an example, `api.query.timestamp.now()` (current block timestamp) does not take parameters, while `api.query.system.account(<accountId>)` (retrieving the associated nonce & balances for an account), takes the `AccountId` as a parameter.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.query.system.account(<accountId>, ([nonce, balance]) => {
     *   console.log('new free balance', balance.free, 'new nonce', nonce);
     * });
     * ```
     */
    get query() {
        return assertResult(this._query);
    }
    /**
     * @description Allows for the querying of multiple storage entries and the combination thereof into a single result. This is a very optimal way to make multiple queries since it only makes a single connection to the node and retrieves the data over one subscription.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * const unsub = await api.queryMulti(
     *   [
     *     // you can include the storage without any parameters
     *     api.query.balances.totalIssuance,
     *     // or you can pass parameters to the storage query
     *     [api.query.system.account, '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY']
     *   ],
     *   ([existential, [, { free }]]) => {
     *     console.log(`You have ${free.sub(existential)} more than the existential deposit`);
     *
     *     unsub();
     *   }
     * );
     * ```
     */
    get queryMulti() {
        return assertResult(this._queryMulti);
    }
    /**
     * @description Contains all the raw rpc sections and their subsequent methods in the API as defined by the jsonrpc interface definitions. Unlike the dynamic `api.query` and `api.tx` sections, these methods are fixed (although extensible with node upgrades) and not determined by the runtime.
     *
     * RPC endpoints available here allow for the query of chain, node and system information, in addition to providing interfaces for the raw queries of state (using known keys) and the submission of transactions.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.rpc.chain.subscribeNewHeads((header) => {
     *   console.log('new header', header);
     * });
     * ```
     */
    get rpc() {
        return assertResult(this._rpc);
    }
    /**
     * @description Contains the chain information for the current node.
     */
    get runtimeChain() {
        return assertResult(this._runtimeChain);
    }
    /**
     * @description Yields the current attached runtime metadata. Generally this is only used to construct extrinsics & storage, but is useful for current runtime inspection.
     */
    get runtimeMetadata() {
        return assertResult(this._runtimeMetadata);
    }
    /**
     * @description Contains the version information for the current runtime.
     */
    get runtimeVersion() {
        return assertResult(this._runtimeVersion);
    }
    /**
     * @description The underlying Rx API interface
     */
    get rx() {
        return assertResult(this._rx);
    }
    /**
     * @description Returns the underlying provider stats
     */
    get stats() {
        return this._rpcCore.stats;
    }
    /**
     * @description The type of this API instance, either 'rxjs' or 'promise'
     */
    get type() {
        return this._type;
    }
    /**
     * @description Contains all the extrinsic modules and their subsequent methods in the API. It allows for the construction of transactions and the submission thereof. These are attached dynamically from the runtime metadata.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * api.tx.balances
     *   .transfer(<recipientId>, <balance>)
     *   .signAndSend(<keyPair>, ({status}) => {
     *     console.log('tx status', status.asFinalized.toHex());
     *   });
     * ```
     */
    get tx() {
        return assertResult(this._extrinsics);
    }
    /**
     * @description Finds the definition for a specific [[CallFunction]] based on the index supplied
     */
    findCall(callIndex) {
        return (0, find_js_1.findCall)(this.registry, callIndex);
    }
    /**
     * @description Finds the definition for a specific [[RegistryError]] based on the index supplied
     */
    findError(errorIndex) {
        return (0, find_js_1.findError)(this.registry, errorIndex);
    }
}
exports.Getters = Getters;


/***/ }),

/***/ 9824:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Init = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const types_1 = __nccwpck_require__(79405);
const types_known_1 = __nccwpck_require__(43909);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const Decorate_js_1 = __nccwpck_require__(28902);
const KEEPALIVE_INTERVAL = 10000;
const WITH_VERSION_SHORTCUT = false;
const l = (0, util_1.logger)('api/init');
function textToString(t) {
    return t.toString();
}
class Init extends Decorate_js_1.Decorate {
    constructor(options, type, decorateMethod) {
        super(options, type, decorateMethod);
        this.__internal__atLast = null;
        this.__internal__healthTimer = null;
        this.__internal__registries = [];
        this.__internal__updateSub = null;
        this.__internal__waitingRegistries = {};
        // all injected types added to the registry for overrides
        this.registry.setKnownTypes(options);
        // We only register the types (global) if this is not a cloned instance.
        // Do right up-front, so we get in the user types before we are actually
        // doing anything on-chain, this ensures we have the overrides in-place
        if (!options.source) {
            this.registerTypes(options.types);
        }
        else {
            this.__internal__registries = options.source.__internal__registries;
        }
        this._rpc = this._decorateRpc(this._rpcCore, this._decorateMethod);
        this._rx.rpc = this._decorateRpc(this._rpcCore, this._rxDecorateMethod);
        if (this.supportMulti) {
            this._queryMulti = this._decorateMulti(this._decorateMethod);
            this._rx.queryMulti = this._decorateMulti(this._rxDecorateMethod);
        }
        this._rx.signer = options.signer;
        this._rpcCore.setRegistrySwap((blockHash) => this.getBlockRegistry(blockHash));
        this._rpcCore.setResolveBlockHash((blockNumber) => (0, rxjs_1.firstValueFrom)(this._rpcCore.chain.getBlockHash(blockNumber)));
        if (this.hasSubscriptions) {
            this._rpcCore.provider.on('disconnected', () => this.__internal__onProviderDisconnect());
            this._rpcCore.provider.on('error', (e) => this.__internal__onProviderError(e));
            this._rpcCore.provider.on('connected', () => this.__internal__onProviderConnect());
        }
        else if (!this._options.noInitWarn) {
            l.warn('Api will be available in a limited mode since the provider does not support subscriptions');
        }
        // If the provider was instantiated earlier, and has already emitted a
        // 'connected' event, then the `on('connected')` won't fire anymore. To
        // cater for this case, we call manually `this._onProviderConnect`.
        if (this._rpcCore.provider.isConnected) {
            this.__internal__onProviderConnect().catch(util_1.noop);
        }
    }
    /**
     * @description Decorates a registry based on the runtime version
     */
    _initRegistry(registry, chain, version, metadata, chainProps) {
        registry.clearCache();
        registry.setChainProperties(chainProps || this.registry.getChainProperties());
        registry.setKnownTypes(this._options);
        registry.register((0, types_known_1.getSpecTypes)(registry, chain, version.specName, version.specVersion));
        registry.setHasher((0, types_known_1.getSpecHasher)(registry, chain, version.specName));
        // for bundled types, pull through the aliases defined
        if (registry.knownTypes.typesBundle) {
            registry.knownTypes.typesAlias = (0, types_known_1.getSpecAlias)(registry, chain, version.specName);
        }
        registry.setMetadata(metadata, undefined, (0, util_1.objectSpread)({}, (0, types_known_1.getSpecExtensions)(registry, chain, version.specName), this._options.signedExtensions), this._options.noInitWarn);
    }
    /**
     * @description Returns the default versioned registry
     */
    _getDefaultRegistry() {
        return (0, util_1.assertReturn)(this.__internal__registries.find(({ isDefault }) => isDefault), 'Initialization error, cannot find the default registry');
    }
    /**
     * @description Returns a decorated API instance at a specific point in time
     */
    async at(blockHash, knownVersion) {
        const u8aHash = (0, util_1.u8aToU8a)(blockHash);
        const u8aHex = (0, util_1.u8aToHex)(u8aHash);
        const registry = await this.getBlockRegistry(u8aHash, knownVersion);
        if (!this.__internal__atLast || this.__internal__atLast[0] !== u8aHex) {
            // always create a new decoration - since we are pointing to a specific hash, this
            // means that all queries needs to use that hash (not a previous one already existing)
            this.__internal__atLast = [u8aHex, this._createDecorated(registry, true, null, u8aHash).decoratedApi];
        }
        return this.__internal__atLast[1];
    }
    async _createBlockRegistry(blockHash, header, version) {
        const registry = new types_1.TypeRegistry(blockHash);
        const metadata = new types_1.Metadata(registry, await (0, rxjs_1.firstValueFrom)(this._rpcCore.state.getMetadata.raw(header.parentHash)));
        const runtimeChain = this._runtimeChain;
        if (!runtimeChain) {
            throw new Error('Invalid initializion order, runtimeChain is not available');
        }
        this._initRegistry(registry, runtimeChain, version, metadata);
        // add our new registry
        const result = { counter: 0, lastBlockHash: blockHash, metadata, registry, runtimeVersion: version };
        this.__internal__registries.push(result);
        return result;
    }
    _cacheBlockRegistryProgress(key, creator) {
        // look for waiting resolves
        let waiting = this.__internal__waitingRegistries[key];
        if ((0, util_1.isUndefined)(waiting)) {
            // nothing waiting, construct new
            waiting = this.__internal__waitingRegistries[key] = new Promise((resolve, reject) => {
                creator()
                    .then((registry) => {
                    delete this.__internal__waitingRegistries[key];
                    resolve(registry);
                })
                    .catch((error) => {
                    delete this.__internal__waitingRegistries[key];
                    reject(error);
                });
            });
        }
        return waiting;
    }
    _getBlockRegistryViaVersion(blockHash, version) {
        if (version) {
            // check for pre-existing registries. We also check specName, e.g. it
            // could be changed like in Westmint with upgrade from shell -> westmint
            const existingViaVersion = this.__internal__registries.find(({ runtimeVersion: { specName, specVersion } }) => specName.eq(version.specName) &&
                specVersion.eq(version.specVersion));
            if (existingViaVersion) {
                existingViaVersion.counter++;
                existingViaVersion.lastBlockHash = blockHash;
                return existingViaVersion;
            }
        }
        return null;
    }
    async _getBlockRegistryViaHash(blockHash) {
        // ensure we have everything required
        if (!this._genesisHash || !this._runtimeVersion) {
            throw new Error('Cannot retrieve data on an uninitialized chain');
        }
        // We have to assume that on the RPC layer the calls used here does not call back into
        // the registry swap, so getHeader & getRuntimeVersion should not be historic
        const header = this.registry.createType('HeaderPartial', this._genesisHash.eq(blockHash)
            ? { number: util_1.BN_ZERO, parentHash: this._genesisHash }
            : await (0, rxjs_1.firstValueFrom)(this._rpcCore.chain.getHeader.raw(blockHash)));
        if (header.parentHash.isEmpty) {
            throw new Error('Unable to retrieve header and parent from supplied hash');
        }
        // get the runtime version, either on-chain or via an known upgrade history
        const [firstVersion, lastVersion] = (0, types_known_1.getUpgradeVersion)(this._genesisHash, header.number);
        const version = this.registry.createType('RuntimeVersionPartial', WITH_VERSION_SHORTCUT && (firstVersion && (lastVersion ||
            firstVersion.specVersion.eq(this._runtimeVersion.specVersion)))
            ? { apis: firstVersion.apis, specName: this._runtimeVersion.specName, specVersion: firstVersion.specVersion }
            : await (0, rxjs_1.firstValueFrom)(this._rpcCore.state.getRuntimeVersion.raw(header.parentHash)));
        return (
        // try to find via version
        this._getBlockRegistryViaVersion(blockHash, version) ||
            // return new or in-flight result
            await this._cacheBlockRegistryProgress(version.toHex(), () => this._createBlockRegistry(blockHash, header, version)));
    }
    /**
     * @description Sets up a registry based on the block hash defined
     */
    async getBlockRegistry(blockHash, knownVersion) {
        return (
        // try to find via blockHash
        this.__internal__registries.find(({ lastBlockHash }) => lastBlockHash && (0, util_1.u8aEq)(lastBlockHash, blockHash)) ||
            // try to find via version
            this._getBlockRegistryViaVersion(blockHash, knownVersion) ||
            // return new or in-flight result
            await this._cacheBlockRegistryProgress((0, util_1.u8aToHex)(blockHash), () => this._getBlockRegistryViaHash(blockHash)));
    }
    async _loadMeta() {
        // on re-connection to the same chain, we don't want to re-do everything from chain again
        if (this._isReady) {
            return true;
        }
        this._unsubscribeUpdates();
        // only load from on-chain if we are not a clone (default path), alternatively
        // just use the values from the source instance provided
        [this._genesisHash, this._runtimeMetadata] = this._options.source?._isReady
            ? await this._metaFromSource(this._options.source)
            : await this._metaFromChain(this._options.metadata);
        return this._initFromMeta(this._runtimeMetadata);
    }
    // eslint-disable-next-line @typescript-eslint/require-await
    async _metaFromSource(source) {
        this._extrinsicType = source.extrinsicVersion;
        this._runtimeChain = source.runtimeChain;
        this._runtimeVersion = source.runtimeVersion;
        // manually build a list of all available methods in this RPC, we are
        // going to filter on it to align the cloned RPC without making a call
        const sections = Object.keys(source.rpc);
        const rpcs = [];
        for (let s = 0, scount = sections.length; s < scount; s++) {
            const section = sections[s];
            const methods = Object.keys(source.rpc[section]);
            for (let m = 0, mcount = methods.length; m < mcount; m++) {
                rpcs.push(`${section}_${methods[m]}`);
            }
        }
        this._filterRpc(rpcs, (0, types_known_1.getSpecRpc)(this.registry, source.runtimeChain, source.runtimeVersion.specName));
        return [source.genesisHash, source.runtimeMetadata];
    }
    // subscribe to metadata updates, inject the types on changes
    _subscribeUpdates() {
        if (this.__internal__updateSub || !this.hasSubscriptions) {
            return;
        }
        this.__internal__updateSub = this._rpcCore.state.subscribeRuntimeVersion().pipe((0, rxjs_1.switchMap)((version) => 
        // only retrieve the metadata when the on-chain version has been changed
        this._runtimeVersion?.specVersion.eq(version.specVersion)
            ? (0, rxjs_1.of)(false)
            : this._rpcCore.state.getMetadata().pipe((0, rxjs_1.map)((metadata) => {
                l.log(`Runtime version updated to spec=${version.specVersion.toString()}, tx=${version.transactionVersion.toString()}`);
                this._runtimeMetadata = metadata;
                this._runtimeVersion = version;
                this._rx.runtimeVersion = version;
                // update the default registry version
                const thisRegistry = this._getDefaultRegistry();
                const runtimeChain = this._runtimeChain;
                if (!runtimeChain) {
                    throw new Error('Invalid initializion order, runtimeChain is not available');
                }
                // setup the data as per the current versions
                thisRegistry.metadata = metadata;
                thisRegistry.runtimeVersion = version;
                this._initRegistry(this.registry, runtimeChain, version, metadata);
                this._injectMetadata(thisRegistry, true);
                return true;
            })))).subscribe();
    }
    async _metaFromChain(optMetadata) {
        const [genesisHash, runtimeVersion, chain, chainProps, rpcMethods, chainMetadata] = await Promise.all([
            (0, rxjs_1.firstValueFrom)(this._rpcCore.chain.getBlockHash(0)),
            (0, rxjs_1.firstValueFrom)(this._rpcCore.state.getRuntimeVersion()),
            (0, rxjs_1.firstValueFrom)(this._rpcCore.system.chain()),
            (0, rxjs_1.firstValueFrom)(this._rpcCore.system.properties()),
            (0, rxjs_1.firstValueFrom)(this._rpcCore.rpc.methods()),
            optMetadata
                ? Promise.resolve(null)
                : (0, rxjs_1.firstValueFrom)(this._rpcCore.state.getMetadata())
        ]);
        // set our chain version & genesisHash as returned
        this._runtimeChain = chain;
        this._runtimeVersion = runtimeVersion;
        this._rx.runtimeVersion = runtimeVersion;
        // retrieve metadata, either from chain  or as pass-in via options
        const metadataKey = `${genesisHash.toHex() || '0x'}-${runtimeVersion.specVersion.toString()}`;
        const metadata = chainMetadata || (optMetadata?.[metadataKey]
            ? new types_1.Metadata(this.registry, optMetadata[metadataKey])
            : await (0, rxjs_1.firstValueFrom)(this._rpcCore.state.getMetadata()));
        // initializes the registry & RPC
        this._initRegistry(this.registry, chain, runtimeVersion, metadata, chainProps);
        this._filterRpc(rpcMethods.methods.map(textToString), (0, types_known_1.getSpecRpc)(this.registry, chain, runtimeVersion.specName));
        this._subscribeUpdates();
        // setup the initial registry, when we have none
        if (!this.__internal__registries.length) {
            this.__internal__registries.push({ counter: 0, isDefault: true, metadata, registry: this.registry, runtimeVersion });
        }
        // get unique types & validate
        metadata.getUniqTypes(this._options.throwOnUnknown || false);
        return [genesisHash, metadata];
    }
    _initFromMeta(metadata) {
        const runtimeVersion = this._runtimeVersion;
        if (!runtimeVersion) {
            throw new Error('Invalid initializion order, runtimeVersion is not available');
        }
        this._extrinsicType = metadata.asLatest.extrinsic.version.toNumber();
        this._rx.extrinsicType = this._extrinsicType;
        this._rx.genesisHash = this._genesisHash;
        this._rx.runtimeVersion = runtimeVersion;
        // inject metadata and adjust the types as detected
        this._injectMetadata(this._getDefaultRegistry(), true);
        // derive is last, since it uses the decorated rx
        this._rx.derive = this._decorateDeriveRx(this._rxDecorateMethod);
        this._derive = this._decorateDerive(this._decorateMethod);
        return true;
    }
    _subscribeHealth() {
        this._unsubscribeHealth();
        // Only enable the health keepalive on WS, not needed on HTTP
        this.__internal__healthTimer = this.hasSubscriptions
            ? setInterval(() => {
                (0, rxjs_1.firstValueFrom)(this._rpcCore.system.health.raw()).catch(util_1.noop);
            }, KEEPALIVE_INTERVAL)
            : null;
    }
    _unsubscribeHealth() {
        if (this.__internal__healthTimer) {
            clearInterval(this.__internal__healthTimer);
            this.__internal__healthTimer = null;
        }
    }
    _unsubscribeUpdates() {
        if (this.__internal__updateSub) {
            this.__internal__updateSub.unsubscribe();
            this.__internal__updateSub = null;
        }
    }
    _unsubscribe() {
        this._unsubscribeHealth();
        this._unsubscribeUpdates();
    }
    async __internal__onProviderConnect() {
        this._isConnected.next(true);
        this.emit('connected');
        try {
            const cryptoReady = this._options.initWasm === false
                ? true
                : await (0, util_crypto_1.cryptoWaitReady)();
            const hasMeta = await this._loadMeta();
            this._subscribeHealth();
            if (hasMeta && !this._isReady && cryptoReady) {
                this._isReady = true;
                this.emit('ready', this);
            }
        }
        catch (_error) {
            const error = new Error(`FATAL: Unable to initialize the API: ${_error.message}`);
            l.error(error);
            this.emit('error', error);
        }
    }
    __internal__onProviderDisconnect() {
        this._isConnected.next(false);
        this._unsubscribe();
        this.emit('disconnected');
    }
    __internal__onProviderError(error) {
        this.emit('error', error);
    }
}
exports.Init = Init;


/***/ }),

/***/ 464:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.findError = exports.findCall = void 0;
const util_1 = __nccwpck_require__(29795);
function findCall(registry, callIndex) {
    return registry.findMetaCall((0, util_1.u8aToU8a)(callIndex));
}
exports.findCall = findCall;
function findError(registry, errorIndex) {
    return registry.findMetaError((0, util_1.u8aToU8a)(errorIndex));
}
exports.findError = findError;


/***/ }),

/***/ 70743:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiBase = void 0;
const util_1 = __nccwpck_require__(29795);
const Getters_js_1 = __nccwpck_require__(94011);
class ApiBase extends Getters_js_1.Getters {
    /**
     * @description Create an instance of the class
     *
     * @param options Options object to create API instance or a Provider instance
     *
     * @example
     * <BR>
     *
     * ```javascript
     * import Api from '@polkadot/api/promise';
     *
     * const api = new Api().isReady();
     *
     * api.rpc.subscribeNewHeads((header) => {
     *   console.log(`new block #${header.number.toNumber()}`);
     * });
     * ```
     */
    constructor(options = {}, type, decorateMethod) {
        super(options, type, decorateMethod);
    }
    /**
     * @description Connect from the underlying provider, halting all network traffic
     */
    connect() {
        return this._rpcCore.connect();
    }
    /**
     * @description Disconnect from the underlying provider, halting all network traffic
     */
    disconnect() {
        this._unsubscribe();
        return this._rpcCore.disconnect();
    }
    /**
     * @description Set an external signer which will be used to sign extrinsic when account passed in is not KeyringPair
     */
    setSigner(signer) {
        this._rx.signer = signer;
    }
    /**
     * @description Signs a raw signer payload, string or Uint8Array
     */
    async sign(address, data, { signer } = {}) {
        if ((0, util_1.isString)(address)) {
            const _signer = signer || this._rx.signer;
            if (!_signer?.signRaw) {
                throw new Error('No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');
            }
            return (await _signer.signRaw((0, util_1.objectSpread)({ type: 'bytes' }, data, { address }))).signature;
        }
        return (0, util_1.u8aToHex)(address.sign((0, util_1.u8aToU8a)(data.data)));
    }
}
exports.ApiBase = ApiBase;


/***/ }),

/***/ 12264:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SubmittableResult = exports.packageInfo = exports.WsProvider = exports.ScProvider = exports.HttpProvider = exports.Keyring = void 0;
const tslib_1 = __nccwpck_require__(29723);
__nccwpck_require__(94679);
var keyring_1 = __nccwpck_require__(48587);
Object.defineProperty(exports, "Keyring", ({ enumerable: true, get: function () { return keyring_1.Keyring; } }));
var rpc_provider_1 = __nccwpck_require__(53278);
Object.defineProperty(exports, "HttpProvider", ({ enumerable: true, get: function () { return rpc_provider_1.HttpProvider; } }));
Object.defineProperty(exports, "ScProvider", ({ enumerable: true, get: function () { return rpc_provider_1.ScProvider; } }));
Object.defineProperty(exports, "WsProvider", ({ enumerable: true, get: function () { return rpc_provider_1.WsProvider; } }));
var packageInfo_js_1 = __nccwpck_require__(95973);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
var index_js_1 = __nccwpck_require__(61766);
Object.defineProperty(exports, "SubmittableResult", ({ enumerable: true, get: function () { return index_js_1.SubmittableResult; } }));
tslib_1.__exportStar(__nccwpck_require__(25972), exports);
tslib_1.__exportStar(__nccwpck_require__(52100), exports);


/***/ }),

/***/ 45497:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(11970);
const packageInfo_2 = __nccwpck_require__(82836);
const packageInfo_3 = __nccwpck_require__(88750);
const packageInfo_4 = __nccwpck_require__(74402);
const packageInfo_5 = __nccwpck_require__(47804);
exports["default"] = [packageInfo_1.packageInfo, packageInfo_2.packageInfo, packageInfo_3.packageInfo, packageInfo_4.packageInfo, packageInfo_5.packageInfo];


/***/ }),

/***/ 81946:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(29723);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(45497));
const packageInfo_js_1 = __nccwpck_require__(95973);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 47196:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(29723);
__nccwpck_require__(81946);
tslib_1.__exportStar(__nccwpck_require__(12264), exports);


/***/ }),

/***/ 95973:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/api', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 37955:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiPromise = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(70743);
const Combinator_js_1 = __nccwpck_require__(86523);
const decorateMethod_js_1 = __nccwpck_require__(93658);
/**
 * # @polkadot/api/promise
 *
 * ## Overview
 *
 * @name ApiPromise
 * @description
 * ApiPromise is a standard JavaScript wrapper around the RPC and interfaces on the Polkadot network. As a full Promise-based, all interface calls return Promises, including the static `.create(...)`. Subscription calls utilise `(value) => {}` callbacks to pass through the latest values.
 *
 * The API is well suited to real-time applications where either the single-shot state is needed or use is to be made of the subscription-based features of Polkadot (and Substrate) clients.
 *
 * @see [[ApiRx]]
 *
 * ## Usage
 *
 * Making rpc calls -
 * <BR>
 *
 * ```javascript
 * import ApiPromise from '@polkadot/api/promise';
 *
 * // initialise via static create
 * const api = await ApiPromise.create();
 *
 * // make a subscription to the network head
 * api.rpc.chain.subscribeNewHeads((header) => {
 *   console.log(`Chain is at #${header.number}`);
 * });
 * ```
 * <BR>
 *
 * Subscribing to chain state -
 * <BR>
 *
 * ```javascript
 * import { ApiPromise, WsProvider } from '@polkadot/api';
 *
 * // initialise a provider with a specific endpoint
 * const provider = new WsProvider('wss://example.com:9944')
 *
 * // initialise via isReady & new with specific provider
 * const api = await new ApiPromise({ provider }).isReady;
 *
 * // retrieve the block target time
 * const blockPeriod = await api.query.timestamp.blockPeriod().toNumber();
 * let last = 0;
 *
 * // subscribe to the current block timestamp, updates automatically (callback provided)
 * api.query.timestamp.now((timestamp) => {
 *   const elapsed = last
 *     ? `, ${timestamp.toNumber() - last}s since last`
 *     : '';
 *
 *   last = timestamp.toNumber();
 *   console.log(`timestamp ${timestamp}${elapsed} (${blockPeriod}s target)`);
 * });
 * ```
 * <BR>
 *
 * Submitting a transaction -
 * <BR>
 *
 * ```javascript
 * import ApiPromise from '@polkadot/api/promise';
 *
 * ApiPromise.create().then((api) => {
 *   const [nonce] = await api.query.system.account(keyring.alice.address);
 *
 *   api.tx.balances
 *     // create transfer
 *     transfer(keyring.bob.address, 12345)
 *     // sign the transcation
 *     .sign(keyring.alice, { nonce })
 *     // send the transaction (optional status callback)
 *     .send((status) => {
 *       console.log(`current status ${status.type}`);
 *     })
 *     // retrieve the submitted extrinsic hash
 *     .then((hash) => {
 *       console.log(`submitted with hash ${hash}`);
 *     });
 * });
 * ```
 */
class ApiPromise extends index_js_1.ApiBase {
    /**
     * @description Creates an instance of the ApiPromise class
     * @param options Options to create an instance. This can be either [[ApiOptions]] or
     * an [[WsProvider]].
     * @example
     * <BR>
     *
     * ```javascript
     * import Api from '@polkadot/api/promise';
     *
     * new Api().isReady.then((api) => {
     *   api.rpc.subscribeNewHeads((header) => {
     *     console.log(`new block #${header.number.toNumber()}`);
     *   });
     * });
     * ```
     */
    constructor(options) {
        super(options, 'promise', decorateMethod_js_1.toPromiseMethod);
        this.__internal__isReadyPromise = new Promise((resolve) => {
            super.once('ready', () => resolve(this));
        });
        this.__internal__isReadyOrErrorPromise = new Promise((resolve, reject) => {
            const tracker = (0, decorateMethod_js_1.promiseTracker)(resolve, reject);
            super.once('ready', () => tracker.resolve(this));
            super.once('error', (error) => tracker.reject(error));
        });
    }
    /**
     * @description Creates an ApiPromise instance using the supplied provider. Returns an Promise containing the actual Api instance.
     * @param options options that is passed to the class contructor. Can be either [[ApiOptions]] or a
     * provider (see the constructor arguments)
     * @example
     * <BR>
     *
     * ```javascript
     * import Api from '@polkadot/api/promise';
     *
     * Api.create().then(async (api) => {
     *   const timestamp = await api.query.timestamp.now();
     *
     *   console.log(`lastest block timestamp ${timestamp}`);
     * });
     * ```
     */
    static create(options) {
        const instance = new ApiPromise(options);
        if (options && options.throwOnConnect) {
            return instance.isReadyOrError;
        }
        // Swallow any rejections on isReadyOrError
        // (in Node 15.x this creates issues, when not being looked at)
        instance.isReadyOrError.catch(util_1.noop);
        return instance.isReady;
    }
    /**
     * @description Promise that resolves the first time we are connected and loaded
     */
    get isReady() {
        return this.__internal__isReadyPromise;
    }
    /**
     * @description Promise that resolves if we can connect, or reject if there is an error
     */
    get isReadyOrError() {
        return this.__internal__isReadyOrErrorPromise;
    }
    /**
     * @description Returns a clone of this ApiPromise instance (new underlying provider connection)
     */
    clone() {
        return new ApiPromise((0, util_1.objectSpread)({}, this._options, { source: this }));
    }
    /**
     * @description Creates a combinator that can be used to combine the latest results from multiple subscriptions
     * @param fns An array of function to combine, each in the form of `(cb: (value: void)) => void`
     * @param callback A callback that will return an Array of all the values this combinator has been applied to
     * @example
     * <BR>
     *
     * ```javascript
     * const address = '5DTestUPts3kjeXSTMyerHihn1uwMfLj8vU8sqF7qYrFacT7';
     *
     * // combines values from balance & nonce as it updates
     * api.combineLatest([
     *   api.rpc.chain.subscribeNewHeads,
     *   (cb) => api.query.system.account(address, cb)
     * ], ([head, [balance, nonce]]) => {
     *   console.log(`#${head.number}: You have ${balance.free} units, with ${nonce} transactions sent`);
     * });
     * ```
     */
    // eslint-disable-next-line @typescript-eslint/require-await
    async combineLatest(fns, callback) {
        const combinator = new Combinator_js_1.Combinator(fns, callback);
        return () => {
            combinator.unsubscribe();
        };
    }
}
exports.ApiPromise = ApiPromise;


/***/ }),

/***/ 86523:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Combinator = void 0;
const util_1 = __nccwpck_require__(29795);
class Combinator {
    constructor(fns, callback) {
        this.__internal__allHasFired = false;
        this.__internal__fired = [];
        this.__internal__fns = [];
        this.__internal__isActive = true;
        this.__internal__results = [];
        this.__internal__subscriptions = [];
        this.__internal__callback = callback;
        // eslint-disable-next-line @typescript-eslint/require-await
        this.__internal__subscriptions = fns.map(async (input, index) => {
            const [fn, ...args] = Array.isArray(input)
                ? input
                : [input];
            this.__internal__fired.push(false);
            this.__internal__fns.push(fn);
            // Not quite 100% how to have a variable number at the front here
            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/ban-types
            return fn(...args, this._createCallback(index));
        });
    }
    _allHasFired() {
        this.__internal__allHasFired ||= this.__internal__fired.filter((hasFired) => !hasFired).length === 0;
        return this.__internal__allHasFired;
    }
    _createCallback(index) {
        return (value) => {
            this.__internal__fired[index] = true;
            this.__internal__results[index] = value;
            this._triggerUpdate();
        };
    }
    _triggerUpdate() {
        if (!this.__internal__isActive || !(0, util_1.isFunction)(this.__internal__callback) || !this._allHasFired()) {
            return;
        }
        try {
            Promise
                .resolve(this.__internal__callback(this.__internal__results))
                .catch(util_1.noop);
        }
        catch {
            // swallow, we don't want the handler to trip us up
        }
    }
    unsubscribe() {
        if (!this.__internal__isActive) {
            return;
        }
        this.__internal__isActive = false;
        this.__internal__subscriptions.map(async (subscription) => {
            try {
                const unsubscribe = await subscription;
                if ((0, util_1.isFunction)(unsubscribe)) {
                    unsubscribe();
                }
            }
            catch {
                // ignore
            }
        });
    }
}
exports.Combinator = Combinator;


/***/ }),

/***/ 93658:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPromiseMethod = exports.promiseTracker = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
function promiseTracker(resolve, reject) {
    let isCompleted = false;
    return {
        reject: (error) => {
            if (!isCompleted) {
                isCompleted = true;
                reject(error);
            }
            return rxjs_1.EMPTY;
        },
        resolve: (value) => {
            if (!isCompleted) {
                isCompleted = true;
                resolve(value);
            }
        }
    };
}
exports.promiseTracker = promiseTracker;
function extractArgs(args, needsCallback) {
    const actualArgs = args.slice();
    // If the last arg is a function, we pop it, put it into callback.
    // actualArgs will then hold the actual arguments to be passed to `method`
    const callback = (args.length && (0, util_1.isFunction)(args[args.length - 1]))
        ? actualArgs.pop()
        : undefined;
    // When we need a subscription, ensure that a valid callback is actually passed
    if (needsCallback && !(0, util_1.isFunction)(callback)) {
        throw new Error('Expected a callback to be passed with subscriptions');
    }
    return [actualArgs, callback];
}
function decorateCall(method, args) {
    return new Promise((resolve, reject) => {
        // single result tracker - either reject with Error or resolve with Codec result
        const tracker = promiseTracker(resolve, reject);
        // encoding errors reject immediately, any result unsubscribes and resolves
        const subscription = method(...args)
            .pipe((0, rxjs_1.catchError)((error) => tracker.reject(error)))
            .subscribe((result) => {
            tracker.resolve(result);
            (0, util_1.nextTick)(() => subscription.unsubscribe());
        });
    });
}
function decorateSubscribe(method, args, resultCb) {
    return new Promise((resolve, reject) => {
        // either reject with error or resolve with unsubscribe callback
        const tracker = promiseTracker(resolve, reject);
        // errors reject immediately, the first result resolves with an unsubscribe promise, all results via callback
        const subscription = method(...args)
            .pipe((0, rxjs_1.catchError)((error) => tracker.reject(error)), (0, rxjs_1.tap)(() => tracker.resolve(() => subscription.unsubscribe())))
            .subscribe((result) => {
            // queue result (back of queue to clear current)
            (0, util_1.nextTick)(() => resultCb(result));
        });
    });
}
/**
 * @description Decorate method for ApiPromise, where the results are converted to the Promise equivalent
 */
function toPromiseMethod(method, options) {
    const needsCallback = !!(options?.methodName && options.methodName.includes('subscribe'));
    return function (...args) {
        const [actualArgs, resultCb] = extractArgs(args, needsCallback);
        return resultCb
            ? decorateSubscribe(method, actualArgs, resultCb)
            : decorateCall(options?.overrideNoSub || method, actualArgs);
    };
}
exports.toPromiseMethod = toPromiseMethod;


/***/ }),

/***/ 25972:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPromiseMethod = exports.ApiPromise = void 0;
var Api_js_1 = __nccwpck_require__(37955);
Object.defineProperty(exports, "ApiPromise", ({ enumerable: true, get: function () { return Api_js_1.ApiPromise; } }));
var decorateMethod_js_1 = __nccwpck_require__(93658);
Object.defineProperty(exports, "toPromiseMethod", ({ enumerable: true, get: function () { return decorateMethod_js_1.toPromiseMethod; } }));


/***/ }),

/***/ 40964:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiRx = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(70743);
const decorateMethod_js_1 = __nccwpck_require__(33757);
/**
 * # @polkadot/api/rx
 *
 * ## Overview
 *
 * @name ApiRx
 *
 * @description
 * ApiRx is a powerful RxJS Observable wrapper around the RPC and interfaces on the Polkadot network. As a full Observable API, all interface calls return RxJS Observables, including the static `.create(...)`. In the same fashion and subscription-based methods return long-running Observables that update with the latest values.
 *
 * The API is well suited to real-time applications where the latest state is needed, unlocking the subscription-based features of Polkadot (and Substrate) clients. Some familiarity with RxJS is a requirement to use the API, however just understanding `.subscribe` and `.pipe` on Observables will unlock full-scale use thereof.
 *
 * @see [[ApiPromise]]
 *
 * ## Usage
 *
 * Making rpc calls -
 * <BR>
 *
 * ```javascript
 * import ApiRx from '@polkadot/api/rx';
 *
 * // initialize via Promise & static create
 * const api = await ApiRx.create().toPromise();
 *
 * // make a call to retrieve the current network head
 * api.rpc.chain.subscribeNewHeads().subscribe((header) => {
 *   console.log(`Chain is at #${header.number}`);
 * });
 * ```
 * <BR>
 *
 * Subscribing to chain state -
 * <BR>
 *
 * ```javascript
 * import { combineLatest, pairwise, switchMap } from 'rxjs';
 * import { ApiRx, WsProvider } from '@polkadot/api';
 *
 *
 * // initialize a provider with a specific endpoint
 * const provider = new WsProvider('wss://example.com:9944')
 *
 * // initialize via isReady & new with specific provider
 * new ApiRx({ provider })
 *   .isReady
 *   .pipe(
 *     switchMap((api) =>
 *       combineLatest([
 *         api.query.timestamp.blockPeriod(),
 *         api.query.timestamp.now().pipe(pairwise())
 *       ])
 *     )
 *   )
 *   .subscribe(([blockPeriod, timestamp]) => {
 *      const elapsed = timestamp[1].toNumber() - timestamp[0].toNumber();
 *      console.log(`timestamp ${timestamp[1]} \nelapsed ${elapsed} \n(${blockPeriod}s target)`);
 *   });
 * ```
 * <BR>
 *
 * Submitting a transaction -
 * <BR>
 *
 * ```javascript
 * import { first, switchMap } from 'rxjs';
 * import ApiRx from '@polkadot/api/rx';
 *
 * // import the test keyring (already has dev keys for Alice, Bob, Charlie, Eve & Ferdie)
 * import testingPairs from '@polkadot/keyring/testingPairs';
 * const keyring = testingPairs();
 *
 * // get api via Promise
 * const api = await ApiRx.create().toPromise();
 *
 * // retrieve nonce for the account
 * api.query.system
 *   .account(keyring.alice.address)
 *   .pipe(
 *      first(),
 *      // pipe nonce into transfer
 *      switchMap(([nonce]) =>
 *        api.tx.balances
 *          // create transfer
 *          .transfer(keyring.bob.address, 12345)
 *          // sign the transaction
 *          .sign(keyring.alice, { nonce })
 *          // send the transaction
 *          .send()
 *      )
 *   )
 *   // subscribe to overall result
 *   .subscribe(({ status }) => {
 *     if (status.isInBlock) {
 *       console.log('Completed at block hash', status.asFinalized.toHex());
 *     }
 *   });
 * ```
 */
class ApiRx extends index_js_1.ApiBase {
    /**
     * @description Create an instance of the ApiRx class
     * @param options Options to create an instance. Can be either [[ApiOptions]] or [[WsProvider]]
     * @example
     * <BR>
     *
     * ```javascript
     * import { switchMap } from 'rxjs';
     * import Api from '@polkadot/api/rx';
     *
     * new Api().isReady
     *   .pipe(
     *     switchMap((api) =>
     *       api.rpc.chain.subscribeNewHeads()
     *   ))
     *   .subscribe((header) => {
     *     console.log(`new block #${header.number.toNumber()}`);
     *   });
     * ```
     */
    constructor(options) {
        super(options, 'rxjs', decorateMethod_js_1.toRxMethod);
        this.__internal__isReadyRx = (0, rxjs_1.from)(
        // You can create an observable from an event, however my mind groks this form better
        new Promise((resolve) => {
            super.on('ready', () => resolve(this));
        }));
    }
    /**
     * @description Creates an ApiRx instance using the supplied provider. Returns an Observable containing the actual Api instance.
     * @param options options that is passed to the class constructor. Can be either [[ApiOptions]] or [[WsProvider]]
     * @example
     * <BR>
     *
     * ```javascript
     * import { switchMap } from 'rxjs';
     * import Api from '@polkadot/api/rx';
     *
     * Api.create()
     *   .pipe(
     *     switchMap((api) =>
     *       api.rpc.chain.subscribeNewHeads()
     *   ))
     *   .subscribe((header) => {
     *     console.log(`new block #${header.number.toNumber()}`);
     *   });
     * ```
     */
    static create(options) {
        return new ApiRx(options).isReady;
    }
    /**
     * @description Observable that returns the first time we are connected and loaded
     */
    get isReady() {
        return this.__internal__isReadyRx;
    }
    /**
     * @description Returns a clone of this ApiRx instance (new underlying provider connection)
     */
    clone() {
        return new ApiRx((0, util_1.objectSpread)({}, this._options, { source: this }));
    }
}
exports.ApiRx = ApiRx;


/***/ }),

/***/ 33757:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toRxMethod = void 0;
function toRxMethod(method) {
    return method;
}
exports.toRxMethod = toRxMethod;


/***/ }),

/***/ 52100:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toRxMethod = exports.ApiRx = void 0;
var Api_js_1 = __nccwpck_require__(40964);
Object.defineProperty(exports, "ApiRx", ({ enumerable: true, get: function () { return Api_js_1.ApiRx; } }));
var decorateMethod_js_1 = __nccwpck_require__(33757);
Object.defineProperty(exports, "toRxMethod", ({ enumerable: true, get: function () { return decorateMethod_js_1.toRxMethod; } }));


/***/ }),

/***/ 8217:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SubmittableResult = void 0;
const recordIdentity = (record) => record;
function filterAndApply(events, section, methods, onFound) {
    return events
        .filter(({ event }) => section === event.section &&
        methods.includes(event.method))
        .map((record) => onFound(record));
}
function getDispatchError({ event: { data: [dispatchError] } }) {
    return dispatchError;
}
function getDispatchInfo({ event: { data, method } }) {
    return method === 'ExtrinsicSuccess'
        ? data[0]
        : data[1];
}
function extractError(events = []) {
    return filterAndApply(events, 'system', ['ExtrinsicFailed'], getDispatchError)[0];
}
function extractInfo(events = []) {
    return filterAndApply(events, 'system', ['ExtrinsicFailed', 'ExtrinsicSuccess'], getDispatchInfo)[0];
}
class SubmittableResult {
    constructor({ blockNumber, dispatchError, dispatchInfo, events, internalError, status, txHash, txIndex }) {
        this.dispatchError = dispatchError || extractError(events);
        this.dispatchInfo = dispatchInfo || extractInfo(events);
        this.events = events || [];
        this.internalError = internalError;
        this.status = status;
        this.txHash = txHash;
        this.txIndex = txIndex;
        this.blockNumber = blockNumber;
    }
    get isCompleted() {
        return this.isError || this.status.isInBlock || this.status.isFinalized;
    }
    get isError() {
        return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;
    }
    get isFinalized() {
        return this.status.isFinalized;
    }
    get isInBlock() {
        return this.status.isInBlock;
    }
    get isWarning() {
        return this.status.isRetracted;
    }
    /**
     * @description Filters EventRecords for the specified method & section (there could be multiple)
     */
    filterRecords(section, method) {
        return filterAndApply(this.events, section, Array.isArray(method) ? method : [method], recordIdentity);
    }
    /**
     * @description Finds an EventRecord for the specified method & section
     */
    findRecord(section, method) {
        return this.filterRecords(section, method)[0];
    }
    /**
     * @description Creates a human representation of the output
     */
    toHuman(isExtended) {
        return {
            dispatchError: this.dispatchError?.toHuman(),
            dispatchInfo: this.dispatchInfo?.toHuman(),
            events: this.events.map((e) => e.toHuman(isExtended)),
            internalError: this.internalError?.message.toString(),
            status: this.status.toHuman(isExtended)
        };
    }
}
exports.SubmittableResult = SubmittableResult;


/***/ }),

/***/ 56335:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createClass = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(7495);
const Result_js_1 = __nccwpck_require__(8217);
function makeEraOptions(api, registry, partialOptions, { header, mortalLength, nonce }) {
    if (!header) {
        if (partialOptions.era && !partialOptions.blockHash) {
            throw new Error('Expected blockHash to be passed alongside non-immortal era options');
        }
        if ((0, util_1.isNumber)(partialOptions.era)) {
            // since we have no header, it is immortal, remove any option overrides
            // so we only supply the genesisHash and no era to the construction
            delete partialOptions.era;
            delete partialOptions.blockHash;
        }
        return makeSignOptions(api, partialOptions, { nonce });
    }
    return makeSignOptions(api, partialOptions, {
        blockHash: header.hash,
        era: registry.createTypeUnsafe('ExtrinsicEra', [{
                current: header.number,
                period: partialOptions.era || mortalLength
            }]),
        nonce
    });
}
function makeSignAndSendOptions(partialOptions, statusCb) {
    let options = {};
    if ((0, util_1.isFunction)(partialOptions)) {
        statusCb = partialOptions;
    }
    else {
        options = (0, util_1.objectSpread)({}, partialOptions);
    }
    return [options, statusCb];
}
function makeSignOptions(api, partialOptions, extras) {
    return (0, util_1.objectSpread)({ blockHash: api.genesisHash, genesisHash: api.genesisHash }, partialOptions, extras, { runtimeVersion: api.runtimeVersion, signedExtensions: api.registry.signedExtensions, version: api.extrinsicType });
}
function optionsOrNonce(partialOptions = {}) {
    return (0, util_1.isBn)(partialOptions) || (0, util_1.isNumber)(partialOptions)
        ? { nonce: partialOptions }
        : partialOptions;
}
function createClass({ api, apiType, blockHash, decorateMethod }) {
    // an instance of the base extrinsic for us to extend
    const ExtrinsicBase = api.registry.createClass('Extrinsic');
    class Submittable extends ExtrinsicBase {
        constructor(registry, extrinsic) {
            super(registry, extrinsic, { version: api.extrinsicType });
            this.__internal__transformResult = (util_1.identity);
            this.__internal__observeSign = (account, partialOptions) => {
                const address = (0, index_js_1.isKeyringPair)(account) ? account.address : account.toString();
                const options = optionsOrNonce(partialOptions);
                return api.derive.tx.signingInfo(address, options.nonce, options.era).pipe((0, rxjs_1.first)(), (0, rxjs_1.mergeMap)(async (signingInfo) => {
                    const eraOptions = makeEraOptions(api, this.registry, options, signingInfo);
                    let updateId = -1;
                    if ((0, index_js_1.isKeyringPair)(account)) {
                        this.sign(account, eraOptions);
                    }
                    else {
                        updateId = await this.__internal__signViaSigner(address, eraOptions, signingInfo.header);
                    }
                    return { options: eraOptions, updateId };
                }));
            };
            this.__internal__observeStatus = (txHash, status) => {
                if (!status.isFinalized && !status.isInBlock) {
                    return (0, rxjs_1.of)(this.__internal__transformResult(new Result_js_1.SubmittableResult({
                        status,
                        txHash
                    })));
                }
                const blockHash = status.isInBlock
                    ? status.asInBlock
                    : status.asFinalized;
                return api.derive.tx.events(blockHash).pipe((0, rxjs_1.map)(({ block, events }) => this.__internal__transformResult(new Result_js_1.SubmittableResult({
                    ...(0, index_js_1.filterEvents)(txHash, block, events, status),
                    status,
                    txHash
                }))), (0, rxjs_1.catchError)((internalError) => (0, rxjs_1.of)(this.__internal__transformResult(new Result_js_1.SubmittableResult({
                    internalError,
                    status,
                    txHash
                })))));
            };
            this.__internal__observeSend = (info) => {
                return api.rpc.author.submitExtrinsic(this).pipe((0, rxjs_1.tap)((hash) => {
                    this.__internal__updateSigner(hash, info);
                }));
            };
            this.__internal__observeSubscribe = (info) => {
                const txHash = this.hash;
                return api.rpc.author.submitAndWatchExtrinsic(this).pipe((0, rxjs_1.switchMap)((status) => this.__internal__observeStatus(txHash, status)), (0, rxjs_1.tap)((status) => {
                    this.__internal__updateSigner(status, info);
                }));
            };
            this.__internal__signViaSigner = async (address, options, header) => {
                const signer = options.signer || api.signer;
                if (!signer) {
                    throw new Error('No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');
                }
                const payload = this.registry.createTypeUnsafe('SignerPayload', [(0, util_1.objectSpread)({}, options, {
                        address,
                        blockNumber: header ? header.number : 0,
                        method: this.method
                    })]);
                let result;
                if ((0, util_1.isFunction)(signer.signPayload)) {
                    result = await signer.signPayload(payload.toPayload());
                }
                else if ((0, util_1.isFunction)(signer.signRaw)) {
                    result = await signer.signRaw(payload.toRaw());
                }
                else {
                    throw new Error('Invalid signer interface, it should implement either signPayload or signRaw (or both)');
                }
                // Here we explicitly call `toPayload()` again instead of working with an object
                // (reference) as passed to the signer. This means that we are sure that the
                // payload data is not modified from our inputs, but the signer
                super.addSignature(address, result.signature, payload.toPayload());
                return result.id;
            };
            this.__internal__updateSigner = (status, info) => {
                if (info && (info.updateId !== -1)) {
                    const { options, updateId } = info;
                    const signer = options.signer || api.signer;
                    if (signer && (0, util_1.isFunction)(signer.update)) {
                        signer.update(updateId, status);
                    }
                }
            };
            this.__internal__ignoreStatusCb = apiType === 'rxjs';
        }
        get hasDryRun() {
            return (0, util_1.isFunction)(api.rpc.system?.dryRun);
        }
        get hasPaymentInfo() {
            return (0, util_1.isFunction)(api.call.transactionPaymentApi?.queryInfo);
        }
        // dry run an extrinsic
        dryRun(account, optionsOrHash) {
            if (!this.hasDryRun) {
                throw new Error('The system.dryRun RPC call is not available in your environment');
            }
            if (blockHash || (0, util_1.isString)(optionsOrHash) || (0, util_1.isU8a)(optionsOrHash)) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-return
                return decorateMethod(() => api.rpc.system.dryRun(this.toHex(), blockHash || optionsOrHash));
            }
            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call
            return decorateMethod(() => this.__internal__observeSign(account, optionsOrHash).pipe((0, rxjs_1.switchMap)(() => api.rpc.system.dryRun(this.toHex()))))();
        }
        // calculate the payment info for this transaction (if signed and submitted)
        paymentInfo(account, optionsOrHash) {
            if (!this.hasPaymentInfo) {
                throw new Error('The transactionPaymentApi.queryInfo runtime call is not available in your environment');
            }
            if (blockHash || (0, util_1.isString)(optionsOrHash) || (0, util_1.isU8a)(optionsOrHash)) {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-return
                return decorateMethod(() => api.callAt(blockHash || optionsOrHash).pipe((0, rxjs_1.switchMap)((callAt) => {
                    const u8a = this.toU8a();
                    return callAt.transactionPaymentApi.queryInfo(u8a, u8a.length);
                })));
            }
            const [allOptions] = makeSignAndSendOptions(optionsOrHash);
            const address = (0, index_js_1.isKeyringPair)(account) ? account.address : account.toString();
            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call
            return decorateMethod(() => api.derive.tx.signingInfo(address, allOptions.nonce, allOptions.era).pipe((0, rxjs_1.first)(), (0, rxjs_1.switchMap)((signingInfo) => {
                // setup our options (same way as in signAndSend)
                const eraOptions = makeEraOptions(api, this.registry, allOptions, signingInfo);
                const signOptions = makeSignOptions(api, eraOptions, {});
                // 1. Don't use the internal objects inside the new tx (hence toU8a)
                // 2. Don't override the data from existing signed extrinsics
                // 3. Ensure that this object stays intact, with no new sign after operation
                const u8a = api.tx(this.toU8a()).signFake(address, signOptions).toU8a();
                return api.call.transactionPaymentApi.queryInfo(u8a, u8a.length);
            })))();
        }
        // send implementation for both immediate Hash and statusCb variants
        send(statusCb) {
            const isSubscription = api.hasSubscriptions && (this.__internal__ignoreStatusCb || !!statusCb);
            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call
            return decorateMethod(isSubscription
                ? this.__internal__observeSubscribe
                : this.__internal__observeSend)(statusCb);
        }
        /**
         * @description Signs a transaction, returning `this` to allow chaining. E.g.: `signAsync(...).send()`. Like `.signAndSend` this will retrieve the nonce and blockHash to send the tx with.
         */
        signAsync(account, partialOptions) {
            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call
            return decorateMethod(() => this.__internal__observeSign(account, partialOptions).pipe((0, rxjs_1.map)(() => this)))();
        }
        // signAndSend implementation for all 3 cases above
        signAndSend(account, partialOptions, optionalStatusCb) {
            const [options, statusCb] = makeSignAndSendOptions(partialOptions, optionalStatusCb);
            const isSubscription = api.hasSubscriptions && (this.__internal__ignoreStatusCb || !!statusCb);
            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call
            return decorateMethod(() => this.__internal__observeSign(account, options).pipe((0, rxjs_1.switchMap)((info) => isSubscription
                ? this.__internal__observeSubscribe(info)
                : this.__internal__observeSend(info))) // FIXME This is wrong, SubmittableResult is _not_ a codec
            )(statusCb);
        }
        // adds a transform to the result, applied before result is returned
        withResultTransform(transform) {
            this.__internal__transformResult = transform;
            return this;
        }
    }
    return Submittable;
}
exports.createClass = createClass;


/***/ }),

/***/ 84694:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createSubmittable = void 0;
const createClass_js_1 = __nccwpck_require__(56335);
function createSubmittable(apiType, api, decorateMethod, registry, blockHash) {
    const Submittable = (0, createClass_js_1.createClass)({ api, apiType, blockHash, decorateMethod });
    return (extrinsic) => new Submittable(registry || api.registry, extrinsic);
}
exports.createSubmittable = createSubmittable;


/***/ }),

/***/ 61766:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SubmittableResult = exports.createSubmittable = void 0;
var createSubmittable_js_1 = __nccwpck_require__(84694);
Object.defineProperty(exports, "createSubmittable", ({ enumerable: true, get: function () { return createSubmittable_js_1.createSubmittable; } }));
var Result_js_1 = __nccwpck_require__(8217);
Object.defineProperty(exports, "SubmittableResult", ({ enumerable: true, get: function () { return Result_js_1.SubmittableResult; } }));


/***/ }),

/***/ 19378:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.augmentObject = void 0;
const util_1 = __nccwpck_require__(29795);
const l = (0, util_1.logger)('api/augment');
function logLength(type, values, and = []) {
    return values.length
        ? ` ${values.length} ${type}${and.length ? ' and' : ''}`
        : '';
}
function logValues(type, values) {
    return values.length
        ? `\n\t${type.padStart(7)}: ${values.sort().join(', ')}`
        : '';
}
function warn(prefix, type, [added, removed]) {
    if (added.length || removed.length) {
        l.warn(`api.${prefix}: Found${logLength('added', added, removed)}${logLength('removed', removed)} ${type}:${logValues('added', added)}${logValues('removed', removed)}`);
    }
}
function findSectionExcludes(a, b) {
    return a.filter((s) => !b.includes(s));
}
function findSectionIncludes(a, b) {
    return a.filter((s) => b.includes(s));
}
function extractSections(src, dst) {
    const srcSections = Object.keys(src);
    const dstSections = Object.keys(dst);
    return [
        findSectionExcludes(srcSections, dstSections),
        findSectionExcludes(dstSections, srcSections)
    ];
}
function findMethodExcludes(src, dst) {
    const srcSections = Object.keys(src);
    const dstSections = findSectionIncludes(Object.keys(dst), srcSections);
    const excludes = [];
    for (let s = 0, scount = dstSections.length; s < scount; s++) {
        const section = dstSections[s];
        const srcMethods = Object.keys(src[section]);
        const dstMethods = Object.keys(dst[section]);
        for (let d = 0, mcount = dstMethods.length; d < mcount; d++) {
            const method = dstMethods[d];
            if (!srcMethods.includes(method)) {
                excludes.push(`${section}.${method}`);
            }
        }
    }
    return excludes;
}
function extractMethods(src, dst) {
    return [
        findMethodExcludes(dst, src),
        findMethodExcludes(src, dst)
    ];
}
/**
 * @description Takes a decorated api section (e.g. api.tx) and augment it with the details. It does not override what is
 * already available, but rather just adds new missing items into the result object.
 * @internal
 */
function augmentObject(prefix, src, dst, fromEmpty = false) {
    fromEmpty && (0, util_1.objectClear)(dst);
    // NOTE: This part is slightly problematic since it will get the
    // values for at least all the sections and the names of the methods
    // (Since methods won't be decorated before lazy, this _may_ be ok)
    if (prefix && Object.keys(dst).length) {
        warn(prefix, 'modules', extractSections(src, dst));
        warn(prefix, 'calls', extractMethods(src, dst));
    }
    const sections = Object.keys(src);
    for (let i = 0, count = sections.length; i < count; i++) {
        const section = sections[i];
        const methods = src[section];
        // We don't set here with a lazy interface, we decorate based
        // on the top-level structure (this bypasses adding lazy onto lazy)
        if (!dst[section]) {
            dst[section] = {};
        }
        (0, util_1.lazyMethods)(dst[section], Object.keys(methods), (m) => methods[m]);
    }
    return dst;
}
exports.augmentObject = augmentObject;


/***/ }),

/***/ 41805:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decorateDeriveSections = void 0;
const api_derive_1 = __nccwpck_require__(17913);
/**
 * This is a section decorator which keeps all type information.
 */
function decorateDeriveSections(decorateMethod, derives) {
    const getKeys = (s) => Object.keys(derives[s]);
    const creator = (s, m) => decorateMethod(derives[s][m]);
    const result = {};
    const names = Object.keys(derives);
    for (let i = 0, count = names.length; i < count; i++) {
        (0, api_derive_1.lazyDeriveSection)(result, names[i], getKeys, creator);
    }
    return result;
}
exports.decorateDeriveSections = decorateDeriveSections;


/***/ }),

/***/ 12588:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.filterEvents = void 0;
const util_1 = __nccwpck_require__(29795);
const logging_js_1 = __nccwpck_require__(3232);
function filterEvents(txHash, { block: { extrinsics, header } }, allEvents, status) {
    // extrinsics to hashes
    for (const [txIndex, x] of extrinsics.entries()) {
        if (x.hash.eq(txHash)) {
            return {
                blockNumber: (0, util_1.isCompact)(header.number) ? header.number.unwrap() : header.number,
                events: allEvents.filter(({ phase }) => phase.isApplyExtrinsic &&
                    phase.asApplyExtrinsic.eqn(txIndex)),
                txIndex
            };
        }
    }
    // if we do get the block after finalized, it _should_ be there
    // only warn on filtering with isInBlock (finalization finalizes after)
    if (status.isInBlock) {
        const allHashes = extrinsics.map((x) => x.hash.toHex());
        logging_js_1.l.warn(`block ${header.hash.toHex()}: Unable to find extrinsic ${txHash.toHex()} inside ${allHashes.join(', ')}`);
    }
    return {};
}
exports.filterEvents = filterEvents;


/***/ }),

/***/ 7495:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.l = exports.isKeyringPair = exports.filterEvents = void 0;
const tslib_1 = __nccwpck_require__(29723);
var filterEvents_js_1 = __nccwpck_require__(12588);
Object.defineProperty(exports, "filterEvents", ({ enumerable: true, get: function () { return filterEvents_js_1.filterEvents; } }));
var isKeyringPair_js_1 = __nccwpck_require__(40005);
Object.defineProperty(exports, "isKeyringPair", ({ enumerable: true, get: function () { return isKeyringPair_js_1.isKeyringPair; } }));
var logging_js_1 = __nccwpck_require__(3232);
Object.defineProperty(exports, "l", ({ enumerable: true, get: function () { return logging_js_1.l; } }));
tslib_1.__exportStar(__nccwpck_require__(41805), exports);


/***/ }),

/***/ 40005:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isKeyringPair = void 0;
const util_1 = __nccwpck_require__(29795);
function isKeyringPair(account) {
    return (0, util_1.isFunction)(account.sign);
}
exports.isKeyringPair = isKeyringPair;


/***/ }),

/***/ 3232:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.l = void 0;
const util_1 = __nccwpck_require__(29795);
exports.l = (0, util_1.logger)('api/util');


/***/ }),

/***/ 52881:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extractStorageArgs = void 0;
const util_1 = __nccwpck_require__(29795);
function sig({ lookup }, { method, section }, args) {
    return `${section}.${method}(${args.map((a) => lookup.getTypeDef(a).type).join(', ')})`;
}
function extractStorageArgs(registry, creator, _args) {
    const args = _args.filter((a) => !(0, util_1.isUndefined)(a));
    if (creator.meta.type.isPlain) {
        if (args.length !== 0) {
            throw new Error(`${sig(registry, creator, [])} does not take any arguments, ${args.length} found`);
        }
    }
    else {
        const { hashers, key } = creator.meta.type.asMap;
        const keys = hashers.length === 1
            ? [key]
            : registry.lookup.getSiType(key).def.asTuple.map((t) => t);
        if (args.length !== keys.length) {
            throw new Error(`${sig(registry, creator, keys)} is a map, requiring ${keys.length} arguments, ${args.length} found`);
        }
    }
    // pass as tuple
    return [creator, args];
}
exports.extractStorageArgs = extractStorageArgs;


/***/ }),

/***/ 85917:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createTestPairs = exports.createTestKeyring = exports.createPair = exports.packageInfo = exports.Keyring = exports.setSS58Format = exports.encodeAddress = exports.decodeAddress = void 0;
const tslib_1 = __nccwpck_require__(55815);
var util_crypto_1 = __nccwpck_require__(37723);
Object.defineProperty(exports, "decodeAddress", ({ enumerable: true, get: function () { return util_crypto_1.decodeAddress; } }));
Object.defineProperty(exports, "encodeAddress", ({ enumerable: true, get: function () { return util_crypto_1.encodeAddress; } }));
Object.defineProperty(exports, "setSS58Format", ({ enumerable: true, get: function () { return util_crypto_1.setSS58Format; } }));
var keyring_js_1 = __nccwpck_require__(31472);
Object.defineProperty(exports, "Keyring", ({ enumerable: true, get: function () { return keyring_js_1.Keyring; } }));
var packageInfo_js_1 = __nccwpck_require__(2480);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
var index_js_1 = __nccwpck_require__(76168);
Object.defineProperty(exports, "createPair", ({ enumerable: true, get: function () { return index_js_1.createPair; } }));
var testing_js_1 = __nccwpck_require__(7439);
Object.defineProperty(exports, "createTestKeyring", ({ enumerable: true, get: function () { return testing_js_1.createTestKeyring; } }));
var testingPairs_js_1 = __nccwpck_require__(95644);
Object.defineProperty(exports, "createTestPairs", ({ enumerable: true, get: function () { return testingPairs_js_1.createTestPairs; } }));
tslib_1.__exportStar(__nccwpck_require__(20535), exports);


/***/ }),

/***/ 20535:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEV_SEED = exports.DEV_PHRASE = void 0;
exports.DEV_PHRASE = 'bottom drive obey lake curtain smoke basket hold race lonely fit walk';
exports.DEV_SEED = '0xfac7959dbfe72f052e5a0c3c8d6530f202b02fd8f9f5ca3580ec8deb7797479e';


/***/ }),

/***/ 52423:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(82167);
const packageInfo_2 = __nccwpck_require__(8807);
exports["default"] = [packageInfo_1.packageInfo, packageInfo_2.packageInfo];


/***/ }),

/***/ 31037:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(55815);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(52423));
const packageInfo_js_1 = __nccwpck_require__(2480);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 48587:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(55815);
__nccwpck_require__(31037);
const bundle_js_1 = __nccwpck_require__(85917);
tslib_1.__exportStar(__nccwpck_require__(85917), exports);
exports["default"] = bundle_js_1.Keyring;


/***/ }),

/***/ 31472:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Keyring = void 0;
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const index_js_1 = __nccwpck_require__(76168);
const defaults_js_1 = __nccwpck_require__(20535);
const pairs_js_1 = __nccwpck_require__(32889);
const PairFromSeed = {
    ecdsa: (seed) => (0, util_crypto_1.secp256k1PairFromSeed)(seed),
    ed25519: (seed) => (0, util_crypto_1.ed25519PairFromSeed)(seed),
    ethereum: (seed) => (0, util_crypto_1.secp256k1PairFromSeed)(seed),
    sr25519: (seed) => (0, util_crypto_1.sr25519PairFromSeed)(seed)
};
function pairToPublic({ publicKey }) {
    return publicKey;
}
/**
 * # @polkadot/keyring
 *
 * ## Overview
 *
 * @name Keyring
 * @summary Keyring management of user accounts
 * @description Allows generation of keyring pairs from a variety of input combinations, such as
 * json object containing account address or public key, account metadata, and account encoded using
 * `addFromJson`, or by providing those values as arguments separately to `addFromAddress`,
 * or by providing the mnemonic (seed phrase) and account metadata as arguments to `addFromMnemonic`.
 * Stores the keyring pairs in a keyring pair dictionary. Removal of the keyring pairs from the keyring pair
 * dictionary is achieved using `removePair`. Retrieval of all the stored pairs via `getPairs` or perform
 * lookup of a pair for a given account address or public key using `getPair`. JSON metadata associated with
 * an account may be obtained using `toJson` accompanied by the account passphrase.
 */
class Keyring {
    constructor(options = {}) {
        this.decodeAddress = util_crypto_1.decodeAddress;
        /**
         * @name encodeAddress
         * @description Encodes the input into an ss58 representation
         */
        this.encodeAddress = (address, ss58Format) => {
            return this.type === 'ethereum'
                ? (0, util_crypto_1.ethereumEncode)(address)
                : (0, util_crypto_1.encodeAddress)(address, ss58Format ?? this.__internal__ss58);
        };
        options.type = options.type || 'ed25519';
        if (!['ecdsa', 'ethereum', 'ed25519', 'sr25519'].includes(options.type || 'undefined')) {
            throw new Error(`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${options.type || 'unknown'}`);
        }
        this.__internal__pairs = new pairs_js_1.Pairs();
        this.__internal__ss58 = options.ss58Format;
        this.__internal__type = options.type;
    }
    /**
     * @description retrieve the pairs (alias for getPairs)
     */
    get pairs() {
        return this.getPairs();
    }
    /**
     * @description retrieve the publicKeys (alias for getPublicKeys)
     */
    get publicKeys() {
        return this.getPublicKeys();
    }
    /**
     * @description Returns the type of the keyring, ed25519, sr25519 or ecdsa
     */
    get type() {
        return this.__internal__type;
    }
    /**
     * @name addPair
     * @summary Stores an account, given a keyring pair, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     */
    addPair(pair) {
        return this.__internal__pairs.add(pair);
    }
    /**
     * @name addFromAddress
     * @summary Stores an account, given an account address, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Allows user to explicitly provide separate inputs including account address or public key, and optionally
     * the associated account metadata, and the default encoded value as arguments (that may be obtained from the json file
     * of an account backup), and then generates a keyring pair from them that it passes to
     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */
    addFromAddress(address, meta = {}, encoded = null, type = this.type, ignoreChecksum, encType) {
        const publicKey = this.decodeAddress(address, ignoreChecksum);
        return this.addPair((0, index_js_1.createPair)({ toSS58: this.encodeAddress, type }, { publicKey, secretKey: new Uint8Array() }, meta, encoded, encType));
    }
    /**
     * @name addFromJson
     * @summary Stores an account, given JSON data, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Allows user to provide a json object argument that contains account information (that may be obtained from the json file
     * of an account backup), and then generates a keyring pair from it that it passes to
     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */
    addFromJson(json, ignoreChecksum) {
        return this.addPair(this.createFromJson(json, ignoreChecksum));
    }
    /**
     * @name addFromMnemonic
     * @summary Stores an account, given a mnemonic, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Allows user to provide a mnemonic (seed phrase that is provided when account is originally created)
     * argument and a metadata argument that contains account information (that may be obtained from the json file
     * of an account backup), and then generates a keyring pair from it that it passes to
     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */
    addFromMnemonic(mnemonic, meta = {}, type = this.type) {
        return this.addFromUri(mnemonic, meta, type);
    }
    /**
     * @name addFromPair
     * @summary Stores an account created from an explicit publicKey/secreteKey combination
     */
    addFromPair(pair, meta = {}, type = this.type) {
        return this.addPair(this.createFromPair(pair, meta, type));
    }
    /**
     * @name addFromSeed
     * @summary Stores an account, given seed data, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Stores in a keyring pair dictionary the public key of the pair as a key and the pair as the associated value.
     * Allows user to provide the account seed as an argument, and then generates a keyring pair from it that it passes to
     * `addPair` to store in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */
    addFromSeed(seed, meta = {}, type = this.type) {
        return this.addPair((0, index_js_1.createPair)({ toSS58: this.encodeAddress, type }, PairFromSeed[type](seed), meta, null));
    }
    /**
     * @name addFromUri
     * @summary Creates an account via an suri
     * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed). The secret can be a hex string, mnemonic phrase or a string (to be padded)
     */
    addFromUri(suri, meta = {}, type = this.type) {
        return this.addPair(this.createFromUri(suri, meta, type));
    }
    /**
     * @name createFromJson
     * @description Creates a pair from a JSON keyfile
     */
    createFromJson({ address, encoded, encoding: { content, type, version }, meta }, ignoreChecksum) {
        if (version === '3' && content[0] !== 'pkcs8') {
            throw new Error(`Unable to decode non-pkcs8 type, [${content.join(',')}] found}`);
        }
        const cryptoType = version === '0' || !Array.isArray(content)
            ? this.type
            : content[1];
        const encType = !Array.isArray(type)
            ? [type]
            : type;
        if (!['ed25519', 'sr25519', 'ecdsa', 'ethereum'].includes(cryptoType)) {
            throw new Error(`Unknown crypto type ${cryptoType}`);
        }
        // Here the address and publicKey are 32 bytes and isomorphic. This is why the address field needs to be the public key for ethereum type pairs
        const publicKey = (0, util_1.isHex)(address)
            ? (0, util_1.hexToU8a)(address)
            : this.decodeAddress(address, ignoreChecksum);
        const decoded = (0, util_1.isHex)(encoded)
            ? (0, util_1.hexToU8a)(encoded)
            : (0, util_crypto_1.base64Decode)(encoded);
        return (0, index_js_1.createPair)({ toSS58: this.encodeAddress, type: cryptoType }, { publicKey, secretKey: new Uint8Array() }, meta, decoded, encType);
    }
    /**
     * @name createFromPair
     * @summary Creates a pair from an explicit publicKey/secreteKey combination
     */
    createFromPair(pair, meta = {}, type = this.type) {
        return (0, index_js_1.createPair)({ toSS58: this.encodeAddress, type }, pair, meta, null);
    }
    /**
     * @name createFromUri
     * @summary Creates a Keypair from an suri
     * @description This creates a pair from the suri, but does not add it to the keyring
     */
    createFromUri(_suri, meta = {}, type = this.type) {
        // here we only aut-add the dev phrase if we have a hard-derived path
        const suri = _suri.startsWith('//')
            ? `${defaults_js_1.DEV_PHRASE}${_suri}`
            : _suri;
        const { derivePath, password, path, phrase } = (0, util_crypto_1.keyExtractSuri)(suri);
        let seed;
        const isPhraseHex = (0, util_1.isHex)(phrase, 256);
        if (isPhraseHex) {
            seed = (0, util_1.hexToU8a)(phrase);
        }
        else {
            const parts = phrase.split(' ');
            if ([12, 15, 18, 21, 24].includes(parts.length)) {
                seed = type === 'ethereum'
                    ? (0, util_crypto_1.mnemonicToLegacySeed)(phrase, '', false, 64)
                    : (0, util_crypto_1.mnemonicToMiniSecret)(phrase, password);
            }
            else {
                if (phrase.length > 32) {
                    throw new Error('specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes');
                }
                seed = (0, util_1.stringToU8a)(phrase.padEnd(32));
            }
        }
        const derived = type === 'ethereum'
            ? isPhraseHex
                ? PairFromSeed[type](seed) // for eth, if the private key is provided as suri, it must be derived only once
                : (0, util_crypto_1.hdEthereum)(seed, derivePath.substring(1))
            : (0, util_crypto_1.keyFromPath)(PairFromSeed[type](seed), path, type);
        return (0, index_js_1.createPair)({ toSS58: this.encodeAddress, type }, derived, meta, null);
    }
    /**
     * @name getPair
     * @summary Retrieves an account keyring pair from the Keyring Pair Dictionary, given an account address
     * @description Returns a keyring pair value from the keyring pair dictionary by performing
     * a key lookup using the provided account address or public key (after decoding it).
     */
    getPair(address) {
        return this.__internal__pairs.get(address);
    }
    /**
     * @name getPairs
     * @summary Retrieves all account keyring pairs from the Keyring Pair Dictionary
     * @description Returns an array list of all the keyring pair values that are stored in the keyring pair dictionary.
     */
    getPairs() {
        return this.__internal__pairs.all();
    }
    /**
     * @name getPublicKeys
     * @summary Retrieves Public Keys of all Keyring Pairs stored in the Keyring Pair Dictionary
     * @description Returns an array list of all the public keys associated with each of the keyring pair values that are stored in the keyring pair dictionary.
     */
    getPublicKeys() {
        return this.__internal__pairs.all().map(pairToPublic);
    }
    /**
     * @name removePair
     * @description Deletes the provided input address or public key from the stored Keyring Pair Dictionary.
     */
    removePair(address) {
        this.__internal__pairs.remove(address);
    }
    /**
     * @name setSS58Format;
     * @description Sets the ss58 format for the keyring
     */
    setSS58Format(ss58) {
        this.__internal__ss58 = ss58;
    }
    /**
     * @name toJson
     * @summary Returns a JSON object associated with the input argument that contains metadata assocated with an account
     * @description Returns a JSON object containing the metadata associated with an account
     * when valid address or public key and when the account passphrase is provided if the account secret
     * is not already unlocked and available in memory. Note that in [Polkadot-JS Apps](https://github.com/polkadot-js/apps) the user
     * may backup their account to a JSON file that contains this information.
     */
    toJson(address, passphrase) {
        return this.__internal__pairs.get(address).toJson(passphrase);
    }
}
exports.Keyring = Keyring;


/***/ }),

/***/ 2480:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/keyring', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 60752:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decodePair = void 0;
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const defaults_js_1 = __nccwpck_require__(64676);
const SEED_OFFSET = defaults_js_1.PKCS8_HEADER.length;
function decodePair(passphrase, encrypted, _encType) {
    const encType = Array.isArray(_encType) || _encType === undefined
        ? _encType
        : [_encType];
    const decrypted = (0, util_crypto_1.jsonDecryptData)(encrypted, passphrase, encType);
    const header = decrypted.subarray(0, defaults_js_1.PKCS8_HEADER.length);
    if (!(0, util_1.u8aEq)(header, defaults_js_1.PKCS8_HEADER)) {
        throw new Error('Invalid Pkcs8 header found in body');
    }
    let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + defaults_js_1.SEC_LENGTH);
    let divOffset = SEED_OFFSET + defaults_js_1.SEC_LENGTH;
    let divider = decrypted.subarray(divOffset, divOffset + defaults_js_1.PKCS8_DIVIDER.length);
    // old-style, we have the seed here
    if (!(0, util_1.u8aEq)(divider, defaults_js_1.PKCS8_DIVIDER)) {
        divOffset = SEED_OFFSET + defaults_js_1.SEED_LENGTH;
        secretKey = decrypted.subarray(SEED_OFFSET, divOffset);
        divider = decrypted.subarray(divOffset, divOffset + defaults_js_1.PKCS8_DIVIDER.length);
        if (!(0, util_1.u8aEq)(divider, defaults_js_1.PKCS8_DIVIDER)) {
            throw new Error('Invalid Pkcs8 divider found in body');
        }
    }
    const pubOffset = divOffset + defaults_js_1.PKCS8_DIVIDER.length;
    const publicKey = decrypted.subarray(pubOffset, pubOffset + defaults_js_1.PUB_LENGTH);
    return {
        publicKey,
        secretKey
    };
}
exports.decodePair = decodePair;


/***/ }),

/***/ 64676:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SEED_LENGTH = exports.SEC_LENGTH = exports.SALT_LENGTH = exports.PUB_LENGTH = exports.PKCS8_HEADER = exports.PKCS8_DIVIDER = void 0;
exports.PKCS8_DIVIDER = new Uint8Array([161, 35, 3, 33, 0]);
exports.PKCS8_HEADER = new Uint8Array([48, 83, 2, 1, 1, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32]);
exports.PUB_LENGTH = 32;
exports.SALT_LENGTH = 32;
exports.SEC_LENGTH = 64;
exports.SEED_LENGTH = 32;


/***/ }),

/***/ 61357:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.encodePair = void 0;
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const defaults_js_1 = __nccwpck_require__(64676);
function encodePair({ publicKey, secretKey }, passphrase) {
    if (!secretKey) {
        throw new Error('Expected a valid secretKey to be passed to encode');
    }
    const encoded = (0, util_1.u8aConcat)(defaults_js_1.PKCS8_HEADER, secretKey, defaults_js_1.PKCS8_DIVIDER, publicKey);
    if (!passphrase) {
        return encoded;
    }
    const { params, password, salt } = (0, util_crypto_1.scryptEncode)(passphrase);
    const { encrypted, nonce } = (0, util_crypto_1.naclEncrypt)(encoded, password.subarray(0, 32));
    return (0, util_1.u8aConcat)((0, util_crypto_1.scryptToU8a)(salt, params), nonce, encrypted);
}
exports.encodePair = encodePair;


/***/ }),

/***/ 76168:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createPair = void 0;
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const decode_js_1 = __nccwpck_require__(60752);
const encode_js_1 = __nccwpck_require__(61357);
const toJson_js_1 = __nccwpck_require__(56265);
const SIG_TYPE_NONE = new Uint8Array();
const TYPE_FROM_SEED = {
    ecdsa: util_crypto_1.secp256k1PairFromSeed,
    ed25519: util_crypto_1.ed25519PairFromSeed,
    ethereum: util_crypto_1.secp256k1PairFromSeed,
    sr25519: util_crypto_1.sr25519PairFromSeed
};
const TYPE_PREFIX = {
    ecdsa: new Uint8Array([2]),
    ed25519: new Uint8Array([0]),
    ethereum: new Uint8Array([2]),
    sr25519: new Uint8Array([1])
};
const TYPE_SIGNATURE = {
    ecdsa: (m, p) => (0, util_crypto_1.secp256k1Sign)(m, p, 'blake2'),
    ed25519: util_crypto_1.ed25519Sign,
    ethereum: (m, p) => (0, util_crypto_1.secp256k1Sign)(m, p, 'keccak'),
    sr25519: util_crypto_1.sr25519Sign
};
const TYPE_ADDRESS = {
    ecdsa: (p) => p.length > 32 ? (0, util_crypto_1.blake2AsU8a)(p) : p,
    ed25519: (p) => p,
    ethereum: (p) => p.length === 20 ? p : (0, util_crypto_1.keccakAsU8a)((0, util_crypto_1.secp256k1Expand)(p)),
    sr25519: (p) => p
};
function isLocked(secretKey) {
    return !secretKey || (0, util_1.u8aEmpty)(secretKey);
}
function vrfHash(proof, context, extra) {
    return (0, util_crypto_1.blake2AsU8a)((0, util_1.u8aConcat)(context || '', extra || '', proof));
}
/**
 * @name createPair
 * @summary Creates a keyring pair object
 * @description Creates a keyring pair object with provided account public key, metadata, and encoded arguments.
 * The keyring pair stores the account state including the encoded address and associated metadata.
 *
 * It has properties whose values are functions that may be called to perform account actions:
 *
 * - `address` function retrieves the address associated with the account.
 * - `decodedPkcs8` function is called with the account passphrase and account encoded public key.
 * It decodes the encoded public key using the passphrase provided to obtain the decoded account public key
 * and associated secret key that are then available in memory, and changes the account address stored in the
 * state of the pair to correspond to the address of the decoded public key.
 * - `encodePkcs8` function when provided with the correct passphrase associated with the account pair
 * and when the secret key is in memory (when the account pair is not locked) it returns an encoded
 * public key of the account.
 * - `meta` is the metadata that is stored in the state of the pair, either when it was originally
 * created or set via `setMeta`.
 * - `publicKey` returns the public key stored in memory for the pair.
 * - `sign` may be used to return a signature by signing a provided message with the secret
 * key (if it is in memory) using Nacl.
 * - `toJson` calls another `toJson` function and provides the state of the pair,
 * it generates arguments to be passed to the other `toJson` function including an encoded public key of the account
 * that it generates using the secret key from memory (if it has been made available in memory)
 * and the optionally provided passphrase argument. It passes a third boolean argument to `toJson`
 * indicating whether the public key has been encoded or not (if a passphrase argument was provided then it is encoded).
 * The `toJson` function that it calls returns a JSON object with properties including the `address`
 * and `meta` that are assigned with the values stored in the corresponding state variables of the account pair,
 * an `encoded` property that is assigned with the encoded public key in hex format, and an `encoding`
 * property that indicates whether the public key value of the `encoded` property is encoded or not.
 */
function createPair({ toSS58, type }, { publicKey, secretKey }, meta = {}, encoded = null, encTypes) {
    const decodePkcs8 = (passphrase, userEncoded) => {
        const decoded = (0, decode_js_1.decodePair)(passphrase, userEncoded || encoded, encTypes);
        if (decoded.secretKey.length === 64) {
            publicKey = decoded.publicKey;
            secretKey = decoded.secretKey;
        }
        else {
            const pair = TYPE_FROM_SEED[type](decoded.secretKey);
            publicKey = pair.publicKey;
            secretKey = pair.secretKey;
        }
    };
    const recode = (passphrase) => {
        isLocked(secretKey) && encoded && decodePkcs8(passphrase, encoded);
        encoded = (0, encode_js_1.encodePair)({ publicKey, secretKey }, passphrase); // re-encode, latest version
        encTypes = undefined; // swap to defaults, latest version follows
        return encoded;
    };
    const encodeAddress = () => {
        const raw = TYPE_ADDRESS[type](publicKey);
        return type === 'ethereum'
            ? (0, util_crypto_1.ethereumEncode)(raw)
            : toSS58(raw);
    };
    return {
        get address() {
            return encodeAddress();
        },
        get addressRaw() {
            const raw = TYPE_ADDRESS[type](publicKey);
            return type === 'ethereum'
                ? raw.slice(-20)
                : raw;
        },
        get isLocked() {
            return isLocked(secretKey);
        },
        get meta() {
            return meta;
        },
        get publicKey() {
            return publicKey;
        },
        get type() {
            return type;
        },
        // eslint-disable-next-line sort-keys
        decodePkcs8,
        derive: (suri, meta) => {
            if (type === 'ethereum') {
                throw new Error('Unable to derive on this keypair');
            }
            else if (isLocked(secretKey)) {
                throw new Error('Cannot derive on a locked keypair');
            }
            const { path } = (0, util_crypto_1.keyExtractPath)(suri);
            const derived = (0, util_crypto_1.keyFromPath)({ publicKey, secretKey }, path, type);
            return createPair({ toSS58, type }, derived, meta, null);
        },
        encodePkcs8: (passphrase) => {
            return recode(passphrase);
        },
        lock: () => {
            secretKey = new Uint8Array();
        },
        setMeta: (additional) => {
            meta = (0, util_1.objectSpread)({}, meta, additional);
        },
        sign: (message, options = {}) => {
            if (isLocked(secretKey)) {
                throw new Error('Cannot sign with a locked key pair');
            }
            return (0, util_1.u8aConcat)(options.withType
                ? TYPE_PREFIX[type]
                : SIG_TYPE_NONE, TYPE_SIGNATURE[type]((0, util_1.u8aToU8a)(message), { publicKey, secretKey }));
        },
        toJson: (passphrase) => {
            // NOTE: For ecdsa and ethereum, the publicKey cannot be extracted from the address. For these
            // pass the hex-encoded publicKey through to the address portion of the JSON (before decoding)
            // unless the publicKey is already an address
            const address = ['ecdsa', 'ethereum'].includes(type)
                ? publicKey.length === 20
                    ? (0, util_1.u8aToHex)(publicKey)
                    : (0, util_1.u8aToHex)((0, util_crypto_1.secp256k1Compress)(publicKey))
                : encodeAddress();
            return (0, toJson_js_1.pairToJson)(type, { address, meta }, recode(passphrase), !!passphrase);
        },
        unlock: (passphrase) => {
            return decodePkcs8(passphrase);
        },
        verify: (message, signature, signerPublic) => {
            return (0, util_crypto_1.signatureVerify)(message, signature, TYPE_ADDRESS[type]((0, util_1.u8aToU8a)(signerPublic))).isValid;
        },
        vrfSign: (message, context, extra) => {
            if (isLocked(secretKey)) {
                throw new Error('Cannot sign with a locked key pair');
            }
            if (type === 'sr25519') {
                return (0, util_crypto_1.sr25519VrfSign)(message, { secretKey }, context, extra);
            }
            const proof = TYPE_SIGNATURE[type]((0, util_1.u8aToU8a)(message), { publicKey, secretKey });
            return (0, util_1.u8aConcat)(vrfHash(proof, context, extra), proof);
        },
        vrfVerify: (message, vrfResult, signerPublic, context, extra) => {
            if (type === 'sr25519') {
                return (0, util_crypto_1.sr25519VrfVerify)(message, vrfResult, publicKey, context, extra);
            }
            const result = (0, util_crypto_1.signatureVerify)(message, (0, util_1.u8aConcat)(TYPE_PREFIX[type], vrfResult.subarray(32)), TYPE_ADDRESS[type]((0, util_1.u8aToU8a)(signerPublic)));
            return result.isValid && (0, util_1.u8aEq)(vrfResult.subarray(0, 32), vrfHash(vrfResult.subarray(32), context, extra));
        }
    };
}
exports.createPair = createPair;


/***/ }),

/***/ 45479:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nobody = void 0;
const publicKey = new Uint8Array(32);
const address = '5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM';
const meta = {
    isTesting: true,
    name: 'nobody'
};
const json = {
    address,
    encoded: '',
    encoding: {
        content: ['pkcs8', 'ed25519'],
        type: 'none',
        version: '0'
    },
    meta
};
const pair = {
    address,
    addressRaw: publicKey,
    decodePkcs8: (_passphrase, _encoded) => undefined,
    derive: (_suri, _meta) => pair,
    encodePkcs8: (_passphrase) => new Uint8Array(0),
    isLocked: true,
    lock: () => {
        // no locking, it is always locked
    },
    meta,
    publicKey,
    setMeta: (_meta) => undefined,
    sign: (_message) => new Uint8Array(64),
    toJson: (_passphrase) => json,
    type: 'ed25519',
    unlock: (_passphrase) => undefined,
    verify: (_message, _signature) => false,
    vrfSign: (_message, _context, _extra) => new Uint8Array(96),
    vrfVerify: (_message, _vrfResult, _context, _extra) => false
};
function nobody() {
    return pair;
}
exports.nobody = nobody;


/***/ }),

/***/ 56265:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pairToJson = void 0;
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
function pairToJson(type, { address, meta }, encoded, isEncrypted) {
    return (0, util_1.objectSpread)((0, util_crypto_1.jsonEncryptFormat)(encoded, ['pkcs8', type], isEncrypted), {
        address,
        meta
    });
}
exports.pairToJson = pairToJson;


/***/ }),

/***/ 32889:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Pairs = void 0;
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
class Pairs {
    constructor() {
        this.__internal__map = {};
    }
    add(pair) {
        this.__internal__map[(0, util_crypto_1.decodeAddress)(pair.address).toString()] = pair;
        return pair;
    }
    all() {
        return Object.values(this.__internal__map);
    }
    get(address) {
        const pair = this.__internal__map[(0, util_crypto_1.decodeAddress)(address).toString()];
        if (!pair) {
            throw new Error(`Unable to retrieve keypair '${(0, util_1.isU8a)(address) || (0, util_1.isHex)(address)
                ? (0, util_1.u8aToHex)((0, util_1.u8aToU8a)(address))
                : address}'`);
        }
        return pair;
    }
    remove(address) {
        delete this.__internal__map[(0, util_crypto_1.decodeAddress)(address).toString()];
    }
}
exports.Pairs = Pairs;


/***/ }),

/***/ 7439:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createTestKeyring = exports.PAIRSETHEREUM = exports.PAIRSSR25519 = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(76168);
const keyring_js_1 = __nccwpck_require__(31472);
exports.PAIRSSR25519 = [
    {
        p: '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',
        s: '0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011',
        seed: 'Alice',
        type: 'sr25519'
    },
    {
        p: '0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f',
        s: '0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd',
        seed: 'Alice//stash',
        type: 'sr25519'
    },
    {
        p: '0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48',
        s: '0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325',
        seed: 'Bob',
        type: 'sr25519'
    },
    {
        p: '0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e',
        s: '0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde',
        seed: 'Bob//stash',
        type: 'sr25519'
    },
    {
        p: '0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22',
        s: '0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c',
        seed: 'Charlie',
        type: 'sr25519'
    },
    {
        p: '0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20',
        s: '0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568',
        seed: 'Dave',
        type: 'sr25519'
    },
    {
        p: '0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e',
        s: '0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587',
        seed: 'Eve',
        type: 'sr25519'
    },
    {
        p: '0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c',
        s: '0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426',
        seed: 'Ferdie',
        type: 'sr25519'
    }
];
exports.PAIRSETHEREUM = [
    {
        name: 'Alith',
        p: '0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f',
        s: '0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133',
        type: 'ethereum'
    },
    {
        name: 'Baltathar',
        p: '0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518',
        s: '0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b',
        type: 'ethereum'
    },
    {
        name: 'Charleth',
        p: '0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e',
        s: '0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b',
        type: 'ethereum'
    },
    {
        name: 'Dorothy',
        p: '0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c',
        s: '0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68',
        type: 'ethereum'
    },
    {
        name: 'Ethan',
        p: '0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa',
        s: '0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4',
        type: 'ethereum'
    },
    {
        name: 'Faith',
        p: '0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74',
        s: '0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df',
        type: 'ethereum'
    }
];
function createMeta(name, seed) {
    if (!name && !seed) {
        throw new Error('Testing pair should have either a name or a seed');
    }
    return {
        isTesting: true,
        name: name || seed?.replace('//', '_').toLowerCase()
    };
}
/**
 * @name testKeyring
 * @summary Create an instance of Keyring pre-populated with locked test accounts
 * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)
 * are available on the dev chain and each test account is initialized with DOT funds.
 */
function createTestKeyring(options = {}, isDerived = true) {
    const keyring = new keyring_js_1.Keyring(options);
    const pairs = options.type === 'ethereum'
        ? exports.PAIRSETHEREUM
        : exports.PAIRSSR25519;
    for (const { name, p, s, seed, type } of pairs) {
        const meta = createMeta(name, seed);
        const pair = !isDerived && !name && seed
            ? keyring.addFromUri(seed, meta, options.type)
            : keyring.addPair((0, index_js_1.createPair)({ toSS58: keyring.encodeAddress, type }, { publicKey: (0, util_1.hexToU8a)(p), secretKey: (0, util_1.hexToU8a)(s) }, meta));
        pair.lock = () => {
            // we don't have lock/unlock functionality here
        };
    }
    return keyring;
}
exports.createTestKeyring = createTestKeyring;


/***/ }),

/***/ 95644:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createTestPairs = void 0;
const nobody_js_1 = __nccwpck_require__(45479);
const testing_js_1 = __nccwpck_require__(7439);
function createTestPairs(options, isDerived = true) {
    const keyring = (0, testing_js_1.createTestKeyring)(options, isDerived);
    const pairs = keyring.getPairs();
    const map = { nobody: (0, nobody_js_1.nobody)() };
    for (const p of pairs) {
        if (p.meta.name) {
            map[p.meta.name] = p;
        }
    }
    return map;
}
exports.createTestPairs = createTestPairs;


/***/ }),

/***/ 75112:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.knownGenesis = void 0;
exports.knownGenesis = {
    acala: [
        '0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'
    ],
    ajuna: [
        '0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee'
    ],
    'aleph-node': [
        '0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'
    ],
    astar: [
        '0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'
    ],
    basilisk: [
        '0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'
    ],
    bifrost: [
        '0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'
    ],
    'bifrost-kusama': [
        '0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'
    ],
    bittensor: [
        '0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03'
    ],
    centrifuge: [
        '0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82',
        '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'
    ],
    cere: [
        '0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c'
    ],
    composable: [
        '0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'
    ],
    darwinia: [
        '0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6'
    ],
    'dock-mainnet': [
        '0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae',
        '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'
    ],
    edgeware: [
        '0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'
    ],
    enjin: [
        '0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9'
    ],
    equilibrium: [
        '0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'
    ],
    genshiro: [
        '0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'
    ],
    hydradx: [
        '0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d',
        '0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc',
        '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9',
        '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047',
        '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1
    ],
    'interlay-parachain': [
        '0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72'
    ],
    karura: [
        '0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'
    ],
    khala: [
        '0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d'
    ],
    kulupu: [
        '0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'
    ],
    kusama: [
        '0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe',
        '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636',
        '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1
    ],
    matrixchain: [
        '0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615'
    ],
    nodle: [
        '0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'
    ],
    origintrail: [
        '0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174'
    ],
    p3d: [
        '0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66'
    ],
    parallel: [
        '0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'
    ],
    pendulum: [
        '0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86'
    ],
    phala: [
        '0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736'
    ],
    picasso: [
        '0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc',
        '0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'
    ],
    polkadex: [
        '0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'
    ],
    polkadot: [
        '0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'
    ],
    polymesh: [
        '0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'
    ],
    rococo: [
        '0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e',
        '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897',
        '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770',
        '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff',
        '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a',
        '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9',
        '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779',
        '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215',
        '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9',
        '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147',
        '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd',
        '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'
    ],
    sora: [
        '0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'
    ],
    stafi: [
        '0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'
    ],
    statemine: [
        '0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'
    ],
    statemint: [
        '0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'
    ],
    subsocial: [
        '0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'
    ],
    ternoa: [
        '0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e'
    ],
    unique: [
        '0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31'
    ],
    vtb: [
        '0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f',
        '0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa'
    ],
    westend: [
        '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'
    ],
    xxnetwork: [
        '0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa'
    ],
    zeitgeist: [
        '0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060'
    ]
};


/***/ }),

/***/ 84265:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.knownIcon = void 0;
exports.knownIcon = {
    centrifuge: 'polkadot',
    kusama: 'polkadot',
    polkadot: 'polkadot',
    sora: 'polkadot',
    statemine: 'polkadot',
    statemint: 'polkadot',
    westmint: 'polkadot'
};


/***/ }),

/***/ 90903:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.knownTestnet = exports.knownLedger = exports.knownIcon = exports.knownGenesis = void 0;
var genesis_js_1 = __nccwpck_require__(75112);
Object.defineProperty(exports, "knownGenesis", ({ enumerable: true, get: function () { return genesis_js_1.knownGenesis; } }));
var icons_js_1 = __nccwpck_require__(84265);
Object.defineProperty(exports, "knownIcon", ({ enumerable: true, get: function () { return icons_js_1.knownIcon; } }));
var ledger_js_1 = __nccwpck_require__(23499);
Object.defineProperty(exports, "knownLedger", ({ enumerable: true, get: function () { return ledger_js_1.knownLedger; } }));
var testnets_js_1 = __nccwpck_require__(56470);
Object.defineProperty(exports, "knownTestnet", ({ enumerable: true, get: function () { return testnets_js_1.knownTestnet; } }));


/***/ }),

/***/ 23499:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.knownLedger = void 0;
exports.knownLedger = {
    acala: 0x00000313,
    ajuna: 0x00000162,
    'aleph-node': 0x00000283,
    astar: 0x0000032a,
    bifrost: 0x00000314,
    'bifrost-kusama': 0x00000314,
    centrifuge: 0x000002eb,
    composable: 0x00000162,
    darwinia: 0x00000162,
    'dock-mainnet': 0x00000252,
    edgeware: 0x0000020b,
    enjin: 0x00000483,
    equilibrium: 0x05f5e0fd,
    genshiro: 0x05f5e0fc,
    hydradx: 0x00000162,
    'interlay-parachain': 0x00000162,
    karura: 0x000002ae,
    khala: 0x000001b2,
    kusama: 0x000001b2,
    matrixchain: 0x00000483,
    nodle: 0x000003eb,
    origintrail: 0x00000162,
    parallel: 0x00000162,
    pendulum: 0x00000162,
    phala: 0x00000162,
    picasso: 0x000001b2,
    polkadex: 0x0000031f,
    polkadot: 0x00000162,
    polymesh: 0x00000253,
    sora: 0x00000269,
    stafi: 0x0000038b,
    statemine: 0x000001b2,
    statemint: 0x00000162,
    ternoa: 0x00003e3,
    unique: 0x00000162,
    vtb: 0x000002b6,
    xxnetwork: 0x000007a3,
    zeitgeist: 0x00000162
};


/***/ }),

/***/ 56470:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.knownTestnet = void 0;
exports.knownTestnet = {
    '': true,
    'cess-testnet': true,
    'dock-testnet': true,
    jupiter: true,
    'mathchain-testnet': true,
    p3dt: true,
    subspace_testnet: true,
    'zero-alphaville': true
};


/***/ }),

/***/ 52049:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(42914);
tslib_1.__exportStar(__nccwpck_require__(39165), exports);
var packageInfo_js_1 = __nccwpck_require__(55244);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));


/***/ }),

/***/ 39165:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.selectableNetworks = exports.availableNetworks = exports.allNetworks = void 0;
const tslib_1 = __nccwpck_require__(42914);
const ss58_registry_1 = tslib_1.__importDefault(__nccwpck_require__(31888));
const index_js_1 = __nccwpck_require__(90903);
const UNSORTED = [0, 2, 42];
const TESTNETS = ['testnet'];
function toExpanded(o) {
    const network = o.network || '';
    const nameParts = network.replace(/_/g, '-').split('-');
    const n = o;
    // ledger additions
    n.slip44 = index_js_1.knownLedger[network];
    n.hasLedgerSupport = !!n.slip44;
    // general items
    n.genesisHash = index_js_1.knownGenesis[network] || [];
    n.icon = index_js_1.knownIcon[network] || 'substrate';
    // filtering
    n.isTestnet = !!index_js_1.knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);
    n.isIgnored = n.isTestnet || (!(o.standardAccount &&
        o.decimals?.length &&
        o.symbols?.length) &&
        o.prefix !== 42);
    return n;
}
function filterSelectable({ genesisHash, prefix }) {
    return !!genesisHash.length || prefix === 42;
}
function filterAvailable(n) {
    return !n.isIgnored && !!n.network;
}
function sortNetworks(a, b) {
    const isUnSortedA = UNSORTED.includes(a.prefix);
    const isUnSortedB = UNSORTED.includes(b.prefix);
    return isUnSortedA === isUnSortedB
        ? isUnSortedA
            ? 0
            : a.displayName.localeCompare(b.displayName)
        : isUnSortedA
            ? -1
            : 1;
}
exports.allNetworks = ss58_registry_1.default.map(toExpanded);
exports.availableNetworks = exports.allNetworks.filter(filterAvailable).sort(sortNetworks);
exports.selectableNetworks = exports.availableNetworks.filter(filterSelectable);


/***/ }),

/***/ 55244:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/networks', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 87714:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
__nccwpck_require__(81494);


/***/ }),

/***/ 81494:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/* eslint-disable */
Object.defineProperty(exports, "__esModule", ({ value: true }));
__nccwpck_require__(84678);


/***/ }),

/***/ 30162:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
__nccwpck_require__(87714);
var packageInfo_js_1 = __nccwpck_require__(19506);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));


/***/ }),

/***/ 44309:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(82836);
const packageInfo_2 = __nccwpck_require__(74402);
exports["default"] = [packageInfo_1.packageInfo, packageInfo_2.packageInfo];


/***/ }),

/***/ 85876:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(38946);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(44309));
const packageInfo_js_1 = __nccwpck_require__(19506);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 94679:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(38946);
__nccwpck_require__(85876);
tslib_1.__exportStar(__nccwpck_require__(30162), exports);


/***/ }),

/***/ 19506:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/rpc-augment', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 47041:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RpcCore = exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(5510);
const rxjs_1 = __nccwpck_require__(1752);
const types_1 = __nccwpck_require__(79405);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(60501);
var packageInfo_js_1 = __nccwpck_require__(82836);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
tslib_1.__exportStar(__nccwpck_require__(60501), exports);
const l = (0, util_1.logger)('rpc-core');
const EMPTY_META = {
    fallback: undefined,
    modifier: { isOptional: true },
    type: {
        asMap: { linked: { isTrue: false } },
        isMap: false
    }
};
/** @internal */
function logErrorMessage(method, { noErrorLog, params, type }, error) {
    if (noErrorLog) {
        return;
    }
    l.error(`${method}(${params.map(({ isOptional, name, type }) => `${name}${isOptional ? '?' : ''}: ${type}`).join(', ')}): ${type}:: ${error.message}`);
}
function isTreatAsHex(key) {
    // :code is problematic - it does not have the length attached, which is
    // unlike all other storage entries where it is indeed properly encoded
    return ['0x3a636f6465'].includes(key.toHex());
}
/**
 * @name Rpc
 * @summary The API may use a HTTP or WebSockets provider.
 * @description It allows for querying a Polkadot Client Node.
 * WebSockets provider is recommended since HTTP provider only supports basic querying.
 *
 * ```mermaid
 * graph LR;
 *   A[Api] --> |WebSockets| B[WsProvider];
 *   B --> |endpoint| C[ws://127.0.0.1:9944]
 * ```
 *
 * @example
 * <BR>
 *
 * ```javascript
 * import Rpc from '@polkadot/rpc-core';
 * import { WsProvider } from '@polkadot/rpc-provider/ws';
 *
 * const provider = new WsProvider('ws://127.0.0.1:9944');
 * const rpc = new Rpc(provider);
 * ```
 */
class RpcCore {
    /**
     * @constructor
     * Default constructor for the core RPC handler
     * @param  {ProviderInterface} provider An API provider using any of the supported providers (HTTP, SC or WebSocket)
     */
    constructor(instanceId, registry, { isPedantic = true, provider, userRpc = {} }) {
        this.__internal__storageCache = new Map();
        this.__internal__storageCacheHits = 0;
        this.__internal__storageCacheSize = 0;
        this.mapping = new Map();
        this.sections = [];
        if (!provider || !(0, util_1.isFunction)(provider.send)) {
            throw new Error('Expected Provider to API create');
        }
        this.__internal__instanceId = instanceId;
        this.__internal__isPedantic = isPedantic;
        this.__internal__registryDefault = registry;
        this.provider = provider;
        const sectionNames = Object.keys(types_1.rpcDefinitions);
        // these are the base keys (i.e. part of jsonrpc)
        this.sections.push(...sectionNames);
        // decorate all interfaces, defined and user on this instance
        this.addUserInterfaces(userRpc);
    }
    /**
     * @description Returns the connected status of a provider
     */
    get isConnected() {
        return this.provider.isConnected;
    }
    /**
     * @description Manually connect from the attached provider
     */
    connect() {
        return this.provider.connect();
    }
    /**
     * @description Manually disconnect from the attached provider
     */
    disconnect() {
        return this.provider.disconnect();
    }
    /**
     * @description Returns the underlying core stats, including those from teh provider
     */
    get stats() {
        const stats = this.provider.stats;
        return stats
            ? {
                ...stats,
                core: {
                    cacheHits: this.__internal__storageCacheHits,
                    cacheSize: this.__internal__storageCacheSize
                }
            }
            : undefined;
    }
    /**
     * @description Sets a registry swap (typically from Api)
     */
    setRegistrySwap(registrySwap) {
        this.__internal__getBlockRegistry = (0, util_1.memoize)(registrySwap, {
            getInstanceId: () => this.__internal__instanceId
        });
    }
    /**
     * @description Sets a function to resolve block hash from block number
     */
    setResolveBlockHash(resolveBlockHash) {
        this.__internal__getBlockHash = (0, util_1.memoize)(resolveBlockHash, {
            getInstanceId: () => this.__internal__instanceId
        });
    }
    addUserInterfaces(userRpc) {
        // add any extra user-defined sections
        this.sections.push(...Object.keys(userRpc).filter((k) => !this.sections.includes(k)));
        for (let s = 0, scount = this.sections.length; s < scount; s++) {
            const section = this.sections[s];
            const defs = (0, util_1.objectSpread)({}, types_1.rpcDefinitions[section], userRpc[section]);
            const methods = Object.keys(defs);
            for (let m = 0, mcount = methods.length; m < mcount; m++) {
                const method = methods[m];
                const def = defs[method];
                const jsonrpc = def.endpoint || `${section}_${method}`;
                if (!this.mapping.has(jsonrpc)) {
                    const isSubscription = !!def.pubsub;
                    if (!this[section]) {
                        this[section] = {};
                    }
                    this.mapping.set(jsonrpc, (0, util_1.objectSpread)({}, def, { isSubscription, jsonrpc, method, section }));
                    (0, util_1.lazyMethod)(this[section], method, () => isSubscription
                        ? this._createMethodSubscribe(section, method, def)
                        : this._createMethodSend(section, method, def));
                }
            }
        }
    }
    _memomize(creator, def) {
        const memoOpts = { getInstanceId: () => this.__internal__instanceId };
        const memoized = (0, util_1.memoize)(creator(true), memoOpts);
        memoized.raw = (0, util_1.memoize)(creator(false), memoOpts);
        memoized.meta = def;
        return memoized;
    }
    _formatResult(isScale, registry, blockHash, method, def, params, result) {
        return isScale
            ? this._formatOutput(registry, blockHash, method, def, params, result)
            : result;
    }
    _createMethodSend(section, method, def) {
        const rpcName = def.endpoint || `${section}_${method}`;
        const hashIndex = def.params.findIndex(({ isHistoric }) => isHistoric);
        let memoized = null;
        // execute the RPC call, doing a registry swap for historic as applicable
        const callWithRegistry = async (isScale, values) => {
            const blockId = hashIndex === -1
                ? null
                : values[hashIndex];
            const blockHash = blockId && def.params[hashIndex].type === 'BlockNumber'
                ? await this.__internal__getBlockHash?.(blockId)
                : blockId;
            const { registry } = isScale && blockHash && this.__internal__getBlockRegistry
                ? await this.__internal__getBlockRegistry((0, util_1.u8aToU8a)(blockHash))
                : { registry: this.__internal__registryDefault };
            const params = this._formatParams(registry, null, def, values);
            // only cache .at(<blockHash>) queries, e.g. where valid blockHash was supplied
            const result = await this.provider.send(rpcName, params.map((p) => p.toJSON()), !!blockHash);
            return this._formatResult(isScale, registry, blockHash, method, def, params, result);
        };
        const creator = (isScale) => (...values) => {
            const isDelayed = isScale && hashIndex !== -1 && !!values[hashIndex];
            return new rxjs_1.Observable((observer) => {
                callWithRegistry(isScale, values)
                    .then((value) => {
                    observer.next(value);
                    observer.complete();
                })
                    .catch((error) => {
                    logErrorMessage(method, def, error);
                    observer.error(error);
                    observer.complete();
                });
                return () => {
                    // delete old results from cache
                    if (isScale) {
                        memoized?.unmemoize(...values);
                    }
                    else {
                        memoized?.raw.unmemoize(...values);
                    }
                };
            }).pipe(
            // eslint-disable-next-line deprecation/deprecation
            (0, rxjs_1.publishReplay)(1), // create a Replay(1)
            isDelayed
                ? (0, index_js_1.refCountDelay)() // Unsubscribe after delay
                // eslint-disable-next-line deprecation/deprecation
                : (0, rxjs_1.refCount)());
        };
        memoized = this._memomize(creator, def);
        return memoized;
    }
    // create a subscriptor, it subscribes once and resolves with the id as subscribe
    _createSubscriber({ paramsJson, subName, subType, update }, errorHandler) {
        return new Promise((resolve, reject) => {
            this.provider
                .subscribe(subType, subName, paramsJson, update)
                .then(resolve)
                .catch((error) => {
                errorHandler(error);
                reject(error);
            });
        });
    }
    _createMethodSubscribe(section, method, def) {
        const [updateType, subMethod, unsubMethod] = def.pubsub;
        const subName = `${section}_${subMethod}`;
        const unsubName = `${section}_${unsubMethod}`;
        const subType = `${section}_${updateType}`;
        let memoized = null;
        const creator = (isScale) => (...values) => {
            return new rxjs_1.Observable((observer) => {
                // Have at least an empty promise, as used in the unsubscribe
                let subscriptionPromise = Promise.resolve(null);
                const registry = this.__internal__registryDefault;
                const errorHandler = (error) => {
                    logErrorMessage(method, def, error);
                    observer.error(error);
                };
                try {
                    const params = this._formatParams(registry, null, def, values);
                    const update = (error, result) => {
                        if (error) {
                            logErrorMessage(method, def, error);
                            return;
                        }
                        try {
                            observer.next(this._formatResult(isScale, registry, null, method, def, params, result));
                        }
                        catch (error) {
                            observer.error(error);
                        }
                    };
                    subscriptionPromise = this._createSubscriber({ paramsJson: params.map((p) => p.toJSON()), subName, subType, update }, errorHandler);
                }
                catch (error) {
                    errorHandler(error);
                }
                // Teardown logic
                return () => {
                    // Delete from cache, so old results don't hang around
                    if (isScale) {
                        memoized?.unmemoize(...values);
                    }
                    else {
                        memoized?.raw.unmemoize(...values);
                    }
                    // Unsubscribe from provider
                    subscriptionPromise
                        .then((subscriptionId) => (0, util_1.isNull)(subscriptionId)
                        ? Promise.resolve(false)
                        : this.provider.unsubscribe(subType, unsubName, subscriptionId))
                        .catch((error) => logErrorMessage(method, def, error));
                };
            }).pipe((0, index_js_1.drr)());
        };
        memoized = this._memomize(creator, def);
        return memoized;
    }
    _formatParams(registry, blockHash, def, inputs) {
        const count = inputs.length;
        const reqCount = def.params.filter(({ isOptional }) => !isOptional).length;
        if (count < reqCount || count > def.params.length) {
            throw new Error(`Expected ${def.params.length} parameters${reqCount === def.params.length ? '' : ` (${def.params.length - reqCount} optional)`}, ${count} found instead`);
        }
        const params = new Array(count);
        for (let i = 0; i < count; i++) {
            params[i] = registry.createTypeUnsafe(def.params[i].type, [inputs[i]], { blockHash });
        }
        return params;
    }
    _formatOutput(registry, blockHash, method, rpc, params, result) {
        if (rpc.type === 'StorageData') {
            const key = params[0];
            return this._formatStorageData(registry, blockHash, key, result);
        }
        else if (rpc.type === 'StorageChangeSet') {
            const keys = params[0];
            return keys
                ? this._formatStorageSet(registry, result.block, keys, result.changes)
                : registry.createType('StorageChangeSet', result);
        }
        else if (rpc.type === 'Vec<StorageChangeSet>') {
            const jsonSet = result;
            const count = jsonSet.length;
            const mapped = new Array(count);
            for (let i = 0; i < count; i++) {
                const { block, changes } = jsonSet[i];
                mapped[i] = [
                    registry.createType('BlockHash', block),
                    this._formatStorageSet(registry, block, params[0], changes)
                ];
            }
            // we only query at a specific block, not a range - flatten
            return method === 'queryStorageAt'
                ? mapped[0][1]
                : mapped;
        }
        return registry.createTypeUnsafe(rpc.type, [result], { blockHash });
    }
    _formatStorageData(registry, blockHash, key, value) {
        const isEmpty = (0, util_1.isNull)(value);
        // we convert to Uint8Array since it maps to the raw encoding, all
        // data will be correctly encoded (incl. numbers, excl. :code)
        const input = isEmpty
            ? null
            : isTreatAsHex(key)
                ? value
                : (0, util_1.u8aToU8a)(value);
        return this._newType(registry, blockHash, key, input, isEmpty);
    }
    _formatStorageSet(registry, blockHash, keys, changes) {
        // For StorageChangeSet, the changes has the [key, value] mappings
        const count = keys.length;
        const withCache = count !== 1;
        const values = new Array(count);
        // multiple return values (via state.storage subscription), decode the
        // values one at a time, all based on the supplied query types
        for (let i = 0; i < count; i++) {
            values[i] = this._formatStorageSetEntry(registry, blockHash, keys[i], changes, withCache, i);
        }
        return values;
    }
    _formatStorageSetEntry(registry, blockHash, key, changes, withCache, entryIndex) {
        const hexKey = key.toHex();
        const found = changes.find(([key]) => key === hexKey);
        const isNotFound = (0, util_1.isUndefined)(found);
        // if we don't find the value, this is our fallback
        //   - in the case of an array of values, fill the hole from the cache
        //   - if a single result value, don't fill - it is not an update hole
        //   - fallback to an empty option in all cases
        if (isNotFound && withCache) {
            const cached = this.__internal__storageCache.get(hexKey);
            if (cached) {
                this.__internal__storageCacheHits++;
                return cached;
            }
        }
        const value = isNotFound
            ? null
            : found[1];
        const isEmpty = (0, util_1.isNull)(value);
        const input = isEmpty || isTreatAsHex(key)
            ? value
            : (0, util_1.u8aToU8a)(value);
        const codec = this._newType(registry, blockHash, key, input, isEmpty, entryIndex);
        // store the retrieved result - the only issue with this cache is that there is no
        // clearing of it, so very long running processes (not just a couple of hours, longer)
        // will increase memory beyond what is allowed.
        this.__internal__storageCache.set(hexKey, codec);
        this.__internal__storageCacheSize++;
        return codec;
    }
    _newType(registry, blockHash, key, input, isEmpty, entryIndex = -1) {
        // single return value (via state.getStorage), decode the value based on the
        // outputType that we have specified. Fallback to Raw on nothing
        const type = key.outputType || 'Raw';
        const meta = key.meta || EMPTY_META;
        const entryNum = entryIndex === -1
            ? ''
            : ` entry ${entryIndex}:`;
        try {
            return registry.createTypeUnsafe(type, [
                isEmpty
                    ? meta.fallback
                        // For old-style Linkage, we add an empty linkage at the end
                        ? type.includes('Linkage<')
                            ? (0, util_1.u8aConcat)((0, util_1.hexToU8a)(meta.fallback.toHex()), new Uint8Array(2))
                            : (0, util_1.hexToU8a)(meta.fallback.toHex())
                        : undefined
                    : meta.modifier.isOptional
                        ? registry.createTypeUnsafe(type, [input], { blockHash, isPedantic: this.__internal__isPedantic })
                        : input
            ], { blockHash, isFallback: isEmpty && !!meta.fallback, isOptional: meta.modifier.isOptional, isPedantic: this.__internal__isPedantic && !meta.modifier.isOptional });
        }
        catch (error) {
            throw new Error(`Unable to decode storage ${key.section || 'unknown'}.${key.method || 'unknown'}:${entryNum}: ${error.message}`);
        }
    }
}
exports.RpcCore = RpcCore;


/***/ }),

/***/ 98112:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(88750);
const packageInfo_2 = __nccwpck_require__(74402);
exports["default"] = [packageInfo_1.packageInfo, packageInfo_2.packageInfo];


/***/ }),

/***/ 92916:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(5510);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(98112));
const packageInfo_js_1 = __nccwpck_require__(82836);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 48377:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(5510);
__nccwpck_require__(92916);
tslib_1.__exportStar(__nccwpck_require__(47041), exports);


/***/ }),

/***/ 82836:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/rpc-core', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 84678:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 32210:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.drr = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const refCountDelay_js_1 = __nccwpck_require__(8228);
function CMP(a, b) {
    return (0, util_1.stringify)({ t: a }) === (0, util_1.stringify)({ t: b });
}
function ERR(error) {
    throw error;
}
function NOOP() {
    // empty
}
/**
 * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().
 *
 * @ignore
 * @internal
 */
function drr({ delay, skipChange = false, skipTimeout = false } = {}) {
    return (source$) => source$.pipe((0, rxjs_1.catchError)(ERR), skipChange
        ? (0, rxjs_1.tap)(NOOP)
        : (0, rxjs_1.distinctUntilChanged)(CMP), 
    // eslint-disable-next-line deprecation/deprecation
    (0, rxjs_1.publishReplay)(1), skipTimeout
        // eslint-disable-next-line deprecation/deprecation
        ? (0, rxjs_1.refCount)()
        : (0, refCountDelay_js_1.refCountDelay)(delay));
}
exports.drr = drr;


/***/ }),

/***/ 60501:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(5510);
tslib_1.__exportStar(__nccwpck_require__(32210), exports);
tslib_1.__exportStar(__nccwpck_require__(22507), exports);
tslib_1.__exportStar(__nccwpck_require__(8228), exports);


/***/ }),

/***/ 22507:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.memo = void 0;
const rxjs_1 = __nccwpck_require__(1752);
const util_1 = __nccwpck_require__(29795);
const drr_js_1 = __nccwpck_require__(32210);
/** @internal */
function memo(instanceId, inner) {
    const options = { getInstanceId: () => instanceId };
    const cached = (0, util_1.memoize)((...params) => new rxjs_1.Observable((observer) => {
        const subscription = inner(...params).subscribe(observer);
        return () => {
            cached.unmemoize(...params);
            subscription.unsubscribe();
        };
    }).pipe((0, drr_js_1.drr)()), options);
    return cached;
}
exports.memo = memo;


/***/ }),

/***/ 8228:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.refCountDelay = void 0;
const rxjs_1 = __nccwpck_require__(1752);
/** @internal */
function refCountDelay(delay = 1750) {
    return (source) => {
        // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected
        let [state, refCount, connection, scheduler] = [0, 0, rxjs_1.Subscription.EMPTY, rxjs_1.Subscription.EMPTY];
        return new rxjs_1.Observable((ob) => {
            source.subscribe(ob);
            if (refCount++ === 0) {
                if (state === 1) {
                    scheduler.unsubscribe();
                }
                else {
                    // eslint-disable-next-line deprecation/deprecation
                    connection = source.connect();
                }
                state = 3;
            }
            return () => {
                if (--refCount === 0) {
                    if (state === 2) {
                        state = 0;
                        scheduler.unsubscribe();
                    }
                    else {
                        // state === 3
                        state = 1;
                        scheduler = rxjs_1.asapScheduler.schedule(() => {
                            state = 0;
                            connection.unsubscribe();
                        }, delay);
                    }
                }
            };
        });
    };
}
exports.refCountDelay = refCountDelay;


/***/ }),

/***/ 59553:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WsProvider = exports.ScProvider = exports.packageInfo = exports.HttpProvider = void 0;
var index_js_1 = __nccwpck_require__(13587);
Object.defineProperty(exports, "HttpProvider", ({ enumerable: true, get: function () { return index_js_1.HttpProvider; } }));
var packageInfo_js_1 = __nccwpck_require__(88750);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
var index_js_2 = __nccwpck_require__(60782);
Object.defineProperty(exports, "ScProvider", ({ enumerable: true, get: function () { return index_js_2.ScProvider; } }));
var index_js_3 = __nccwpck_require__(28189);
Object.defineProperty(exports, "WsProvider", ({ enumerable: true, get: function () { return index_js_3.WsProvider; } }));


/***/ }),

/***/ 92250:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const util_1 = __nccwpck_require__(29795);
const UNKNOWN = -99999;
function extend(that, name, value) {
    Object.defineProperty(that, name, {
        configurable: true,
        enumerable: false,
        value
    });
}
/**
 * @name RpcError
 * @summary Extension to the basic JS Error.
 * @description
 * The built-in JavaScript Error class is extended by adding a code to allow for Error categorization. In addition to the normal `stack`, `message`, the numeric `code` and `data` (any types) parameters are available on the object.
 * @example
 * <BR>
 *
 * ```javascript
 * const { RpcError } from '@polkadot/util');
 *
 * throw new RpcError('some message', RpcError.CODES.METHOD_NOT_FOUND); // => error.code = -32601
 * ```
 */
class RpcError extends Error {
    constructor(message = '', code = UNKNOWN, data) {
        super();
        extend(this, 'message', String(message));
        extend(this, 'name', this.constructor.name);
        extend(this, 'data', data);
        extend(this, 'code', code);
        if ((0, util_1.isFunction)(Error.captureStackTrace)) {
            Error.captureStackTrace(this, this.constructor);
        }
        else {
            const { stack } = new Error(message);
            stack && extend(this, 'stack', stack);
        }
    }
}
RpcError.CODES = {
    ASSERT: -90009,
    INVALID_JSONRPC: -99998,
    METHOD_NOT_FOUND: -32601,
    UNKNOWN
};
exports["default"] = RpcError;


/***/ }),

/***/ 32363:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RpcCoder = void 0;
const tslib_1 = __nccwpck_require__(90862);
const util_1 = __nccwpck_require__(29795);
const error_js_1 = tslib_1.__importDefault(__nccwpck_require__(92250));
function formatErrorData(data) {
    if ((0, util_1.isUndefined)(data)) {
        return '';
    }
    const formatted = `: ${(0, util_1.isString)(data)
        ? data.replace(/Error\("/g, '').replace(/\("/g, '(').replace(/"\)/g, ')').replace(/\(/g, ', ').replace(/\)/g, '')
        : (0, util_1.stringify)(data)}`;
    // We need some sort of cut-off here since these can be very large and
    // very nested, pick a number and trim the result display to it
    return formatted.length <= 256
        ? formatted
        : `${formatted.substring(0, 255)}…`;
}
function checkError(error) {
    if (error) {
        const { code, data, message } = error;
        throw new error_js_1.default(`${code}: ${message}${formatErrorData(data)}`, code, data);
    }
}
/** @internal */
class RpcCoder {
    constructor() {
        this.__internal__id = 0;
    }
    decodeResponse(response) {
        if (!response || response.jsonrpc !== '2.0') {
            throw new Error('Invalid jsonrpc field in decoded object');
        }
        const isSubscription = !(0, util_1.isUndefined)(response.params) && !(0, util_1.isUndefined)(response.method);
        if (!(0, util_1.isNumber)(response.id) &&
            (!isSubscription || (!(0, util_1.isNumber)(response.params.subscription) &&
                !(0, util_1.isString)(response.params.subscription)))) {
            throw new Error('Invalid id field in decoded object');
        }
        checkError(response.error);
        if (response.result === undefined && !isSubscription) {
            throw new Error('No result found in jsonrpc response');
        }
        if (isSubscription) {
            checkError(response.params.error);
            return response.params.result;
        }
        return response.result;
    }
    encodeJson(method, params) {
        const [id, data] = this.encodeObject(method, params);
        return [id, (0, util_1.stringify)(data)];
    }
    encodeObject(method, params) {
        const id = ++this.__internal__id;
        return [id, {
                id,
                jsonrpc: '2.0',
                method,
                params
            }];
    }
}
exports.RpcCoder = RpcCoder;


/***/ }),

/***/ 29909:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const HTTP_URL = 'http://127.0.0.1:9933';
const WS_URL = 'ws://127.0.0.1:9944';
exports["default"] = {
    HTTP_URL,
    WS_URL
};


/***/ }),

/***/ 69613:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(74402);
exports["default"] = [packageInfo_1.packageInfo];


/***/ }),

/***/ 67555:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(90862);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(69613));
const packageInfo_js_1 = __nccwpck_require__(88750);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 13587:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpProvider = void 0;
const tslib_1 = __nccwpck_require__(90862);
const util_1 = __nccwpck_require__(29795);
const x_fetch_1 = __nccwpck_require__(75158);
const index_js_1 = __nccwpck_require__(32363);
const defaults_js_1 = tslib_1.__importDefault(__nccwpck_require__(29909));
const lru_js_1 = __nccwpck_require__(97177);
const ERROR_SUBSCRIBE = 'HTTP Provider does not have subscriptions, use WebSockets instead';
const l = (0, util_1.logger)('api-http');
/**
 * # @polkadot/rpc-provider
 *
 * @name HttpProvider
 *
 * @description The HTTP Provider allows sending requests using HTTP to a HTTP RPC server TCP port. It does not support subscriptions so you won't be able to listen to events such as new blocks or balance changes. It is usually preferable using the [[WsProvider]].
 *
 * @example
 * <BR>
 *
 * ```javascript
 * import Api from '@polkadot/api/promise';
 * import { HttpProvider } from '@polkadot/rpc-provider';
 *
 * const provider = new HttpProvider('http://127.0.0.1:9933');
 * const api = new Api(provider);
 * ```
 *
 * @see [[WsProvider]]
 */
class HttpProvider {
    /**
     * @param {string} endpoint The endpoint url starting with http://
     */
    constructor(endpoint = defaults_js_1.default.HTTP_URL, headers = {}) {
        this.__internal__callCache = new lru_js_1.LRUCache();
        if (!/^(https|http):\/\//.test(endpoint)) {
            throw new Error(`Endpoint should start with 'http://' or 'https://', received '${endpoint}'`);
        }
        this.__internal__coder = new index_js_1.RpcCoder();
        this.__internal__endpoint = endpoint;
        this.__internal__headers = headers;
        this.__internal__stats = {
            active: { requests: 0, subscriptions: 0 },
            total: { bytesRecv: 0, bytesSent: 0, cached: 0, errors: 0, requests: 0, subscriptions: 0, timeout: 0 }
        };
    }
    /**
     * @summary `true` when this provider supports subscriptions
     */
    get hasSubscriptions() {
        return !!false;
    }
    /**
     * @description Returns a clone of the object
     */
    clone() {
        return new HttpProvider(this.__internal__endpoint, this.__internal__headers);
    }
    /**
     * @description Manually connect from the connection
     */
    async connect() {
        // noop
    }
    /**
     * @description Manually disconnect from the connection
     */
    async disconnect() {
        // noop
    }
    /**
     * @description Returns the connection stats
     */
    get stats() {
        return this.__internal__stats;
    }
    /**
     * @summary `true` when this provider supports clone()
     */
    get isClonable() {
        return !!true;
    }
    /**
     * @summary Whether the node is connected or not.
     * @return {boolean} true if connected
     */
    get isConnected() {
        return !!true;
    }
    /**
     * @summary Events are not supported with the HttpProvider, see [[WsProvider]].
     * @description HTTP Provider does not have 'on' emitters. WebSockets should be used instead.
     */
    on(_type, _sub) {
        l.error('HTTP Provider does not have \'on\' emitters, use WebSockets instead');
        return util_1.noop;
    }
    /**
     * @summary Send HTTP POST Request with Body to configured HTTP Endpoint.
     */
    async send(method, params, isCacheable) {
        this.__internal__stats.total.requests++;
        const [, body] = this.__internal__coder.encodeJson(method, params);
        let resultPromise = isCacheable
            ? this.__internal__callCache.get(body)
            : null;
        if (!resultPromise) {
            resultPromise = this.__internal__send(body);
            if (isCacheable) {
                this.__internal__callCache.set(body, resultPromise);
            }
        }
        else {
            this.__internal__stats.total.cached++;
        }
        return resultPromise;
    }
    async __internal__send(body) {
        this.__internal__stats.active.requests++;
        this.__internal__stats.total.bytesSent += body.length;
        try {
            const response = await (0, x_fetch_1.fetch)(this.__internal__endpoint, {
                body,
                headers: {
                    Accept: 'application/json',
                    'Content-Length': `${body.length}`,
                    'Content-Type': 'application/json',
                    ...this.__internal__headers
                },
                method: 'POST'
            });
            if (!response.ok) {
                throw new Error(`[${response.status}]: ${response.statusText}`);
            }
            const result = await response.text();
            this.__internal__stats.total.bytesRecv += result.length;
            const decoded = this.__internal__coder.decodeResponse(JSON.parse(result));
            this.__internal__stats.active.requests--;
            return decoded;
        }
        catch (e) {
            this.__internal__stats.active.requests--;
            this.__internal__stats.total.errors++;
            throw e;
        }
    }
    /**
     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].
     */
    // eslint-disable-next-line @typescript-eslint/require-await
    async subscribe(_types, _method, _params, _cb) {
        l.error(ERROR_SUBSCRIBE);
        throw new Error(ERROR_SUBSCRIBE);
    }
    /**
     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].
     */
    // eslint-disable-next-line @typescript-eslint/require-await
    async unsubscribe(_type, _method, _id) {
        l.error(ERROR_SUBSCRIBE);
        throw new Error(ERROR_SUBSCRIBE);
    }
}
exports.HttpProvider = HttpProvider;


/***/ }),

/***/ 53278:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(90862);
__nccwpck_require__(67555);
tslib_1.__exportStar(__nccwpck_require__(59553), exports);


/***/ }),

/***/ 97177:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LRUCache = void 0;
const DEFAULT_CAPACITY = 128;
class LRUNode {
    constructor(key) {
        this.key = key;
        this.next = this.prev = this;
    }
}
class LRUCache {
    constructor(capacity = DEFAULT_CAPACITY) {
        this.__internal__data = new Map();
        this.__internal__refs = new Map();
        this.__internal__length = 0;
        this.capacity = capacity;
        this.__internal__head = this.__internal__tail = new LRUNode('<empty>');
    }
    get length() {
        return this.__internal__length;
    }
    get lengthData() {
        return this.__internal__data.size;
    }
    get lengthRefs() {
        return this.__internal__refs.size;
    }
    entries() {
        const keys = this.keys();
        const count = keys.length;
        const entries = new Array(count);
        for (let i = 0; i < count; i++) {
            const key = keys[i];
            entries[i] = [key, this.__internal__data.get(key)];
        }
        return entries;
    }
    keys() {
        const keys = [];
        if (this.__internal__length) {
            let curr = this.__internal__head;
            while (curr !== this.__internal__tail) {
                keys.push(curr.key);
                curr = curr.next;
            }
            keys.push(curr.key);
        }
        return keys;
    }
    get(key) {
        const data = this.__internal__data.get(key);
        if (data) {
            this.__internal__toHead(key);
            return data;
        }
        return null;
    }
    set(key, value) {
        if (this.__internal__data.has(key)) {
            this.__internal__toHead(key);
        }
        else {
            const node = new LRUNode(key);
            this.__internal__refs.set(node.key, node);
            if (this.length === 0) {
                this.__internal__head = this.__internal__tail = node;
            }
            else {
                this.__internal__head.prev = node;
                node.next = this.__internal__head;
                this.__internal__head = node;
            }
            if (this.__internal__length === this.capacity) {
                this.__internal__data.delete(this.__internal__tail.key);
                this.__internal__refs.delete(this.__internal__tail.key);
                this.__internal__tail = this.__internal__tail.prev;
                this.__internal__tail.next = this.__internal__head;
            }
            else {
                this.__internal__length += 1;
            }
        }
        this.__internal__data.set(key, value);
    }
    __internal__toHead(key) {
        const ref = this.__internal__refs.get(key);
        if (ref && ref !== this.__internal__head) {
            ref.prev.next = ref.next;
            ref.next.prev = ref.prev;
            ref.next = this.__internal__head;
            this.__internal__head.prev = ref;
            this.__internal__head = ref;
        }
    }
}
exports.LRUCache = LRUCache;


/***/ }),

/***/ 88750:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/rpc-provider', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 81431:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HealthCheckError = exports.healthChecker = void 0;
const util_1 = __nccwpck_require__(29795);
/*
 * Creates a new health checker.
 *
 * The role of the health checker is to report to the user the health of a smoldot chain.
 *
 * In order to use it, start by creating a health checker, and call `setSendJsonRpc` to set the
 * way to send a JSON-RPC request to a chain. The health checker is disabled by default. Use
 * `start()` in order to start the health checks. The `start()` function must be passed a callback called
 * when an update to the health of the node is available.
 *
 * In order to send a JSON-RPC request to the chain, you **must** use the `sendJsonRpc` function
 * of the health checker. The health checker rewrites the `id` of the requests it receives.
 *
 * When the chain send a JSON-RPC response, it must be passed to `responsePassThrough()`. This
 * function intercepts the responses destined to the requests that have been emitted by the health
 * checker and returns `null`. If the response doesn't concern the health checker, the response is
 * simply returned by the function.
 *
 * # How it works
 *
 * The health checker periodically calls the `system_health` JSON-RPC call in order to determine
 * the health of the chain.
 *
 * In addition to this, as long as the health check reports that `isSyncing` is `true`, the
 * health checker also maintains a subscription to new best blocks using `chain_subscribeNewHeads`.
 * Whenever a new block is notified, a health check is performed immediately in order to determine
 * whether `isSyncing` has changed to `false`.
 *
 * Thanks to this subscription, the latency of the report of the switch from `isSyncing: true` to
 * `isSyncing: false` is very low.
 *
 */
function healthChecker() {
    // `null` if health checker is not started.
    let checker = null;
    let sendJsonRpc = null;
    return {
        responsePassThrough: (jsonRpcResponse) => {
            if (checker === null) {
                return jsonRpcResponse;
            }
            return checker.responsePassThrough(jsonRpcResponse);
        },
        sendJsonRpc: (request) => {
            if (!sendJsonRpc) {
                throw new Error('setSendJsonRpc must be called before sending requests');
            }
            if (checker === null) {
                sendJsonRpc(request);
            }
            else {
                checker.sendJsonRpc(request);
            }
        },
        setSendJsonRpc: (cb) => {
            sendJsonRpc = cb;
        },
        start: (healthCallback) => {
            if (checker !== null) {
                throw new Error("Can't start the health checker multiple times in parallel");
            }
            else if (!sendJsonRpc) {
                throw new Error('setSendJsonRpc must be called before starting the health checks');
            }
            checker = new InnerChecker(healthCallback, sendJsonRpc);
            checker.update(true);
        },
        stop: () => {
            if (checker === null) {
                return;
            } // Already stopped.
            checker.destroy();
            checker = null;
        }
    };
}
exports.healthChecker = healthChecker;
class InnerChecker {
    constructor(healthCallback, requestToSmoldot) {
        this.__internal__currentHealthCheckId = null;
        this.__internal__currentHealthTimeout = null;
        this.__internal__currentSubunsubRequestId = null;
        this.__internal__currentSubscriptionId = null;
        this.__internal__isSyncing = false;
        this.__internal__nextRequestId = 0;
        this.sendJsonRpc = (request) => {
            // Replace the `id` in the request to prefix the request ID with `extern:`.
            let parsedRequest;
            try {
                parsedRequest = JSON.parse(request);
            }
            catch {
                return;
            }
            if (parsedRequest.id) {
                const newId = 'extern:' + (0, util_1.stringify)(parsedRequest.id);
                parsedRequest.id = newId;
            }
            this.__internal__requestToSmoldot(parsedRequest);
        };
        this.responsePassThrough = (jsonRpcResponse) => {
            let parsedResponse;
            try {
                parsedResponse = JSON.parse(jsonRpcResponse);
            }
            catch {
                return jsonRpcResponse;
            }
            // Check whether response is a response to `system_health`.
            if (parsedResponse.id && this.__internal__currentHealthCheckId === parsedResponse.id) {
                this.__internal__currentHealthCheckId = null;
                // Check whether query was successful. It is possible for queries to fail for
                // various reasons, such as the client being overloaded.
                if (!parsedResponse.result) {
                    this.update(false);
                    return null;
                }
                this.__internal__healthCallback(parsedResponse.result);
                this.__internal__isSyncing = parsedResponse.result.isSyncing;
                this.update(false);
                return null;
            }
            // Check whether response is a response to the subscription or unsubscription.
            if (parsedResponse.id &&
                this.__internal__currentSubunsubRequestId === parsedResponse.id) {
                this.__internal__currentSubunsubRequestId = null;
                // Check whether query was successful. It is possible for queries to fail for
                // various reasons, such as the client being overloaded.
                if (!parsedResponse.result) {
                    this.update(false);
                    return null;
                }
                if (this.__internal__currentSubscriptionId) {
                    this.__internal__currentSubscriptionId = null;
                }
                else {
                    this.__internal__currentSubscriptionId = parsedResponse.result;
                }
                this.update(false);
                return null;
            }
            // Check whether response is a notification to a subscription.
            if (parsedResponse.params &&
                this.__internal__currentSubscriptionId &&
                parsedResponse.params.subscription === this.__internal__currentSubscriptionId) {
                // Note that after a successful subscription, a notification containing
                // the current best block is always returned. Considering that a
                // subscription is performed in response to a health check, calling
                // `startHealthCheck()` here will lead to a second health check.
                // It might seem redundant to perform two health checks in a quick
                // succession, but doing so doesn't lead to any problem, and it is
                // actually possible for the health to have changed in between as the
                // current best block might have been updated during the subscription
                // request.
                this.update(true);
                return null;
            }
            // Response doesn't concern us.
            if (parsedResponse.id) {
                const id = parsedResponse.id;
                // Need to remove the `extern:` prefix.
                if (!id.startsWith('extern:')) {
                    throw new Error('State inconsistency in health checker');
                }
                const newId = JSON.parse(id.slice('extern:'.length));
                parsedResponse.id = newId;
            }
            return (0, util_1.stringify)(parsedResponse);
        };
        this.update = (startNow) => {
            // If `startNow`, clear `#currentHealthTimeout` so that it is set below.
            if (startNow && this.__internal__currentHealthTimeout) {
                clearTimeout(this.__internal__currentHealthTimeout);
                this.__internal__currentHealthTimeout = null;
            }
            if (!this.__internal__currentHealthTimeout) {
                const startHealthRequest = () => {
                    this.__internal__currentHealthTimeout = null;
                    // No matter what, don't start a health request if there is already one in progress.
                    // This is sane to do because receiving a response to a health request calls `update()`.
                    if (this.__internal__currentHealthCheckId) {
                        return;
                    }
                    // Actual request starting.
                    this.__internal__currentHealthCheckId = `health-checker:${this.__internal__nextRequestId}`;
                    this.__internal__nextRequestId += 1;
                    this.__internal__requestToSmoldot({
                        id: this.__internal__currentHealthCheckId,
                        jsonrpc: '2.0',
                        method: 'system_health',
                        params: []
                    });
                };
                if (startNow) {
                    startHealthRequest();
                }
                else {
                    this.__internal__currentHealthTimeout = setTimeout(startHealthRequest, 1000);
                }
            }
            if (this.__internal__isSyncing &&
                !this.__internal__currentSubscriptionId &&
                !this.__internal__currentSubunsubRequestId) {
                this.startSubscription();
            }
            if (!this.__internal__isSyncing &&
                this.__internal__currentSubscriptionId &&
                !this.__internal__currentSubunsubRequestId) {
                this.endSubscription();
            }
        };
        this.startSubscription = () => {
            if (this.__internal__currentSubunsubRequestId || this.__internal__currentSubscriptionId) {
                throw new Error('Internal error in health checker');
            }
            this.__internal__currentSubunsubRequestId = `health-checker:${this.__internal__nextRequestId}`;
            this.__internal__nextRequestId += 1;
            this.__internal__requestToSmoldot({
                id: this.__internal__currentSubunsubRequestId,
                jsonrpc: '2.0',
                method: 'chain_subscribeNewHeads',
                params: []
            });
        };
        this.endSubscription = () => {
            if (this.__internal__currentSubunsubRequestId || !this.__internal__currentSubscriptionId) {
                throw new Error('Internal error in health checker');
            }
            this.__internal__currentSubunsubRequestId = `health-checker:${this.__internal__nextRequestId}`;
            this.__internal__nextRequestId += 1;
            this.__internal__requestToSmoldot({
                id: this.__internal__currentSubunsubRequestId,
                jsonrpc: '2.0',
                method: 'chain_unsubscribeNewHeads',
                params: [this.__internal__currentSubscriptionId]
            });
        };
        this.destroy = () => {
            if (this.__internal__currentHealthTimeout) {
                clearTimeout(this.__internal__currentHealthTimeout);
                this.__internal__currentHealthTimeout = null;
            }
        };
        this.__internal__healthCallback = healthCallback;
        this.__internal__requestToSmoldot = (request) => requestToSmoldot((0, util_1.stringify)(request));
    }
}
class HealthCheckError extends Error {
    getCause() {
        return this.__internal__cause;
    }
    constructor(response, message = 'Got error response asking for system health') {
        super(message);
        this.__internal__cause = response;
    }
}
exports.HealthCheckError = HealthCheckError;


/***/ }),

/***/ 60782:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScProvider = void 0;
const eventemitter3_1 = __nccwpck_require__(11848);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(32363);
const Health_js_1 = __nccwpck_require__(81431);
const l = (0, util_1.logger)('api-substrate-connect');
const subscriptionUnsubscriptionMethods = new Map([
    ['author_submitAndWatchExtrinsic', 'author_unwatchExtrinsic'],
    ['chain_subscribeAllHeads', 'chain_unsubscribeAllHeads'],
    ['chain_subscribeFinalizedHeads', 'chain_unsubscribeFinalizedHeads'],
    ['chain_subscribeFinalisedHeads', 'chain_subscribeFinalisedHeads'],
    ['chain_subscribeNewHeads', 'chain_unsubscribeNewHeads'],
    ['chain_subscribeNewHead', 'chain_unsubscribeNewHead'],
    ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],
    ['subscribe_newHead', 'unsubscribe_newHead'],
    ['state_subscribeRuntimeVersion', 'state_unsubscribeRuntimeVersion'],
    ['state_subscribeStorage', 'state_unsubscribeStorage']
]);
const scClients = new WeakMap();
class ScProvider {
    constructor(Sc, spec, sharedSandbox) {
        this.__internal__coder = new index_js_1.RpcCoder();
        this.__internal__subscriptions = new Map();
        this.__internal__resubscribeMethods = new Map();
        this.__internal__requests = new Map();
        this.__internal__eventemitter = new eventemitter3_1.EventEmitter();
        this.__internal__chain = null;
        this.__internal__isChainReady = false;
        this.__internal__resubscribe = () => {
            const promises = [];
            this.__internal__resubscribeMethods.forEach((subDetails) => {
                // only re-create subscriptions which are not in author (only area where
                // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'
                // are not included (and will not be re-broadcast)
                if (subDetails.type.startsWith('author_')) {
                    return;
                }
                try {
                    const promise = new Promise((resolve) => {
                        this.subscribe(subDetails.type, subDetails.method, subDetails.params, subDetails.callback).catch((error) => console.log(error));
                        resolve();
                    });
                    promises.push(promise);
                }
                catch (error) {
                    l.error(error);
                }
            });
            Promise.all(promises).catch((err) => l.log(err));
        };
        if (!(0, util_1.isObject)(Sc) || !(0, util_1.isObject)(Sc.WellKnownChain) || !(0, util_1.isFunction)(Sc.createScClient)) {
            throw new Error('Expected an @substrate/connect interface as first parameter to ScProvider');
        }
        this.__internal__Sc = Sc;
        this.__internal__spec = spec;
        this.__internal__sharedSandbox = sharedSandbox;
        this.__internal__wellKnownChains = new Set(Object.values(Sc.WellKnownChain));
    }
    get hasSubscriptions() {
        // Indicates that subscriptions are supported
        return !!true;
    }
    get isClonable() {
        return !!false;
    }
    get isConnected() {
        return !!this.__internal__chain && this.__internal__isChainReady;
    }
    clone() {
        throw new Error('clone() is not supported.');
    }
    // Config details can be found in @substrate/connect repo following the link:
    // https://github.com/paritytech/substrate-connect/blob/main/packages/connect/src/connector/index.ts
    async connect(config, checkerFactory = Health_js_1.healthChecker) {
        if (this.isConnected) {
            throw new Error('Already connected!');
        }
        // it could happen that after emitting `disconnected` due to the fact taht
        // smoldot is syncing, the consumer tries to reconnect after a certain amount
        // of time... In which case we want to make sure that we don't create a new
        // chain.
        if (this.__internal__chain) {
            await this.__internal__chain;
            return;
        }
        if (this.__internal__sharedSandbox && !this.__internal__sharedSandbox.isConnected) {
            await this.__internal__sharedSandbox.connect();
        }
        const client = this.__internal__sharedSandbox
            ? scClients.get(this.__internal__sharedSandbox)
            : this.__internal__Sc.createScClient(config);
        if (!client) {
            throw new Error('Unkown ScProvider!');
        }
        scClients.set(this, client);
        const hc = checkerFactory();
        const onResponse = (res) => {
            const hcRes = hc.responsePassThrough(res);
            if (!hcRes) {
                return;
            }
            const response = JSON.parse(hcRes);
            let decodedResponse;
            try {
                decodedResponse = this.__internal__coder.decodeResponse(response);
            }
            catch (e) {
                decodedResponse = e;
            }
            // It's not a subscription message, but rather a standar RPC response
            if (response.params?.subscription === undefined || !response.method) {
                return this.__internal__requests.get(response.id)?.(decodedResponse);
            }
            // We are dealing with a subscription message
            const subscriptionId = `${response.method}::${response.params.subscription}`;
            const callback = this.__internal__subscriptions.get(subscriptionId)?.[0];
            callback?.(decodedResponse);
        };
        const addChain = this.__internal__wellKnownChains.has(this.__internal__spec)
            ? client.addWellKnownChain
            : client.addChain;
        this.__internal__chain = addChain(this.__internal__spec, onResponse).then((chain) => {
            hc.setSendJsonRpc(chain.sendJsonRpc);
            this.__internal__isChainReady = false;
            const cleanup = () => {
                // If there are any callbacks left, we have to reject/error them.
                // Otherwise, that would cause a memory leak.
                const disconnectionError = new Error('Disconnected');
                this.__internal__requests.forEach((cb) => cb(disconnectionError));
                this.__internal__subscriptions.forEach(([cb]) => cb(disconnectionError));
                this.__internal__subscriptions.clear();
            };
            const staleSubscriptions = [];
            const killStaleSubscriptions = () => {
                if (staleSubscriptions.length === 0) {
                    return;
                }
                const stale = staleSubscriptions.pop();
                if (!stale) {
                    throw new Error('Unable to get stale subscription');
                }
                const { id, unsubscribeMethod } = stale;
                Promise
                    .race([
                    this.send(unsubscribeMethod, [id]).catch(util_1.noop),
                    new Promise((resolve) => setTimeout(resolve, 500))
                ])
                    .then(killStaleSubscriptions)
                    .catch(util_1.noop);
            };
            hc.start((health) => {
                const isReady = !health.isSyncing && (health.peers > 0 || !health.shouldHavePeers);
                // if it's the same as before, then nothing has changed and we are done
                if (this.__internal__isChainReady === isReady) {
                    return;
                }
                this.__internal__isChainReady = isReady;
                if (!isReady) {
                    // If we've reached this point, that means that the chain used to be "ready"
                    // and now we are about to emit `disconnected`.
                    //
                    // This will cause the PolkadotJs API think that the connection is
                    // actually dead. In reality the smoldot chain is not dead, of course.
                    // However, we have to cleanup all the existing callbacks because when
                    // the smoldot chain stops syncing, then we will emit `connected` and
                    // the PolkadotJs API will try to re-create the previous
                    // subscriptions and requests. Although, now is not a good moment
                    // to be sending unsubscription messages to the smoldot chain, we
                    // should wait until is no longer syncing to send the unsubscription
                    // messages from the stale subscriptions of the previous connection.
                    //
                    // That's why -before we perform the cleanup of `this.__internal__subscriptions`-
                    // we keep the necessary information that we will need later on to
                    // kill the stale subscriptions.
                    [...this.__internal__subscriptions.values()].forEach((s) => {
                        staleSubscriptions.push(s[1]);
                    });
                    cleanup();
                    this.__internal__eventemitter.emit('disconnected');
                }
                else {
                    killStaleSubscriptions();
                    this.__internal__eventemitter.emit('connected');
                    if (this.__internal__resubscribeMethods.size) {
                        this.__internal__resubscribe();
                    }
                }
            });
            return (0, util_1.objectSpread)({}, chain, {
                remove: () => {
                    hc.stop();
                    chain.remove();
                    cleanup();
                },
                sendJsonRpc: hc.sendJsonRpc.bind(hc)
            });
        });
        try {
            await this.__internal__chain;
        }
        catch (e) {
            this.__internal__chain = null;
            this.__internal__eventemitter.emit('error', e);
            throw e;
        }
    }
    async disconnect() {
        if (!this.__internal__chain) {
            return;
        }
        const chain = await this.__internal__chain;
        this.__internal__chain = null;
        this.__internal__isChainReady = false;
        try {
            chain.remove();
        }
        catch (_) { }
        this.__internal__eventemitter.emit('disconnected');
    }
    on(type, sub) {
        // It's possible. Although, quite unlikely, that by the time that polkadot
        // subscribes to the `connected` event, the Provider is already connected.
        // In that case, we must emit to let the consumer know that we are connected.
        if (type === 'connected' && this.isConnected) {
            sub();
        }
        this.__internal__eventemitter.on(type, sub);
        return () => {
            this.__internal__eventemitter.removeListener(type, sub);
        };
    }
    async send(method, params) {
        if (!this.isConnected || !this.__internal__chain) {
            throw new Error('Provider is not connected');
        }
        const chain = await this.__internal__chain;
        const [id, json] = this.__internal__coder.encodeJson(method, params);
        const result = new Promise((resolve, reject) => {
            this.__internal__requests.set(id, (response) => {
                ((0, util_1.isError)(response) ? reject : resolve)(response);
            });
            try {
                chain.sendJsonRpc(json);
            }
            catch (e) {
                this.__internal__chain = null;
                try {
                    chain.remove();
                }
                catch (_) { }
                this.__internal__eventemitter.emit('error', e);
            }
        });
        try {
            return await result;
        }
        finally {
            // let's ensure that once the Promise is resolved/rejected, then we remove
            // remove its entry from the internal #requests
            this.__internal__requests.delete(id);
        }
    }
    async subscribe(type, method, params, callback) {
        if (!subscriptionUnsubscriptionMethods.has(method)) {
            throw new Error(`Unsupported subscribe method: ${method}`);
        }
        const id = await this.send(method, params);
        const subscriptionId = `${type}::${id}`;
        const cb = (response) => {
            if (response instanceof Error) {
                callback(response, undefined);
            }
            else {
                callback(null, response);
            }
        };
        const unsubscribeMethod = subscriptionUnsubscriptionMethods.get(method);
        if (!unsubscribeMethod) {
            throw new Error('Invalid unsubscribe method found');
        }
        this.__internal__resubscribeMethods.set(subscriptionId, { callback, method, params, type });
        this.__internal__subscriptions.set(subscriptionId, [cb, { id, unsubscribeMethod }]);
        return id;
    }
    unsubscribe(type, method, id) {
        if (!this.isConnected) {
            throw new Error('Provider is not connected');
        }
        const subscriptionId = `${type}::${id}`;
        if (!this.__internal__subscriptions.has(subscriptionId)) {
            return Promise.reject(new Error(`Unable to find active subscription=${subscriptionId}`));
        }
        this.__internal__resubscribeMethods.delete(subscriptionId);
        this.__internal__subscriptions.delete(subscriptionId);
        return this.send(method, [id]);
    }
}
exports.ScProvider = ScProvider;


/***/ }),

/***/ 46526:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getWSErrorString = void 0;
const known = {
    1000: 'Normal Closure',
    1001: 'Going Away',
    1002: 'Protocol Error',
    1003: 'Unsupported Data',
    1004: '(For future)',
    1005: 'No Status Received',
    1006: 'Abnormal Closure',
    1007: 'Invalid frame payload data',
    1008: 'Policy Violation',
    1009: 'Message too big',
    1010: 'Missing Extension',
    1011: 'Internal Error',
    1012: 'Service Restart',
    1013: 'Try Again Later',
    1014: 'Bad Gateway',
    1015: 'TLS Handshake'
};
function getWSErrorString(code) {
    if (code >= 0 && code <= 999) {
        return '(Unused)';
    }
    else if (code >= 1016) {
        if (code <= 1999) {
            return '(For WebSocket standard)';
        }
        else if (code <= 2999) {
            return '(For WebSocket extensions)';
        }
        else if (code <= 3999) {
            return '(For libraries and frameworks)';
        }
        else if (code <= 4999) {
            return '(For applications)';
        }
    }
    return known[code] || '(Unknown)';
}
exports.getWSErrorString = getWSErrorString;


/***/ }),

/***/ 28189:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WsProvider = void 0;
const tslib_1 = __nccwpck_require__(90862);
const eventemitter3_1 = __nccwpck_require__(11848);
const util_1 = __nccwpck_require__(29795);
const x_global_1 = __nccwpck_require__(74671);
const x_ws_1 = __nccwpck_require__(26075);
const index_js_1 = __nccwpck_require__(32363);
const defaults_js_1 = tslib_1.__importDefault(__nccwpck_require__(29909));
const lru_js_1 = __nccwpck_require__(97177);
const errors_js_1 = __nccwpck_require__(46526);
const ALIASES = {
    chain_finalisedHead: 'chain_finalizedHead',
    chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',
    chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'
};
const RETRY_DELAY = 2500;
const DEFAULT_TIMEOUT_MS = 60 * 1000;
const TIMEOUT_INTERVAL = 5000;
const l = (0, util_1.logger)('api-ws');
/** @internal Clears a Record<*> of all keys, optionally with all callback on clear */
function eraseRecord(record, cb) {
    Object.keys(record).forEach((key) => {
        if (cb) {
            cb(record[key]);
        }
        delete record[key];
    });
}
/** @internal Creates a default/empty stats object */
function defaultEndpointStats() {
    return { bytesRecv: 0, bytesSent: 0, cached: 0, errors: 0, requests: 0, subscriptions: 0, timeout: 0 };
}
/**
 * # @polkadot/rpc-provider/ws
 *
 * @name WsProvider
 *
 * @description The WebSocket Provider allows sending requests using WebSocket to a WebSocket RPC server TCP port. Unlike the [[HttpProvider]], it does support subscriptions and allows listening to events such as new blocks or balance changes.
 *
 * @example
 * <BR>
 *
 * ```javascript
 * import Api from '@polkadot/api/promise';
 * import { WsProvider } from '@polkadot/rpc-provider/ws';
 *
 * const provider = new WsProvider('ws://127.0.0.1:9944');
 * const api = new Api(provider);
 * ```
 *
 * @see [[HttpProvider]]
 */
class WsProvider {
    /**
     * @param {string | string[]}  endpoint    The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.
     * @param {number | false} autoConnectMs Whether to connect automatically or not (default). Provided value is used as a delay between retries.
     * @param {Record<string, string>} headers The headers provided to the underlying WebSocket
     * @param {number} [timeout] Custom timeout value used per request . Defaults to `DEFAULT_TIMEOUT_MS`
     */
    constructor(endpoint = defaults_js_1.default.WS_URL, autoConnectMs = RETRY_DELAY, headers = {}, timeout) {
        this.__internal__callCache = new lru_js_1.LRUCache();
        this.__internal__handlers = {};
        this.__internal__waitingForId = {};
        this.__internal__isConnected = false;
        this.__internal__subscriptions = {};
        this.__internal__timeoutId = null;
        this.__internal__emit = (type, ...args) => {
            this.__internal__eventemitter.emit(type, ...args);
        };
        this.__internal__onSocketClose = (event) => {
            const error = new Error(`disconnected from ${this.endpoint}: ${event.code}:: ${event.reason || (0, errors_js_1.getWSErrorString)(event.code)}`);
            if (this.__internal__autoConnectMs > 0) {
                l.error(error.message);
            }
            this.__internal__isConnected = false;
            if (this.__internal__websocket) {
                this.__internal__websocket.onclose = null;
                this.__internal__websocket.onerror = null;
                this.__internal__websocket.onmessage = null;
                this.__internal__websocket.onopen = null;
                this.__internal__websocket = null;
            }
            if (this.__internal__timeoutId) {
                clearInterval(this.__internal__timeoutId);
                this.__internal__timeoutId = null;
            }
            // reject all hanging requests
            eraseRecord(this.__internal__handlers, (h) => {
                try {
                    h.callback(error, undefined);
                }
                catch (err) {
                    // does not throw
                    l.error(err);
                }
            });
            eraseRecord(this.__internal__waitingForId);
            // Reset stats for active endpoint
            this.__internal__endpointStats = defaultEndpointStats();
            this.__internal__emit('disconnected');
            if (this.__internal__autoConnectMs > 0) {
                setTimeout(() => {
                    this.connectWithRetry().catch(util_1.noop);
                }, this.__internal__autoConnectMs);
            }
        };
        this.__internal__onSocketError = (error) => {
            l.debug(() => ['socket error', error]);
            this.__internal__emit('error', error);
        };
        this.__internal__onSocketMessage = (message) => {
            l.debug(() => ['received', message.data]);
            const bytesRecv = message.data.length;
            this.__internal__endpointStats.bytesRecv += bytesRecv;
            this.__internal__stats.total.bytesRecv += bytesRecv;
            const response = JSON.parse(message.data);
            return (0, util_1.isUndefined)(response.method)
                ? this.__internal__onSocketMessageResult(response)
                : this.__internal__onSocketMessageSubscribe(response);
        };
        this.__internal__onSocketMessageResult = (response) => {
            const handler = this.__internal__handlers[response.id];
            if (!handler) {
                l.debug(() => `Unable to find handler for id=${response.id}`);
                return;
            }
            try {
                const { method, params, subscription } = handler;
                const result = this.__internal__coder.decodeResponse(response);
                // first send the result - in case of subs, we may have an update
                // immediately if we have some queued results already
                handler.callback(null, result);
                if (subscription) {
                    const subId = `${subscription.type}::${result}`;
                    this.__internal__subscriptions[subId] = (0, util_1.objectSpread)({}, subscription, {
                        method,
                        params
                    });
                    // if we have a result waiting for this subscription already
                    if (this.__internal__waitingForId[subId]) {
                        this.__internal__onSocketMessageSubscribe(this.__internal__waitingForId[subId]);
                    }
                }
            }
            catch (error) {
                this.__internal__endpointStats.errors++;
                this.__internal__stats.total.errors++;
                handler.callback(error, undefined);
            }
            delete this.__internal__handlers[response.id];
        };
        this.__internal__onSocketMessageSubscribe = (response) => {
            if (!response.method) {
                throw new Error('No method found in JSONRPC response');
            }
            const method = ALIASES[response.method] || response.method;
            const subId = `${method}::${response.params.subscription}`;
            const handler = this.__internal__subscriptions[subId];
            if (!handler) {
                // store the JSON, we could have out-of-order subid coming in
                this.__internal__waitingForId[subId] = response;
                l.debug(() => `Unable to find handler for subscription=${subId}`);
                return;
            }
            // housekeeping
            delete this.__internal__waitingForId[subId];
            try {
                const result = this.__internal__coder.decodeResponse(response);
                handler.callback(null, result);
            }
            catch (error) {
                this.__internal__endpointStats.errors++;
                this.__internal__stats.total.errors++;
                handler.callback(error, undefined);
            }
        };
        this.__internal__onSocketOpen = () => {
            if (this.__internal__websocket === null) {
                throw new Error('WebSocket cannot be null in onOpen');
            }
            l.debug(() => ['connected to', this.endpoint]);
            this.__internal__isConnected = true;
            this.__internal__resubscribe();
            this.__internal__emit('connected');
            return true;
        };
        this.__internal__resubscribe = () => {
            const subscriptions = this.__internal__subscriptions;
            this.__internal__subscriptions = {};
            Promise.all(Object.keys(subscriptions).map(async (id) => {
                const { callback, method, params, type } = subscriptions[id];
                // only re-create subscriptions which are not in author (only area where
                // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'
                // are not included (and will not be re-broadcast)
                if (type.startsWith('author_')) {
                    return;
                }
                try {
                    await this.subscribe(type, method, params, callback);
                }
                catch (error) {
                    l.error(error);
                }
            })).catch(l.error);
        };
        this.__internal__timeoutHandlers = () => {
            const now = Date.now();
            const ids = Object.keys(this.__internal__handlers);
            for (let i = 0, count = ids.length; i < count; i++) {
                const handler = this.__internal__handlers[ids[i]];
                if ((now - handler.start) > this.__internal__timeout) {
                    try {
                        handler.callback(new Error(`No response received from RPC endpoint in ${this.__internal__timeout / 1000}s`), undefined);
                    }
                    catch {
                        // ignore
                    }
                    this.__internal__endpointStats.timeout++;
                    this.__internal__stats.total.timeout++;
                    delete this.__internal__handlers[ids[i]];
                }
            }
        };
        const endpoints = Array.isArray(endpoint)
            ? endpoint
            : [endpoint];
        if (endpoints.length === 0) {
            throw new Error('WsProvider requires at least one Endpoint');
        }
        endpoints.forEach((endpoint) => {
            if (!/^(wss|ws):\/\//.test(endpoint)) {
                throw new Error(`Endpoint should start with 'ws://', received '${endpoint}'`);
            }
        });
        this.__internal__eventemitter = new eventemitter3_1.EventEmitter();
        this.__internal__autoConnectMs = autoConnectMs || 0;
        this.__internal__coder = new index_js_1.RpcCoder();
        this.__internal__endpointIndex = -1;
        this.__internal__endpoints = endpoints;
        this.__internal__headers = headers;
        this.__internal__websocket = null;
        this.__internal__stats = {
            active: { requests: 0, subscriptions: 0 },
            total: defaultEndpointStats()
        };
        this.__internal__endpointStats = defaultEndpointStats();
        this.__internal__timeout = timeout || DEFAULT_TIMEOUT_MS;
        if (autoConnectMs && autoConnectMs > 0) {
            this.connectWithRetry().catch(util_1.noop);
        }
        this.__internal__isReadyPromise = new Promise((resolve) => {
            this.__internal__eventemitter.once('connected', () => {
                resolve(this);
            });
        });
    }
    /**
     * @summary `true` when this provider supports subscriptions
     */
    get hasSubscriptions() {
        return !!true;
    }
    /**
     * @summary `true` when this provider supports clone()
     */
    get isClonable() {
        return !!true;
    }
    /**
     * @summary Whether the node is connected or not.
     * @return {boolean} true if connected
     */
    get isConnected() {
        return this.__internal__isConnected;
    }
    /**
     * @description Promise that resolves the first time we are connected and loaded
     */
    get isReady() {
        return this.__internal__isReadyPromise;
    }
    get endpoint() {
        return this.__internal__endpoints[this.__internal__endpointIndex];
    }
    /**
     * @description Returns a clone of the object
     */
    clone() {
        return new WsProvider(this.__internal__endpoints);
    }
    selectEndpointIndex(endpoints) {
        return (this.__internal__endpointIndex + 1) % endpoints.length;
    }
    /**
     * @summary Manually connect
     * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may
     * connect manually using this method.
     */
    // eslint-disable-next-line @typescript-eslint/require-await
    async connect() {
        if (this.__internal__websocket) {
            throw new Error('WebSocket is already connected');
        }
        try {
            this.__internal__endpointIndex = this.selectEndpointIndex(this.__internal__endpoints);
            // the as here is Deno-specific - not available on the globalThis
            this.__internal__websocket = typeof x_global_1.xglobal.WebSocket !== 'undefined' && (0, util_1.isChildClass)(x_global_1.xglobal.WebSocket, x_ws_1.WebSocket)
                ? new x_ws_1.WebSocket(this.endpoint)
                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore - WS may be an instance of ws, which supports options
                : new x_ws_1.WebSocket(this.endpoint, undefined, {
                    headers: this.__internal__headers
                });
            if (this.__internal__websocket) {
                this.__internal__websocket.onclose = this.__internal__onSocketClose;
                this.__internal__websocket.onerror = this.__internal__onSocketError;
                this.__internal__websocket.onmessage = this.__internal__onSocketMessage;
                this.__internal__websocket.onopen = this.__internal__onSocketOpen;
            }
            // timeout any handlers that have not had a response
            this.__internal__timeoutId = setInterval(() => this.__internal__timeoutHandlers(), TIMEOUT_INTERVAL);
        }
        catch (error) {
            l.error(error);
            this.__internal__emit('error', error);
            throw error;
        }
    }
    /**
     * @description Connect, never throwing an error, but rather forcing a retry
     */
    async connectWithRetry() {
        if (this.__internal__autoConnectMs > 0) {
            try {
                await this.connect();
            }
            catch {
                setTimeout(() => {
                    this.connectWithRetry().catch(util_1.noop);
                }, this.__internal__autoConnectMs);
            }
        }
    }
    /**
     * @description Manually disconnect from the connection, clearing auto-connect logic
     */
    // eslint-disable-next-line @typescript-eslint/require-await
    async disconnect() {
        // switch off autoConnect, we are in manual mode now
        this.__internal__autoConnectMs = 0;
        try {
            if (this.__internal__websocket) {
                // 1000 - Normal closure; the connection successfully completed
                this.__internal__websocket.close(1000);
            }
        }
        catch (error) {
            l.error(error);
            this.__internal__emit('error', error);
            throw error;
        }
    }
    /**
     * @description Returns the connection stats
     */
    get stats() {
        return {
            active: {
                requests: Object.keys(this.__internal__handlers).length,
                subscriptions: Object.keys(this.__internal__subscriptions).length
            },
            total: this.__internal__stats.total
        };
    }
    get endpointStats() {
        return this.__internal__endpointStats;
    }
    /**
     * @summary Listens on events after having subscribed using the [[subscribe]] function.
     * @param  {ProviderInterfaceEmitted} type Event
     * @param  {ProviderInterfaceEmitCb}  sub  Callback
     * @return unsubscribe function
     */
    on(type, sub) {
        this.__internal__eventemitter.on(type, sub);
        return () => {
            this.__internal__eventemitter.removeListener(type, sub);
        };
    }
    /**
     * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.
     * @param method The RPC methods to execute
     * @param params Encoded parameters as applicable for the method
     * @param subscription Subscription details (internally used)
     */
    send(method, params, isCacheable, subscription) {
        this.__internal__endpointStats.requests++;
        this.__internal__stats.total.requests++;
        const [id, body] = this.__internal__coder.encodeJson(method, params);
        let resultPromise = isCacheable
            ? this.__internal__callCache.get(body)
            : null;
        if (!resultPromise) {
            resultPromise = this.__internal__send(id, body, method, params, subscription);
            if (isCacheable) {
                this.__internal__callCache.set(body, resultPromise);
            }
        }
        else {
            this.__internal__endpointStats.cached++;
            this.__internal__stats.total.cached++;
        }
        return resultPromise;
    }
    async __internal__send(id, body, method, params, subscription) {
        return new Promise((resolve, reject) => {
            try {
                if (!this.isConnected || this.__internal__websocket === null) {
                    throw new Error('WebSocket is not connected');
                }
                const callback = (error, result) => {
                    error
                        ? reject(error)
                        : resolve(result);
                };
                l.debug(() => ['calling', method, body]);
                this.__internal__handlers[id] = {
                    callback,
                    method,
                    params,
                    start: Date.now(),
                    subscription
                };
                const bytesSent = body.length;
                this.__internal__endpointStats.bytesSent += bytesSent;
                this.__internal__stats.total.bytesSent += bytesSent;
                this.__internal__websocket.send(body);
            }
            catch (error) {
                this.__internal__endpointStats.errors++;
                this.__internal__stats.total.errors++;
                reject(error);
            }
        });
    }
    /**
     * @name subscribe
     * @summary Allows subscribing to a specific event.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * const provider = new WsProvider('ws://127.0.0.1:9944');
     * const rpc = new Rpc(provider);
     *
     * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {
     *   console.log(values)
     * }).then((subscriptionId) => {
     *   console.log('balance changes subscription id: ', subscriptionId)
     * })
     * ```
     */
    subscribe(type, method, params, callback) {
        this.__internal__endpointStats.subscriptions++;
        this.__internal__stats.total.subscriptions++;
        // subscriptions are not cached, LRU applies to .at(<blockHash>) only
        return this.send(method, params, false, { callback, type });
    }
    /**
     * @summary Allows unsubscribing to subscriptions made with [[subscribe]].
     */
    async unsubscribe(type, method, id) {
        const subscription = `${type}::${id}`;
        // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub
        // the assigned id now does not match what the API user originally received. It has
        // a slight complication in solving - since we cannot rely on the send id, but rather
        // need to find the actual subscription id to map it
        if ((0, util_1.isUndefined)(this.__internal__subscriptions[subscription])) {
            l.debug(() => `Unable to find active subscription=${subscription}`);
            return false;
        }
        delete this.__internal__subscriptions[subscription];
        try {
            return this.isConnected && !(0, util_1.isNull)(this.__internal__websocket)
                ? this.send(method, [id])
                : true;
        }
        catch {
            return false;
        }
    }
}
exports.WsProvider = WsProvider;


/***/ }),

/***/ 51989:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractArray = void 0;
const util_1 = __nccwpck_require__(29795);
const compareArray_js_1 = __nccwpck_require__(90244);
/**
 * @name AbstractArray
 * @description
 * This manages codec arrays. It is an extension to Array, providing
 * specific encoding/decoding on top of the base type.
 * @noInheritDoc
 */
class AbstractArray extends Array {
    /**
     * @description This ensures that operators such as clice, filter, map, etc. return
     * new Array instances (without this we need to apply overrides)
     */
    static get [Symbol.species]() {
        return Array;
    }
    constructor(registry, length) {
        super(length);
        this.registry = registry;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        // We need to loop through all entries since they may have a variable length themselves,
        // e.g. when a Vec or Compact is contained withing, it has a variable length based on data
        const count = this.length;
        let total = (0, util_1.compactToU8a)(count).length;
        for (let i = 0; i < count; i++) {
            total += this[i].encodedLength;
        }
        return total;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        return this.length === 0;
    }
    /**
     * @description The length of the value
     */
    get length() {
        // only included here since we ignore inherited docs
        return super.length;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return (0, compareArray_js_1.compareArray)(this, other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            inner: this.inspectInner(),
            outer: [(0, util_1.compactToU8a)(this.length)]
        };
    }
    /**
     * @internal
     * @description Internal per-item inspection of internal values
     */
    inspectInner() {
        const count = this.length;
        const inner = new Array(count);
        for (let i = 0; i < count; i++) {
            inner[i] = this[i].inspect();
        }
        return inner;
    }
    /**
     * @description Converts the Object to an standard JavaScript Array
     */
    toArray() {
        return Array.from(this);
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        const count = this.length;
        const result = new Array(count);
        for (let i = 0; i < count; i++) {
            result[i] = this[i] && this[i].toHuman(isExtended);
        }
        return result;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        const count = this.length;
        const result = new Array(count);
        for (let i = 0; i < count; i++) {
            // We actually log inside the U8a decoding and use JSON.stringify(...), which
            // means that the Vec may be partially populated (same applies to toHuman, same check)
            result[i] = this[i] && this[i].toJSON();
        }
        return result;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        const count = this.length;
        const result = new Array(count);
        for (let i = 0; i < count; i++) {
            result[i] = this[i] && this[i].toPrimitive();
        }
        return result;
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        const count = this.length;
        const result = new Array(count);
        for (let i = 0; i < count; i++) {
            result[i] = this[i].toString();
        }
        return `[${result.join(', ')}]`;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        const encoded = this.toU8aInner();
        return isBare
            ? (0, util_1.u8aConcatStrict)(encoded)
            : (0, util_1.u8aConcatStrict)([(0, util_1.compactToU8a)(this.length), ...encoded]);
    }
    /**
     * @internal
     * @description Internal per-item SCALE encoding of contained values
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8aInner(isBare) {
        const count = this.length;
        const encoded = new Array(count);
        for (let i = 0; i < count; i++) {
            encoded[i] = this[i].toU8a(isBare);
        }
        return encoded;
    }
}
exports.AbstractArray = AbstractArray;


/***/ }),

/***/ 7932:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractBase = void 0;
/**
 * @name Base
 * @description A type extends the Base class, when it holds a value
 */
class AbstractBase {
    constructor(registry, value, initialU8aLength) {
        this.initialU8aLength = initialU8aLength;
        this.__internal__raw = value;
        this.registry = registry;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description returns the inner (wrapped value)
     */
    get inner() {
        return this.__internal__raw;
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        return this.__internal__raw.isEmpty;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return this.__internal__raw.eq(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return this.__internal__raw.inspect();
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */
    toHex(isLe) {
        return this.__internal__raw.toHex(isLe);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        return this.__internal__raw.toHuman(isExtended);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.__internal__raw.toJSON();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.__internal__raw.toPrimitive();
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return this.__internal__raw.toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        return this.__internal__raw.toU8a(isBare);
    }
    /**
     * @description Returns the inner wrapped value (equivalent to valueOf)
     */
    unwrap() {
        return this.__internal__raw;
    }
    /**
     * @description Returns the inner wrapped value
     */
    valueOf() {
        return this.__internal__raw;
    }
}
exports.AbstractBase = AbstractBase;


/***/ }),

/***/ 86682:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractInt = exports.DEFAULT_UINT_BITS = void 0;
const util_1 = __nccwpck_require__(29795);
exports.DEFAULT_UINT_BITS = 64;
const MAX_NUMBER_BITS = 52;
const MUL_P = new util_1.BN(10000);
const FORMATTERS = [
    ['Perquintill', util_1.BN_QUINTILL],
    ['Perbill', util_1.BN_BILLION],
    ['Permill', util_1.BN_MILLION],
    ['Percent', util_1.BN_HUNDRED]
];
function isToBn(value) {
    return (0, util_1.isFunction)(value.toBn);
}
function toPercentage(value, divisor) {
    return `${(value.mul(MUL_P).div(divisor).toNumber() / 100).toFixed(2)}%`;
}
/** @internal */
function decodeAbstractInt(value, isNegative) {
    if ((0, util_1.isNumber)(value)) {
        if (!Number.isInteger(value) || value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER) {
            throw new Error('Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1');
        }
        return value;
    }
    else if ((0, util_1.isString)(value)) {
        if ((0, util_1.isHex)(value, -1, true)) {
            return (0, util_1.hexToBn)(value, { isLe: false, isNegative }).toString();
        }
        if (value.includes('.') || value.includes(',') || value.includes('e')) {
            throw new Error('String should not contain decimal points or scientific notation');
        }
        return value;
    }
    else if ((0, util_1.isBn)(value) || (0, util_1.isBigInt)(value)) {
        return value.toString();
    }
    else if ((0, util_1.isObject)(value)) {
        if (isToBn(value)) {
            return value.toBn().toString();
        }
        // Allow the construction from an object with a single top-level key. This means that
        // single key objects can be treated equivalently to numbers, assuming they meet the
        // specific requirements. (This is useful in Weights 1.5 where Objects are compact)
        const keys = Object.keys(value);
        if (keys.length !== 1) {
            throw new Error('Unable to construct number from multi-key object');
        }
        return decodeAbstractInt(value[keys[0]], isNegative);
    }
    else if (!value) {
        return 0;
    }
    throw new Error(`Unable to create BN from unknown type ${typeof value}`);
}
/**
 * @name AbstractInt
 * @ignore
 * @noInheritDoc
 */
class AbstractInt extends util_1.BN {
    constructor(registry, value = 0, bitLength = exports.DEFAULT_UINT_BITS, isSigned = false) {
        // Construct via a string/number, which will be passed in the BN constructor.
        // It would be ideal to actually return a BN, but there is an issue:
        // https://github.com/indutny/bn.js/issues/206
        super(
        // shortcut isU8a as used in SCALE decoding
        (0, util_1.isU8a)(value)
            ? bitLength <= 48
                ? (0, util_1.u8aToNumber)(value.subarray(0, bitLength / 8), { isNegative: isSigned })
                : (0, util_1.u8aToBn)(value.subarray(0, bitLength / 8), { isLe: true, isNegative: isSigned }).toString()
            : decodeAbstractInt(value, isSigned));
        this.registry = registry;
        this.__internal__bitLength = bitLength;
        this.encodedLength = this.__internal__bitLength / 8;
        this.initialU8aLength = this.__internal__bitLength / 8;
        this.isUnsigned = !isSigned;
        const isNegative = this.isNeg();
        const maxBits = bitLength - (isSigned && !isNegative ? 1 : 0);
        if (isNegative && !isSigned) {
            throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);
        }
        else if (super.bitLength() > maxBits) {
            throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${maxBits}`);
        }
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is a zero value (align elsewhere)
     */
    get isEmpty() {
        return this.isZero();
    }
    /**
     * @description Returns the number of bits in the value
     */
    bitLength() {
        return this.__internal__bitLength;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    eq(other) {
        // Here we are actually overriding the built-in .eq to take care of both
        // number and BN inputs (no `.eqn` needed) - numbers will be converted
        return super.eq((0, util_1.isHex)(other)
            ? (0, util_1.hexToBn)(other.toString(), { isLe: false, isNegative: !this.isUnsigned })
            : (0, util_1.bnToBn)(other));
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            outer: [this.toU8a()]
        };
    }
    /**
     * @description True if this value is the max of the type
     */
    isMax() {
        const u8a = this.toU8a().filter((b) => b === 0xff);
        return u8a.length === (this.__internal__bitLength / 8);
    }
    /**
     * @description Returns a BigInt representation of the number
     */
    toBigInt() {
        return BigInt(this.toString());
    }
    /**
     * @description Returns the BN representation of the number. (Compatibility)
     */
    toBn() {
        return this;
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex(isLe = false) {
        // For display/JSON, this is BE, for compare, use isLe
        return (0, util_1.bnToHex)(this, {
            bitLength: this.bitLength(),
            isLe,
            isNegative: !this.isUnsigned
        });
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(_isExpanded) {
        const rawType = this.toRawType();
        if (rawType === 'Balance') {
            return this.isMax()
                ? 'everything'
                // FIXME In the case of multiples we need some way of detecting which instance this belongs
                // to. as it stands we will always format (incorrectly) against the first token defined
                : (0, util_1.formatBalance)(this, { decimals: this.registry.chainDecimals[0], withSi: true, withUnit: this.registry.chainTokens[0] });
        }
        const [, divisor] = FORMATTERS.find(([type]) => type === rawType) || [];
        return divisor
            ? toPercentage(this, divisor)
            : (0, util_1.formatNumber)(this);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON(onlyHex = false) {
        // FIXME this return type should by string | number, however BN returns string
        // Options here are
        //   - super.bitLength() - the actual used bits, use hex when close to MAX_SAFE_INTEGER
        //   - this.__internal__bitLength - the max used bits, use hex when larger than native Rust type
        return onlyHex || (this.__internal__bitLength > 128) || (super.bitLength() > MAX_NUMBER_BITS)
            ? this.toHex()
            : this.toNumber();
    }
    /**
     * @description Returns the value in a primitive form, either number when <= 52 bits, or string otherwise
     */
    toPrimitive() {
        return super.bitLength() > MAX_NUMBER_BITS
            ? this.toString()
            : this.toNumber();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        // NOTE In the case of balances, which have a special meaning on the UI
        // and can be interpreted differently, return a specific value for it so
        // underlying it always matches (no matter which length it actually is)
        return this instanceof this.registry.createClassUnsafe('Balance')
            ? 'Balance'
            : `${this.isUnsigned ? 'u' : 'i'}${this.bitLength()}`;
    }
    /**
     * @description Returns the string representation of the value
     * @param base The base to use for the conversion
     */
    toString(base) {
        // only included here since we do not inherit docs
        return super.toString(base);
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */
    toU8a(_isBare) {
        return (0, util_1.bnToU8a)(this, {
            bitLength: this.bitLength(),
            isLe: true,
            isNegative: !this.isUnsigned
        });
    }
}
exports.AbstractInt = AbstractInt;


/***/ }),

/***/ 46949:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractInt = exports.AbstractBase = exports.AbstractArray = void 0;
var Array_js_1 = __nccwpck_require__(51989);
Object.defineProperty(exports, "AbstractArray", ({ enumerable: true, get: function () { return Array_js_1.AbstractArray; } }));
var Base_js_1 = __nccwpck_require__(7932);
Object.defineProperty(exports, "AbstractBase", ({ enumerable: true, get: function () { return Base_js_1.AbstractBase; } }));
var Int_js_1 = __nccwpck_require__(86682);
Object.defineProperty(exports, "AbstractInt", ({ enumerable: true, get: function () { return Int_js_1.AbstractInt; } }));


/***/ }),

/***/ 85662:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Compact = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(78523);
function decodeCompact(registry, Type, value) {
    if ((0, util_1.isU8a)(value)) {
        const [decodedLength, bn] = (value[0] & 0b11) < 0b11
            ? (0, util_1.compactFromU8aLim)(value)
            : (0, util_1.compactFromU8a)(value);
        return [new Type(registry, bn), decodedLength];
    }
    else if (value instanceof Compact) {
        const raw = value.unwrap();
        return raw instanceof Type
            ? [raw, 0]
            : [new Type(registry, raw), 0];
    }
    else if (value instanceof Type) {
        return [value, 0];
    }
    return [new Type(registry, value), 0];
}
/**
 * @name Compact
 * @description
 * A compact length-encoding codec wrapper. It performs the same function as Length, however
 * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly
 * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking
 * a number and making the compact representation thereof
 */
class Compact {
    constructor(registry, Type, value = 0, { definition, setDefinition = util_1.identity } = {}) {
        this.registry = registry;
        this.__internal__Type = definition || setDefinition((0, index_js_1.typeToConstructor)(registry, Type));
        const [raw, decodedLength] = decodeCompact(registry, this.__internal__Type, value);
        this.initialU8aLength = decodedLength;
        this.__internal__raw = raw;
    }
    static with(Type) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d) => (definition = d);
        return class extends Compact {
            constructor(registry, value) {
                super(registry, Type, value, { definition, setDefinition });
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        return this.__internal__raw.isEmpty;
    }
    /**
     * @description Returns the number of bits in the value
     */
    bitLength() {
        return this.__internal__raw.bitLength();
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return this.__internal__raw.eq(other instanceof Compact
            ? other.__internal__raw
            : other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            outer: [this.toU8a()]
        };
    }
    /**
     * @description Returns a BigInt representation of the number
     */
    toBigInt() {
        return this.__internal__raw.toBigInt();
    }
    /**
     * @description Returns the BN representation of the number
     */
    toBn() {
        return this.__internal__raw.toBn();
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */
    toHex(isLe) {
        return this.__internal__raw.toHex(isLe);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        return this.__internal__raw.toHuman(isExtended);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.__internal__raw.toJSON();
    }
    /**
     * @description Returns the number representation for the value
     */
    toNumber() {
        return this.__internal__raw.toNumber();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.__internal__raw.toPrimitive();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `Compact<${this.registry.getClassName(this.__internal__Type) || this.__internal__raw.toRawType()}>`;
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return this.__internal__raw.toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */
    toU8a(_isBare) {
        return (0, util_1.compactToU8a)(this.__internal__raw.toBn());
    }
    /**
     * @description Returns the embedded [[UInt]] or [[Moment]] value
     */
    unwrap() {
        return this.__internal__raw;
    }
}
exports.Compact = Compact;


/***/ }),

/***/ 9011:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DoNotConstruct = void 0;
/**
 * @name DoNotConstruct
 * @description
 * An unknown type that fails on construction with the type info
 */
class DoNotConstruct {
    constructor(registry, typeName = 'DoNotConstruct') {
        this.registry = registry;
        this.__internal__neverError = new Error(`DoNotConstruct: Cannot construct unknown type ${typeName}`);
        throw this.__internal__neverError;
    }
    static with(typeName) {
        return class extends DoNotConstruct {
            constructor(registry) {
                super(registry, typeName);
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        throw this.__internal__neverError;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        throw this.__internal__neverError;
    }
    /**
     * @description Checks if the value is an empty value (always true)
     */
    get isEmpty() {
        throw this.__internal__neverError;
    }
    /**
     * @description Unimplemented
     */
    eq() {
        throw this.__internal__neverError;
    }
    /**
     * @description Unimplemented
     */
    inspect() {
        throw this.__internal__neverError;
    }
    /**
     * @description Unimplemented
     */
    toHex() {
        throw this.__internal__neverError;
    }
    /**
     * @description Unimplemented
     */
    toHuman() {
        throw this.__internal__neverError;
    }
    /**
     * @description Unimplemented
     */
    toJSON() {
        throw this.__internal__neverError;
    }
    /**
     * @description Unimplemented
     */
    toPrimitive() {
        throw this.__internal__neverError;
    }
    /**
     * @description Unimplemented
     */
    toRawType() {
        throw this.__internal__neverError;
    }
    /**
     * @description Unimplemented
     */
    toString() {
        throw this.__internal__neverError;
    }
    /**
     * @description Unimplemented
     */
    toU8a() {
        throw this.__internal__neverError;
    }
}
exports.DoNotConstruct = DoNotConstruct;


/***/ }),

/***/ 71263:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Enum = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(78523);
const Null_js_1 = __nccwpck_require__(81531);
function isRustEnum(def) {
    const defValues = Object.values(def);
    if (defValues.some((v) => (0, util_1.isNumber)(v))) {
        if (!defValues.every((v) => (0, util_1.isNumber)(v) && v >= 0 && v <= 255)) {
            throw new Error('Invalid number-indexed enum definition');
        }
        return false;
    }
    return true;
}
function extractDef(registry, _def) {
    const def = {};
    let isBasic;
    let isIndexed;
    if (Array.isArray(_def)) {
        for (let i = 0, count = _def.length; i < count; i++) {
            def[_def[i]] = { Type: Null_js_1.Null, index: i };
        }
        isBasic = true;
        isIndexed = false;
    }
    else if (isRustEnum(_def)) {
        const [Types, keys] = (0, index_js_1.mapToTypeMap)(registry, _def);
        for (let i = 0, count = keys.length; i < count; i++) {
            def[keys[i]] = { Type: Types[i], index: i };
        }
        isBasic = !Object.values(def).some(({ Type }) => Type !== Null_js_1.Null);
        isIndexed = false;
    }
    else {
        const entries = Object.entries(_def);
        for (let i = 0, count = entries.length; i < count; i++) {
            const [key, index] = entries[i];
            def[key] = { Type: Null_js_1.Null, index };
        }
        isBasic = true;
        isIndexed = true;
    }
    return {
        def,
        isBasic,
        isIndexed
    };
}
function getEntryType(def, checkIdx) {
    const values = Object.values(def);
    for (let i = 0, count = values.length; i < count; i++) {
        const { Type, index } = values[i];
        if (index === checkIdx) {
            return Type;
        }
    }
    throw new Error(`Unable to create Enum via index ${checkIdx}, in ${Object.keys(def).join(', ')}`);
}
function createFromU8a(registry, def, index, value) {
    const Type = getEntryType(def, index);
    return {
        index,
        value: new Type(registry, value)
    };
}
function createFromValue(registry, def, index = 0, value) {
    const Type = getEntryType(def, index);
    return {
        index,
        value: value instanceof Type
            ? value
            : new Type(registry, value)
    };
}
function decodeFromJSON(registry, def, key, value) {
    // JSON comes in the form of { "<type (camelCase)>": "<value for type>" }, here we
    // additionally force to lower to ensure forward compat
    const keys = Object.keys(def).map((k) => k.toLowerCase());
    const keyLower = key.toLowerCase();
    const index = keys.indexOf(keyLower);
    if (index === -1) {
        throw new Error(`Cannot map Enum JSON, unable to find '${key}' in ${keys.join(', ')}`);
    }
    try {
        return createFromValue(registry, def, Object.values(def)[index].index, value);
    }
    catch (error) {
        throw new Error(`Enum(${key}):: ${error.message}`);
    }
}
function decodeEnum(registry, def, value, index) {
    // NOTE We check the index path first, before looking at values - this allows treating
    // the optional indexes before anything else, more-specific > less-specific
    if ((0, util_1.isNumber)(index)) {
        return createFromValue(registry, def, index, value);
    }
    else if ((0, util_1.isU8a)(value) || (0, util_1.isHex)(value)) {
        const u8a = (0, util_1.u8aToU8a)(value);
        // nested, we don't want to match isObject below
        if (u8a.length) {
            return createFromU8a(registry, def, u8a[0], u8a.subarray(1));
        }
    }
    else if (value instanceof Enum) {
        return createFromValue(registry, def, value.index, value.value);
    }
    else if ((0, util_1.isNumber)(value)) {
        return createFromValue(registry, def, value);
    }
    else if ((0, util_1.isString)(value)) {
        return decodeFromJSON(registry, def, value.toString());
    }
    else if ((0, util_1.isObject)(value)) {
        const key = Object.keys(value)[0];
        return decodeFromJSON(registry, def, key, value[key]);
    }
    // Worst-case scenario, return the first with default
    return createFromValue(registry, def, Object.values(def)[0].index);
}
/**
 * @name Enum
 * @description
 * This implements an enum, that based on the value wraps a different type. It is effectively
 * an extension to enum where the value type is determined by the actual index.
 */
class Enum {
    constructor(registry, Types, value, index, { definition, setDefinition = util_1.identity } = {}) {
        const { def, isBasic, isIndexed } = definition || setDefinition(extractDef(registry, Types));
        // shortcut isU8a as used in SCALE decoding
        const decoded = (0, util_1.isU8a)(value) && value.length && !(0, util_1.isNumber)(index)
            ? createFromU8a(registry, def, value[0], value.subarray(1))
            : decodeEnum(registry, def, value, index);
        this.registry = registry;
        this.__internal__def = def;
        this.__internal__isBasic = isBasic;
        this.__internal__isIndexed = isIndexed;
        this.__internal__indexes = Object.values(def).map(({ index }) => index);
        this.__internal__entryIndex = this.__internal__indexes.indexOf(decoded.index);
        this.__internal__raw = decoded.value;
        if (this.__internal__raw.initialU8aLength) {
            this.initialU8aLength = 1 + this.__internal__raw.initialU8aLength;
        }
    }
    static with(Types) {
        var _a;
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d) => definition = d;
        return _a = class extends Enum {
                constructor(registry, value, index) {
                    super(registry, Types, value, index, { definition, setDefinition });
                }
            },
            (() => {
                const keys = Array.isArray(Types)
                    ? Types
                    : Object.keys(Types);
                const count = keys.length;
                const asKeys = new Array(count);
                const isKeys = new Array(count);
                for (let i = 0; i < count; i++) {
                    const name = (0, util_1.stringPascalCase)(keys[i]);
                    asKeys[i] = `as${name}`;
                    isKeys[i] = `is${name}`;
                }
                (0, util_1.objectProperties)(_a.prototype, isKeys, (_, i, self) => self.type === keys[i]);
                (0, util_1.objectProperties)(_a.prototype, asKeys, (k, i, self) => {
                    if (self.type !== keys[i]) {
                        throw new Error(`Cannot convert '${self.type}' via ${k}`);
                    }
                    return self.value;
                });
            })(),
            _a;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return 1 + this.__internal__raw.encodedLength;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description The index of the enum value
     */
    get index() {
        return this.__internal__indexes[this.__internal__entryIndex];
    }
    /**
     * @description The value of the enum
     */
    get inner() {
        return this.__internal__raw;
    }
    /**
     * @description true if this is a basic enum (no values)
     */
    get isBasic() {
        return this.__internal__isBasic;
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        return this.__internal__raw.isEmpty;
    }
    /**
     * @description Checks if the Enum points to a [[Null]] type
     */
    get isNone() {
        return this.__internal__raw instanceof Null_js_1.Null;
    }
    /**
     * @description The available keys for this enum
     */
    get defIndexes() {
        return this.__internal__indexes;
    }
    /**
     * @description The available keys for this enum
     */
    get defKeys() {
        return Object.keys(this.__internal__def);
    }
    /**
     * @description The name of the type this enum value represents
     */
    get type() {
        return this.defKeys[this.__internal__entryIndex];
    }
    /**
     * @description The value of the enum
     */
    get value() {
        return this.__internal__raw;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        // cater for the case where we only pass the enum index
        if ((0, util_1.isU8a)(other)) {
            return !this.toU8a().some((entry, index) => entry !== other[index]);
        }
        else if ((0, util_1.isNumber)(other)) {
            return this.toNumber() === other;
        }
        else if (this.__internal__isBasic && (0, util_1.isString)(other)) {
            return this.type === other;
        }
        else if ((0, util_1.isHex)(other)) {
            return this.toHex() === other;
        }
        else if (other instanceof Enum) {
            return this.index === other.index && this.value.eq(other.value);
        }
        else if ((0, util_1.isObject)(other)) {
            return this.value.eq(other[this.type]);
        }
        // compare the actual wrapper value
        return this.value.eq(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        if (this.__internal__isBasic) {
            return { outer: [new Uint8Array([this.index])] };
        }
        const { inner, outer = [] } = this.__internal__raw.inspect();
        return {
            inner,
            outer: [new Uint8Array([this.index]), ...outer]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        return this.__internal__isBasic || this.isNone
            ? this.type
            : { [this.type]: this.__internal__raw.toHuman(isExtended) };
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.__internal__isBasic
            ? this.type
            : { [(0, util_1.stringCamelCase)(this.type)]: this.__internal__raw.toJSON() };
    }
    /**
     * @description Returns the number representation for the value
     */
    toNumber() {
        return this.index;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.__internal__isBasic
            ? this.type
            : { [(0, util_1.stringCamelCase)(this.type)]: this.__internal__raw.toPrimitive() };
    }
    /**
     * @description Returns a raw struct representation of the enum types
     */
    _toRawStruct() {
        if (this.__internal__isBasic) {
            return this.__internal__isIndexed
                ? this.defKeys.reduce((out, key, index) => {
                    out[key] = this.__internal__indexes[index];
                    return out;
                }, {})
                : this.defKeys;
        }
        const entries = Object.entries(this.__internal__def);
        return (0, index_js_1.typesToMap)(this.registry, entries.reduce((out, [key, { Type }], i) => {
            out[0][i] = Type;
            out[1][i] = key;
            return out;
        }, [new Array(entries.length), new Array(entries.length)]));
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return (0, util_1.stringify)({ _enum: this._toRawStruct() });
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return this.isNone
            ? this.type
            : (0, util_1.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        return isBare
            ? this.__internal__raw.toU8a(isBare)
            : (0, util_1.u8aConcatStrict)([
                new Uint8Array([this.index]),
                this.__internal__raw.toU8a(isBare)
            ]);
    }
}
exports.Enum = Enum;


/***/ }),

/***/ 74560:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Int = void 0;
const Int_js_1 = __nccwpck_require__(86682);
/**
 * @name Int
 * @description
 * A generic signed integer codec. For Substrate all numbers are Little Endian encoded,
 * this handles the encoding and decoding of those numbers. Upon construction
 * the bitLength is provided and any additional use keeps the number to this
 * length. This extends `BN`, so all methods available on a normal `BN` object
 * is available here.
 * @noInheritDoc
 */
class Int extends Int_js_1.AbstractInt {
    constructor(registry, value = 0, bitLength) {
        super(registry, value, bitLength, true);
    }
    static with(bitLength, typeName) {
        return class extends Int {
            constructor(registry, value) {
                super(registry, value, bitLength);
            }
            toRawType() {
                return typeName || super.toRawType();
            }
        };
    }
}
exports.Int = Int;


/***/ }),

/***/ 81531:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Null = void 0;
const util_1 = __nccwpck_require__(29795);
/**
 * @name Null
 * @description
 * Implements a type that does not contain anything (apart from `null`)
 */
class Null {
    constructor(registry) {
        this.encodedLength = 0;
        this.isEmpty = true;
        this.initialU8aLength = 0;
        this.registry = registry;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        throw new Error('.hash is not implemented on Null');
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return other instanceof Null || (0, util_1.isNull)(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {};
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return '0x';
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return null;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return null;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Null';
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return '';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */
    toU8a(_isBare) {
        return new Uint8Array();
    }
}
exports.Null = Null;


/***/ }),

/***/ 71594:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Option = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(78523);
const Null_js_1 = __nccwpck_require__(81531);
class None extends Null_js_1.Null {
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'None';
    }
}
/** @internal */
function decodeOption(registry, Type, value) {
    if (value instanceof Type) {
        // don't re-create, use as it (which also caters for derived types)
        return value;
    }
    else if (value instanceof Option) {
        if (value.value instanceof Type) {
            // same instance, return it
            return value.value;
        }
        else if (value.isNone) {
            // internal is None, we are also none
            return new None(registry);
        }
        // convert the actual value into known
        return new Type(registry, value.value);
    }
    else if ((0, util_1.isNull)(value) || (0, util_1.isUndefined)(value) || value === '0x' || value instanceof None) {
        // anyhting empty we pass as-is
        return new None(registry);
    }
    else if ((0, util_1.isU8a)(value)) {
        // the isU8a check happens last in the if-tree - since the wrapped value
        // may be an instance of it, so Type and Option checks go in first
        return !value.length || value[0] === 0
            ? new None(registry)
            : new Type(registry, value.subarray(1));
    }
    return new Type(registry, value);
}
/**
 * @name Option
 * @description
 * An Option is an optional field. Basically the first byte indicates that there is
 * is value to follow. If the byte is `1` there is an actual value. So the Option
 * implements that - decodes, checks for optionality and wraps the required structure
 * with a value if/as required/found.
 */
class Option {
    constructor(registry, typeName, value, { definition, setDefinition = util_1.identity } = {}) {
        const Type = definition || setDefinition((0, index_js_1.typeToConstructor)(registry, typeName));
        const decoded = (0, util_1.isU8a)(value) && value.length && !(0, util_1.isCodec)(value)
            ? value[0] === 0
                ? new None(registry)
                : new Type(registry, value.subarray(1))
            : decodeOption(registry, Type, value);
        this.registry = registry;
        this.__internal__Type = Type;
        this.__internal__raw = decoded;
        if (decoded?.initialU8aLength) {
            this.initialU8aLength = 1 + decoded.initialU8aLength;
        }
    }
    static with(Type) {
        let definition;
        const setDefinition = (d) => {
            definition = d;
            return d;
        };
        return class extends Option {
            constructor(registry, value) {
                super(registry, Type, value, { definition, setDefinition });
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        // boolean byte (has value, doesn't have) along with wrapped length
        return 1 + this.__internal__raw.encodedLength;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the Option has no value
     */
    get isEmpty() {
        return this.isNone;
    }
    /**
     * @description Checks if the Option has no value
     */
    get isNone() {
        return this.__internal__raw instanceof None;
    }
    /**
     * @description Checks if the Option has a value
     */
    get isSome() {
        return !this.isNone;
    }
    /**
     * @description The actual value for the Option
     */
    get value() {
        return this.__internal__raw;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        if (other instanceof Option) {
            return (this.isSome === other.isSome) && this.value.eq(other.value);
        }
        return this.value.eq(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        if (this.isNone) {
            return { outer: [new Uint8Array([0])] };
        }
        const { inner, outer = [] } = this.__internal__raw.inspect();
        return {
            inner,
            outer: [new Uint8Array([1]), ...outer]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        // This attempts to align with the JSON encoding - actually in this case
        // the isSome value is correct, however the `isNone` may be problematic
        return this.isNone
            ? '0x'
            : (0, util_1.u8aToHex)(this.toU8a().subarray(1));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        return this.__internal__raw.toHuman(isExtended);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.isNone
            ? null
            : this.__internal__raw.toJSON();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.isNone
            ? null
            : this.__internal__raw.toPrimitive();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType(isBare) {
        const wrapped = this.registry.getClassName(this.__internal__Type) || new this.__internal__Type(this.registry).toRawType();
        return isBare
            ? wrapped
            : `Option<${wrapped}>`;
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return this.__internal__raw.toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        if (isBare) {
            return this.__internal__raw.toU8a(true);
        }
        const u8a = new Uint8Array(this.encodedLength);
        if (this.isSome) {
            u8a.set([1]);
            u8a.set(this.__internal__raw.toU8a(), 1);
        }
        return u8a;
    }
    /**
     * @description Returns the value that the Option represents (if available), throws if null
     */
    unwrap() {
        if (this.isNone) {
            throw new Error('Option: unwrapping a None value');
        }
        return this.__internal__raw;
    }
    /**
     * @description Returns the value that the Option represents (if available) or defaultValue if none
     * @param defaultValue The value to return if the option isNone
     */
    unwrapOr(defaultValue) {
        return this.isSome
            ? this.unwrap()
            : defaultValue;
    }
    /**
     * @description Returns the value that the Option represents (if available) or defaultValue if none
     * @param defaultValue The value to return if the option isNone
     */
    unwrapOrDefault() {
        return this.isSome
            ? this.unwrap()
            : new this.__internal__Type(this.registry);
    }
}
exports.Option = Option;


/***/ }),

/***/ 39438:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Result = void 0;
const Enum_js_1 = __nccwpck_require__(71263);
/**
 * @name Result
 * @description
 * A Result maps to the Rust Result type, that can either wrap a success or error value
 */
class Result extends Enum_js_1.Enum {
    constructor(registry, Ok, Err, value) {
        // NOTE This is order-dependent, Ok (with index 0) needs to be first
        // eslint-disable-next-line sort-keys
        super(registry, { Ok, Err }, value);
    }
    static with(Types) {
        return class extends Result {
            constructor(registry, value) {
                super(registry, Types.Ok, Types.Err, value);
            }
        };
    }
    /**
     * @description Returns the wrapper Err value (if isErr)
     */
    get asErr() {
        if (!this.isErr) {
            throw new Error('Cannot extract Err value from Ok result, check isErr first');
        }
        return this.value;
    }
    /**
     * @description Returns the wrapper Ok value (if isOk)
     */
    get asOk() {
        if (!this.isOk) {
            throw new Error('Cannot extract Ok value from Err result, check isOk first');
        }
        return this.value;
    }
    /**
     * @description Checks if the Result has no value
     */
    get isEmpty() {
        return this.isOk && this.value.isEmpty;
    }
    /**
     * @description Checks if the Result wraps an Err value
     */
    get isErr() {
        return !this.isOk;
    }
    /**
     * @description Checks if the Result wraps an Ok value
     */
    get isOk() {
        return this.index === 0;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        const Types = this._toRawStruct();
        return `Result<${Types.Ok},${Types.Err}>`;
    }
}
exports.Result = Result;


/***/ }),

/***/ 22717:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Tuple = void 0;
const util_1 = __nccwpck_require__(29795);
const Array_js_1 = __nccwpck_require__(51989);
const index_js_1 = __nccwpck_require__(78523);
/** @internal */
function decodeTuple(registry, result, value, Classes) {
    if (Array.isArray(value)) {
        const Types = Classes[0];
        for (let i = 0, count = Types.length; i < count; i++) {
            try {
                const entry = value?.[i];
                result[i] = entry instanceof Types[i]
                    ? entry
                    : new Types[i](registry, entry);
            }
            catch (error) {
                throw new Error(`Tuple: failed on ${i}:: ${error.message}`);
            }
        }
        return [result, 0];
    }
    else if ((0, util_1.isHex)(value)) {
        return (0, index_js_1.decodeU8a)(registry, result, (0, util_1.u8aToU8a)(value), Classes);
    }
    else if (!value || !result.length) {
        const Types = Classes[0];
        for (let i = 0, count = Types.length; i < count; i++) {
            result[i] = new Types[i](registry);
        }
        return [result, 0];
    }
    throw new Error(`Expected array input to Tuple decoding, found ${typeof value}: ${(0, util_1.stringify)(value)}`);
}
/**
 * @name Tuple
 * @description
 * A Tuple defines an anonymous fixed-length array, where each element has its
 * own type. It extends the base JS `Array` object.
 */
class Tuple extends Array_js_1.AbstractArray {
    constructor(registry, Types, value, { definition, setDefinition = util_1.identity } = {}) {
        const Classes = definition || setDefinition(Array.isArray(Types)
            ? [(0, index_js_1.typesToConstructors)(registry, Types), []]
            : (0, util_1.isFunction)(Types) || (0, util_1.isString)(Types)
                ? [[(0, index_js_1.typeToConstructor)(registry, Types)], []]
                : (0, index_js_1.mapToTypeMap)(registry, Types));
        super(registry, Classes[0].length);
        this.initialU8aLength = ((0, util_1.isU8a)(value)
            ? (0, index_js_1.decodeU8a)(registry, this, value, Classes)
            : decodeTuple(registry, this, value, Classes))[1];
        this.__internal__Types = Classes;
    }
    static with(Types) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d) => definition = d;
        return class extends Tuple {
            constructor(registry, value) {
                super(registry, Types, value, { definition, setDefinition });
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        let total = 0;
        for (let i = 0, count = this.length; i < count; i++) {
            total += this[i].encodedLength;
        }
        return total;
    }
    /**
     * @description The types definition of the tuple
     */
    get Types() {
        return this.__internal__Types[1].length
            ? this.__internal__Types[1]
            : this.__internal__Types[0].map((T) => new T(this.registry).toRawType());
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            inner: this.inspectInner()
        };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        const types = this.__internal__Types[0].map((T) => this.registry.getClassName(T) || new T(this.registry).toRawType());
        return `(${types.join(',')})`;
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        // Overwrite the default toString representation of Array.
        return (0, util_1.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        return (0, util_1.u8aConcatStrict)(this.toU8aInner(isBare));
    }
}
exports.Tuple = Tuple;


/***/ }),

/***/ 77784:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UInt = void 0;
const Int_js_1 = __nccwpck_require__(86682);
/**
 * @name UInt
 * @description
 * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,
 * this handles the encoding and decoding of those numbers. Upon construction
 * the bitLength is provided and any additional use keeps the number to this
 * length. This extends `BN`, so all methods available on a normal `BN` object
 * is available here.
 * @noInheritDoc
 */
class UInt extends Int_js_1.AbstractInt {
    static with(bitLength, typeName) {
        return class extends UInt {
            constructor(registry, value) {
                super(registry, value, bitLength);
            }
            toRawType() {
                return typeName || super.toRawType();
            }
        };
    }
}
exports.UInt = UInt;


/***/ }),

/***/ 57819:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Vec = exports.decodeVec = void 0;
const util_1 = __nccwpck_require__(29795);
const Array_js_1 = __nccwpck_require__(51989);
const index_js_1 = __nccwpck_require__(78523);
const MAX_LENGTH = 64 * 1024;
const l = (0, util_1.logger)('Vec');
function decodeVecLength(value) {
    if (Array.isArray(value)) {
        return [value, value.length, 0];
    }
    else if ((0, util_1.isU8a)(value) || (0, util_1.isHex)(value)) {
        const u8a = (0, util_1.u8aToU8a)(value);
        const [startAt, length] = (0, util_1.compactFromU8aLim)(u8a);
        if (length > MAX_LENGTH) {
            throw new Error(`Vec length ${length.toString()} exceeds ${MAX_LENGTH}`);
        }
        return [u8a, length, startAt];
    }
    else if (!value) {
        return [null, 0, 0];
    }
    throw new Error(`Expected array/hex input to Vec<*> decoding, found ${typeof value}: ${(0, util_1.stringify)(value)}`);
}
function decodeVec(registry, result, value, startAt, Type) {
    if (Array.isArray(value)) {
        const count = result.length;
        for (let i = 0; i < count; i++) {
            // 26/08/2022 this is actually a false positive - after recent eslint upgdates
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            const entry = value[i];
            try {
                result[i] = entry instanceof Type
                    ? entry
                    : new Type(registry, entry);
            }
            catch (error) {
                l.error(`Unable to decode on index ${i}`, error.message);
                throw error;
            }
        }
        return [0, 0];
    }
    else if (!value) {
        return [0, 0];
    }
    // we don't need more checks, we already limited it via the length decoding
    return (0, index_js_1.decodeU8aVec)(registry, result, (0, util_1.u8aToU8a)(value), startAt, Type);
}
exports.decodeVec = decodeVec;
/**
 * @name Vec
 * @description
 * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows
 * construction with the passed `Type` in the constructor. It is an extension to Array, providing
 * specific encoding/decoding on top of the base type.
 */
class Vec extends Array_js_1.AbstractArray {
    constructor(registry, Type, value = [], { definition, setDefinition = util_1.identity } = {}) {
        const [decodeFrom, length, startAt] = decodeVecLength(value);
        super(registry, length);
        this.__internal__Type = definition || setDefinition((0, index_js_1.typeToConstructor)(registry, Type));
        this.initialU8aLength = ((0, util_1.isU8a)(decodeFrom)
            ? (0, index_js_1.decodeU8aVec)(registry, this, decodeFrom, startAt, this.__internal__Type)
            : decodeVec(registry, this, decodeFrom, startAt, this.__internal__Type))[0];
    }
    static with(Type) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d) => (definition = d);
        return class extends Vec {
            constructor(registry, value) {
                super(registry, Type, value, { definition, setDefinition });
            }
        };
    }
    /**
     * @description The type for the items
     */
    get Type() {
        return this.__internal__Type.name;
    }
    /**
     * @description Finds the index of the value in the array
     */
    indexOf(other) {
        // convert type first, this removes overhead from the eq
        const check = other instanceof this.__internal__Type
            ? other
            : new this.__internal__Type(this.registry, other);
        for (let i = 0, count = this.length; i < count; i++) {
            if (check.eq(this[i])) {
                return i;
            }
        }
        return -1;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `Vec<${this.registry.getClassName(this.__internal__Type) || new this.__internal__Type(this.registry).toRawType()}>`;
    }
}
exports.Vec = Vec;


/***/ }),

/***/ 38300:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VecAny = void 0;
const Array_js_1 = __nccwpck_require__(51989);
/**
 * @name VecAny
 * @description
 * This manages codec arrays, assuming that the inputs are already of type Codec. Unlike
 * a vector, this can be used to manage array-like structures with variable arguments of
 * any types
 */
class VecAny extends Array_js_1.AbstractArray {
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        // FIXME This is basically an any type, cannot instantiate via createType
        return 'Vec<Codec>';
    }
}
exports.VecAny = VecAny;


/***/ }),

/***/ 81518:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VecFixed = void 0;
const util_1 = __nccwpck_require__(29795);
const Array_js_1 = __nccwpck_require__(51989);
const index_js_1 = __nccwpck_require__(78523);
const Vec_js_1 = __nccwpck_require__(57819);
/**
 * @name VecFixed
 * @description
 * This manages codec arrays of a fixed length
 */
class VecFixed extends Array_js_1.AbstractArray {
    constructor(registry, Type, length, value = [], { definition, setDefinition = util_1.identity } = {}) {
        super(registry, length);
        this.__internal__Type = definition || setDefinition((0, index_js_1.typeToConstructor)(registry, Type));
        this.initialU8aLength = ((0, util_1.isU8a)(value)
            ? (0, index_js_1.decodeU8aVec)(registry, this, value, 0, this.__internal__Type)
            : (0, Vec_js_1.decodeVec)(registry, this, value, 0, this.__internal__Type))[1];
    }
    static with(Type, length) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d) => (definition = d);
        return class extends VecFixed {
            constructor(registry, value) {
                super(registry, Type, length, value, { definition, setDefinition });
            }
        };
    }
    /**
     * @description The type for the items
     */
    get Type() {
        return new this.__internal__Type(this.registry).toRawType();
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        let total = 0;
        for (let i = 0, count = this.length; i < count; i++) {
            total += this[i].encodedLength;
        }
        return total;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            inner: this.inspectInner()
        };
    }
    toU8a() {
        // we override, we don't add the length prefix for ourselves, and at the same time we
        // ignore isBare on entries, since they should be properly encoded at all times
        const encoded = this.toU8aInner();
        return encoded.length
            ? (0, util_1.u8aConcatStrict)(encoded)
            : new Uint8Array([]);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `[${this.Type};${this.length}]`;
    }
}
exports.VecFixed = VecFixed;


/***/ }),

/***/ 38390:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VecFixed = exports.VecAny = exports.Vec = exports.UInt = exports.Tuple = exports.Result = exports.Option = exports.Null = exports.Int = exports.Enum = exports.DoNotConstruct = exports.Compact = void 0;
var Compact_js_1 = __nccwpck_require__(85662);
Object.defineProperty(exports, "Compact", ({ enumerable: true, get: function () { return Compact_js_1.Compact; } }));
var DoNotConstruct_js_1 = __nccwpck_require__(9011);
Object.defineProperty(exports, "DoNotConstruct", ({ enumerable: true, get: function () { return DoNotConstruct_js_1.DoNotConstruct; } }));
var Enum_js_1 = __nccwpck_require__(71263);
Object.defineProperty(exports, "Enum", ({ enumerable: true, get: function () { return Enum_js_1.Enum; } }));
var Int_js_1 = __nccwpck_require__(74560);
Object.defineProperty(exports, "Int", ({ enumerable: true, get: function () { return Int_js_1.Int; } }));
var Null_js_1 = __nccwpck_require__(81531);
Object.defineProperty(exports, "Null", ({ enumerable: true, get: function () { return Null_js_1.Null; } }));
var Option_js_1 = __nccwpck_require__(71594);
Object.defineProperty(exports, "Option", ({ enumerable: true, get: function () { return Option_js_1.Option; } }));
var Result_js_1 = __nccwpck_require__(39438);
Object.defineProperty(exports, "Result", ({ enumerable: true, get: function () { return Result_js_1.Result; } }));
var Tuple_js_1 = __nccwpck_require__(22717);
Object.defineProperty(exports, "Tuple", ({ enumerable: true, get: function () { return Tuple_js_1.Tuple; } }));
var UInt_js_1 = __nccwpck_require__(77784);
Object.defineProperty(exports, "UInt", ({ enumerable: true, get: function () { return UInt_js_1.UInt; } }));
var Vec_js_1 = __nccwpck_require__(57819);
Object.defineProperty(exports, "Vec", ({ enumerable: true, get: function () { return Vec_js_1.Vec; } }));
var VecAny_js_1 = __nccwpck_require__(38300);
Object.defineProperty(exports, "VecAny", ({ enumerable: true, get: function () { return VecAny_js_1.VecAny; } }));
var VecFixed_js_1 = __nccwpck_require__(81518);
Object.defineProperty(exports, "VecFixed", ({ enumerable: true, get: function () { return VecFixed_js_1.VecFixed; } }));


/***/ }),

/***/ 81589:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(82125);
var packageInfo_js_1 = __nccwpck_require__(91697);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
tslib_1.__exportStar(__nccwpck_require__(46949), exports);
tslib_1.__exportStar(__nccwpck_require__(38390), exports);
tslib_1.__exportStar(__nccwpck_require__(70654), exports);
tslib_1.__exportStar(__nccwpck_require__(76191), exports);
tslib_1.__exportStar(__nccwpck_require__(20554), exports);
tslib_1.__exportStar(__nccwpck_require__(78523), exports);


/***/ }),

/***/ 76844:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = [];


/***/ }),

/***/ 58577:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(82125);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(76844));
const packageInfo_js_1 = __nccwpck_require__(91697);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 27109:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BTreeMap = void 0;
const Map_js_1 = __nccwpck_require__(5437);
class BTreeMap extends Map_js_1.CodecMap {
    static with(keyType, valType) {
        return class extends BTreeMap {
            constructor(registry, value) {
                super(registry, keyType, valType, value, 'BTreeMap');
            }
        };
    }
}
exports.BTreeMap = BTreeMap;


/***/ }),

/***/ 95860:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BTreeSet = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(78523);
const l = (0, util_1.logger)('BTreeSet');
/** @internal */
function decodeSetFromU8a(registry, ValClass, u8a) {
    const output = new Set();
    const [offset, count] = (0, util_1.compactFromU8aLim)(u8a);
    const result = new Array(count);
    const [decodedLength] = (0, index_js_1.decodeU8aVec)(registry, result, u8a, offset, ValClass);
    for (let i = 0; i < count; i++) {
        output.add(result[i]);
    }
    return [ValClass, output, decodedLength];
}
/** @internal */
function decodeSetFromSet(registry, ValClass, value) {
    const output = new Set();
    value.forEach((val) => {
        try {
            output.add((val instanceof ValClass) ? val : new ValClass(registry, val));
        }
        catch (error) {
            l.error('Failed to decode key or value:', error.message);
            throw error;
        }
    });
    return [ValClass, output, 0];
}
/**
 * Decode input to pass into constructor.
 *
 * @param ValClass - Type of the map value
 * @param value - Value to decode, one of:
 * - null
 * - undefined
 * - hex
 * - Uint8Array
 * - Set<any>, where both key and value types are either
 *   constructors or decodeable values for their types.
 * @param jsonSet
 * @internal
 */
function decodeSet(registry, valType, value) {
    const ValClass = (0, index_js_1.typeToConstructor)(registry, valType);
    if (!value) {
        return [ValClass, new Set(), 0];
    }
    else if ((0, util_1.isU8a)(value) || (0, util_1.isHex)(value)) {
        return decodeSetFromU8a(registry, ValClass, (0, util_1.u8aToU8a)(value));
    }
    else if (Array.isArray(value) || value instanceof Set) {
        return decodeSetFromSet(registry, ValClass, value);
    }
    throw new Error('BTreeSet: cannot decode type');
}
class BTreeSet extends Set {
    constructor(registry, valType, rawValue) {
        const [ValClass, values, decodedLength] = decodeSet(registry, valType, rawValue);
        super((0, index_js_1.sortSet)(values));
        this.registry = registry;
        this.initialU8aLength = decodedLength;
        this.__internal__ValClass = ValClass;
    }
    static with(valType) {
        return class extends BTreeSet {
            constructor(registry, value) {
                super(registry, valType, value);
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        let len = (0, util_1.compactToU8a)(this.size).length;
        for (const v of this.values()) {
            len += v.encodedLength;
        }
        return len;
    }
    /**
     * @description Returns a hash of the value
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        return this.size === 0;
    }
    /**
     * @description The actual set values as a string[]
     */
    get strings() {
        return [...super.values()].map((v) => v.toString());
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return (0, index_js_1.compareSet)(this, other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        const inner = [];
        for (const v of this.values()) {
            inner.push(v.inspect());
        }
        return {
            inner,
            outer: [(0, util_1.compactToU8a)(this.size)]
        };
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        const json = [];
        for (const v of this.values()) {
            json.push(v.toHuman(isExtended));
        }
        return json;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        const json = [];
        for (const v of this.values()) {
            json.push(v.toJSON());
        }
        return json;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `BTreeSet<${this.registry.getClassName(this.__internal__ValClass) || new this.__internal__ValClass(this.registry).toRawType()}>`;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        const json = [];
        for (const v of this.values()) {
            json.push(v.toPrimitive());
        }
        return json;
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return (0, util_1.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        const encoded = [];
        if (!isBare) {
            encoded.push((0, util_1.compactToU8a)(this.size));
        }
        for (const v of this.values()) {
            encoded.push(v.toU8a(isBare));
        }
        return (0, util_1.u8aConcatStrict)(encoded);
    }
}
exports.BTreeSet = BTreeSet;


/***/ }),

/***/ 42277:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BitVec = void 0;
const util_1 = __nccwpck_require__(29795);
const Raw_js_1 = __nccwpck_require__(55190);
/** @internal */
function decodeBitVecU8a(value) {
    if (!value?.length) {
        return [0, new Uint8Array()];
    }
    // handle all other Uint8Array inputs, these do have a length prefix which is the number of bits encoded
    const [offset, length] = (0, util_1.compactFromU8aLim)(value);
    const total = offset + Math.ceil(length / 8);
    if (total > value.length) {
        throw new Error(`BitVec: required length less than remainder, expected at least ${total}, found ${value.length}`);
    }
    return [length, value.subarray(offset, total)];
}
/** @internal */
function decodeBitVec(value) {
    if (Array.isArray(value) || (0, util_1.isString)(value)) {
        const u8a = (0, util_1.u8aToU8a)(value);
        return [u8a.length / 8, u8a];
    }
    return decodeBitVecU8a(value);
}
/**
 * @name BitVec
 * @description
 * A BitVec that represents an array of bits. The bits are however stored encoded. The difference between this
 * and a normal Bytes would be that the length prefix indicates the number of bits encoded, not the bytes
 */
class BitVec extends Raw_js_1.Raw {
    // In lieu of having the Msb/Lsb identifiers passed through, we default to assuming
    // we are dealing with Lsb, which is the default (as of writing) BitVec format used
    // in the Polkadot code (this only affects the toHuman displays)
    constructor(registry, value, isMsb = false) {
        const [decodedLength, u8a] = decodeBitVec(value);
        super(registry, u8a);
        this.__internal__decodedLength = decodedLength;
        this.__internal__isMsb = isMsb;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.length + (0, util_1.compactToU8a)(this.__internal__decodedLength).length;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            outer: [(0, util_1.compactToU8a)(this.__internal__decodedLength), super.toU8a()]
        };
    }
    /**
     * @description Creates a boolean array of the bit values
     */
    toBoolArray() {
        const map = [...this.toU8a(true)].map((v) => [
            !!(v & 128),
            !!(v & 64),
            !!(v & 32),
            !!(v & 16),
            !!(v & 8),
            !!(v & 4),
            !!(v & 2),
            !!(v & 1)
        ]);
        const count = map.length;
        const result = new Array(8 * count);
        for (let i = 0; i < count; i++) {
            const off = i * 8;
            const v = map[i];
            for (let j = 0; j < 8; j++) {
                result[off + j] = this.__internal__isMsb
                    ? v[j]
                    : v[7 - j];
            }
        }
        return result;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return `0b${[...this.toU8a(true)]
            .map((d) => `00000000${d.toString(2)}`.slice(-8))
            .map((s) => this.__internal__isMsb ? s : s.split('').reverse().join(''))
            .join('_')}`;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'BitVec';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        const bitVec = super.toU8a(isBare);
        return isBare
            ? bitVec
            : (0, util_1.u8aConcatStrict)([(0, util_1.compactToU8a)(this.__internal__decodedLength), bitVec]);
    }
}
exports.BitVec = BitVec;


/***/ }),

/***/ 902:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Bytes = void 0;
const util_1 = __nccwpck_require__(29795);
const Raw_js_1 = __nccwpck_require__(55190);
const MAX_LENGTH = 10 * 1024 * 1024;
/** @internal */
function decodeBytesU8a(value) {
    if (!value.length) {
        return [new Uint8Array(), 0];
    }
    // handle all other Uint8Array inputs, these do have a length prefix
    const [offset, length] = (0, util_1.compactFromU8aLim)(value);
    const total = offset + length;
    if (length > MAX_LENGTH) {
        throw new Error(`Bytes length ${length.toString()} exceeds ${MAX_LENGTH}`);
    }
    else if (total > value.length) {
        throw new Error(`Bytes: required length less than remainder, expected at least ${total}, found ${value.length}`);
    }
    return [value.subarray(offset, total), total];
}
/**
 * @name Bytes
 * @description
 * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array
 * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same
 * as what is found in [[Text]] and [[Vec]])
 */
class Bytes extends Raw_js_1.Raw {
    constructor(registry, value) {
        const [u8a, decodedLength] = (0, util_1.isU8a)(value) && !(value instanceof Raw_js_1.Raw)
            ? decodeBytesU8a(value)
            : Array.isArray(value) || (0, util_1.isString)(value)
                ? [(0, util_1.u8aToU8a)(value), 0]
                : [value, 0];
        super(registry, u8a, decodedLength);
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.length + (0, util_1.compactToU8a)(this.length).length;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect(isBare) {
        const clength = (0, util_1.compactToU8a)(this.length);
        return {
            outer: isBare
                ? [super.toU8a()]
                : this.length
                    ? [clength, super.toU8a()]
                    : [clength]
        };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Bytes';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        return isBare
            ? super.toU8a(isBare)
            : (0, util_1.compactAddLength)(this);
    }
}
exports.Bytes = Bytes;


/***/ }),

/***/ 16517:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HashMap = void 0;
const Map_js_1 = __nccwpck_require__(5437);
class HashMap extends Map_js_1.CodecMap {
    static with(keyType, valType) {
        return class extends HashMap {
            constructor(registry, value) {
                super(registry, keyType, valType, value);
            }
        };
    }
}
exports.HashMap = HashMap;


/***/ }),

/***/ 69994:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LinkageResult = exports.Linkage = void 0;
const Option_js_1 = __nccwpck_require__(71594);
const Tuple_js_1 = __nccwpck_require__(22717);
const Vec_js_1 = __nccwpck_require__(57819);
const Struct_js_1 = __nccwpck_require__(67683);
const EMPTY = new Uint8Array();
/**
 * @name Linkage
 * @description The wrapper for the result from a LinkedMap
 */
class Linkage extends Struct_js_1.Struct {
    constructor(registry, Type, value) {
        super(registry, {
            previous: Option_js_1.Option.with(Type),
            // eslint-disable-next-line sort-keys
            next: Option_js_1.Option.with(Type)
        }, value);
    }
    static withKey(Type) {
        return class extends Linkage {
            constructor(registry, value) {
                super(registry, Type, value);
            }
        };
    }
    /**
     * @description Returns the next item the Linkage is pointing to
     */
    get previous() {
        return this.get('previous');
    }
    /**
     * @description Returns the previous item the Linkage is pointing to
     */
    get next() {
        return this.get('next');
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `Linkage<${this.next.toRawType(true)}>`;
    }
    /**
     * @description Custom toU8a which with bare mode does not return the linkage if empty
     */
    toU8a(isBare) {
        // As part of a storage query (where these appear), in the case of empty, the values
        // are NOT populated by the node - follow the same logic, leaving it empty
        return this.isEmpty
            ? EMPTY
            : super.toU8a(isBare);
    }
}
exports.Linkage = Linkage;
/**
 * @name LinkageResult
 * @description A Linkage keys/Values tuple
 */
class LinkageResult extends Tuple_js_1.Tuple {
    constructor(registry, [TypeKey, keys], [TypeValue, values]) {
        super(registry, {
            Keys: Vec_js_1.Vec.with(TypeKey),
            Values: Vec_js_1.Vec.with(TypeValue)
        }, [keys, values]);
    }
}
exports.LinkageResult = LinkageResult;


/***/ }),

/***/ 5437:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CodecMap = void 0;
const util_1 = __nccwpck_require__(29795);
const Array_js_1 = __nccwpck_require__(51989);
const Enum_js_1 = __nccwpck_require__(71263);
const Raw_js_1 = __nccwpck_require__(55190);
const Struct_js_1 = __nccwpck_require__(67683);
const index_js_1 = __nccwpck_require__(78523);
const l = (0, util_1.logger)('Map');
/** @internal */
function decodeMapFromU8a(registry, KeyClass, ValClass, u8a) {
    const output = new Map();
    const [offset, count] = (0, util_1.compactFromU8aLim)(u8a);
    const types = [];
    for (let i = 0; i < count; i++) {
        types.push(KeyClass, ValClass);
    }
    const [values, decodedLength] = (0, index_js_1.decodeU8a)(registry, new Array(types.length), u8a.subarray(offset), [types, []]);
    for (let i = 0, count = values.length; i < count; i += 2) {
        output.set(values[i], values[i + 1]);
    }
    return [KeyClass, ValClass, output, offset + decodedLength];
}
/** @internal */
function decodeMapFromMap(registry, KeyClass, ValClass, value) {
    const output = new Map();
    for (const [key, val] of value.entries()) {
        const isComplex = KeyClass.prototype instanceof Array_js_1.AbstractArray ||
            KeyClass.prototype instanceof Struct_js_1.Struct ||
            KeyClass.prototype instanceof Enum_js_1.Enum;
        try {
            output.set(key instanceof KeyClass
                ? key
                : new KeyClass(registry, isComplex && typeof key === 'string' ? JSON.parse(key) : key), val instanceof ValClass
                ? val
                : new ValClass(registry, val));
        }
        catch (error) {
            l.error('Failed to decode key or value:', error.message);
            throw error;
        }
    }
    return [KeyClass, ValClass, output, 0];
}
/**
 * Decode input to pass into constructor.
 *
 * @param KeyClass - Type of the map key
 * @param ValClass - Type of the map value
 * @param value - Value to decode, one of:
 * - null
 * - undefined
 * - hex
 * - Uint8Array
 * - Map<any, any>, where both key and value types are either
 *   constructors or decodeable values for their types.
 * @param jsonMap
 * @internal
 */
function decodeMap(registry, keyType, valType, value) {
    const KeyClass = (0, index_js_1.typeToConstructor)(registry, keyType);
    const ValClass = (0, index_js_1.typeToConstructor)(registry, valType);
    if (!value) {
        return [KeyClass, ValClass, new Map(), 0];
    }
    else if ((0, util_1.isU8a)(value) || (0, util_1.isHex)(value)) {
        return decodeMapFromU8a(registry, KeyClass, ValClass, (0, util_1.u8aToU8a)(value));
    }
    else if (value instanceof Map) {
        return decodeMapFromMap(registry, KeyClass, ValClass, value);
    }
    else if ((0, util_1.isObject)(value)) {
        return decodeMapFromMap(registry, KeyClass, ValClass, new Map(Object.entries(value)));
    }
    throw new Error('Map: cannot decode type');
}
class CodecMap extends Map {
    constructor(registry, keyType, valType, rawValue, type = 'HashMap') {
        const [KeyClass, ValClass, decoded, decodedLength] = decodeMap(registry, keyType, valType, rawValue);
        super(type === 'BTreeMap' ? (0, index_js_1.sortMap)(decoded) : decoded);
        this.registry = registry;
        this.initialU8aLength = decodedLength;
        this.__internal__KeyClass = KeyClass;
        this.__internal__ValClass = ValClass;
        this.__internal__type = type;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        let len = (0, util_1.compactToU8a)(this.size).length;
        for (const [k, v] of this.entries()) {
            len += k.encodedLength + v.encodedLength;
        }
        return len;
    }
    /**
     * @description Returns a hash of the value
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        return this.size === 0;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return (0, index_js_1.compareMap)(this, other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        const inner = [];
        for (const [k, v] of this.entries()) {
            inner.push(k.inspect());
            inner.push(v.inspect());
        }
        return {
            inner,
            outer: [(0, util_1.compactToU8a)(this.size)]
        };
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        const json = {};
        for (const [k, v] of this.entries()) {
            json[k instanceof Raw_js_1.Raw && k.isAscii
                ? k.toUtf8()
                : k.toString()] = v.toHuman(isExtended);
        }
        return json;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        const json = {};
        for (const [k, v] of this.entries()) {
            json[k.toString()] = v.toJSON();
        }
        return json;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        const json = {};
        for (const [k, v] of this.entries()) {
            json[k instanceof Raw_js_1.Raw && k.isAscii
                ? k.toUtf8()
                : k.toString()] = v.toPrimitive();
        }
        return json;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `${this.__internal__type}<${this.registry.getClassName(this.__internal__KeyClass) || new this.__internal__KeyClass(this.registry).toRawType()},${this.registry.getClassName(this.__internal__ValClass) || new this.__internal__ValClass(this.registry).toRawType()}>`;
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return (0, util_1.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        const encoded = [];
        if (!isBare) {
            encoded.push((0, util_1.compactToU8a)(this.size));
        }
        for (const [k, v] of this.entries()) {
            encoded.push(k.toU8a(isBare), v.toU8a(isBare));
        }
        return (0, util_1.u8aConcatStrict)(encoded);
    }
}
exports.CodecMap = CodecMap;


/***/ }),

/***/ 27067:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OptionBool = void 0;
const util_1 = __nccwpck_require__(29795);
const Option_js_1 = __nccwpck_require__(71594);
const Bool_js_1 = __nccwpck_require__(97726);
function decodeU8a(registry, value) {
    // Encoded as -
    //  - 0 = None
    //  - 1 = True
    //  - 2 = False
    return value[0] === 0
        ? null
        : new Bool_js_1.bool(registry, value[0] === 1);
}
/**
 * @name OptionBool
 * @description A specific implementation of Option<bool> than allows for single-byte encoding
 */
class OptionBool extends Option_js_1.Option {
    constructor(registry, value) {
        super(registry, Bool_js_1.bool, (0, util_1.isU8a)(value) || (0, util_1.isHex)(value)
            ? decodeU8a(registry, (0, util_1.u8aToU8a)(value))
            : value);
        this.initialU8aLength = 1;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return 1 | 0;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */
    get isFalse() {
        return this.isSome
            ? !this.value.valueOf()
            : false;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */
    get isTrue() {
        return this.isSome
            ? this.value.valueOf()
            : false;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return { outer: [this.toU8a()] };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType(isBare) {
        return isBare
            ? 'bool'
            : 'Option<bool>';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        if (isBare) {
            return super.toU8a(true);
        }
        return this.isSome
            ? new Uint8Array([this.isTrue ? 1 : 2])
            : new Uint8Array([0]);
    }
}
exports.OptionBool = OptionBool;


/***/ }),

/***/ 18517:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Range = void 0;
const Tuple_js_1 = __nccwpck_require__(22717);
/**
 * @name Range
 * @description
 * Rust `Range<T>` representation
 */
class Range extends Tuple_js_1.Tuple {
    constructor(registry, Type, value, { rangeName = 'Range' } = {}) {
        super(registry, [Type, Type], value);
        this.__internal__rangeName = rangeName;
    }
    static with(Type) {
        return class extends Range {
            constructor(registry, value) {
                super(registry, Type, value);
            }
        };
    }
    /**
     * @description Returns the starting range value
     */
    get start() {
        return this[0];
    }
    /**
     * @description Returns the ending range value
     */
    get end() {
        return this[1];
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `${this.__internal__rangeName}<${this.start.toRawType()}>`;
    }
}
exports.Range = Range;


/***/ }),

/***/ 56718:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RangeInclusive = void 0;
const Range_js_1 = __nccwpck_require__(18517);
class RangeInclusive extends Range_js_1.Range {
    constructor(registry, Type, value) {
        super(registry, Type, value, { rangeName: 'RangeInclusive' });
    }
    static with(Type) {
        return class extends RangeInclusive {
            constructor(registry, value) {
                super(registry, Type, value);
            }
        };
    }
}
exports.RangeInclusive = RangeInclusive;


/***/ }),

/***/ 94084:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Type = void 0;
const Text_js_1 = __nccwpck_require__(2308);
const index_js_1 = __nccwpck_require__(78523);
/**
 * @name Type
 * @description
 * This is a extended version of Text, specifically to handle types. Here we rely fully
 * on what Text provides us, however we also adjust the types received from the runtime,
 * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.
 */
class Type extends Text_js_1.Text {
    constructor(registry, value = '') {
        super(registry, value);
        this.setOverride((0, index_js_1.sanitize)(this.toString()));
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Type';
    }
}
exports.Type = Type;


/***/ }),

/***/ 46058:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.U8aFixed = void 0;
const util_1 = __nccwpck_require__(29795);
const Raw_js_1 = __nccwpck_require__(55190);
/** @internal */
function decodeU8aFixed(value, bitLength) {
    const u8a = (0, util_1.u8aToU8a)(value);
    const byteLength = bitLength / 8;
    if (!u8a.length) {
        return [new Uint8Array(byteLength), 0];
    }
    if ((0, util_1.isU8a)(value) ? u8a.length < byteLength : u8a.length !== byteLength) {
        throw new Error(`Expected input with ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);
    }
    return [u8a.subarray(0, byteLength), byteLength];
}
/**
 * @name U8aFixed
 * @description
 * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant
 * to be used directly, rather is should be subclassed with the specific lengths.
 */
class U8aFixed extends Raw_js_1.Raw {
    constructor(registry, value = new Uint8Array(), bitLength = 256) {
        const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);
        super(registry, u8a, decodedLength);
    }
    static with(bitLength, typeName) {
        return class extends U8aFixed {
            constructor(registry, value) {
                super(registry, value, bitLength);
            }
            toRawType() {
                return typeName || super.toRawType();
            }
        };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `[u8;${this.length}]`;
    }
}
exports.U8aFixed = U8aFixed;


/***/ }),

/***/ 85067:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WrapperKeepOpaque = void 0;
const util_1 = __nccwpck_require__(29795);
const Raw_js_1 = __nccwpck_require__(55190);
const index_js_1 = __nccwpck_require__(78523);
const Bytes_js_1 = __nccwpck_require__(902);
function decodeRaw(registry, typeName, value) {
    const Type = (0, index_js_1.typeToConstructor)(registry, typeName);
    if ((0, util_1.isU8a)(value) || (0, util_1.isHex)(value)) {
        try {
            const [, u8a] = (0, util_1.isHex)(value)
                ? [0, (0, util_1.u8aToU8a)(value)]
                : (value instanceof Raw_js_1.Raw)
                    ? [0, value.subarray()]
                    : (0, util_1.compactStripLength)(value);
            return [Type, new Type(registry, u8a), value];
        }
        catch {
            return [Type, null, value];
        }
    }
    const instance = new Type(registry, value);
    return [Type, instance, (0, util_1.compactAddLength)(instance.toU8a())];
}
class WrapperKeepOpaque extends Bytes_js_1.Bytes {
    constructor(registry, typeName, value, { opaqueName = 'WrapperKeepOpaque' } = {}) {
        const [Type, decoded, u8a] = decodeRaw(registry, typeName, value);
        super(registry, u8a);
        this.__internal__Type = Type;
        this.__internal__decoded = decoded;
        this.__internal__opaqueName = opaqueName;
    }
    static with(Type) {
        return class extends WrapperKeepOpaque {
            constructor(registry, value) {
                super(registry, Type, value);
            }
        };
    }
    /**
     * @description Checks if the wrapper is decodable
     */
    get isDecoded() {
        return !!this.__internal__decoded;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return this.__internal__decoded
            ? {
                inner: [this.__internal__decoded.inspect()],
                outer: [(0, util_1.compactToU8a)(this.length)]
            }
            : {
                outer: [(0, util_1.compactToU8a)(this.length), this.toU8a(true)]
            };
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        return this.__internal__decoded
            ? this.__internal__decoded.toHuman(isExtended)
            : super.toHuman();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.__internal__decoded
            ? this.__internal__decoded.toPrimitive()
            : super.toPrimitive();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `${this.__internal__opaqueName}<${this.registry.getClassName(this.__internal__Type) || (this.__internal__decoded ? this.__internal__decoded.toRawType() : new this.__internal__Type(this.registry).toRawType())}>`;
    }
    /**
     * @description Converts the Object to to a string (either decoded or bytes)
     */
    toString() {
        return this.__internal__decoded
            ? this.__internal__decoded.toString()
            : super.toString();
    }
    /**
     * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable
     */
    unwrap() {
        if (!this.__internal__decoded) {
            throw new Error(`${this.__internal__opaqueName}: unwrapping an undecodable value`);
        }
        return this.__internal__decoded;
    }
}
exports.WrapperKeepOpaque = WrapperKeepOpaque;


/***/ }),

/***/ 44949:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WrapperOpaque = void 0;
const WrapperKeepOpaque_js_1 = __nccwpck_require__(85067);
class WrapperOpaque extends WrapperKeepOpaque_js_1.WrapperKeepOpaque {
    constructor(registry, typeName, value) {
        super(registry, typeName, value, { opaqueName: 'WrapperOpaque' });
    }
    static with(Type) {
        return class extends WrapperOpaque {
            constructor(registry, value) {
                super(registry, Type, value);
            }
        };
    }
    /**
     * @description The inner value for this wrapper, in all cases it _should_ be decodable (unlike KeepOpaque)
     */
    get inner() {
        return this.unwrap();
    }
}
exports.WrapperOpaque = WrapperOpaque;


/***/ }),

/***/ 70654:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WrapperOpaque = exports.WrapperKeepOpaque = exports.U8aFixed = exports.Type = exports.RangeInclusive = exports.Range = exports.OptionBool = exports.Map = exports.CodecMap = exports.Linkage = exports.HashMap = exports.Bytes = exports.BTreeSet = exports.BTreeMap = exports.BitVec = void 0;
var BitVec_js_1 = __nccwpck_require__(42277);
Object.defineProperty(exports, "BitVec", ({ enumerable: true, get: function () { return BitVec_js_1.BitVec; } }));
var BTreeMap_js_1 = __nccwpck_require__(27109);
Object.defineProperty(exports, "BTreeMap", ({ enumerable: true, get: function () { return BTreeMap_js_1.BTreeMap; } }));
var BTreeSet_js_1 = __nccwpck_require__(95860);
Object.defineProperty(exports, "BTreeSet", ({ enumerable: true, get: function () { return BTreeSet_js_1.BTreeSet; } }));
var Bytes_js_1 = __nccwpck_require__(902);
Object.defineProperty(exports, "Bytes", ({ enumerable: true, get: function () { return Bytes_js_1.Bytes; } }));
var HashMap_js_1 = __nccwpck_require__(16517);
Object.defineProperty(exports, "HashMap", ({ enumerable: true, get: function () { return HashMap_js_1.HashMap; } }));
var Linkage_js_1 = __nccwpck_require__(69994);
Object.defineProperty(exports, "Linkage", ({ enumerable: true, get: function () { return Linkage_js_1.Linkage; } }));
var Map_js_1 = __nccwpck_require__(5437);
Object.defineProperty(exports, "CodecMap", ({ enumerable: true, get: function () { return Map_js_1.CodecMap; } }));
Object.defineProperty(exports, "Map", ({ enumerable: true, get: function () { return Map_js_1.CodecMap; } }));
var OptionBool_js_1 = __nccwpck_require__(27067);
Object.defineProperty(exports, "OptionBool", ({ enumerable: true, get: function () { return OptionBool_js_1.OptionBool; } }));
var Range_js_1 = __nccwpck_require__(18517);
Object.defineProperty(exports, "Range", ({ enumerable: true, get: function () { return Range_js_1.Range; } }));
var RangeInclusive_js_1 = __nccwpck_require__(56718);
Object.defineProperty(exports, "RangeInclusive", ({ enumerable: true, get: function () { return RangeInclusive_js_1.RangeInclusive; } }));
var Type_js_1 = __nccwpck_require__(94084);
Object.defineProperty(exports, "Type", ({ enumerable: true, get: function () { return Type_js_1.Type; } }));
var U8aFixed_js_1 = __nccwpck_require__(46058);
Object.defineProperty(exports, "U8aFixed", ({ enumerable: true, get: function () { return U8aFixed_js_1.U8aFixed; } }));
var WrapperKeepOpaque_js_1 = __nccwpck_require__(85067);
Object.defineProperty(exports, "WrapperKeepOpaque", ({ enumerable: true, get: function () { return WrapperKeepOpaque_js_1.WrapperKeepOpaque; } }));
var WrapperOpaque_js_1 = __nccwpck_require__(44949);
Object.defineProperty(exports, "WrapperOpaque", ({ enumerable: true, get: function () { return WrapperOpaque_js_1.WrapperOpaque; } }));


/***/ }),

/***/ 2997:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(82125);
__nccwpck_require__(58577);
tslib_1.__exportStar(__nccwpck_require__(81589), exports);


/***/ }),

/***/ 97726:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bool = void 0;
const util_1 = __nccwpck_require__(29795);
/**
 * @name bool
 * @description
 * Representation for a boolean value in the system. It extends the base JS `Boolean` class
 * @noInheritDoc
 */
class bool extends Boolean {
    constructor(registry, value = false) {
        super((0, util_1.isU8a)(value)
            ? value[0] === 1
            : value instanceof Boolean
                ? value.valueOf()
                : !!value);
        this.initialU8aLength = 1;
        this.registry = registry;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return 1 | 0;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value (true when it wraps false/default)
     */
    get isEmpty() {
        return this.isFalse;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */
    get isFalse() {
        return !this.isTrue;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */
    get isTrue() {
        return this.valueOf();
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return this.valueOf() === (other instanceof Boolean
            ? other.valueOf()
            : other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            outer: [this.toU8a()]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.valueOf();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'bool';
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return this.toJSON().toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */
    toU8a(_isBare) {
        return new Uint8Array([this.valueOf() ? 1 : 0]);
    }
}
exports.bool = bool;


/***/ }),

/***/ 25137:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CodecDate = void 0;
const util_1 = __nccwpck_require__(29795);
const BITLENGTH = 64;
const U8A_OPTS = { bitLength: BITLENGTH, isLe: true };
function decodeDate(value) {
    if ((0, util_1.isU8a)(value)) {
        value = (0, util_1.u8aToBn)(value.subarray(0, BITLENGTH / 8));
    }
    else if (value instanceof Date) {
        return value;
    }
    else if ((0, util_1.isString)(value)) {
        value = new util_1.BN(value.toString(), 10, 'le');
    }
    return new Date((0, util_1.bnToBn)(value).toNumber() * 1000);
}
/**
 * @name Date
 * @description
 * A wrapper around seconds/timestamps. Internally the representation only has
 * second precicion (aligning with Rust), so any numbers passed an/out are always
 * per-second. For any encoding/decoding the 1000 multiplier would be applied to
 * get it in line with JavaScript formats. It extends the base JS `Date` object
 * and has all the methods available that are applicable to any `Date`
 * @noInheritDoc
 */
class CodecDate extends Date {
    constructor(registry, value = 0) {
        super(decodeDate(value));
        this.initialU8aLength = BITLENGTH / 8;
        this.registry = registry;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return BITLENGTH / 8;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        return this.getTime() === 0;
    }
    /**
     * @description Returns the number of bits in the value
     */
    bitLength() {
        return BITLENGTH;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return decodeDate(other).getTime() === this.getTime();
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            outer: [this.toU8a()]
        };
    }
    /**
     * @description Returns a BigInt representation of the number
     */
    toBigInt() {
        return BigInt(this.toNumber());
    }
    /**
     * @description Returns the BN representation of the timestamp
     */
    toBn() {
        return new util_1.BN(this.toNumber());
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex(isLe = false) {
        return (0, util_1.bnToHex)(this.toBn(), {
            bitLength: BITLENGTH,
            isLe,
            isNegative: false
        });
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toISOString();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        // FIXME Return type should be number, but conflicts with Date.toJSON()
        // which returns string
        return this.toNumber();
    }
    /**
     * @description Returns the number representation for the timestamp
     */
    toNumber() {
        return Math.ceil(this.getTime() / 1000);
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.toNumber();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Moment';
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        // only included here since we do not inherit docs
        return super.toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */
    toU8a(_isBare) {
        return (0, util_1.bnToU8a)(this.toNumber(), U8A_OPTS);
    }
}
exports.CodecDate = CodecDate;


/***/ }),

/***/ 25471:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Float = void 0;
const util_1 = __nccwpck_require__(29795);
/**
 * @name Float
 * @description
 * A Codec wrapper for F32 & F64 values. You generally don't want to be using
 * f32/f64 in your runtime, operations on fixed points numbers are preferable. This class
 * was explicitly added since scale-codec has a flag that enables this and it is available
 * in some eth_* RPCs
 */
class Float extends Number {
    constructor(registry, value, { bitLength = 32 } = {}) {
        super((0, util_1.isU8a)(value) || (0, util_1.isHex)(value)
            ? value.length === 0
                ? 0
                : (0, util_1.u8aToFloat)((0, util_1.u8aToU8a)(value), { bitLength })
            : (value || 0));
        this.__internal__bitLength = bitLength;
        this.encodedLength = bitLength / 8;
        this.initialU8aLength = this.encodedLength;
        this.registry = registry;
    }
    static with(bitLength) {
        return class extends Float {
            constructor(registry, value) {
                super(registry, value, { bitLength });
            }
        };
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Returns true if the type wraps an empty/default all-0 value
     */
    get isEmpty() {
        return this.valueOf() === 0;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return this.valueOf() === Number(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            outer: [this.toU8a()]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toString();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        // Not sure if this is actually a hex or a string value
        // (would need to check against RPCs to see the result here)
        return this.toHex();
    }
    /**
     * @description Returns the number representation (Same as valueOf)
     */
    toNumber() {
        return this.valueOf();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.toNumber();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return `f${this.__internal__bitLength}`;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */
    toU8a(_isBare) {
        return (0, util_1.floatToU8a)(this, {
            bitLength: this.__internal__bitLength
        });
    }
}
exports.Float = Float;


/***/ }),

/***/ 92841:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Json = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(78523);
/** @internal */
function decodeJson(value) {
    return Object.entries(value || {});
}
/**
 * @name Json
 * @description
 * Wraps the a JSON structure retrieve via RPC. It extends the standard JS Map with. While it
 * implements a Codec, it is limited in that it can only be used with input objects via RPC,
 * i.e. no hex decoding. Unlike a struct, this waps a JSON object with unknown keys
 * @noInheritDoc
 */
class Json extends Map {
    constructor(registry, value) {
        const decoded = decodeJson(value);
        super(decoded);
        this.registry = registry;
        (0, util_1.objectProperties)(this, decoded.map(([k]) => k), (k) => this.get(k));
    }
    /**
     * @description Always 0, never encodes as a Uint8Array
     */
    get encodedLength() {
        return 0 | 0;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        return [...this.keys()].length === 0;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return (0, index_js_1.compareMap)(this, other);
    }
    /**
     * @description Returns a typed value from the internal map
     */
    getT(key) {
        return this.get(key);
    }
    /**
     * @description Unimplemented, will throw
     */
    inspect() {
        throw new Error('Unimplemented');
    }
    /**
     * @description Unimplemented, will throw
     */
    toHex() {
        throw new Error('Unimplemented');
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return [...this.entries()].reduce((json, [key, value]) => {
            json[key] = (0, util_1.isFunction)(value.toHuman)
                ? value.toHuman()
                : value;
            return json;
        }, {});
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return [...this.entries()].reduce((json, [key, value]) => {
            json[key] = value;
            return json;
        }, {});
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return [...this.entries()].reduce((json, [key, value]) => {
            json[key] = (0, util_1.isFunction)(value.toPrimitive)
                ? value.toPrimitive()
                : value;
            return json;
        }, {});
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Json';
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return (0, util_1.stringify)(this.toJSON());
    }
    /**
     * @description Unimplemented, will throw
     */
    toU8a(_isBare) {
        throw new Error('Unimplemented');
    }
}
exports.Json = Json;


/***/ }),

/***/ 55190:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Raw = void 0;
const util_1 = __nccwpck_require__(29795);
/**
 * @name Raw
 * @description
 * A basic wrapper around Uint8Array, with no frills and no fuss. It does differ
 * from other implementations where it will consume the full Uint8Array as passed to it.
 * As such it is meant to be subclassed where the wrapper takes care of the
 * actual lengths instead of used directly.
 * @noInheritDoc
 */
class Raw extends Uint8Array {
    /**
     * @description This ensures that operators such as clice, filter, map, etc. return
     * new Array instances (without this we need to apply overrides)
     */
    static get [Symbol.species]() {
        return Uint8Array;
    }
    constructor(registry, value, initialU8aLength) {
        super((0, util_1.u8aToU8a)(value));
        this.registry = registry;
        this.initialU8aLength = initialU8aLength;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.length;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Returns true if the wrapped value contains only ASCII printable characters
     */
    get isAscii() {
        return (0, util_1.isAscii)(this);
    }
    /**
     * @description Returns true if the type wraps an empty/default all-0 value
     */
    get isEmpty() {
        return !this.length || (0, util_1.isUndefined)(this.find((b) => !!b));
    }
    /**
     * @description Returns true if the wrapped value contains only utf8 characters
     */
    get isUtf8() {
        return (0, util_1.isUtf8)(this);
    }
    /**
     * @description Returns the number of bits in the value
     */
    bitLength() {
        return this.length * 8;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        if (other instanceof Uint8Array) {
            return (this.length === other.length) &&
                !this.some((b, index) => b !== other[index]);
        }
        return this.eq((0, util_1.u8aToU8a)(other));
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            outer: [this.toU8a()]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return (0, util_1.u8aToHex)(this);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toPrimitive();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.toHex();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        if (this.isAscii) {
            const text = this.toUtf8();
            // ensure we didn't end up with multibyte codepoints
            if ((0, util_1.isAscii)(text)) {
                return text;
            }
        }
        return this.toJSON();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Raw';
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return this.toHex();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */
    toU8a(_isBare) {
        return Uint8Array.from(this);
    }
    /**
     * @description Returns the wrapped data as a UTF-8 string
     */
    toUtf8() {
        if (!this.isUtf8) {
            throw new Error('The character sequence is not a valid Utf8 string');
        }
        return (0, util_1.u8aToString)(this);
    }
}
exports.Raw = Raw;


/***/ }),

/***/ 50550:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CodecSet = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(78523);
function encodeSet(setValues, values) {
    const encoded = new util_1.BN(0);
    for (let i = 0, count = values.length; i < count; i++) {
        encoded.ior((0, util_1.bnToBn)(setValues[values[i]] || 0));
    }
    return encoded;
}
/** @internal */
function decodeSetArray(setValues, values) {
    const count = values.length;
    const result = new Array(count);
    for (let i = 0; i < count; i++) {
        const key = values[i];
        if ((0, util_1.isUndefined)(setValues[key])) {
            throw new Error(`Set: Invalid key '${key}' passed to Set, allowed ${Object.keys(setValues).join(', ')}`);
        }
        result[i] = key;
    }
    return result;
}
/** @internal */
function decodeSetNumber(setValues, _value) {
    const bn = (0, util_1.bnToBn)(_value);
    const keys = Object.keys(setValues);
    const result = [];
    for (let i = 0, count = keys.length; i < count; i++) {
        const key = keys[i];
        if (bn.and((0, util_1.bnToBn)(setValues[key])).eq((0, util_1.bnToBn)(setValues[key]))) {
            result.push(key);
        }
    }
    const computed = encodeSet(setValues, result);
    if (!bn.eq(computed)) {
        throw new Error(`Set: Mismatch decoding '${bn.toString()}', computed as '${computed.toString()}' with ${result.join(', ')}`);
    }
    return result;
}
/** @internal */
function decodeSet(setValues, value = 0, bitLength) {
    if (bitLength % 8 !== 0) {
        throw new Error(`Expected valid bitLength, power of 8, found ${bitLength}`);
    }
    const byteLength = bitLength / 8;
    if ((0, util_1.isU8a)(value)) {
        return value.length === 0
            ? []
            : decodeSetNumber(setValues, (0, util_1.u8aToBn)(value.subarray(0, byteLength), { isLe: true }));
    }
    else if ((0, util_1.isString)(value)) {
        return decodeSet(setValues, (0, util_1.u8aToU8a)(value), byteLength);
    }
    else if (value instanceof Set || Array.isArray(value)) {
        const input = Array.isArray(value)
            ? value
            : [...value.values()];
        return decodeSetArray(setValues, input);
    }
    return decodeSetNumber(setValues, value);
}
/**
 * @name Set
 * @description
 * An Set is an array of string values, represented an an encoded type by
 * a bitwise representation of the values.
 */
class CodecSet extends Set {
    constructor(registry, setValues, value, bitLength = 8) {
        super(decodeSet(setValues, value, bitLength));
        /**
         * @description adds a value to the Set (extended to allow for validity checking)
         */
        this.add = (key) => {
            // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates "some" chaos
            // we have the isUndefined(this._setValues) in here as well, add is used internally
            // in the Set constructor (so it is undefined at this point, and should allow)
            if (this.__internal__allowed && (0, util_1.isUndefined)(this.__internal__allowed[key])) {
                throw new Error(`Set: Invalid key '${key}' on add`);
            }
            super.add(key);
            return this;
        };
        this.registry = registry;
        this.__internal__allowed = setValues;
        this.__internal__byteLength = bitLength / 8;
    }
    static with(values, bitLength) {
        var _a;
        return _a = class extends CodecSet {
                constructor(registry, value) {
                    super(registry, values, value, bitLength);
                }
            },
            (() => {
                const keys = Object.keys(values);
                const count = keys.length;
                const isKeys = new Array(count);
                for (let i = 0; i < count; i++) {
                    isKeys[i] = `is${(0, util_1.stringPascalCase)(keys[i])}`;
                }
                (0, util_1.objectProperties)(_a.prototype, isKeys, (_, i, self) => self.strings.includes(keys[i]));
            })(),
            _a;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.__internal__byteLength;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description true is the Set contains no values
     */
    get isEmpty() {
        return this.size === 0;
    }
    /**
     * @description The actual set values as a string[]
     */
    get strings() {
        return [...super.values()];
    }
    /**
     * @description The encoded value for the set members
     */
    get valueEncoded() {
        return encodeSet(this.__internal__allowed, this.strings);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        if (Array.isArray(other)) {
            // we don't actually care about the order, sort the values
            return (0, index_js_1.compareArray)(this.strings.sort(), other.sort());
        }
        else if (other instanceof Set) {
            return this.eq([...other.values()]);
        }
        else if ((0, util_1.isNumber)(other) || (0, util_1.isBn)(other)) {
            return this.valueEncoded.eq((0, util_1.bnToBn)(other));
        }
        return false;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return {
            outer: [this.toU8a()]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.strings;
    }
    /**
     * @description The encoded value for the set members
     */
    toNumber() {
        return this.valueEncoded.toNumber();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return (0, util_1.stringify)({ _set: this.__internal__allowed });
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return `[${this.strings.join(', ')}]`;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */
    toU8a(_isBare) {
        return (0, util_1.bnToU8a)(this.valueEncoded, {
            bitLength: this.__internal__byteLength * 8,
            isLe: true
        });
    }
}
exports.CodecSet = CodecSet;


/***/ }),

/***/ 67683:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Struct = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(78523);
function noopSetDefinition(d) {
    return d;
}
/** @internal */
function decodeStructFromObject(registry, [Types, keys], value, jsonMap) {
    let jsonObj;
    const typeofArray = Array.isArray(value);
    const typeofMap = value instanceof Map;
    const count = keys.length;
    if (!typeofArray && !typeofMap && !(0, util_1.isObject)(value)) {
        throw new Error(`Struct: Cannot decode value ${(0, util_1.stringify)(value)} (typeof ${typeof value}), expected an input object, map or array`);
    }
    else if (typeofArray && value.length !== count) {
        throw new Error(`Struct: Unable to map ${(0, util_1.stringify)(value)} array to object with known keys ${keys.join(', ')}`);
    }
    const raw = new Array(count);
    for (let i = 0; i < count; i++) {
        const key = keys[i];
        const jsonKey = jsonMap.get(key) || key;
        const Type = Types[i];
        let assign;
        try {
            if (typeofArray) {
                assign = value[i];
            }
            else if (typeofMap) {
                assign = jsonKey && value.get(jsonKey);
            }
            else {
                assign = jsonKey && value[jsonKey];
                if ((0, util_1.isUndefined)(assign)) {
                    if ((0, util_1.isUndefined)(jsonObj)) {
                        const entries = Object.entries(value);
                        jsonObj = {};
                        for (let e = 0, ecount = entries.length; e < ecount; e++) {
                            jsonObj[(0, util_1.stringCamelCase)(entries[e][0])] = entries[e][1];
                        }
                    }
                    assign = jsonKey && jsonObj[jsonKey];
                }
            }
            raw[i] = [
                key,
                assign instanceof Type
                    ? assign
                    : new Type(registry, assign)
            ];
        }
        catch (error) {
            let type = Type.name;
            try {
                type = new Type(registry).toRawType();
            }
            catch {
                // ignore
            }
            throw new Error(`Struct: failed on ${jsonKey}: ${type}:: ${error.message}`);
        }
    }
    return [raw, 0];
}
/**
 * @name Struct
 * @description
 * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes
 * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec
 * values in the constructor and it manages the decoding. It is important that the constructor
 * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,
 * it needs to decoded in the specific defined order.
 * @noInheritDoc
 */
class Struct extends Map {
    constructor(registry, Types, value, jsonMap = new Map(), { definition, setDefinition = noopSetDefinition } = {}) {
        const typeMap = definition || setDefinition((0, index_js_1.mapToTypeMap)(registry, Types));
        const [decoded, decodedLength] = (0, util_1.isU8a)(value) || (0, util_1.isHex)(value)
            ? (0, index_js_1.decodeU8aStruct)(registry, new Array(typeMap[0].length), (0, util_1.u8aToU8a)(value), typeMap)
            : value instanceof Struct
                ? [value, 0]
                : decodeStructFromObject(registry, typeMap, value || {}, jsonMap);
        super(decoded);
        this.initialU8aLength = decodedLength;
        this.registry = registry;
        this.__internal__jsonMap = jsonMap;
        this.__internal__Types = typeMap;
    }
    static with(Types, jsonMap) {
        var _a;
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d) => definition = d;
        return _a = class extends Struct {
                constructor(registry, value) {
                    super(registry, Types, value, jsonMap, { definition, setDefinition });
                }
            },
            (() => {
                const keys = Object.keys(Types);
                (0, util_1.objectProperties)(_a.prototype, keys, (k, _, self) => self.get(k));
            })(),
            _a;
    }
    /**
     * @description The available keys for this struct
     */
    get defKeys() {
        return this.__internal__Types[1];
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        for (const v of this.values()) {
            if (!v.isEmpty) {
                return false;
            }
        }
        return true;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        let total = 0;
        for (const v of this.values()) {
            total += v.encodedLength;
        }
        return total;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Returns the Type description of the structure
     */
    get Type() {
        const result = {};
        const [Types, keys] = this.__internal__Types;
        for (let i = 0, count = keys.length; i < count; i++) {
            result[keys[i]] = new Types[i](this.registry).toRawType();
        }
        return result;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return (0, index_js_1.compareMap)(this, other);
    }
    /**
     * @description Returns a specific names entry in the structure
     * @param key The name of the entry to retrieve
     */
    get(key) {
        return super.get(key);
    }
    /**
     * @description Returns the values of a member at a specific index (Rather use get(name) for performance)
     */
    getAtIndex(index) {
        return this.toArray()[index];
    }
    /**
     * @description Returns the a types value by name
     */
    getT(key) {
        return super.get(key);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect(isBare) {
        const inner = [];
        for (const [k, v] of this.entries()) {
            inner.push({
                ...v.inspect(!isBare || (0, util_1.isBoolean)(isBare)
                    ? isBare
                    : isBare[k]),
                name: (0, util_1.stringCamelCase)(k)
            });
        }
        return {
            inner
        };
    }
    /**
     * @description Converts the Object to an standard JavaScript Array
     */
    toArray() {
        return [...this.values()];
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        const json = {};
        for (const [k, v] of this.entries()) {
            json[k] = v.toHuman(isExtended);
        }
        return json;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        const json = {};
        for (const [k, v] of this.entries()) {
            // Here we pull out the entry against the JSON mapping (if supplied)
            // since this representation goes over RPC and needs to be correct
            json[(this.__internal__jsonMap.get(k) || k)] = v.toJSON();
        }
        return json;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        const json = {};
        for (const [k, v] of this.entries()) {
            json[k] = v.toPrimitive();
        }
        return json;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return (0, util_1.stringify)((0, index_js_1.typesToMap)(this.registry, this.__internal__Types));
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return (0, util_1.stringify)(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        const encoded = [];
        for (const [k, v] of this.entries()) {
            encoded.push(v.toU8a(!isBare || (0, util_1.isBoolean)(isBare)
                ? isBare
                : isBare[k]));
        }
        return (0, util_1.u8aConcatStrict)(encoded);
    }
}
exports.Struct = Struct;


/***/ }),

/***/ 2308:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Text = void 0;
const util_1 = __nccwpck_require__(29795);
const Raw_js_1 = __nccwpck_require__(55190);
const MAX_LENGTH = 128 * 1024;
/** @internal */
function decodeText(value) {
    if ((0, util_1.isU8a)(value)) {
        if (!value.length) {
            return ['', 0];
        }
        // for Raw, the internal buffer does not have an internal length
        // (the same applies in e.g. Bytes, where length is added at encoding-time)
        if (value instanceof Raw_js_1.Raw) {
            return [(0, util_1.u8aToString)(value), 0];
        }
        const [offset, length] = (0, util_1.compactFromU8aLim)(value);
        const total = offset + length;
        if (length > MAX_LENGTH) {
            throw new Error(`Text: length ${length.toString()} exceeds ${MAX_LENGTH}`);
        }
        else if (total > value.length) {
            throw new Error(`Text: required length less than remainder, expected at least ${total}, found ${value.length}`);
        }
        return [(0, util_1.u8aToString)(value.subarray(offset, total)), total];
    }
    else if ((0, util_1.isHex)(value)) {
        return [(0, util_1.u8aToString)((0, util_1.hexToU8a)(value)), 0];
    }
    return [value ? value.toString() : '', 0];
}
/**
 * @name Text
 * @description
 * This is a string wrapper, along with the length. It is used both for strings as well
 * as items such as documentation. It simply extends the standard JS `String` built-in
 * object, inheriting all methods exposed from `String`.
 * @noInheritDoc
 */
class Text extends String {
    constructor(registry, value) {
        const [str, decodedLength] = decodeText(value);
        super(str);
        this.__internal__override = null;
        this.registry = registry;
        this.initialU8aLength = decodedLength;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */
    get isEmpty() {
        return this.length === 0;
    }
    /**
     * @description The length of the value
     */
    get length() {
        // only included here since we ignore inherited docs
        return super.length;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return (0, util_1.isString)(other)
            ? this.toString() === other.toString()
            : false;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        const value = (0, util_1.stringToU8a)(super.toString());
        return {
            outer: value.length
                ? [(0, util_1.compactToU8a)(value.length), value]
                : [(0, util_1.compactToU8a)(value.length)]
        };
    }
    /**
     * @description Set an override value for this
     */
    setOverride(override) {
        this.__internal__override = override;
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        // like with Vec<u8>, when we are encoding to hex, we don't actually add
        // the length prefix (it is already implied by the actual string length)
        return (0, util_1.u8aToHex)(this.toU8a(true));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.toString();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Text';
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return this.__internal__override || super.toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        // NOTE Here we use the super toString (we are not taking overrides into account,
        // rather encoding the original value the string was constructed with)
        const encoded = (0, util_1.stringToU8a)(super.toString());
        return isBare
            ? encoded
            : (0, util_1.compactAddLength)(encoded);
    }
}
exports.Text = Text;


/***/ }),

/***/ 76191:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Text = exports.Struct = exports.Set = exports.CodecSet = exports.Raw = exports.Json = exports.Float = exports.Date = exports.CodecDate = exports.bool = exports.Bool = void 0;
var Bool_js_1 = __nccwpck_require__(97726);
Object.defineProperty(exports, "Bool", ({ enumerable: true, get: function () { return Bool_js_1.bool; } }));
Object.defineProperty(exports, "bool", ({ enumerable: true, get: function () { return Bool_js_1.bool; } }));
var Date_js_1 = __nccwpck_require__(25137);
Object.defineProperty(exports, "CodecDate", ({ enumerable: true, get: function () { return Date_js_1.CodecDate; } }));
Object.defineProperty(exports, "Date", ({ enumerable: true, get: function () { return Date_js_1.CodecDate; } }));
var Float_js_1 = __nccwpck_require__(25471);
Object.defineProperty(exports, "Float", ({ enumerable: true, get: function () { return Float_js_1.Float; } }));
var Json_js_1 = __nccwpck_require__(92841);
Object.defineProperty(exports, "Json", ({ enumerable: true, get: function () { return Json_js_1.Json; } }));
var Raw_js_1 = __nccwpck_require__(55190);
Object.defineProperty(exports, "Raw", ({ enumerable: true, get: function () { return Raw_js_1.Raw; } }));
var Set_js_1 = __nccwpck_require__(50550);
Object.defineProperty(exports, "CodecSet", ({ enumerable: true, get: function () { return Set_js_1.CodecSet; } }));
Object.defineProperty(exports, "Set", ({ enumerable: true, get: function () { return Set_js_1.CodecSet; } }));
var Struct_js_1 = __nccwpck_require__(67683);
Object.defineProperty(exports, "Struct", ({ enumerable: true, get: function () { return Struct_js_1.Struct; } }));
var Text_js_1 = __nccwpck_require__(2308);
Object.defineProperty(exports, "Text", ({ enumerable: true, get: function () { return Text_js_1.Text; } }));


/***/ }),

/***/ 91697:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/types-codec', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 47919:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.f32 = void 0;
const Float_js_1 = __nccwpck_require__(25471);
/**
 * @name f32
 * @description
 * A 32-bit float
 */
class f32 extends Float_js_1.Float.with(32) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__FloatType = 'f32';
    }
}
exports.f32 = f32;


/***/ }),

/***/ 60114:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.f64 = void 0;
const Float_js_1 = __nccwpck_require__(25471);
/**
 * @name f64
 * @description
 * A 64-bit float
 */
class f64 extends Float_js_1.Float.with(64) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__FloatType = 'f64';
    }
}
exports.f64 = f64;


/***/ }),

/***/ 29412:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.i128 = void 0;
const Int_js_1 = __nccwpck_require__(74560);
/**
 * @name i128
 * @description
 * A 128-bit signed integer
 */
class i128 extends Int_js_1.Int.with(128) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__IntType = 'i128';
    }
}
exports.i128 = i128;


/***/ }),

/***/ 3650:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.i16 = void 0;
const Int_js_1 = __nccwpck_require__(74560);
/**
 * @name i16
 * @description
 * A 16-bit signed integer
 */
class i16 extends Int_js_1.Int.with(16) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__IntType = 'i16';
    }
}
exports.i16 = i16;


/***/ }),

/***/ 48735:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.i256 = void 0;
const Int_js_1 = __nccwpck_require__(74560);
/**
 * @name i256
 * @description
 * A 256-bit signed integer
 */
class i256 extends Int_js_1.Int.with(256) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__IntType = 'i256';
    }
}
exports.i256 = i256;


/***/ }),

/***/ 97575:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.i32 = void 0;
const Int_js_1 = __nccwpck_require__(74560);
/**
 * @name i32
 * @description
 * A 32-bit signed integer
 */
class i32 extends Int_js_1.Int.with(32) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__IntType = 'i32';
    }
}
exports.i32 = i32;


/***/ }),

/***/ 62742:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.i64 = void 0;
const Int_js_1 = __nccwpck_require__(74560);
/**
 * @name i64
 * @description
 * A 64-bit signed integer
 */
class i64 extends Int_js_1.Int.with(64) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__IntType = 'i64';
    }
}
exports.i64 = i64;


/***/ }),

/***/ 29948:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.i8 = void 0;
const Int_js_1 = __nccwpck_require__(74560);
/**
 * @name i8
 * @description
 * An 8-bit signed integer
 */
class i8 extends Int_js_1.Int.with(8) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__IntType = 'i8';
    }
}
exports.i8 = i8;


/***/ }),

/***/ 76262:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isize = void 0;
const I32_js_1 = __nccwpck_require__(97575);
/**
 * @name ISize
 * @description
 * A System default signed number, typically used in RPC to report non-consensus
 * data. It is a wrapper for [[I32]] as a WASM default (as generated by Rust bindings).
 * It is not to be used, since it creates consensus mismatches.
 */
class isize extends I32_js_1.i32 {
    constructor(registry, value) {
        super(registry, value);
        throw new Error('The `isize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally i64) and WASM (always i32) code. Use one of the `i32` or `i64` types explicitly.');
    }
}
exports.isize = isize;


/***/ }),

/***/ 51484:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u128 = void 0;
const UInt_js_1 = __nccwpck_require__(77784);
/**
 * @name u128
 * @description
 * A 128-bit unsigned integer
 */
class u128 extends UInt_js_1.UInt.with(128) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__UIntType = 'u128';
    }
}
exports.u128 = u128;


/***/ }),

/***/ 12130:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u16 = void 0;
const UInt_js_1 = __nccwpck_require__(77784);
/**
 * @name u16
 * @description
 * A 16-bit unsigned integer
 */
class u16 extends UInt_js_1.UInt.with(16) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__UIntType = 'u16';
    }
}
exports.u16 = u16;


/***/ }),

/***/ 33153:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u256 = void 0;
const UInt_js_1 = __nccwpck_require__(77784);
/**
 * @name u256
 * @description
 * A 256-bit unsigned integer
 */
class u256 extends UInt_js_1.UInt.with(256) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__UIntType = 'u256';
    }
}
exports.u256 = u256;


/***/ }),

/***/ 51294:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u32 = void 0;
const UInt_js_1 = __nccwpck_require__(77784);
/**
 * @name u32
 * @description
 * A 32-bit unsigned integer
 */
class u32 extends UInt_js_1.UInt.with(32) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__UIntType = 'u32';
    }
}
exports.u32 = u32;


/***/ }),

/***/ 46900:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u64 = void 0;
const UInt_js_1 = __nccwpck_require__(77784);
/**
 * @name u64
 * @description
 * A 64-bit unsigned integer
 */
class u64 extends UInt_js_1.UInt.with(64) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__UIntType = 'u64';
    }
}
exports.u64 = u64;


/***/ }),

/***/ 96990:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8 = void 0;
const UInt_js_1 = __nccwpck_require__(77784);
/**
 * @name u8
 * @description
 * An 8-bit unsigned integer
 */
class u8 extends UInt_js_1.UInt.with(8) {
    constructor() {
        super(...arguments);
        // NOTE without this, we cannot properly determine extensions
        this.__UIntType = 'u8';
    }
}
exports.u8 = u8;


/***/ }),

/***/ 17394:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.usize = void 0;
const U32_js_1 = __nccwpck_require__(51294);
/**
 * @name USize
 * @description
 * A System default unsigned number, typically used in RPC to report non-consensus
 * data. It is a wrapper for [[U32]] as a WASM default (as generated by Rust bindings).
 * It is not to be used, since it created consensus mismatches.
 */
class usize extends U32_js_1.u32 {
    constructor(registry, value) {
        super(registry, value);
        throw new Error('The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.');
    }
}
exports.usize = usize;


/***/ }),

/***/ 20554:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.usize = exports.USize = exports.u256 = exports.U256 = exports.u128 = exports.U128 = exports.u64 = exports.U64 = exports.u32 = exports.U32 = exports.u16 = exports.U16 = exports.u8 = exports.U8 = exports.isize = exports.ISize = exports.i256 = exports.I256 = exports.i128 = exports.I128 = exports.i64 = exports.I64 = exports.i32 = exports.I32 = exports.i16 = exports.I16 = exports.i8 = exports.I8 = exports.f64 = exports.F64 = exports.f32 = exports.F32 = void 0;
var F32_js_1 = __nccwpck_require__(47919);
Object.defineProperty(exports, "F32", ({ enumerable: true, get: function () { return F32_js_1.f32; } }));
Object.defineProperty(exports, "f32", ({ enumerable: true, get: function () { return F32_js_1.f32; } }));
var F64_js_1 = __nccwpck_require__(60114);
Object.defineProperty(exports, "F64", ({ enumerable: true, get: function () { return F64_js_1.f64; } }));
Object.defineProperty(exports, "f64", ({ enumerable: true, get: function () { return F64_js_1.f64; } }));
var I8_js_1 = __nccwpck_require__(29948);
Object.defineProperty(exports, "I8", ({ enumerable: true, get: function () { return I8_js_1.i8; } }));
Object.defineProperty(exports, "i8", ({ enumerable: true, get: function () { return I8_js_1.i8; } }));
var I16_js_1 = __nccwpck_require__(3650);
Object.defineProperty(exports, "I16", ({ enumerable: true, get: function () { return I16_js_1.i16; } }));
Object.defineProperty(exports, "i16", ({ enumerable: true, get: function () { return I16_js_1.i16; } }));
var I32_js_1 = __nccwpck_require__(97575);
Object.defineProperty(exports, "I32", ({ enumerable: true, get: function () { return I32_js_1.i32; } }));
Object.defineProperty(exports, "i32", ({ enumerable: true, get: function () { return I32_js_1.i32; } }));
var I64_js_1 = __nccwpck_require__(62742);
Object.defineProperty(exports, "I64", ({ enumerable: true, get: function () { return I64_js_1.i64; } }));
Object.defineProperty(exports, "i64", ({ enumerable: true, get: function () { return I64_js_1.i64; } }));
var I128_js_1 = __nccwpck_require__(29412);
Object.defineProperty(exports, "I128", ({ enumerable: true, get: function () { return I128_js_1.i128; } }));
Object.defineProperty(exports, "i128", ({ enumerable: true, get: function () { return I128_js_1.i128; } }));
var I256_js_1 = __nccwpck_require__(48735);
Object.defineProperty(exports, "I256", ({ enumerable: true, get: function () { return I256_js_1.i256; } }));
Object.defineProperty(exports, "i256", ({ enumerable: true, get: function () { return I256_js_1.i256; } }));
var ISize_js_1 = __nccwpck_require__(76262);
Object.defineProperty(exports, "ISize", ({ enumerable: true, get: function () { return ISize_js_1.isize; } }));
Object.defineProperty(exports, "isize", ({ enumerable: true, get: function () { return ISize_js_1.isize; } }));
var U8_js_1 = __nccwpck_require__(96990);
Object.defineProperty(exports, "U8", ({ enumerable: true, get: function () { return U8_js_1.u8; } }));
Object.defineProperty(exports, "u8", ({ enumerable: true, get: function () { return U8_js_1.u8; } }));
var U16_js_1 = __nccwpck_require__(12130);
Object.defineProperty(exports, "U16", ({ enumerable: true, get: function () { return U16_js_1.u16; } }));
Object.defineProperty(exports, "u16", ({ enumerable: true, get: function () { return U16_js_1.u16; } }));
var U32_js_1 = __nccwpck_require__(51294);
Object.defineProperty(exports, "U32", ({ enumerable: true, get: function () { return U32_js_1.u32; } }));
Object.defineProperty(exports, "u32", ({ enumerable: true, get: function () { return U32_js_1.u32; } }));
var U64_js_1 = __nccwpck_require__(46900);
Object.defineProperty(exports, "U64", ({ enumerable: true, get: function () { return U64_js_1.u64; } }));
Object.defineProperty(exports, "u64", ({ enumerable: true, get: function () { return U64_js_1.u64; } }));
var U128_js_1 = __nccwpck_require__(51484);
Object.defineProperty(exports, "U128", ({ enumerable: true, get: function () { return U128_js_1.u128; } }));
Object.defineProperty(exports, "u128", ({ enumerable: true, get: function () { return U128_js_1.u128; } }));
var U256_js_1 = __nccwpck_require__(33153);
Object.defineProperty(exports, "U256", ({ enumerable: true, get: function () { return U256_js_1.u256; } }));
Object.defineProperty(exports, "u256", ({ enumerable: true, get: function () { return U256_js_1.u256; } }));
var USize_js_1 = __nccwpck_require__(17394);
Object.defineProperty(exports, "USize", ({ enumerable: true, get: function () { return USize_js_1.usize; } }));
Object.defineProperty(exports, "usize", ({ enumerable: true, get: function () { return USize_js_1.usize; } }));


/***/ }),

/***/ 72916:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 90244:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.compareArray = void 0;
const util_1 = __nccwpck_require__(29795);
const util_js_1 = __nccwpck_require__(63029);
function compareArray(a, b) {
    if (Array.isArray(b)) {
        return (a.length === b.length) && (0, util_1.isUndefined)(a.find((v, index) => (0, util_js_1.hasEq)(v)
            ? !v.eq(b[index])
            : v !== b[index]));
    }
    return false;
}
exports.compareArray = compareArray;


/***/ }),

/***/ 9117:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.compareMap = void 0;
const util_1 = __nccwpck_require__(29795);
const util_js_1 = __nccwpck_require__(63029);
function hasMismatch(a, b) {
    return (0, util_1.isUndefined)(a) || ((0, util_js_1.hasEq)(a)
        ? !a.eq(b)
        : a !== b);
}
function notEntry(value) {
    return !Array.isArray(value) || value.length !== 2;
}
function compareMapArray(a, b) {
    // equal number of entries and each entry in the array should match
    return (a.size === b.length) && !b.some((e) => notEntry(e) ||
        hasMismatch(a.get(e[0]), e[1]));
}
function compareMap(a, b) {
    if (Array.isArray(b)) {
        return compareMapArray(a, b);
    }
    else if (b instanceof Map) {
        return compareMapArray(a, [...b.entries()]);
    }
    else if ((0, util_1.isObject)(b)) {
        return compareMapArray(a, Object.entries(b));
    }
    return false;
}
exports.compareMap = compareMap;


/***/ }),

/***/ 91206:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.compareSet = void 0;
const util_1 = __nccwpck_require__(29795);
function compareSetArray(a, b) {
    // equal number of entries and each entry in the array should match
    return (a.size === b.length) && !b.some((e) => !a.has(e));
}
function compareSet(a, b) {
    if (Array.isArray(b)) {
        return compareSetArray(a, b);
    }
    else if (b instanceof Set) {
        return compareSetArray(a, [...b.values()]);
    }
    else if ((0, util_1.isObject)(b)) {
        return compareSetArray(a, Object.values(b));
    }
    return false;
}
exports.compareSet = compareSet;


/***/ }),

/***/ 44581:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decodeU8aVec = exports.decodeU8aStruct = exports.decodeU8a = void 0;
const util_1 = __nccwpck_require__(29795);
/** @internal */
function formatFailure(registry, fn, _result, { message }, u8a, i, count, Type, key) {
    let type = '';
    try {
        type = `: ${new Type(registry).toRawType()}`;
    }
    catch {
        // ignore
    }
    // This is extra debugging info (we most-probably want this in in some way, shape or form,
    // but at this point not quite sure how to include and format it (it can be quite massive)
    // console.error(JSON.stringify(result, null, 2));
    return `${fn}: failed at ${(0, util_1.u8aToHex)(u8a.subarray(0, 16))}…${key ? ` on ${key}` : ''} (index ${i + 1}/${count})${type}:: ${message}`;
}
/**
 * @internal
 *
 * Given an u8a, and an array of Type constructors, decode the u8a against the
 * types, and return an array of decoded values.
 *
 * @param u8a - The u8a to decode.
 * @param result - The result array (will be returned with values pushed)
 * @param types - The array of CodecClass to decode the U8a against.
 */
function decodeU8a(registry, result, u8a, [Types, keys]) {
    const count = result.length;
    let offset = 0;
    let i = 0;
    try {
        while (i < count) {
            const value = new Types[i](registry, u8a.subarray(offset));
            offset += value.initialU8aLength || value.encodedLength;
            result[i] = value;
            i++;
        }
    }
    catch (error) {
        throw new Error(formatFailure(registry, 'decodeU8a', result, error, u8a.subarray(offset), i, count, Types[i], keys[i]));
    }
    return [result, offset];
}
exports.decodeU8a = decodeU8a;
/**
 * @internal
 *
 * Split from decodeU8a since this is specialized to zip returns ... while we duplicate, this
 * is all on the hot-path, so it is not great, however there is (some) method behind the madness
 */
function decodeU8aStruct(registry, result, u8a, [Types, keys]) {
    const count = result.length;
    let offset = 0;
    let i = 0;
    try {
        while (i < count) {
            const value = new Types[i](registry, u8a.subarray(offset));
            offset += value.initialU8aLength || value.encodedLength;
            result[i] = [keys[i], value];
            i++;
        }
    }
    catch (error) {
        throw new Error(formatFailure(registry, 'decodeU8aStruct', result, error, u8a.subarray(offset), i, count, Types[i], keys[i]));
    }
    return [result, offset];
}
exports.decodeU8aStruct = decodeU8aStruct;
/**
 * @internal
 *
 * Split from decodeU8a since this is specialized to 1 instance ... while we duplicate, this
 * is all on the hot-path, so it is not great, however there is (some) method behind the madness
 */
function decodeU8aVec(registry, result, u8a, startAt, Type) {
    const count = result.length;
    let offset = startAt;
    let i = 0;
    try {
        while (i < count) {
            const value = new Type(registry, u8a.subarray(offset));
            offset += value.initialU8aLength || value.encodedLength;
            result[i] = value;
            i++;
        }
    }
    catch (error) {
        throw new Error(formatFailure(registry, 'decodeU8aVec', result, error, u8a.subarray(offset), i, count, Type));
    }
    return [offset, offset - startAt];
}
exports.decodeU8aVec = decodeU8aVec;


/***/ }),

/***/ 78523:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.typesToMap = exports.typeToConstructor = exports.typesToConstructors = exports.mapToTypeMap = exports.sortSet = exports.sortMap = exports.sortAsc = exports.sanitize = exports.decodeU8aVec = exports.decodeU8aStruct = exports.decodeU8a = exports.compareSet = exports.compareMap = exports.compareArray = void 0;
var compareArray_js_1 = __nccwpck_require__(90244);
Object.defineProperty(exports, "compareArray", ({ enumerable: true, get: function () { return compareArray_js_1.compareArray; } }));
var compareMap_js_1 = __nccwpck_require__(9117);
Object.defineProperty(exports, "compareMap", ({ enumerable: true, get: function () { return compareMap_js_1.compareMap; } }));
var compareSet_js_1 = __nccwpck_require__(91206);
Object.defineProperty(exports, "compareSet", ({ enumerable: true, get: function () { return compareSet_js_1.compareSet; } }));
var decodeU8a_js_1 = __nccwpck_require__(44581);
Object.defineProperty(exports, "decodeU8a", ({ enumerable: true, get: function () { return decodeU8a_js_1.decodeU8a; } }));
Object.defineProperty(exports, "decodeU8aStruct", ({ enumerable: true, get: function () { return decodeU8a_js_1.decodeU8aStruct; } }));
Object.defineProperty(exports, "decodeU8aVec", ({ enumerable: true, get: function () { return decodeU8a_js_1.decodeU8aVec; } }));
var sanitize_js_1 = __nccwpck_require__(62583);
Object.defineProperty(exports, "sanitize", ({ enumerable: true, get: function () { return sanitize_js_1.sanitize; } }));
var sortValues_js_1 = __nccwpck_require__(47087);
Object.defineProperty(exports, "sortAsc", ({ enumerable: true, get: function () { return sortValues_js_1.sortAsc; } }));
Object.defineProperty(exports, "sortMap", ({ enumerable: true, get: function () { return sortValues_js_1.sortMap; } }));
Object.defineProperty(exports, "sortSet", ({ enumerable: true, get: function () { return sortValues_js_1.sortSet; } }));
var toConstructors_js_1 = __nccwpck_require__(77329);
Object.defineProperty(exports, "mapToTypeMap", ({ enumerable: true, get: function () { return toConstructors_js_1.mapToTypeMap; } }));
Object.defineProperty(exports, "typesToConstructors", ({ enumerable: true, get: function () { return toConstructors_js_1.typesToConstructors; } }));
Object.defineProperty(exports, "typeToConstructor", ({ enumerable: true, get: function () { return toConstructors_js_1.typeToConstructor; } }));
var typesToMap_js_1 = __nccwpck_require__(73223);
Object.defineProperty(exports, "typesToMap", ({ enumerable: true, get: function () { return typesToMap_js_1.typesToMap; } }));


/***/ }),

/***/ 62583:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sanitize = exports.removeWrap = exports.removeTraits = exports.removePairOf = exports.removeGenerics = exports.removeColons = exports.removeExtensions = exports.flattenSingleTuple = exports.cleanupCompact = exports.alias = exports.findClosing = exports.trim = void 0;
const BOUNDED = ['BTreeMap', 'BTreeSet', 'HashMap', 'Vec'];
const ALLOWED_BOXES = BOUNDED.concat(['Compact', 'DoNotConstruct', 'Int', 'Linkage', 'Range', 'RangeInclusive', 'Result', 'Opaque', 'Option', 'UInt', 'WrapperKeepOpaque', 'WrapperOpaque']);
const BOX_PRECEDING = ['<', '(', '[', '"', ',', ' ']; // start of vec, tuple, fixed array, part of struct def or in tuple
const mappings = [
    // alias <T::InherentOfflineReport as InherentOfflineReport>::Inherent -> InherentOfflineReport
    alias('<T::InherentOfflineReport as InherentOfflineReport>::Inherent', 'InherentOfflineReport', false),
    alias('VecDeque<', 'Vec<', false),
    // <T::Balance as HasCompact>
    cleanupCompact(),
    // Change BoundedVec<Type, Size> to Vec<Type>
    removeExtensions('Bounded', true),
    // Change WeakVec<Type> to Vec<Type>
    removeExtensions('Weak', false),
    // Remove all the trait prefixes
    removeTraits(),
    // remove PairOf<T> -> (T, T)
    removePairOf(),
    // remove boxing, `Box<Proposal>` -> `Proposal`
    removeWrap('Box<'),
    // remove generics, `MisbehaviorReport<Hash, BlockNumber>` -> `MisbehaviorReport`
    removeGenerics(),
    // alias String -> Text (compat with jsonrpc methods)
    alias('String', 'Text'),
    // alias Vec<u8> -> Bytes
    alias('Vec<u8>', 'Bytes'),
    alias('&\\[u8\\]', 'Bytes'),
    alias("&'static\\[u8\\]", 'Bytes'),
    // alias RawAddress -> Address
    alias('RawAddress', 'Address'),
    // lookups, mapped to Address/AccountId as appropriate in runtime
    alias('Lookup::Source', 'LookupSource'),
    alias('Lookup::Target', 'LookupTarget'),
    // HACK duplication between contracts & primitives, however contracts prefixed with exec
    alias('exec::StorageKey', 'ContractStorageKey'),
    // flattens tuples with one value, `(AccountId)` -> `AccountId`
    flattenSingleTuple(),
    // converts ::Type to Type, <T as Trait<I>>::Proposal -> Proposal
    removeColons(),
    // remove all trailing spaces - this should always be the last
    trim()
];
function trim() {
    return (value) => value.trim();
}
exports.trim = trim;
function findClosing(value, start) {
    let depth = 0;
    for (let i = start, count = value.length; i < count; i++) {
        if (value[i] === '>') {
            if (!depth) {
                return i;
            }
            depth--;
        }
        else if (value[i] === '<') {
            depth++;
        }
    }
    throw new Error(`Unable to find closing matching <> on '${value}' (start ${start})`);
}
exports.findClosing = findClosing;
function alias(src, dest, withChecks = true) {
    const from = new RegExp(`(^${src}|${BOX_PRECEDING.map((box) => `\\${box}${src}`).join('|')})`, 'g');
    const to = (src) => {
        from.lastIndex = 0;
        return withChecks && BOX_PRECEDING.includes(src[0])
            ? `${src[0]}${dest}`
            : dest;
    };
    return (value) => value.replace(from, to);
}
exports.alias = alias;
function cleanupCompact() {
    return (value) => {
        if (value.includes(' as HasCompact')) {
            for (let i = 0, count = value.length; i < count; i++) {
                if (value[i] === '<') {
                    const end = findClosing(value, i + 1) - 14;
                    if (value.substring(end, end + 14) === ' as HasCompact') {
                        value = `Compact<${value.substring(i + 1, end)}>`;
                    }
                }
            }
        }
        return value;
    };
}
exports.cleanupCompact = cleanupCompact;
function flattenSingleTuple() {
    const from1 = /,\)/g;
    const from2 = /\(([^,]+)\)/;
    return (value) => {
        from1.lastIndex = 0;
        return value
            // tuples may have trailing commas, e.g. (u32, BlockNumber, )
            .replace(from1, ')')
            // change (u32) -> u32
            .replace(from2, '$1');
    };
}
exports.flattenSingleTuple = flattenSingleTuple;
function replaceTagWith(value, matcher, replacer) {
    let index = -1;
    while (true) {
        index = value.indexOf(matcher, index + 1);
        if (index === -1) {
            return value;
        }
        const start = index + matcher.length;
        const end = findClosing(value, start);
        value = `${value.substring(0, index)}${replacer(value.substring(start, end))}${value.substring(end + 1)}`;
    }
}
function removeExtensions(type, isSized) {
    return (value) => {
        for (let i = 0, count = BOUNDED.length; i < count; i++) {
            const tag = BOUNDED[i];
            value = replaceTagWith(value, `${type}${tag}<`, (v) => {
                const parts = v
                    .split(',')
                    .map((s) => s.trim())
                    .filter((s) => s);
                if (isSized) {
                    parts.pop();
                }
                return `${tag}<${parts.join(',')}>`;
            });
        }
        return value;
    };
}
exports.removeExtensions = removeExtensions;
function removeColons() {
    return (value) => {
        let index = 0;
        while (index !== -1) {
            index = value.indexOf('::');
            if (index === 0) {
                value = value.substring(2);
            }
            else if (index !== -1) {
                let start = index;
                while (start !== -1 && !BOX_PRECEDING.includes(value[start])) {
                    start--;
                }
                value = `${value.substring(0, start + 1)}${value.substring(index + 2)}`;
            }
        }
        return value;
    };
}
exports.removeColons = removeColons;
function removeGenerics() {
    return (value) => {
        for (let i = 0, count = value.length; i < count; i++) {
            if (value[i] === '<') {
                // check against the allowed wrappers, be it Vec<..>, Option<...> ...
                const box = ALLOWED_BOXES.find((box) => {
                    const start = i - box.length;
                    return ((start >= 0 &&
                        value.substring(start, i) === box) && (
                    // make sure it is stand-alone, i.e. don't catch ElectionResult<...> as Result<...>
                    start === 0 ||
                        BOX_PRECEDING.includes(value[start - 1])));
                });
                // we have not found anything, unwrap generic innards
                if (!box) {
                    const end = findClosing(value, i + 1);
                    value = `${value.substring(0, i)}${value.substring(end + 1)}`;
                }
            }
        }
        return value;
    };
}
exports.removeGenerics = removeGenerics;
function removePairOf() {
    const replacer = (v) => `(${v},${v})`;
    return (value) => replaceTagWith(value, 'PairOf<', replacer);
}
exports.removePairOf = removePairOf;
function removeTraits() {
    const from1 = /\s/g;
    const from2 = /(T|Self)::/g;
    const from3 = /<(T|Self)asTrait>::/g;
    const from4 = /<Tas[a-z]+::Trait>::/g;
    const from5 = /<LookupasStaticLookup>/g;
    const from6 = /::Type/g;
    return (value) => {
        from1.lastIndex = 0;
        from2.lastIndex = 0;
        from3.lastIndex = 0;
        from4.lastIndex = 0;
        from5.lastIndex = 0;
        from6.lastIndex = 0;
        return value
            // remove all whitespaces
            .replace(from1, '')
            // anything `T::<type>` to end up as `<type>`
            .replace(from2, '')
            // replace `<T as Trait>::` (whitespaces were removed above)
            .replace(from3, '')
            // replace `<T as something::Trait>::` (whitespaces were removed above)
            .replace(from4, '')
            // replace <Lookup as StaticLookup>
            .replace(from5, 'Lookup')
            // replace `<...>::Type`
            .replace(from6, '');
    };
}
exports.removeTraits = removeTraits;
function removeWrap(check) {
    const replacer = (v) => v;
    return (value) => replaceTagWith(value, check, replacer);
}
exports.removeWrap = removeWrap;
const sanitizeMap = new Map();
function sanitize(value) {
    const startValue = value.toString();
    const memoized = sanitizeMap.get(startValue);
    if (memoized) {
        return memoized;
    }
    let result = startValue;
    for (let i = 0, count = mappings.length; i < count; i++) {
        result = mappings[i](result);
    }
    sanitizeMap.set(startValue, result);
    return result;
}
exports.sanitize = sanitize;


/***/ }),

/***/ 47087:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sortMap = exports.sortSet = exports.sortAsc = void 0;
const util_1 = __nccwpck_require__(29795);
/** @internal **/
function isArrayLike(arg) {
    return arg instanceof Uint8Array || Array.isArray(arg);
}
/** @internal **/
function isEnum(arg) {
    return (0, util_1.isCodec)(arg) && (0, util_1.isNumber)(arg.index) && (0, util_1.isCodec)(arg.value);
}
/** @internal */
function isNumberLike(arg) {
    return (0, util_1.isNumber)(arg) || (0, util_1.isBn)(arg) || (0, util_1.isBigInt)(arg);
}
/** @internal */
function sortArray(a, b) {
    // Vec, Tuple, Bytes etc.
    let sortRes = 0;
    const minLen = Math.min(a.length, b.length);
    for (let i = 0; i < minLen; ++i) {
        sortRes = sortAsc(a[i], b[i]);
        if (sortRes !== 0) {
            return sortRes;
        }
    }
    return a.length - b.length;
}
/**
* Sort keys/values of BTreeSet/BTreeMap in ascending order for encoding compatibility with Rust's BTreeSet/BTreeMap
* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html)
* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html)
*/
function sortAsc(a, b) {
    if (isNumberLike(a) && isNumberLike(b)) {
        return (0, util_1.bnToBn)(a).cmp((0, util_1.bnToBn)(b));
    }
    else if (a instanceof Map && b instanceof Map) {
        return sortAsc(Array.from(a.values()), Array.from(b.values()));
    }
    else if (isEnum(a) && isEnum(b)) {
        return sortAsc(a.index, b.index) || sortAsc(a.value, b.value);
    }
    else if (isArrayLike(a) && isArrayLike(b)) {
        return sortArray(a, b);
    }
    else if ((0, util_1.isCodec)(a) && (0, util_1.isCodec)(b)) {
        // Text, Bool etc.
        return sortAsc(a.toU8a(true), b.toU8a(true));
    }
    throw new Error(`Attempting to sort unrecognized values: ${(0, util_1.stringify)(a)} (typeof ${typeof a}) <-> ${(0, util_1.stringify)(b)} (typeof ${typeof b})`);
}
exports.sortAsc = sortAsc;
function sortSet(set) {
    return new Set(Array.from(set).sort(sortAsc));
}
exports.sortSet = sortSet;
function sortMap(map) {
    return new Map(Array.from(map.entries()).sort(([keyA], [keyB]) => sortAsc(keyA, keyB)));
}
exports.sortMap = sortMap;


/***/ }),

/***/ 77329:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mapToTypeMap = exports.typesToConstructors = exports.typeToConstructor = void 0;
/**
 * @internal
 * From a type string or class, return the associated type class
 */
function typeToConstructor(registry, type) {
    return typeof type === 'function'
        ? type
        : registry.createClassUnsafe(type);
}
exports.typeToConstructor = typeToConstructor;
/**
 * @internal
 * Takes an input array of types and returns the associated classes for it
*/
function typesToConstructors(registry, types) {
    const count = types.length;
    const result = new Array(count);
    for (let i = 0; i < count; i++) {
        result[i] = typeToConstructor(registry, types[i]);
    }
    return result;
}
exports.typesToConstructors = typesToConstructors;
/**
 * @internal
 * Takes an input map of the form `{ [string]: string | CodecClass }` and returns a map of `{ [string]: CodecClass }`
 */
function mapToTypeMap(registry, input) {
    const entries = Object.entries(input);
    const count = entries.length;
    const output = [new Array(count), new Array(count)];
    for (let i = 0; i < count; i++) {
        output[1][i] = entries[i][0];
        output[0][i] = typeToConstructor(registry, entries[i][1]);
    }
    return output;
}
exports.mapToTypeMap = mapToTypeMap;


/***/ }),

/***/ 73223:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.typesToMap = void 0;
function typesToMap(registry, [Types, keys]) {
    const result = {};
    for (let i = 0, count = keys.length; i < count; i++) {
        result[keys[i]] = registry.getClassName(Types[i]) || new Types[i](registry).toRawType();
    }
    return result;
}
exports.typesToMap = typesToMap;


/***/ }),

/***/ 63029:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasEq = void 0;
const util_1 = __nccwpck_require__(29795);
function hasEq(o) {
    return (0, util_1.isFunction)(o.eq);
}
exports.hasEq = hasEq;


/***/ }),

/***/ 26088:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TypeDefInfo = exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(56230);
var packageInfo_js_1 = __nccwpck_require__(46510);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
var index_js_1 = __nccwpck_require__(45238);
Object.defineProperty(exports, "TypeDefInfo", ({ enumerable: true, get: function () { return index_js_1.TypeDefInfo; } }));
tslib_1.__exportStar(__nccwpck_require__(41888), exports);


/***/ }),

/***/ 126:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createClassUnsafe = exports.getTypeClass = exports.constructTypeClass = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(45238);
const getTypeDef_js_1 = __nccwpck_require__(45814);
function getTypeDefType({ lookupName, type }) {
    return lookupName || type;
}
function getSubDefArray(value) {
    if (!Array.isArray(value.sub)) {
        throw new Error(`Expected subtype as TypeDef[] in ${(0, util_1.stringify)(value)}`);
    }
    return value.sub;
}
function getSubDef(value) {
    if (!value.sub || Array.isArray(value.sub)) {
        throw new Error(`Expected subtype as TypeDef in ${(0, util_1.stringify)(value)}`);
    }
    return value.sub;
}
function getSubType(value) {
    return getTypeDefType(getSubDef(value));
}
function getTypeClassMap(value) {
    const subs = getSubDefArray(value);
    const map = {};
    for (let i = 0, count = subs.length; i < count; i++) {
        const sub = subs[i];
        if (!sub.name) {
            throw new Error(`No name found in definition ${(0, util_1.stringify)(sub)}`);
        }
        map[sub.name] = getTypeDefType(sub);
    }
    return map;
}
function getTypeClassArray(value) {
    return getSubDefArray(value).map(getTypeDefType);
}
function createInt(Clazz, { displayName, length }) {
    if (!(0, util_1.isNumber)(length)) {
        throw new Error(`Expected bitLength information for ${displayName || Clazz.constructor.name}<bitLength>`);
    }
    return Clazz.with(length, displayName);
}
function createHashMap(Clazz, value) {
    const [keyType, valueType] = getTypeClassArray(value);
    return Clazz.with(keyType, valueType);
}
function createWithSub(Clazz, value) {
    return Clazz.with(getSubType(value));
}
const infoMapping = {
    [index_js_1.TypeDefInfo.BTreeMap]: (_registry, value) => createHashMap(types_codec_1.BTreeMap, value),
    [index_js_1.TypeDefInfo.BTreeSet]: (_registry, value) => createWithSub(types_codec_1.BTreeSet, value),
    [index_js_1.TypeDefInfo.Compact]: (_registry, value) => createWithSub(types_codec_1.Compact, value),
    [index_js_1.TypeDefInfo.DoNotConstruct]: (_registry, value) => types_codec_1.DoNotConstruct.with(value.displayName || value.type),
    [index_js_1.TypeDefInfo.Enum]: (_registry, value) => {
        const subs = getSubDefArray(value);
        return types_codec_1.Enum.with(subs.every(({ type }) => type === 'Null')
            ? subs.reduce((out, { index, name }, count) => {
                if (!name) {
                    throw new Error('No name found in sub definition');
                }
                out[name] = index || count;
                return out;
            }, {})
            : getTypeClassMap(value));
    },
    [index_js_1.TypeDefInfo.HashMap]: (_registry, value) => createHashMap(types_codec_1.HashMap, value),
    [index_js_1.TypeDefInfo.Int]: (_registry, value) => createInt(types_codec_1.Int, value),
    // We have circular deps between Linkage & Struct
    [index_js_1.TypeDefInfo.Linkage]: (_registry, value) => {
        const type = `Option<${getSubType(value)}>`;
        // eslint-disable-next-line sort-keys
        const Clazz = types_codec_1.Struct.with({ previous: type, next: type });
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        Clazz.prototype.toRawType = function () {
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call
            return `Linkage<${this.next.toRawType(true)}>`;
        };
        return Clazz;
    },
    [index_js_1.TypeDefInfo.Null]: (_registry, _value) => types_codec_1.Null,
    [index_js_1.TypeDefInfo.Option]: (_registry, value) => {
        if (!value.sub || Array.isArray(value.sub)) {
            throw new Error('Expected type information for Option');
        }
        // NOTE This is opt-in (unhandled), not by default
        // if (value.sub.type === 'bool') {
        //   return OptionBool;
        // }
        return createWithSub(types_codec_1.Option, value);
    },
    [index_js_1.TypeDefInfo.Plain]: (registry, value) => registry.getOrUnknown(value.type),
    [index_js_1.TypeDefInfo.Range]: (_registry, value) => createWithSub(types_codec_1.Range, value),
    [index_js_1.TypeDefInfo.RangeInclusive]: (_registry, value) => createWithSub(types_codec_1.RangeInclusive, value),
    [index_js_1.TypeDefInfo.Result]: (_registry, value) => {
        const [Ok, Err] = getTypeClassArray(value);
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        return types_codec_1.Result.with({ Err, Ok });
    },
    [index_js_1.TypeDefInfo.Set]: (_registry, value) => types_codec_1.CodecSet.with(getSubDefArray(value).reduce((result, { index, name }) => {
        if (!name || !(0, util_1.isNumber)(index)) {
            throw new Error('No name found in sub definition');
        }
        result[name] = index;
        return result;
    }, {}), value.length),
    [index_js_1.TypeDefInfo.Si]: (registry, value) => getTypeClass(registry, registry.lookup.getTypeDef(value.type)),
    [index_js_1.TypeDefInfo.Struct]: (_registry, value) => types_codec_1.Struct.with(getTypeClassMap(value), value.alias),
    [index_js_1.TypeDefInfo.Tuple]: (_registry, value) => types_codec_1.Tuple.with(getTypeClassArray(value)),
    [index_js_1.TypeDefInfo.UInt]: (_registry, value) => createInt(types_codec_1.UInt, value),
    [index_js_1.TypeDefInfo.Vec]: (_registry, { sub }) => {
        if (!sub || Array.isArray(sub)) {
            throw new Error('Expected type information for vector');
        }
        return (sub.type === 'u8'
            ? types_codec_1.Bytes
            : types_codec_1.Vec.with(getTypeDefType(sub)));
    },
    [index_js_1.TypeDefInfo.VecFixed]: (_registry, { displayName, length, sub }) => {
        if (!(0, util_1.isNumber)(length) || !sub || Array.isArray(sub)) {
            throw new Error('Expected length & type information for fixed vector');
        }
        return (sub.type === 'u8'
            ? types_codec_1.U8aFixed.with((length * 8), displayName)
            : types_codec_1.VecFixed.with(getTypeDefType(sub), length));
    },
    [index_js_1.TypeDefInfo.WrapperKeepOpaque]: (_registry, value) => createWithSub(types_codec_1.WrapperKeepOpaque, value),
    [index_js_1.TypeDefInfo.WrapperOpaque]: (_registry, value) => createWithSub(types_codec_1.WrapperOpaque, value)
};
function constructTypeClass(registry, typeDef) {
    try {
        const Type = infoMapping[typeDef.info](registry, typeDef);
        if (!Type) {
            throw new Error('No class created');
        }
        // don't clobber any existing
        if (!Type.__fallbackType && typeDef.fallbackType) {
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore ...this is the only place we we actually assign this...
            Type.__fallbackType = typeDef.fallbackType;
        }
        return Type;
    }
    catch (error) {
        throw new Error(`Unable to construct class from ${(0, util_1.stringify)(typeDef)}: ${error.message}`);
    }
}
exports.constructTypeClass = constructTypeClass;
function getTypeClass(registry, typeDef) {
    return registry.getUnsafe(typeDef.type, false, typeDef);
}
exports.getTypeClass = getTypeClass;
function createClassUnsafe(registry, type) {
    return (
    // just retrieve via name, no creation via typeDef
    registry.getUnsafe(type) ||
        // we don't have an existing type, create the class via typeDef
        getTypeClass(registry, registry.isLookupType(type)
            ? registry.lookup.getTypeDef(type)
            : (0, getTypeDef_js_1.getTypeDef)(type)));
}
exports.createClassUnsafe = createClassUnsafe;


/***/ }),

/***/ 11924:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(56230);
tslib_1.__exportStar(__nccwpck_require__(126), exports);
tslib_1.__exportStar(__nccwpck_require__(32248), exports);


/***/ }),

/***/ 32248:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createTypeUnsafe = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const class_js_1 = __nccwpck_require__(126);
function checkInstance(created, matcher) {
    const u8a = created.toU8a();
    const rawType = created.toRawType();
    const isOk = (
    // full match, all ok
    (0, util_1.u8aEq)(u8a, matcher) ||
        (
        // on a length-prefixed type, just check the actual length
        ['Bytes', 'Text', 'Type'].includes(rawType) &&
            matcher.length === created.length) ||
        (
        // when the created is empty and matcher is also empty, let it slide...
        created.isEmpty &&
            matcher.every((v) => !v)));
    if (!isOk) {
        throw new Error(`${rawType}:: Decoded input doesn't match input, received ${(0, util_1.u8aToHex)(matcher, 512)} (${matcher.length} bytes), created ${(0, util_1.u8aToHex)(u8a, 512)} (${u8a.length} bytes)`);
    }
}
function checkPedantic(created, [value]) {
    if ((0, util_1.isU8a)(value)) {
        checkInstance(created, value);
    }
    else if ((0, util_1.isHex)(value)) {
        checkInstance(created, (0, util_1.u8aToU8a)(value));
    }
}
function initType(registry, Type, params = [], { blockHash, isFallback, isOptional, isPedantic } = {}) {
    const created = new (isOptional
        ? types_codec_1.Option.with(Type)
        : Type)(registry, ...params);
    isPedantic && checkPedantic(created, params);
    if (blockHash) {
        created.createdAtHash = createTypeUnsafe(registry, 'BlockHash', [blockHash]);
    }
    if (isFallback) {
        created.isStorageFallback = true;
    }
    return created;
}
function createTypeUnsafe(registry, type, params = [], options = {}) {
    let Clazz = null;
    let firstError = null;
    try {
        Clazz = (0, class_js_1.createClassUnsafe)(registry, type);
        return initType(registry, Clazz, params, options);
    }
    catch (error) {
        firstError = new Error(`createType(${type}):: ${error.message}`);
    }
    if (Clazz?.__fallbackType) {
        try {
            Clazz = (0, class_js_1.createClassUnsafe)(registry, Clazz.__fallbackType);
            return initType(registry, Clazz, params, options);
        }
        catch {
            // swallow, we will throw the first error again
        }
    }
    throw firstError;
}
exports.createTypeUnsafe = createTypeUnsafe;


/***/ }),

/***/ 43562:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(91697);
exports["default"] = [packageInfo_1.packageInfo];


/***/ }),

/***/ 5718:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(56230);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(43562));
const packageInfo_js_1 = __nccwpck_require__(46510);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 41888:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(56230);
tslib_1.__exportStar(__nccwpck_require__(11924), exports);
tslib_1.__exportStar(__nccwpck_require__(44977), exports);


/***/ }),

/***/ 49134:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(56230);
__nccwpck_require__(5718);
tslib_1.__exportStar(__nccwpck_require__(26088), exports);


/***/ }),

/***/ 46510:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/types-create', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 68584:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
__nccwpck_require__(72916);


/***/ }),

/***/ 45238:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(56230);
__nccwpck_require__(68584);
tslib_1.__exportStar(__nccwpck_require__(97447), exports);
tslib_1.__exportStar(__nccwpck_require__(20237), exports);


/***/ }),

/***/ 97447:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 20237:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TypeDefInfo = void 0;
var TypeDefInfo;
(function (TypeDefInfo) {
    TypeDefInfo[TypeDefInfo["BTreeMap"] = 0] = "BTreeMap";
    TypeDefInfo[TypeDefInfo["BTreeSet"] = 1] = "BTreeSet";
    TypeDefInfo[TypeDefInfo["Compact"] = 2] = "Compact";
    TypeDefInfo[TypeDefInfo["DoNotConstruct"] = 3] = "DoNotConstruct";
    TypeDefInfo[TypeDefInfo["Enum"] = 4] = "Enum";
    TypeDefInfo[TypeDefInfo["HashMap"] = 5] = "HashMap";
    TypeDefInfo[TypeDefInfo["Int"] = 6] = "Int";
    TypeDefInfo[TypeDefInfo["Linkage"] = 7] = "Linkage";
    TypeDefInfo[TypeDefInfo["Null"] = 8] = "Null";
    TypeDefInfo[TypeDefInfo["Option"] = 9] = "Option";
    TypeDefInfo[TypeDefInfo["Plain"] = 10] = "Plain";
    TypeDefInfo[TypeDefInfo["Range"] = 11] = "Range";
    TypeDefInfo[TypeDefInfo["RangeInclusive"] = 12] = "RangeInclusive";
    TypeDefInfo[TypeDefInfo["Result"] = 13] = "Result";
    TypeDefInfo[TypeDefInfo["Set"] = 14] = "Set";
    TypeDefInfo[TypeDefInfo["Si"] = 15] = "Si";
    TypeDefInfo[TypeDefInfo["Struct"] = 16] = "Struct";
    TypeDefInfo[TypeDefInfo["Tuple"] = 17] = "Tuple";
    TypeDefInfo[TypeDefInfo["UInt"] = 18] = "UInt";
    TypeDefInfo[TypeDefInfo["Vec"] = 19] = "Vec";
    TypeDefInfo[TypeDefInfo["VecFixed"] = 20] = "VecFixed";
    TypeDefInfo[TypeDefInfo["WrapperKeepOpaque"] = 21] = "WrapperKeepOpaque";
    TypeDefInfo[TypeDefInfo["WrapperOpaque"] = 22] = "WrapperOpaque";
})(TypeDefInfo || (exports.TypeDefInfo = TypeDefInfo = {}));


/***/ }),

/***/ 43982:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.withTypeString = exports.encodeTypeDef = exports.paramsNotation = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(45238);
const stringIdentity = (value) => value.toString();
const INFO_WRAP = ['BTreeMap', 'BTreeSet', 'Compact', 'HashMap', 'Option', 'Result', 'Vec'];
function paramsNotation(outer, inner, transform = stringIdentity) {
    return `${outer}${inner
        ? `<${(Array.isArray(inner) ? inner : [inner]).map(transform).join(', ')}>`
        : ''}`;
}
exports.paramsNotation = paramsNotation;
function encodeWithParams(registry, typeDef, outer) {
    const { info, sub } = typeDef;
    switch (info) {
        case index_js_1.TypeDefInfo.BTreeMap:
        case index_js_1.TypeDefInfo.BTreeSet:
        case index_js_1.TypeDefInfo.Compact:
        case index_js_1.TypeDefInfo.HashMap:
        case index_js_1.TypeDefInfo.Linkage:
        case index_js_1.TypeDefInfo.Option:
        case index_js_1.TypeDefInfo.Range:
        case index_js_1.TypeDefInfo.RangeInclusive:
        case index_js_1.TypeDefInfo.Result:
        case index_js_1.TypeDefInfo.Vec:
        case index_js_1.TypeDefInfo.WrapperKeepOpaque:
        case index_js_1.TypeDefInfo.WrapperOpaque:
            return paramsNotation(outer, sub, (p) => encodeTypeDef(registry, p));
    }
    throw new Error(`Unable to encode ${(0, util_1.stringify)(typeDef)} with params`);
}
function encodeSubTypes(registry, sub, asEnum, extra) {
    const names = sub.map(({ name }) => name);
    if (!names.every((n) => !!n)) {
        throw new Error(`Subtypes does not have consistent names, ${names.join(', ')}`);
    }
    const inner = (0, util_1.objectSpread)({}, extra);
    for (let i = 0, count = sub.length; i < count; i++) {
        const def = sub[i];
        if (!def.name) {
            throw new Error(`No name found in ${(0, util_1.stringify)(def)}`);
        }
        inner[def.name] = encodeTypeDef(registry, def);
    }
    return (0, util_1.stringify)(asEnum
        ? { _enum: inner }
        : inner);
}
const encoders = {
    [index_js_1.TypeDefInfo.BTreeMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeMap'),
    [index_js_1.TypeDefInfo.BTreeSet]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeSet'),
    [index_js_1.TypeDefInfo.Compact]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Compact'),
    [index_js_1.TypeDefInfo.DoNotConstruct]: (registry, { displayName, lookupIndex, lookupName }) => `DoNotConstruct<${lookupName || displayName || ((0, util_1.isUndefined)(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex))}>`,
    [index_js_1.TypeDefInfo.Enum]: (registry, { sub }) => {
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Enum type');
        }
        // c-like enums have all Null entries
        // TODO We need to take the disciminant into account and auto-add empty entries
        return sub.every(({ type }) => type === 'Null')
            ? (0, util_1.stringify)({ _enum: sub.map(({ name }, index) => `${name || `Empty${index}`}`) })
            : encodeSubTypes(registry, sub, true);
    },
    [index_js_1.TypeDefInfo.HashMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'HashMap'),
    [index_js_1.TypeDefInfo.Int]: (_registry, { length = 32 }) => `Int<${length}>`,
    [index_js_1.TypeDefInfo.Linkage]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Linkage'),
    [index_js_1.TypeDefInfo.Null]: (_registry, _typeDef) => 'Null',
    [index_js_1.TypeDefInfo.Option]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Option'),
    [index_js_1.TypeDefInfo.Plain]: (_registry, { displayName, type }) => displayName || type,
    [index_js_1.TypeDefInfo.Range]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Range'),
    [index_js_1.TypeDefInfo.RangeInclusive]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'RangeInclusive'),
    [index_js_1.TypeDefInfo.Result]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Result'),
    [index_js_1.TypeDefInfo.Set]: (_registry, { length = 8, sub }) => {
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Set type');
        }
        return (0, util_1.stringify)({
            _set: sub.reduce((all, { index, name }, count) => (0, util_1.objectSpread)(all, { [`${name || `Unknown${index || count}`}`]: index || count }), { _bitLength: length || 8 })
        });
    },
    [index_js_1.TypeDefInfo.Si]: (_registry, { lookupName, type }) => lookupName || type,
    [index_js_1.TypeDefInfo.Struct]: (registry, { alias, sub }) => {
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Struct type');
        }
        return encodeSubTypes(registry, sub, false, alias
            ? {
                _alias: [...alias.entries()].reduce((all, [k, v]) => (0, util_1.objectSpread)(all, { [k]: v }), {})
            }
            : {});
    },
    [index_js_1.TypeDefInfo.Tuple]: (registry, { sub }) => {
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Tuple type');
        }
        return `(${sub.map((type) => encodeTypeDef(registry, type)).join(',')})`;
    },
    [index_js_1.TypeDefInfo.UInt]: (_registry, { length = 32 }) => `UInt<${length}>`,
    [index_js_1.TypeDefInfo.Vec]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Vec'),
    [index_js_1.TypeDefInfo.VecFixed]: (_registry, { length, sub }) => {
        if (!(0, util_1.isNumber)(length) || !sub || Array.isArray(sub)) {
            throw new Error('Unable to encode VecFixed type');
        }
        return `[${sub.type};${length}]`;
    },
    [index_js_1.TypeDefInfo.WrapperKeepOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperKeepOpaque'),
    [index_js_1.TypeDefInfo.WrapperOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperOpaque')
};
function encodeType(registry, typeDef, withLookup = true) {
    return withLookup && typeDef.lookupName
        ? typeDef.lookupName
        : encoders[typeDef.info](registry, typeDef);
}
function encodeTypeDef(registry, typeDef) {
    // In the case of contracts we do have the unfortunate situation where the displayName would
    // refer to "Option" when it is an option. For these, string it out, only using when actually
    // not a top-level element to be used
    return (typeDef.displayName && !INFO_WRAP.some((i) => typeDef.displayName === i))
        ? typeDef.displayName
        : encodeType(registry, typeDef);
}
exports.encodeTypeDef = encodeTypeDef;
function withTypeString(registry, typeDef) {
    return (0, util_1.objectSpread)({}, typeDef, {
        type: encodeType(registry, typeDef, false)
    });
}
exports.withTypeString = withTypeString;


/***/ }),

/***/ 45814:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getTypeDef = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(45238);
const typeSplit_js_1 = __nccwpck_require__(26428);
const KNOWN_INTERNALS = ['_alias', '_fallback'];
function getTypeString(typeOrObj) {
    return (0, util_1.isString)(typeOrObj)
        ? typeOrObj.toString()
        : (0, util_1.stringify)(typeOrObj);
}
function isRustEnum(details) {
    const values = Object.values(details);
    if (values.some((v) => (0, util_1.isNumber)(v))) {
        if (!values.every((v) => (0, util_1.isNumber)(v) && v >= 0 && v <= 255)) {
            throw new Error('Invalid number-indexed enum definition');
        }
        return false;
    }
    return true;
}
function _decodeEnum(value, details, count, fallbackType) {
    value.info = index_js_1.TypeDefInfo.Enum;
    value.fallbackType = fallbackType;
    // not as pretty, but remain compatible with oo7 for both struct and Array types
    if (Array.isArray(details)) {
        value.sub = details.map((name, index) => ({
            index,
            info: index_js_1.TypeDefInfo.Plain,
            name,
            type: 'Null'
        }));
    }
    else if (isRustEnum(details)) {
        value.sub = Object.entries(details).map(([name, typeOrObj], index) => (0, util_1.objectSpread)({}, getTypeDef(getTypeString(typeOrObj || 'Null'), { name }, count), { index }));
    }
    else {
        value.sub = Object.entries(details).map(([name, index]) => ({
            index,
            info: index_js_1.TypeDefInfo.Plain,
            name,
            type: 'Null'
        }));
    }
    return value;
}
function _decodeSet(value, details, fallbackType) {
    value.info = index_js_1.TypeDefInfo.Set;
    value.fallbackType = fallbackType;
    value.length = details._bitLength;
    value.sub = Object
        .entries(details)
        .filter(([name]) => !name.startsWith('_'))
        .map(([name, index]) => ({
        index,
        info: index_js_1.TypeDefInfo.Plain,
        name,
        type: 'Null'
    }));
    return value;
}
function _decodeStruct(value, type, _, count) {
    const parsed = JSON.parse(type);
    const keys = Object.keys(parsed);
    if (parsed._enum) {
        return _decodeEnum(value, parsed._enum, count, parsed._fallback);
    }
    else if (parsed._set) {
        return _decodeSet(value, parsed._set, parsed._fallback);
    }
    value.alias = parsed._alias
        ? new Map(Object.entries(parsed._alias))
        : undefined;
    value.fallbackType = parsed._fallback;
    value.sub = keys
        .filter((name) => !KNOWN_INTERNALS.includes(name))
        .map((name) => getTypeDef(getTypeString(parsed[name]), { name }, count));
    return value;
}
function _decodeFixedVec(value, type, _, count) {
    const max = type.length - 1;
    let index = -1;
    let inner = 0;
    for (let i = 1; (i < max) && (index === -1); i++) {
        switch (type[i]) {
            case ';': {
                if (inner === 0) {
                    index = i;
                }
                break;
            }
            case '[':
            case '(':
            case '<':
                inner++;
                break;
            case ']':
            case ')':
            case '>':
                inner--;
                break;
        }
    }
    if (index === -1) {
        throw new Error(`${type}: Unable to extract location of ';'`);
    }
    const vecType = type.substring(1, index);
    const [strLength, displayName] = type.substring(index + 1, max).split(';');
    const length = parseInt(strLength.trim(), 10);
    if (length > 2048) {
        throw new Error(`${type}: Only support for [Type; <length>], where length <= 2048`);
    }
    value.displayName = displayName;
    value.length = length;
    value.sub = getTypeDef(vecType, {}, count);
    return value;
}
function _decodeTuple(value, _, subType, count) {
    value.sub = subType.length === 0
        ? []
        : (0, typeSplit_js_1.typeSplit)(subType).map((inner) => getTypeDef(inner, {}, count));
    return value;
}
function _decodeAnyInt(value, type, _, clazz) {
    const [strLength, displayName] = type.substring(clazz.length + 1, type.length - 1).split(',');
    const length = parseInt(strLength.trim(), 10);
    if ((length > 8192) || (length % 8)) {
        throw new Error(`${type}: Only support for ${clazz}<bitLength>, where length <= 8192 and a power of 8, found ${length}`);
    }
    value.displayName = displayName;
    value.length = length;
    return value;
}
function _decodeInt(value, type, subType) {
    return _decodeAnyInt(value, type, subType, 'Int');
}
function _decodeUInt(value, type, subType) {
    return _decodeAnyInt(value, type, subType, 'UInt');
}
function _decodeDoNotConstruct(value, type, _) {
    const NAME_LENGTH = 'DoNotConstruct'.length;
    value.displayName = type.substring(NAME_LENGTH + 1, type.length - 1);
    return value;
}
function hasWrapper(type, [start, end]) {
    return (type.startsWith(start)) && (type.slice(-1 * end.length) === end);
}
const nestedExtraction = [
    ['[', ']', index_js_1.TypeDefInfo.VecFixed, _decodeFixedVec],
    ['{', '}', index_js_1.TypeDefInfo.Struct, _decodeStruct],
    ['(', ')', index_js_1.TypeDefInfo.Tuple, _decodeTuple],
    // the inner for these are the same as tuple, multiple values
    ['BTreeMap<', '>', index_js_1.TypeDefInfo.BTreeMap, _decodeTuple],
    ['HashMap<', '>', index_js_1.TypeDefInfo.HashMap, _decodeTuple],
    ['Int<', '>', index_js_1.TypeDefInfo.Int, _decodeInt],
    ['Result<', '>', index_js_1.TypeDefInfo.Result, _decodeTuple],
    ['UInt<', '>', index_js_1.TypeDefInfo.UInt, _decodeUInt],
    ['DoNotConstruct<', '>', index_js_1.TypeDefInfo.DoNotConstruct, _decodeDoNotConstruct]
];
const wrappedExtraction = [
    ['BTreeSet<', '>', index_js_1.TypeDefInfo.BTreeSet],
    ['Compact<', '>', index_js_1.TypeDefInfo.Compact],
    ['Linkage<', '>', index_js_1.TypeDefInfo.Linkage],
    ['Opaque<', '>', index_js_1.TypeDefInfo.WrapperOpaque],
    ['Option<', '>', index_js_1.TypeDefInfo.Option],
    ['Range<', '>', index_js_1.TypeDefInfo.Range],
    ['RangeInclusive<', '>', index_js_1.TypeDefInfo.RangeInclusive],
    ['Vec<', '>', index_js_1.TypeDefInfo.Vec],
    ['WrapperKeepOpaque<', '>', index_js_1.TypeDefInfo.WrapperKeepOpaque],
    ['WrapperOpaque<', '>', index_js_1.TypeDefInfo.WrapperOpaque]
];
function extractSubType(type, [start, end]) {
    return type.substring(start.length, type.length - end.length);
}
function getTypeDef(_type, { displayName, name } = {}, count = 0) {
    // create the type via Type, allowing types to be sanitized
    const type = (0, types_codec_1.sanitize)(_type);
    const value = { displayName, info: index_js_1.TypeDefInfo.Plain, name, type };
    if (++count > 64) {
        throw new Error('getTypeDef: Maximum nested limit reached');
    }
    const nested = nestedExtraction.find((nested) => hasWrapper(type, nested));
    if (nested) {
        value.info = nested[2];
        return nested[3](value, type, extractSubType(type, nested), count);
    }
    const wrapped = wrappedExtraction.find((wrapped) => hasWrapper(type, wrapped));
    if (wrapped) {
        value.info = wrapped[2];
        value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);
    }
    return value;
}
exports.getTypeDef = getTypeDef;


/***/ }),

/***/ 44977:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(56230);
tslib_1.__exportStar(__nccwpck_require__(43982), exports);
tslib_1.__exportStar(__nccwpck_require__(45814), exports);
tslib_1.__exportStar(__nccwpck_require__(26428), exports);
tslib_1.__exportStar(__nccwpck_require__(5458), exports);


/***/ }),

/***/ 26428:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.typeSplit = void 0;
function typeSplit(type) {
    const result = [];
    // these are the depths of the various tokens: <, [, {, (
    let c = 0;
    let f = 0;
    let s = 0;
    let t = 0;
    // current start position
    let start = 0;
    for (let i = 0, count = type.length; i < count; i++) {
        switch (type[i]) {
            // if we are not nested, add the type
            case ',': {
                if (!(c || f || s || t)) {
                    result.push(type.substring(start, i).trim());
                    start = i + 1;
                }
                break;
            }
            // adjust compact/vec (and friends) depth
            case '<':
                c++;
                break;
            case '>':
                c--;
                break;
            // adjust fixed vec depths
            case '[':
                f++;
                break;
            case ']':
                f--;
                break;
            // adjust struct depth
            case '{':
                s++;
                break;
            case '}':
                s--;
                break;
            // adjust tuple depth
            case '(':
                t++;
                break;
            case ')':
                t--;
                break;
        }
    }
    // ensure we have all the terminators taken care of
    if (c || f || s || t) {
        throw new Error(`Invalid definition (missing terminators) found in ${type}`);
    }
    // the final leg of the journey
    result.push(type.substring(start, type.length).trim());
    return result;
}
exports.typeSplit = typeSplit;


/***/ }),

/***/ 5458:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mapXcmTypes = exports.XCM_MAPPINGS = void 0;
const util_1 = __nccwpck_require__(29795);
exports.XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];
function mapXcmTypes(version) {
    return exports.XCM_MAPPINGS.reduce((all, key) => (0, util_1.objectSpread)(all, { [key]: `${key}${version}` }), {});
}
exports.mapXcmTypes = mapXcmTypes;


/***/ }),

/***/ 86328:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = exports.mapXcmTypes = void 0;
const tslib_1 = __nccwpck_require__(15308);
var types_create_1 = __nccwpck_require__(49134);
Object.defineProperty(exports, "mapXcmTypes", ({ enumerable: true, get: function () { return types_create_1.mapXcmTypes; } }));
var packageInfo_js_1 = __nccwpck_require__(47804);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
tslib_1.__exportStar(__nccwpck_require__(35776), exports);


/***/ }),

/***/ 81197:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.typesChain = void 0;
exports.typesChain = {};


/***/ }),

/***/ 91926:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(74402);
exports["default"] = [packageInfo_1.packageInfo];


/***/ }),

/***/ 78340:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(15308);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(91926));
const packageInfo_js_1 = __nccwpck_require__(47804);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 43909:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(15308);
__nccwpck_require__(78340);
tslib_1.__exportStar(__nccwpck_require__(86328), exports);


/***/ }),

/***/ 47804:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/types-known', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 74126:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.versioned = void 0;
const sharedTypes = {
    // Anchor
    AnchorData: {
        anchoredBlock: 'u64',
        docRoot: 'H256',
        id: 'H256'
    },
    DispatchErrorModule: 'DispatchErrorModuleU8',
    PreCommitData: {
        expirationBlock: 'u64',
        identity: 'H256',
        signingRoot: 'H256'
    },
    // Fees
    Fee: {
        key: 'Hash',
        price: 'Balance'
    },
    // MultiAccount
    MultiAccountData: {
        deposit: 'Balance',
        depositor: 'AccountId',
        signatories: 'Vec<AccountId>',
        threshold: 'u16'
    },
    // Bridge
    ChainId: 'u8',
    DepositNonce: 'u64',
    ResourceId: '[u8; 32]',
    'chainbridge::ChainId': 'u8',
    // NFT
    RegistryId: 'H160',
    TokenId: 'U256',
    AssetId: {
        registryId: 'RegistryId',
        tokenId: 'TokenId'
    },
    AssetInfo: {
        metadata: 'Bytes'
    },
    MintInfo: {
        anchorId: 'Hash',
        proofs: 'Vec<ProofMint>',
        staticHashes: '[Hash; 3]'
    },
    Proof: {
        leafHash: 'H256',
        sortedHashes: 'H256'
    },
    ProofMint: {
        hashes: 'Vec<Hash>',
        property: 'Bytes',
        salt: '[u8; 32]',
        value: 'Bytes'
    },
    RegistryInfo: {
        fields: 'Vec<Bytes>',
        ownerCanBurn: 'bool'
    },
    ProxyType: {
        _enum: [
            'Any',
            'NonTransfer',
            'Governance',
            'Staking',
            'NonProxy'
        ]
    }
};
const standaloneTypes = {
    ...sharedTypes,
    AccountInfo: 'AccountInfoWithRefCount',
    Address: 'LookupSource',
    LookupSource: 'IndicesLookupSource',
    Multiplier: 'Fixed64',
    RefCount: 'RefCountTo259'
};
exports.versioned = [
    {
        minmax: [240, 243],
        types: {
            ...standaloneTypes,
            ProxyType: {
                _enum: [
                    'Any',
                    'NonTransfer',
                    'Governance',
                    'Staking',
                    'Vesting'
                ]
            }
        }
    },
    {
        minmax: [244, 999],
        types: { ...standaloneTypes }
    },
    {
        minmax: [1000, undefined],
        types: { ...sharedTypes }
    }
];


/***/ }),

/***/ 55258:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.typesSpec = void 0;
const centrifuge_chain_js_1 = __nccwpck_require__(74126);
const kusama_js_1 = __nccwpck_require__(92066);
const node_js_1 = __nccwpck_require__(73786);
const node_template_js_1 = __nccwpck_require__(3230);
const polkadot_js_1 = __nccwpck_require__(31790);
const rococo_js_1 = __nccwpck_require__(2613);
const shell_js_1 = __nccwpck_require__(76701);
const statemint_js_1 = __nccwpck_require__(24912);
const westend_js_1 = __nccwpck_require__(33746);
exports.typesSpec = {
    'centrifuge-chain': centrifuge_chain_js_1.versioned,
    kusama: kusama_js_1.versioned,
    node: node_js_1.versioned,
    'node-template': node_template_js_1.versioned,
    polkadot: polkadot_js_1.versioned,
    rococo: rococo_js_1.versioned,
    shell: shell_js_1.versioned,
    statemine: statemint_js_1.versioned,
    statemint: statemint_js_1.versioned,
    westend: westend_js_1.versioned,
    westmint: statemint_js_1.versioned
};


/***/ }),

/***/ 92066:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.versioned = void 0;
const types_create_1 = __nccwpck_require__(49134);
const sharedTypes = {
    CompactAssignments: 'CompactAssignmentsWith24',
    DispatchErrorModule: 'DispatchErrorModuleU8',
    RawSolution: 'RawSolutionWith24',
    Keys: 'SessionKeys6',
    ProxyType: {
        _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'IdentityJudgement', 'CancelProxy', 'Auction']
    },
    Weight: 'WeightV1'
};
const addrIndicesTypes = {
    AccountInfo: 'AccountInfoWithRefCount',
    Address: 'LookupSource',
    CompactAssignments: 'CompactAssignmentsWith16',
    DispatchErrorModule: 'DispatchErrorModuleU8',
    RawSolution: 'RawSolutionWith16',
    Keys: 'SessionKeys5',
    LookupSource: 'IndicesLookupSource',
    ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
const addrAccountIdTypes = {
    AccountInfo: 'AccountInfoWithRefCount',
    Address: 'AccountId',
    CompactAssignments: 'CompactAssignmentsWith16',
    DispatchErrorModule: 'DispatchErrorModuleU8',
    RawSolution: 'RawSolutionWith16',
    Keys: 'SessionKeys5',
    LookupSource: 'AccountId',
    ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
exports.versioned = [
    {
        // 1020 is first CC3
        minmax: [1019, 1031],
        types: {
            ...addrIndicesTypes,
            BalanceLock: 'BalanceLockTo212',
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchError: 'DispatchErrorTo198',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            IdentityInfo: 'IdentityInfoTo198',
            Keys: 'SessionKeys5',
            Multiplier: 'Fixed64',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259',
            ReferendumInfo: 'ReferendumInfoTo239',
            Scheduled: 'ScheduledTo254',
            SlashingSpans: 'SlashingSpansTo204',
            StakingLedger: 'StakingLedgerTo223',
            Votes: 'VotesTo230',
            Weight: 'u32'
        }
    },
    {
        minmax: [1032, 1042],
        types: {
            ...addrIndicesTypes,
            BalanceLock: 'BalanceLockTo212',
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            Keys: 'SessionKeys5',
            Multiplier: 'Fixed64',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259',
            ReferendumInfo: 'ReferendumInfoTo239',
            Scheduled: 'ScheduledTo254',
            SlashingSpans: 'SlashingSpansTo204',
            StakingLedger: 'StakingLedgerTo223',
            Votes: 'VotesTo230',
            Weight: 'u32'
        }
    },
    {
        // actual at 1045 (1043-1044 is dev)
        minmax: [1043, 1045],
        types: {
            ...addrIndicesTypes,
            BalanceLock: 'BalanceLockTo212',
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            Keys: 'SessionKeys5',
            Multiplier: 'Fixed64',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259',
            ReferendumInfo: 'ReferendumInfoTo239',
            Scheduled: 'ScheduledTo254',
            StakingLedger: 'StakingLedgerTo223',
            Votes: 'VotesTo230',
            Weight: 'u32'
        }
    },
    {
        minmax: [1046, 1049],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            Multiplier: 'Fixed64',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259',
            ReferendumInfo: 'ReferendumInfoTo239',
            Scheduled: 'ScheduledTo254',
            StakingLedger: 'StakingLedgerTo223',
            Weight: 'u32'
        }
    },
    {
        minmax: [1050, 1054],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            Multiplier: 'Fixed64',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259',
            ReferendumInfo: 'ReferendumInfoTo239',
            Scheduled: 'ScheduledTo254',
            StakingLedger: 'StakingLedgerTo240',
            Weight: 'u32'
        }
    },
    {
        minmax: [1055, 1056],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            Multiplier: 'Fixed64',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259',
            Scheduled: 'ScheduledTo254',
            StakingLedger: 'StakingLedgerTo240',
            Weight: 'u32'
        }
    },
    {
        minmax: [1057, 1061],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259',
            // Last 100% known problematic runtime range - this quite possibly need to
            // apply to more runtime ranges that follow, we just don't know how far this
            // should be applied to
            //
            // TL;DR whack-a-mole since this was not histrically checked
            //
            // See https://github.com/polkadot-js/api/issues/5618#issuecomment-1530970316
            Scheduled: 'ScheduledTo254'
        }
    },
    {
        minmax: [1062, 2012],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259'
        }
    },
    {
        minmax: [2013, 2022],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            RefCount: 'RefCountTo259'
        }
    },
    {
        minmax: [2023, 2024],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            RefCount: 'RefCountTo259'
        }
    },
    {
        minmax: [2025, 2027],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes
        }
    },
    {
        minmax: [2028, 2029],
        types: {
            ...sharedTypes,
            AccountInfo: 'AccountInfoWithDualRefCount',
            CompactAssignments: 'CompactAssignmentsWith16',
            RawSolution: 'RawSolutionWith16'
        }
    },
    {
        minmax: [2030, 9000],
        types: {
            ...sharedTypes,
            CompactAssignments: 'CompactAssignmentsWith16',
            RawSolution: 'RawSolutionWith16'
        }
    },
    {
        minmax: [9010, 9099],
        types: {
            ...sharedTypes,
            ...(0, types_create_1.mapXcmTypes)('V0')
        }
    },
    {
        // jump from 9100 to 9110, however align with Rococo
        minmax: [9100, 9105],
        types: {
            ...sharedTypes,
            ...(0, types_create_1.mapXcmTypes)('V1')
        }
    },
    {
        // metadata v14
        minmax: [9106, undefined],
        types: {
            Weight: 'WeightV1'
        }
    }
    // ,
    // {
    //   // weight v2 introduction
    //   minmax: [9300, undefined],
    //   types: {
    //     Weight: 'WeightV2'
    //   }
    // }
];


/***/ }),

/***/ 3230:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.versioned = void 0;
exports.versioned = [
    {
        minmax: [0, undefined],
        types: {
            // nothing, API tracks master
            // (v2 weights are not yet the default)
            Weight: 'WeightV2'
        }
    }
];


/***/ }),

/***/ 73786:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.versioned = void 0;
exports.versioned = [
    {
        minmax: [0, undefined],
        types: {
            // nothing, API tracks master
            // (v2 weights are not yet the default)
            Weight: 'WeightV2'
        }
    }
];


/***/ }),

/***/ 31790:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.versioned = void 0;
const sharedTypes = {
    CompactAssignments: 'CompactAssignmentsWith16',
    DispatchErrorModule: 'DispatchErrorModuleU8',
    RawSolution: 'RawSolutionWith16',
    Keys: 'SessionKeys6',
    ProxyType: {
        _enum: {
            Any: 0,
            NonTransfer: 1,
            Governance: 2,
            Staking: 3,
            UnusedSudoBalances: 4,
            IdentityJudgement: 5,
            CancelProxy: 6,
            Auction: 7
        }
    },
    Weight: 'WeightV1'
};
const addrAccountIdTypes = {
    AccountInfo: 'AccountInfoWithRefCount',
    Address: 'AccountId',
    DispatchErrorModule: 'DispatchErrorModuleU8',
    Keys: 'SessionKeys5',
    LookupSource: 'AccountId',
    ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
exports.versioned = [
    {
        minmax: [0, 12],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259'
        }
    },
    {
        minmax: [13, 22],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            RefCount: 'RefCountTo259'
        }
    },
    {
        minmax: [23, 24],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            RefCount: 'RefCountTo259'
        }
    },
    {
        minmax: [25, 27],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes
        }
    },
    {
        minmax: [28, 29],
        types: {
            ...sharedTypes,
            AccountInfo: 'AccountInfoWithDualRefCount'
        }
    },
    {
        minmax: [30, 9109],
        types: {
            ...sharedTypes
        }
    },
    {
        // metadata v14
        minmax: [9110, undefined],
        types: {
            Weight: 'WeightV1'
        }
    }
    // ,
    // {
    //   // weight v2 introduction
    //   minmax: [9300, undefined],
    //   types: {
    //     Weight: 'WeightV2'
    //   }
    // }
];


/***/ }),

/***/ 2613:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.versioned = void 0;
const types_create_1 = __nccwpck_require__(49134);
/* eslint-disable sort-keys */
const sharedTypes = {
    DispatchErrorModule: 'DispatchErrorModuleU8',
    FullIdentification: '()',
    Keys: 'SessionKeys7B',
    Weight: 'WeightV1'
};
exports.versioned = [
    {
        minmax: [0, 200],
        types: {
            ...sharedTypes,
            AccountInfo: 'AccountInfoWithDualRefCount',
            Address: 'AccountId',
            LookupSource: 'AccountId'
        }
    },
    {
        minmax: [201, 214],
        types: {
            ...sharedTypes,
            AccountInfo: 'AccountInfoWithDualRefCount'
        }
    },
    {
        minmax: [215, 228],
        types: {
            ...sharedTypes,
            Keys: 'SessionKeys6'
        }
    },
    {
        minmax: [229, 9099],
        types: {
            ...sharedTypes,
            ...(0, types_create_1.mapXcmTypes)('V0')
        }
    },
    {
        minmax: [9100, 9105],
        types: {
            ...sharedTypes,
            ...(0, types_create_1.mapXcmTypes)('V1')
        }
    },
    {
        // metadata v14
        minmax: [9106, undefined],
        types: {
            Weight: 'WeightV1'
        }
    }
    // ,
    // {
    //   // weight v2 introduction
    //   minmax: [9300, undefined],
    //   types: {
    //     Weight: 'WeightV2'
    //   }
    // }
];


/***/ }),

/***/ 76701:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.versioned = void 0;
exports.versioned = [
    {
        minmax: [0, undefined],
        types: {
        // nothing, limited runtime
        }
    }
];


/***/ }),

/***/ 24912:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.versioned = void 0;
const types_create_1 = __nccwpck_require__(49134);
const sharedTypes = {
    DispatchErrorModule: 'DispatchErrorModuleU8',
    TAssetBalance: 'u128',
    ProxyType: {
        _enum: [
            'Any',
            'NonTransfer',
            'CancelProxy',
            'Assets',
            'AssetOwner',
            'AssetManager',
            'Staking'
        ]
    },
    Weight: 'WeightV1'
};
exports.versioned = [
    {
        minmax: [0, 3],
        types: {
            // Enum was modified mid-flight -
            // https://github.com/paritytech/substrate/pull/10382/files#diff-e4e016b33a82268b6208dc974eea841bad47597865a749fee2f937eb6fdf67b4R498
            DispatchError: 'DispatchErrorPre6First',
            ...sharedTypes,
            ...(0, types_create_1.mapXcmTypes)('V0')
        }
    },
    {
        minmax: [4, 5],
        types: {
            // As above, see https://github.com/polkadot-js/api/issues/5301
            DispatchError: 'DispatchErrorPre6First',
            ...sharedTypes,
            ...(0, types_create_1.mapXcmTypes)('V1')
        }
    },
    {
        // metadata V14
        minmax: [500, undefined],
        types: {
            Weight: 'WeightV1'
        }
    }
    // ,
    // {
    //   // weight v2 introduction
    //   minmax: [9300, undefined],
    //   types: {
    //     Weight: 'WeightV2'
    //   }
    // }
];


/***/ }),

/***/ 33746:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.versioned = void 0;
const types_create_1 = __nccwpck_require__(49134);
const sharedTypes = {
    // 16 validators
    CompactAssignments: 'CompactAssignmentsWith16',
    DispatchErrorModule: 'DispatchErrorModuleU8',
    RawSolution: 'RawSolutionWith16',
    // general
    Keys: 'SessionKeys6',
    ProxyType: {
        _enum: ['Any', 'NonTransfer', 'Staking', 'SudoBalances', 'IdentityJudgement', 'CancelProxy']
    },
    Weight: 'WeightV1'
};
const addrAccountIdTypes = {
    AccountInfo: 'AccountInfoWithRefCount',
    Address: 'AccountId',
    CompactAssignments: 'CompactAssignmentsWith16',
    DispatchErrorModule: 'DispatchErrorModuleU8',
    LookupSource: 'AccountId',
    Keys: 'SessionKeys5',
    RawSolution: 'RawSolutionWith16',
    ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
exports.versioned = [
    {
        minmax: [1, 2],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            Multiplier: 'Fixed64',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259',
            Weight: 'u32'
        }
    },
    {
        minmax: [3, 22],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            OpenTip: 'OpenTipTo225',
            RefCount: 'RefCountTo259'
        }
    },
    {
        minmax: [23, 42],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            CompactAssignments: 'CompactAssignmentsTo257',
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            RefCount: 'RefCountTo259'
        }
    },
    {
        minmax: [43, 44],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes,
            DispatchInfo: 'DispatchInfoTo244',
            Heartbeat: 'HeartbeatTo244',
            RefCount: 'RefCountTo259'
        }
    },
    {
        minmax: [45, 47],
        types: {
            ...sharedTypes,
            ...addrAccountIdTypes
        }
    },
    {
        minmax: [48, 49],
        types: {
            ...sharedTypes,
            AccountInfo: 'AccountInfoWithDualRefCount'
        }
    },
    {
        minmax: [50, 9099],
        types: {
            ...sharedTypes,
            ...(0, types_create_1.mapXcmTypes)('V0')
        }
    },
    {
        minmax: [9100, 9105],
        types: {
            ...sharedTypes,
            ...(0, types_create_1.mapXcmTypes)('V1')
        }
    },
    {
        // metadata v14
        minmax: [9106, undefined],
        types: {
            Weight: 'WeightV1'
        }
    }
    // ,
    // {
    //   // weight v2 introduction
    //   minmax: [9300, undefined],
    //   types: {
    //     Weight: 'WeightV2'
    //   }
    // }
];


/***/ }),

/***/ 16036:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.westend = exports.polkadot = exports.kusama = void 0;
var kusama_js_1 = __nccwpck_require__(29841);
Object.defineProperty(exports, "kusama", ({ enumerable: true, get: function () { return kusama_js_1.upgrades; } }));
var polkadot_js_1 = __nccwpck_require__(32891);
Object.defineProperty(exports, "polkadot", ({ enumerable: true, get: function () { return polkadot_js_1.upgrades; } }));
var westend_js_1 = __nccwpck_require__(96354);
Object.defineProperty(exports, "westend", ({ enumerable: true, get: function () { return westend_js_1.upgrades; } }));


/***/ }),

/***/ 29841:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.upgrades = void 0;
exports.upgrades = [
    [
        0,
        1020,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        26669,
        1021,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        38245,
        1022,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        54248,
        1023,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        59659,
        1024,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        67651,
        1025,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        82191,
        1027,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        83238,
        1028,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        101503,
        1029,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        203466,
        1030,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        295787,
        1031,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        461692,
        1032,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        504329,
        1033,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        569327,
        1038,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                1
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        587687,
        1039,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        653183,
        1040,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        693488,
        1042,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        901442,
        1045,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1375086,
        1050,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1445458,
        1051,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1472960,
        1052,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1475648,
        1053,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1491596,
        1054,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1574408,
        1055,
        [
            [
                "0xdf6acb689907609b",
                2
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                1
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2064961,
        1058,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2201991,
        1062,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2671528,
        2005,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2704202,
        2007,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2728002,
        2008,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2832534,
        2011,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2962294,
        2012,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        3240000,
        2013,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        3274408,
        2015,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        3323565,
        2019,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        3534175,
        2022,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        3860281,
        2023,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        4143129,
        2024,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        4401242,
        2025,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        4841367,
        2026,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5961600,
        2027,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        6137912,
        2028,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        6561855,
        2029,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7100891,
        2030,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7468792,
        9010,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7668600,
        9030,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7812476,
        9040,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        8010981,
        9050,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        8073833,
        9070,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        8555825,
        9080,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        8945245,
        9090,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        9611377,
        9100,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        9625129,
        9111,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        9866422,
        9122,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10403784,
        9130,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10960765,
        9150,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11006614,
        9151,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11404482,
        9160,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11601803,
        9170,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        12008022,
        9180,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        12405451,
        9190,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        12665416,
        9200,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        12909508,
        9220,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        13109752,
        9230,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        13555777,
        9250,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        13727747,
        9260,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        14248044,
        9271,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        14433840,
        9280,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        14645900,
        9291,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        15048375,
        9300,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        15426015,
        9320,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                2
            ],
            [
                "0xf3ff14d5ab527059",
                2
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        15680713,
        9340,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                2
            ],
            [
                "0xf3ff14d5ab527059",
                2
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        15756296,
        9350,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                2
            ],
            [
                "0xf3ff14d5ab527059",
                2
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ]
];


/***/ }),

/***/ 32891:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.upgrades = void 0;
exports.upgrades = [
    [
        0,
        0,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        29231,
        1,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        188836,
        5,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        199405,
        6,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        214264,
        7,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        244358,
        8,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        303079,
        9,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        314201,
        10,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        342400,
        11,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        443963,
        12,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        528470,
        13,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        687751,
        14,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        746085,
        15,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        787923,
        16,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        799302,
        17,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1205128,
        18,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1603423,
        23,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1733218,
        24,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2005673,
        25,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2436698,
        26,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        3613564,
        27,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        3899547,
        28,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        4345767,
        29,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        4876134,
        30,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5661442,
        9050,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        6321619,
        9080,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        6713249,
        9090,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7217907,
        9100,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7229126,
        9110,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7560558,
        9122,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        8115869,
        9140,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        8638103,
        9151,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        9280179,
        9170,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        9738717,
        9180,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10156856,
        9190,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10458576,
        9200,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10655116,
        9220,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10879371,
        9230,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11328884,
        9250,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11532856,
        9260,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11933818,
        9270,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        12217535,
        9280,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ]
        ]
    ],
    [
        12245277,
        9281,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ]
        ]
    ],
    [
        12532644,
        9291,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ]
        ]
    ],
    [
        12876189,
        9300,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ]
        ]
    ]
];


/***/ }),

/***/ 96354:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.upgrades = void 0;
exports.upgrades = [
    [
        214356,
        4,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                1
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        392764,
        7,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        409740,
        8,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        809976,
        20,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        877581,
        24,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        879238,
        25,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        889472,
        26,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        902937,
        27,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        932751,
        28,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        991142,
        29,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1030162,
        31,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1119657,
        32,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1199282,
        33,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1342534,
        34,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1392263,
        35,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1431703,
        36,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1433369,
        37,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        1490972,
        41,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2087397,
        43,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2316688,
        44,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        2549864,
        45,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        3925782,
        46,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        3925843,
        47,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        4207800,
        48,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        4627944,
        49,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5124076,
        50,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5478664,
        900,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5482450,
        9000,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                4
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5584305,
        9010,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5784566,
        9030,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5879822,
        9031,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5896856,
        9032,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        5897316,
        9033,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        6117927,
        9050,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        6210274,
        9070,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                2
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        6379314,
        9080,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                2
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        6979141,
        9090,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7568453,
        9100,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7766394,
        9111,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7911691,
        9120,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7968866,
        9121,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        7982889,
        9122,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        8514322,
        9130,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        9091726,
        9140,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        9091774,
        9150,
        [
            [
                "0xdf6acb689907609b",
                3
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                1
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        9406726,
        9160,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        9921066,
        9170,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10007115,
        9180,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                5
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10480973,
        9190,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10578091,
        9200,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10678509,
        9210,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        10811001,
        9220,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11096116,
        9230,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11409279,
        9250,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11584820,
        9251,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11716837,
        9260,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11876919,
        9261,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ]
        ]
    ],
    [
        11987927,
        9270,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        12077324,
        9271,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        12301871,
        9280,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        12604343,
        9290,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                2
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        12841034,
        9300,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        13128237,
        9310,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                1
            ],
            [
                "0xf3ff14d5ab527059",
                1
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        13272363,
        9320,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                2
            ],
            [
                "0xf3ff14d5ab527059",
                2
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        13483497,
        9330,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                2
            ],
            [
                "0xf3ff14d5ab527059",
                2
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        13649433,
        9340,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                2
            ],
            [
                "0xf3ff14d5ab527059",
                2
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ],
    [
        13761100,
        9350,
        [
            [
                "0xdf6acb689907609b",
                4
            ],
            [
                "0x37e397fc7c91f5e4",
                1
            ],
            [
                "0x40fe3ad401f8959a",
                6
            ],
            [
                "0xd2bc9897eed08f15",
                3
            ],
            [
                "0xf78b278be53f454c",
                2
            ],
            [
                "0xaf2c0297a23e6d3d",
                3
            ],
            [
                "0x49eaaf1b548a0cb0",
                1
            ],
            [
                "0x91d5df18b0d2cf58",
                1
            ],
            [
                "0xed99c5acb25eedf5",
                3
            ],
            [
                "0xcbca25e39f142387",
                2
            ],
            [
                "0x687ad44ad37f03c2",
                1
            ],
            [
                "0xab3c0572291feb8b",
                1
            ],
            [
                "0xbc9d89904f5b923f",
                1
            ],
            [
                "0x37c8bb1350a9a2a8",
                2
            ],
            [
                "0xf3ff14d5ab527059",
                2
            ],
            [
                "0x17a6bc0d0062aeb3",
                1
            ]
        ]
    ]
];


/***/ }),

/***/ 75876:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.upgrades = void 0;
const tslib_1 = __nccwpck_require__(15308);
const networks_1 = __nccwpck_require__(52049);
const util_1 = __nccwpck_require__(29795);
const allKnown = tslib_1.__importStar(__nccwpck_require__(16036));
const NET_EXTRA = {
    westend: {
        genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']
    }
};
/** @internal */
function mapRaw([network, versions]) {
    const chain = networks_1.selectableNetworks.find((n) => n.network === network) || NET_EXTRA[network];
    if (!chain) {
        throw new Error(`Unable to find info for chain ${network}`);
    }
    return {
        genesisHash: (0, util_1.hexToU8a)(chain.genesisHash[0]),
        network,
        versions: versions.map(([blockNumber, specVersion, apis]) => ({
            apis,
            blockNumber: new util_1.BN(blockNumber),
            specVersion: new util_1.BN(specVersion)
        }))
    };
}
exports.upgrades = Object.entries(allKnown).map(mapRaw);


/***/ }),

/***/ 35776:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getUpgradeVersion = exports.getSpecAlias = exports.getSpecRuntime = exports.getSpecRpc = exports.getSpecHasher = exports.getSpecTypes = exports.getSpecExtensions = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(81197);
const index_js_2 = __nccwpck_require__(55258);
const index_js_3 = __nccwpck_require__(75876);
/**
 * @description Perform the callback function using the stringified spec/chain
 * @internal
 * */
function withNames(chainName, specName, fn) {
    return fn(chainName.toString(), specName.toString());
}
/**
 * @descriptionFflatten a VersionedType[] into a Record<string, string>
 * @internal
 * */
function filterVersions(versions = [], specVersion) {
    return versions
        .filter(({ minmax: [min, max] }) => (min === undefined || min === null || specVersion >= min) &&
        (max === undefined || max === null || specVersion <= max))
        .reduce((result, { types }) => ({ ...result, ...types }), {});
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable signed extensions (ready for registration)
 */
function getSpecExtensions({ knownTypes }, chainName, specName) {
    return withNames(chainName, specName, (c, s) => ({
        ...(knownTypes.typesBundle?.spec?.[s]?.signedExtensions ?? {}),
        ...(knownTypes.typesBundle?.chain?.[c]?.signedExtensions ?? {})
    }));
}
exports.getSpecExtensions = getSpecExtensions;
/**
 * @description Based on the chain and runtimeVersion, get the applicable types (ready for registration)
 */
function getSpecTypes({ knownTypes }, chainName, specName, specVersion) {
    const _specVersion = (0, util_1.bnToBn)(specVersion).toNumber();
    return withNames(chainName, specName, (c, s) => ({
        // The order here is always, based on -
        //   - spec then chain
        //   - typesBundle takes higher precedence
        //   - types is the final catch-all override
        ...filterVersions(index_js_2.typesSpec[s], _specVersion),
        ...filterVersions(index_js_1.typesChain[c], _specVersion),
        ...filterVersions(knownTypes.typesBundle?.spec?.[s]?.types, _specVersion),
        ...filterVersions(knownTypes.typesBundle?.chain?.[c]?.types, _specVersion),
        ...(knownTypes.typesSpec?.[s] ?? {}),
        ...(knownTypes.typesChain?.[c] ?? {}),
        ...(knownTypes.types ?? {})
    }));
}
exports.getSpecTypes = getSpecTypes;
/**
 * @description Based on the chain or spec, return the hasher used
 */
function getSpecHasher({ knownTypes }, chainName, specName) {
    return withNames(chainName, specName, (c, s) => knownTypes.hasher ||
        knownTypes.typesBundle?.chain?.[c]?.hasher ||
        knownTypes.typesBundle?.spec?.[s]?.hasher ||
        null);
}
exports.getSpecHasher = getSpecHasher;
/**
 * @description Based on the chain and runtimeVersion, get the applicable rpc definitions (ready for registration)
 */
function getSpecRpc({ knownTypes }, chainName, specName) {
    return withNames(chainName, specName, (c, s) => ({
        ...(knownTypes.typesBundle?.spec?.[s]?.rpc ?? {}),
        ...(knownTypes.typesBundle?.chain?.[c]?.rpc ?? {})
    }));
}
exports.getSpecRpc = getSpecRpc;
/**
 * @description Based on the chain and runtimeVersion, get the applicable runtime definitions (ready for registration)
 */
function getSpecRuntime({ knownTypes }, chainName, specName) {
    return withNames(chainName, specName, (c, s) => ({
        ...(knownTypes.typesBundle?.spec?.[s]?.runtime ?? {}),
        ...(knownTypes.typesBundle?.chain?.[c]?.runtime ?? {})
    }));
}
exports.getSpecRuntime = getSpecRuntime;
/**
 * @description Based on the chain and runtimeVersion, get the applicable alias definitions (ready for registration)
 */
function getSpecAlias({ knownTypes }, chainName, specName) {
    return withNames(chainName, specName, (c, s) => ({
        // as per versions, first spec, then chain then finally non-versioned
        ...(knownTypes.typesBundle?.spec?.[s]?.alias ?? {}),
        ...(knownTypes.typesBundle?.chain?.[c]?.alias ?? {}),
        ...(knownTypes.typesAlias ?? {})
    }));
}
exports.getSpecAlias = getSpecAlias;
/**
 * @description Returns a version record for known chains where upgrades are being tracked
 */
function getUpgradeVersion(genesisHash, blockNumber) {
    const known = index_js_3.upgrades.find((u) => genesisHash.eq(u.genesisHash));
    return known
        ? [
            known.versions.reduce((last, version) => {
                return blockNumber.gt(version.blockNumber)
                    ? version
                    : last;
            }, undefined),
            known.versions.find((version) => blockNumber.lte(version.blockNumber))
        ]
        : [undefined, undefined];
}
exports.getUpgradeVersion = getUpgradeVersion;


/***/ }),

/***/ 29621:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.typeDefinitions = exports.rpcDefinitions = exports.unwrapStorageType = exports.packageInfo = exports.convertSiV0toV1 = exports.TypeDefInfo = void 0;
const tslib_1 = __nccwpck_require__(19684);
const typeDefinitions = tslib_1.__importStar(__nccwpck_require__(36967));
exports.typeDefinitions = typeDefinitions;
const jsonrpc_js_1 = tslib_1.__importDefault(__nccwpck_require__(87662));
exports.rpcDefinitions = jsonrpc_js_1.default;
var types_create_1 = __nccwpck_require__(49134);
Object.defineProperty(exports, "TypeDefInfo", ({ enumerable: true, get: function () { return types_create_1.TypeDefInfo; } }));
var index_js_1 = __nccwpck_require__(23480);
Object.defineProperty(exports, "convertSiV0toV1", ({ enumerable: true, get: function () { return index_js_1.convertSiV0toV1; } }));
var packageInfo_js_1 = __nccwpck_require__(74402);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
var index_js_2 = __nccwpck_require__(10512);
Object.defineProperty(exports, "unwrapStorageType", ({ enumerable: true, get: function () { return index_js_2.unwrapStorageType; } }));
tslib_1.__exportStar(__nccwpck_require__(1673), exports);
tslib_1.__exportStar(__nccwpck_require__(18841), exports);
tslib_1.__exportStar(__nccwpck_require__(59835), exports);
tslib_1.__exportStar(__nccwpck_require__(1870), exports);


/***/ }),

/***/ 1673:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WrapperOpaque = exports.WrapperKeepOpaque = exports.VecFixed = exports.Vec = exports.UInt = exports.U8aFixed = exports.Tuple = exports.Struct = exports.Set = exports.Result = exports.Raw = exports.RangeInclusive = exports.Range = exports.Option = exports.Map = exports.Linkage = exports.Json = exports.Int = exports.HashMap = exports.Enum = exports.DoNotConstruct = exports.Compact = exports.CodecSet = exports.CodecMap = exports.BTreeSet = exports.BTreeMap = void 0;
var types_codec_1 = __nccwpck_require__(2997);
Object.defineProperty(exports, "BTreeMap", ({ enumerable: true, get: function () { return types_codec_1.BTreeMap; } }));
Object.defineProperty(exports, "BTreeSet", ({ enumerable: true, get: function () { return types_codec_1.BTreeSet; } }));
Object.defineProperty(exports, "CodecMap", ({ enumerable: true, get: function () { return types_codec_1.CodecMap; } }));
Object.defineProperty(exports, "CodecSet", ({ enumerable: true, get: function () { return types_codec_1.CodecSet; } }));
Object.defineProperty(exports, "Compact", ({ enumerable: true, get: function () { return types_codec_1.Compact; } }));
Object.defineProperty(exports, "DoNotConstruct", ({ enumerable: true, get: function () { return types_codec_1.DoNotConstruct; } }));
Object.defineProperty(exports, "Enum", ({ enumerable: true, get: function () { return types_codec_1.Enum; } }));
Object.defineProperty(exports, "HashMap", ({ enumerable: true, get: function () { return types_codec_1.HashMap; } }));
Object.defineProperty(exports, "Int", ({ enumerable: true, get: function () { return types_codec_1.Int; } }));
Object.defineProperty(exports, "Json", ({ enumerable: true, get: function () { return types_codec_1.Json; } }));
Object.defineProperty(exports, "Linkage", ({ enumerable: true, get: function () { return types_codec_1.Linkage; } }));
Object.defineProperty(exports, "Map", ({ enumerable: true, get: function () { return types_codec_1.Map; } }));
Object.defineProperty(exports, "Option", ({ enumerable: true, get: function () { return types_codec_1.Option; } }));
Object.defineProperty(exports, "Range", ({ enumerable: true, get: function () { return types_codec_1.Range; } }));
Object.defineProperty(exports, "RangeInclusive", ({ enumerable: true, get: function () { return types_codec_1.RangeInclusive; } }));
Object.defineProperty(exports, "Raw", ({ enumerable: true, get: function () { return types_codec_1.Raw; } }));
Object.defineProperty(exports, "Result", ({ enumerable: true, get: function () { return types_codec_1.Result; } }));
Object.defineProperty(exports, "Set", ({ enumerable: true, get: function () { return types_codec_1.Set; } }));
Object.defineProperty(exports, "Struct", ({ enumerable: true, get: function () { return types_codec_1.Struct; } }));
Object.defineProperty(exports, "Tuple", ({ enumerable: true, get: function () { return types_codec_1.Tuple; } }));
Object.defineProperty(exports, "U8aFixed", ({ enumerable: true, get: function () { return types_codec_1.U8aFixed; } }));
Object.defineProperty(exports, "UInt", ({ enumerable: true, get: function () { return types_codec_1.UInt; } }));
Object.defineProperty(exports, "Vec", ({ enumerable: true, get: function () { return types_codec_1.Vec; } }));
Object.defineProperty(exports, "VecFixed", ({ enumerable: true, get: function () { return types_codec_1.VecFixed; } }));
Object.defineProperty(exports, "WrapperKeepOpaque", ({ enumerable: true, get: function () { return types_codec_1.WrapperKeepOpaque; } }));
Object.defineProperty(exports, "WrapperOpaque", ({ enumerable: true, get: function () { return types_codec_1.WrapperOpaque; } }));


/***/ }),

/***/ 75937:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createClass = void 0;
const types_create_1 = __nccwpck_require__(49134);
function createClass(registry, type) {
    return (0, types_create_1.createClassUnsafe)(registry, type);
}
exports.createClass = createClass;


/***/ }),

/***/ 70281:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createType = void 0;
const types_create_1 = __nccwpck_require__(49134);
/**
 * Create an instance of a `type` with a given `params`.
 * @param type - A recognizable string representing the type to create an
 * instance from
 * @param params - The value to instantiate the type with
 */
function createType(registry, type, ...params) {
    return (0, types_create_1.createTypeUnsafe)(registry, type, params);
}
exports.createType = createType;


/***/ }),

/***/ 18841:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(19684);
tslib_1.__exportStar(__nccwpck_require__(41888), exports);
tslib_1.__exportStar(__nccwpck_require__(75937), exports);
tslib_1.__exportStar(__nccwpck_require__(70281), exports);
tslib_1.__exportStar(__nccwpck_require__(3718), exports);
tslib_1.__exportStar(__nccwpck_require__(22075), exports);


/***/ }),

/***/ 3718:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lazyVariants = void 0;
const util_1 = __nccwpck_require__(29795);
function lazyVariants(lookup, { type }, getName, creator) {
    const result = {};
    const variants = lookup.getSiType(type).def.asVariant.variants;
    for (let i = 0, count = variants.length; i < count; i++) {
        (0, util_1.lazyMethod)(result, variants[i], creator, getName, i);
    }
    return result;
}
exports.lazyVariants = lazyVariants;


/***/ }),

/***/ 22075:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TypeRegistry = void 0;
const tslib_1 = __nccwpck_require__(19684);
const types_codec_1 = __nccwpck_require__(2997);
const types_create_1 = __nccwpck_require__(49134);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const index_js_1 = __nccwpck_require__(15832);
const Event_js_1 = __nccwpck_require__(7977);
const baseTypes = tslib_1.__importStar(__nccwpck_require__(59835));
const definitions = tslib_1.__importStar(__nccwpck_require__(36967));
const index_js_2 = __nccwpck_require__(82678);
const index_js_3 = __nccwpck_require__(78982);
const Metadata_js_1 = __nccwpck_require__(81090);
const index_js_4 = __nccwpck_require__(23480);
const lazy_js_1 = __nccwpck_require__(3718);
const DEFAULT_FIRST_CALL_IDX = new Uint8Array(2);
const l = (0, util_1.logger)('registry');
function sortDecimalStrings(a, b) {
    return parseInt(a, 10) - parseInt(b, 10);
}
function valueToString(v) {
    return v.toString();
}
function getFieldArgs(lookup, fields) {
    const count = fields.length;
    const args = new Array(count);
    for (let i = 0; i < count; i++) {
        args[i] = lookup.getTypeDef(fields[i].type).type;
    }
    return args;
}
function clearRecord(record) {
    const keys = Object.keys(record);
    for (let i = 0, count = keys.length; i < count; i++) {
        delete record[keys[i]];
    }
}
function getVariantStringIdx({ index }) {
    return index.toString();
}
function injectErrors(_, { lookup, pallets }, version, result) {
    clearRecord(result);
    for (let i = 0, count = pallets.length; i < count; i++) {
        const { errors, index, name } = pallets[i];
        if (errors.isSome) {
            const sectionName = (0, util_1.stringCamelCase)(name);
            (0, util_1.lazyMethod)(result, version >= 12 ? index.toNumber() : i, () => (0, lazy_js_1.lazyVariants)(lookup, errors.unwrap(), getVariantStringIdx, ({ docs, fields, index, name }) => ({
                args: getFieldArgs(lookup, fields),
                docs: docs.map(valueToString),
                fields,
                index: index.toNumber(),
                method: name.toString(),
                name: name.toString(),
                section: sectionName
            })));
        }
    }
}
function injectEvents(registry, { lookup, pallets }, version, result) {
    const filtered = pallets.filter(index_js_3.filterEventsSome);
    clearRecord(result);
    for (let i = 0, count = filtered.length; i < count; i++) {
        const { events, index, name } = filtered[i];
        (0, util_1.lazyMethod)(result, version >= 12 ? index.toNumber() : i, () => (0, lazy_js_1.lazyVariants)(lookup, events.unwrap(), getVariantStringIdx, (variant) => {
            const meta = registry.createType('EventMetadataLatest', (0, util_1.objectSpread)({}, variant, { args: getFieldArgs(lookup, variant.fields) }));
            return class extends Event_js_1.GenericEventData {
                constructor(registry, value) {
                    super(registry, value, meta, (0, util_1.stringCamelCase)(name), variant.name.toString());
                }
            };
        }));
    }
}
function injectExtrinsics(registry, { lookup, pallets }, version, result, mapping) {
    const filtered = pallets.filter(index_js_3.filterCallsSome);
    clearRecord(result);
    clearRecord(mapping);
    for (let i = 0, count = filtered.length; i < count; i++) {
        const { calls, index, name } = filtered[i];
        const sectionIndex = version >= 12 ? index.toNumber() : i;
        const sectionName = (0, util_1.stringCamelCase)(name);
        const allCalls = calls.unwrap();
        (0, util_1.lazyMethod)(result, sectionIndex, () => (0, lazy_js_1.lazyVariants)(lookup, allCalls, getVariantStringIdx, (variant) => (0, index_js_2.createCallFunction)(registry, lookup, variant, sectionName, sectionIndex)));
        const { path } = registry.lookup.getSiType(allCalls.type);
        // frame_system::pallet::Call / pallet_balances::pallet::Call / polkadot_runtime_parachains::configuration::pallet::Call /
        const palletIdx = path.findIndex((v) => v.eq('pallet'));
        if (palletIdx !== -1) {
            const name = (0, util_1.stringCamelCase)(path
                .slice(0, palletIdx)
                .map((p, i) => i === 0
                // frame_system || pallet_balances
                ? p.replace(/^(frame|pallet)_/, '')
                : p)
                .join(' '));
            if (!mapping[name]) {
                mapping[name] = [sectionName];
            }
            else {
                mapping[name].push(sectionName);
            }
        }
    }
}
function extractProperties(registry, metadata) {
    const original = registry.getChainProperties();
    const constants = (0, index_js_3.decorateConstants)(registry, metadata.asLatest, metadata.version);
    const ss58Format = constants['system'] && (constants['system']['sS58Prefix'] || constants['system']['ss58Prefix']);
    if (!ss58Format) {
        return original;
    }
    const { isEthereum, tokenDecimals, tokenSymbol } = original || {};
    return registry.createTypeUnsafe('ChainProperties', [{ isEthereum, ss58Format, tokenDecimals, tokenSymbol }]);
}
class TypeRegistry {
    constructor(createdAtHash) {
        this.__internal__classes = new Map();
        this.__internal__definitions = new Map();
        this.__internal__firstCallIndex = null;
        this.__internal__hasher = util_crypto_1.blake2AsU8a;
        this.__internal__knownTypes = {};
        this.__internal__metadataVersion = 0;
        this.__internal__signedExtensions = index_js_1.fallbackExtensions;
        this.__internal__unknownTypes = new Map();
        this.__internal__metadataCalls = {};
        this.__internal__metadataErrors = {};
        this.__internal__metadataEvents = {};
        this.__internal__moduleMap = {};
        this.__internal__registerObject = (obj) => {
            const entries = Object.entries(obj);
            for (let e = 0, count = entries.length; e < count; e++) {
                const [name, type] = entries[e];
                if ((0, util_1.isFunction)(type)) {
                    // This _looks_ a bit funny, but `typeof Clazz === 'function'
                    this.__internal__classes.set(name, type);
                }
                else {
                    const def = (0, util_1.isString)(type)
                        ? type
                        : (0, util_1.stringify)(type);
                    if (name === def) {
                        throw new Error(`Unable to register circular ${name} === ${def}`);
                    }
                    // we already have this type, remove the classes registered for it
                    if (this.__internal__classes.has(name)) {
                        this.__internal__classes.delete(name);
                    }
                    this.__internal__definitions.set(name, def);
                }
            }
        };
        // register alias types alongside the portable/lookup setup
        // (we don't combine this into setLookup since that would/could
        // affect stand-along lookups, such as ABIs which don't have
        // actual on-chain metadata)
        this.__internal__registerLookup = (lookup) => {
            // attach the lookup before we register any types
            this.setLookup(lookup);
            // we detect based on runtime configuration
            let Weight = null;
            if (this.hasType('SpWeightsWeightV2Weight')) {
                // detection for WeightV2 type based on latest naming
                const weightv2 = this.createType('SpWeightsWeightV2Weight');
                Weight = weightv2.refTime && weightv2.proofSize
                    // with both refTime & proofSize we use as-is (WeightV2)
                    ? 'SpWeightsWeightV2Weight'
                    // fallback to WeightV1 (WeightV1.5 is a struct, single field)
                    : 'WeightV1';
            }
            else if (!(0, util_1.isBn)(this.createType('Weight'))) {
                // where we have an already-supplied BN override, we don't clobber
                // it with our detected value (This protects against pre-defines
                // where Weight may be aliassed to WeightV0, e.g. in early Kusama chains)
                Weight = 'WeightV1';
            }
            if (Weight) {
                // we have detected a version, adjust the definition
                this.register({ Weight });
            }
        };
        this.__internal__knownDefaults = (0, util_1.objectSpread)({ Json: types_codec_1.Json, Metadata: Metadata_js_1.Metadata, PortableRegistry: index_js_4.PortableRegistry, Raw: types_codec_1.Raw }, baseTypes);
        this.__internal__knownDefaultsEntries = Object.entries(this.__internal__knownDefaults);
        this.__internal__knownDefinitions = definitions;
        const allKnown = Object.values(this.__internal__knownDefinitions);
        for (let i = 0, count = allKnown.length; i < count; i++) {
            this.register(allKnown[i].types);
        }
        if (createdAtHash) {
            this.createdAtHash = this.createType('BlockHash', createdAtHash);
        }
    }
    get chainDecimals() {
        if (this.__internal__chainProperties?.tokenDecimals.isSome) {
            const allDecimals = this.__internal__chainProperties.tokenDecimals.unwrap();
            if (allDecimals.length) {
                return allDecimals.map((b) => b.toNumber());
            }
        }
        return [12];
    }
    get chainIsEthereum() {
        return this.__internal__chainProperties?.isEthereum.isTrue || false;
    }
    get chainSS58() {
        return this.__internal__chainProperties?.ss58Format.isSome
            ? this.__internal__chainProperties.ss58Format.unwrap().toNumber()
            : undefined;
    }
    get chainTokens() {
        if (this.__internal__chainProperties?.tokenSymbol.isSome) {
            const allTokens = this.__internal__chainProperties.tokenSymbol.unwrap();
            if (allTokens.length) {
                return allTokens.map(valueToString);
            }
        }
        return [util_1.formatBalance.getDefaults().unit];
    }
    get firstCallIndex() {
        return this.__internal__firstCallIndex || DEFAULT_FIRST_CALL_IDX;
    }
    /**
     * @description Returns true if the type is in a Compat format
     */
    isLookupType(value) {
        return /Lookup\d+$/.test(value);
    }
    /**
     * @description Creates a lookup string from the supplied id
     */
    createLookupType(lookupId) {
        return `Lookup${typeof lookupId === 'number' ? lookupId : lookupId.toNumber()}`;
    }
    get knownTypes() {
        return this.__internal__knownTypes;
    }
    get lookup() {
        return (0, util_1.assertReturn)(this.__internal__lookup, 'PortableRegistry has not been set on this registry');
    }
    get metadata() {
        return (0, util_1.assertReturn)(this.__internal__metadata, 'Metadata has not been set on this registry');
    }
    get unknownTypes() {
        return [...this.__internal__unknownTypes.keys()];
    }
    get signedExtensions() {
        return this.__internal__signedExtensions;
    }
    clearCache() {
        this.__internal__classes = new Map();
    }
    /**
     * @describe Creates an instance of the class
     */
    createClass(type) {
        return (0, types_create_1.createClassUnsafe)(this, type);
    }
    /**
     * @describe Creates an instance of the class
     */
    createClassUnsafe(type) {
        return (0, types_create_1.createClassUnsafe)(this, type);
    }
    /**
     * @description Creates an instance of a type as registered
     */
    createType(type, ...params) {
        return (0, types_create_1.createTypeUnsafe)(this, type, params);
    }
    /**
     * @description Creates an instance of a type as registered
     */
    createTypeUnsafe(type, params, options) {
        return (0, types_create_1.createTypeUnsafe)(this, type, params, options);
    }
    // find a specific call
    findMetaCall(callIndex) {
        const [section, method] = [callIndex[0], callIndex[1]];
        return (0, util_1.assertReturn)(this.__internal__metadataCalls[`${section}`] && this.__internal__metadataCalls[`${section}`][`${method}`], () => `findMetaCall: Unable to find Call with index [${section}, ${method}]/[${callIndex.toString()}]`);
    }
    // finds an error
    findMetaError(errorIndex) {
        const [section, method] = (0, util_1.isU8a)(errorIndex)
            ? [errorIndex[0], errorIndex[1]]
            : [
                errorIndex.index.toNumber(),
                (0, util_1.isU8a)(errorIndex.error)
                    ? errorIndex.error[0]
                    : errorIndex.error.toNumber()
            ];
        return (0, util_1.assertReturn)(this.__internal__metadataErrors[`${section}`] && this.__internal__metadataErrors[`${section}`][`${method}`], () => `findMetaError: Unable to find Error with index [${section}, ${method}]/[${errorIndex.toString()}]`);
    }
    findMetaEvent(eventIndex) {
        const [section, method] = [eventIndex[0], eventIndex[1]];
        return (0, util_1.assertReturn)(this.__internal__metadataEvents[`${section}`] && this.__internal__metadataEvents[`${section}`][`${method}`], () => `findMetaEvent: Unable to find Event with index [${section}, ${method}]/[${eventIndex.toString()}]`);
    }
    get(name, withUnknown, knownTypeDef) {
        return this.getUnsafe(name, withUnknown, knownTypeDef);
    }
    getUnsafe(name, withUnknown, knownTypeDef) {
        let Type = this.__internal__classes.get(name) || this.__internal__knownDefaults[name];
        // we have not already created the type, attempt it
        if (!Type) {
            const definition = this.__internal__definitions.get(name);
            let BaseType;
            // we have a definition, so create the class now (lazily)
            if (definition) {
                BaseType = (0, types_create_1.createClassUnsafe)(this, definition);
            }
            else if (knownTypeDef) {
                BaseType = (0, types_create_1.constructTypeClass)(this, knownTypeDef);
            }
            else if (withUnknown) {
                l.warn(`Unable to resolve type ${name}, it will fail on construction`);
                this.__internal__unknownTypes.set(name, true);
                BaseType = types_codec_1.DoNotConstruct.with(name);
            }
            if (BaseType) {
                // NOTE If we didn't extend here, we would have strange artifacts. An example is
                // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128
                // Additionally, we now pass through the registry, which is a link to ourselves
                Type = class extends BaseType {
                };
                this.__internal__classes.set(name, Type);
                // In the case of lookups, we also want to store the actual class against
                // the lookup name, instad of having to traverse again
                if (knownTypeDef && (0, util_1.isNumber)(knownTypeDef.lookupIndex)) {
                    this.__internal__classes.set(this.createLookupType(knownTypeDef.lookupIndex), Type);
                }
            }
        }
        return Type;
    }
    getChainProperties() {
        return this.__internal__chainProperties;
    }
    getClassName(Type) {
        // we cannot rely on export order (anymore, since babel/core 7.15.8), so in the case of
        // items such as u32 & U32, we get the lowercase versions here... not quite as optimal
        // (previously this used to be a simple find & return)
        const names = [];
        for (const [name, Clazz] of this.__internal__knownDefaultsEntries) {
            if (Type === Clazz) {
                names.push(name);
            }
        }
        for (const [name, Clazz] of this.__internal__classes.entries()) {
            if (Type === Clazz) {
                names.push(name);
            }
        }
        return names.length
            // both sort and reverse are done in-place
            // ['U32', 'u32'] -> ['u32', 'U32']
            ? names.sort().reverse()[0]
            : undefined;
    }
    getDefinition(typeName) {
        return this.__internal__definitions.get(typeName);
    }
    getModuleInstances(specName, moduleName) {
        return this.__internal__knownTypes?.typesBundle?.spec?.[specName.toString()]?.instances?.[moduleName] || this.__internal__moduleMap[moduleName];
    }
    getOrThrow(name) {
        const Clazz = this.get(name);
        if (!Clazz) {
            throw new Error(`type ${name} not found`);
        }
        return Clazz;
    }
    getOrUnknown(name) {
        return this.get(name, true);
    }
    getSignedExtensionExtra() {
        return (0, index_js_1.expandExtensionTypes)(this.__internal__signedExtensions, 'payload', this.__internal__userExtensions);
    }
    getSignedExtensionTypes() {
        return (0, index_js_1.expandExtensionTypes)(this.__internal__signedExtensions, 'extrinsic', this.__internal__userExtensions);
    }
    hasClass(name) {
        return this.__internal__classes.has(name) || !!this.__internal__knownDefaults[name];
    }
    hasDef(name) {
        return this.__internal__definitions.has(name);
    }
    hasType(name) {
        return !this.__internal__unknownTypes.get(name) && (this.hasClass(name) || this.hasDef(name));
    }
    hash(data) {
        return this.createType('CodecHash', this.__internal__hasher(data));
    }
    // eslint-disable-next-line no-dupe-class-members
    register(arg1, arg2) {
        // NOTE Constructors appear as functions here
        if ((0, util_1.isFunction)(arg1)) {
            this.__internal__classes.set(arg1.name, arg1);
        }
        else if ((0, util_1.isString)(arg1)) {
            if (!(0, util_1.isFunction)(arg2)) {
                throw new Error(`Expected class definition passed to '${arg1}' registration`);
            }
            else if (arg1 === arg2.toString()) {
                throw new Error(`Unable to register circular ${arg1} === ${arg1}`);
            }
            this.__internal__classes.set(arg1, arg2);
        }
        else {
            this.__internal__registerObject(arg1);
        }
    }
    // sets the chain properties
    setChainProperties(properties) {
        if (properties) {
            this.__internal__chainProperties = properties;
        }
    }
    setHasher(hasher) {
        this.__internal__hasher = hasher || util_crypto_1.blake2AsU8a;
    }
    setKnownTypes(knownTypes) {
        this.__internal__knownTypes = knownTypes;
    }
    setLookup(lookup) {
        this.__internal__lookup = lookup;
        // register all applicable types found
        lookup.register();
    }
    // sets the metadata
    setMetadata(metadata, signedExtensions, userExtensions, noInitWarn) {
        this.__internal__metadata = metadata.asLatest;
        this.__internal__metadataVersion = metadata.version;
        this.__internal__firstCallIndex = null;
        // attach the lookup at this point and register relevant types (before injecting)
        this.__internal__registerLookup(this.__internal__metadata.lookup);
        injectExtrinsics(this, this.__internal__metadata, this.__internal__metadataVersion, this.__internal__metadataCalls, this.__internal__moduleMap);
        injectErrors(this, this.__internal__metadata, this.__internal__metadataVersion, this.__internal__metadataErrors);
        injectEvents(this, this.__internal__metadata, this.__internal__metadataVersion, this.__internal__metadataEvents);
        // set the default call index (the lowest section, the lowest method)
        // in most chains this should be 0,0
        const [defSection] = Object
            .keys(this.__internal__metadataCalls)
            .sort(sortDecimalStrings);
        if (defSection) {
            const [defMethod] = Object
                .keys(this.__internal__metadataCalls[defSection])
                .sort(sortDecimalStrings);
            if (defMethod) {
                this.__internal__firstCallIndex = new Uint8Array([parseInt(defSection, 10), parseInt(defMethod, 10)]);
            }
        }
        // setup the available extensions
        this.setSignedExtensions(signedExtensions || (this.__internal__metadata.extrinsic.version.gt(util_1.BN_ZERO)
            // FIXME Use the extension and their injected types
            ? this.__internal__metadata.extrinsic.signedExtensions.map(({ identifier }) => identifier.toString())
            : index_js_1.fallbackExtensions), userExtensions, noInitWarn);
        // setup the chain properties with format overrides
        this.setChainProperties(extractProperties(this, metadata));
    }
    // sets the available signed extensions
    setSignedExtensions(signedExtensions = index_js_1.fallbackExtensions, userExtensions, noInitWarn) {
        this.__internal__signedExtensions = signedExtensions;
        this.__internal__userExtensions = userExtensions;
        if (!noInitWarn) {
            const unknown = (0, index_js_1.findUnknownExtensions)(this.__internal__signedExtensions, this.__internal__userExtensions);
            if (unknown.length) {
                l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);
            }
        }
    }
}
exports.TypeRegistry = TypeRegistry;


/***/ }),

/***/ 21215:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(91697);
const packageInfo_2 = __nccwpck_require__(46510);
exports["default"] = [packageInfo_1.packageInfo, packageInfo_2.packageInfo];


/***/ }),

/***/ 97270:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(19684);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(21215));
const packageInfo_js_1 = __nccwpck_require__(74402);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 48676:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericEthereumAccountId = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
/** @internal */
function decodeAccountId(value) {
    if ((0, util_1.isU8a)(value) || Array.isArray(value)) {
        return (0, util_1.u8aToU8a)(value);
    }
    else if ((0, util_1.isHex)(value) || (0, util_crypto_1.isEthereumAddress)(value.toString())) {
        return (0, util_1.hexToU8a)(value.toString());
    }
    else if ((0, util_1.isString)(value)) {
        return (0, util_1.u8aToU8a)(value);
    }
    return value;
}
/**
 * @name GenericEthereumAccountId
 * @description
 * A wrapper around an Ethereum-compatible AccountId. Since we are dealing with
 * underlying addresses (20 bytes in length), we extend from U8aFixed which is
 * just a Uint8Array wrapper with a fixed length.
 */
class GenericEthereumAccountId extends types_codec_1.U8aFixed {
    constructor(registry, value = new Uint8Array()) {
        super(registry, decodeAccountId(value), 160);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return !!other && super.eq(decodeAccountId(other));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.toString();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return (0, util_crypto_1.ethereumEncode)(this);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'AccountId';
    }
}
exports.GenericEthereumAccountId = GenericEthereumAccountId;


/***/ }),

/***/ 51868:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericEthereumLookupSource = exports.ACCOUNT_ID_PREFIX = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const AccountIndex_js_1 = __nccwpck_require__(97414);
const AccountId_js_1 = __nccwpck_require__(48676);
exports.ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);
/** @internal */
function decodeString(registry, value) {
    const decoded = (0, util_crypto_1.decodeAddress)(value);
    return decoded.length === 20
        ? registry.createTypeUnsafe('EthereumAccountId', [decoded])
        : registry.createTypeUnsafe('AccountIndex', [(0, util_1.u8aToBn)(decoded)]);
}
/** @internal */
function decodeU8a(registry, value) {
    // This allows us to instantiate an address with a raw publicKey. Do this first before
    // we checking the first byte, otherwise we may split an already-existent valid address
    if (value.length === 20) {
        return registry.createTypeUnsafe('EthereumAccountId', [value]);
    }
    else if (value[0] === 0xff) {
        return registry.createTypeUnsafe('EthereumAccountId', [value.subarray(1)]);
    }
    const [offset, length] = AccountIndex_js_1.GenericAccountIndex.readLength(value);
    return registry.createTypeUnsafe('AccountIndex', [(0, util_1.u8aToBn)(value.subarray(offset, offset + length))]);
}
function decodeAddressOrIndex(registry, value) {
    return value instanceof GenericEthereumLookupSource
        ? value.inner
        : value instanceof AccountId_js_1.GenericEthereumAccountId || value instanceof AccountIndex_js_1.GenericAccountIndex
            ? value
            : (0, util_1.isU8a)(value) || Array.isArray(value) || (0, util_1.isHex)(value)
                ? decodeU8a(registry, (0, util_1.u8aToU8a)(value))
                : (0, util_1.isBn)(value) || (0, util_1.isNumber)(value) || (0, util_1.isBigInt)(value)
                    ? registry.createTypeUnsafe('AccountIndex', [value])
                    : decodeString(registry, value);
}
/**
 * @name GenericEthereumLookupSource
 * @description
 * A wrapper around an EthereumAccountId and/or AccountIndex that is encoded with a prefix.
 * Since we are dealing with underlying publicKeys (or shorter encoded addresses),
 * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address
 * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec
 */
class GenericEthereumLookupSource extends types_codec_1.AbstractBase {
    constructor(registry, value = new Uint8Array()) {
        super(registry, decodeAddressOrIndex(registry, value));
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        const rawLength = this._rawLength;
        return rawLength + (
        // for 1 byte AccountIndexes, we are not adding a specific prefix
        rawLength > 1
            ? 1
            : 0);
    }
    /**
     * @description The length of the raw value, either AccountIndex or AccountId
     */
    get _rawLength() {
        return this.inner instanceof AccountIndex_js_1.GenericAccountIndex
            ? AccountIndex_js_1.GenericAccountIndex.calcLength(this.inner)
            : this.inner.encodedLength;
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Address';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        const encoded = this.inner.toU8a().subarray(0, this._rawLength);
        return isBare
            ? encoded
            : (0, util_1.u8aConcat)(this.inner instanceof AccountIndex_js_1.GenericAccountIndex
                ? AccountIndex_js_1.GenericAccountIndex.writeLength(encoded)
                : exports.ACCOUNT_ID_PREFIX, encoded);
    }
}
exports.GenericEthereumLookupSource = GenericEthereumLookupSource;


/***/ }),

/***/ 30254:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericEthereumLookupSource = exports.GenericEthereumAccountId = void 0;
var AccountId_js_1 = __nccwpck_require__(48676);
Object.defineProperty(exports, "GenericEthereumAccountId", ({ enumerable: true, get: function () { return AccountId_js_1.GenericEthereumAccountId; } }));
var LookupSource_js_1 = __nccwpck_require__(51868);
Object.defineProperty(exports, "GenericEthereumLookupSource", ({ enumerable: true, get: function () { return LookupSource_js_1.GenericEthereumLookupSource; } }));


/***/ }),

/***/ 89551:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericExtrinsic = exports.LATEST_EXTRINSIC_VERSION = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const Extrinsic_js_1 = __nccwpck_require__(88589);
Object.defineProperty(exports, "LATEST_EXTRINSIC_VERSION", ({ enumerable: true, get: function () { return Extrinsic_js_1.EXTRINSIC_VERSION; } }));
const constants_js_1 = __nccwpck_require__(26242);
const VERSIONS = [
    'ExtrinsicUnknown',
    'ExtrinsicUnknown',
    'ExtrinsicUnknown',
    'ExtrinsicUnknown',
    'ExtrinsicV4'
];
/** @internal */
function newFromValue(registry, value, version) {
    if (value instanceof GenericExtrinsic) {
        return value.unwrap();
    }
    const isSigned = (version & constants_js_1.BIT_SIGNED) === constants_js_1.BIT_SIGNED;
    const type = VERSIONS[version & constants_js_1.UNMASK_VERSION] || VERSIONS[0];
    // we cast here since the VERSION definition is incredibly broad - we don't have a
    // slice for "only add extrinsic types", and more string definitions become unwieldy
    return registry.createTypeUnsafe(type, [value, { isSigned, version }]);
}
/** @internal */
function decodeExtrinsic(registry, value, version = constants_js_1.DEFAULT_VERSION) {
    if ((0, util_1.isU8a)(value) || Array.isArray(value) || (0, util_1.isHex)(value)) {
        return decodeU8a(registry, (0, util_1.u8aToU8a)(value), version);
    }
    else if (value instanceof registry.createClassUnsafe('Call')) {
        return newFromValue(registry, { method: value }, version);
    }
    return newFromValue(registry, value, version);
}
/** @internal */
function decodeU8a(registry, value, version) {
    if (!value.length) {
        return newFromValue(registry, new Uint8Array(), version);
    }
    const [offset, length] = (0, util_1.compactFromU8a)(value);
    const total = offset + length.toNumber();
    if (total > value.length) {
        throw new Error(`Extrinsic: length less than remainder, expected at least ${total}, found ${value.length}`);
    }
    const data = value.subarray(offset, total);
    return newFromValue(registry, data.subarray(1), data[0]);
}
class ExtrinsicBase extends types_codec_1.AbstractBase {
    constructor(registry, value, initialU8aLength) {
        super(registry, value, initialU8aLength);
        const signKeys = Object.keys(registry.getSignedExtensionTypes());
        const getter = (key) => this.inner.signature[key];
        // This is on the abstract class, ensuring that hasOwnProperty operates
        // correctly, i.e. it needs to be on the base class exposing it
        for (let i = 0, count = signKeys.length; i < count; i++) {
            (0, util_1.objectProperty)(this, signKeys[i], getter);
        }
    }
    /**
     * @description The arguments passed to for the call, exposes args so it is compatible with [[Call]]
     */
    get args() {
        return this.method.args;
    }
    /**
     * @description The argument definitions, compatible with [[Call]]
     */
    get argsDef() {
        return this.method.argsDef;
    }
    /**
     * @description The actual `[sectionIndex, methodIndex]` as used in the Call
     */
    get callIndex() {
        return this.method.callIndex;
    }
    /**
     * @description The actual data for the Call
     */
    get data() {
        return this.method.data;
    }
    /**
     * @description The era for this extrinsic
     */
    get era() {
        return this.inner.signature.era;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description `true` id the extrinsic is signed
     */
    get isSigned() {
        return this.inner.signature.isSigned;
    }
    /**
     * @description The length of the actual data, excluding prefix
     */
    get length() {
        return this.toU8a(true).length;
    }
    /**
     * @description The [[FunctionMetadataLatest]] that describes the extrinsic
     */
    get meta() {
        return this.method.meta;
    }
    /**
     * @description The [[Call]] this extrinsic wraps
     */
    get method() {
        return this.inner.method;
    }
    /**
     * @description The nonce for this extrinsic
     */
    get nonce() {
        return this.inner.signature.nonce;
    }
    /**
     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]
     */
    get signature() {
        return this.inner.signature.signature;
    }
    /**
     * @description The [[Address]] that signed
     */
    get signer() {
        return this.inner.signature.signer;
    }
    /**
     * @description Forwards compat
     */
    get tip() {
        return this.inner.signature.tip;
    }
    /**
     * @description Returns the raw transaction version (not flagged with signing information)
    */
    get type() {
        return this.inner.version;
    }
    get inner() {
        return this.unwrap();
    }
    /**
     * @description Returns the encoded version flag
    */
    get version() {
        return this.type | (this.isSigned ? constants_js_1.BIT_SIGNED : constants_js_1.BIT_UNSIGNED);
    }
    /**
     * @description Checks if the source matches this in type
     */
    is(other) {
        return this.method.is(other);
    }
    unwrap() {
        return super.unwrap();
    }
}
/**
 * @name GenericExtrinsic
 * @description
 * Representation of an Extrinsic in the system. It contains the actual call,
 * (optional) signature and encodes with an actual length prefix
 *
 * {@link https://github.com/paritytech/wiki/blob/master/Extrinsic.md#the-extrinsic-format-for-node}.
 *
 * Can be:
 * - signed, to create a transaction
 * - left as is, to create an inherent
 */
class GenericExtrinsic extends ExtrinsicBase {
    constructor(registry, value, { version } = {}) {
        super(registry, decodeExtrinsic(registry, value, version));
    }
    /**
     * @description returns a hash of the contents
     */
    get hash() {
        if (!this.__internal__hashCache) {
            this.__internal__hashCache = super.hash;
        }
        return this.__internal__hashCache;
    }
    /**
     * @description Injects an already-generated signature into the extrinsic
     */
    addSignature(signer, signature, payload) {
        this.inner.addSignature(signer, signature, payload);
        this.__internal__hashCache = undefined;
        return this;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        const encoded = (0, util_1.u8aConcat)(...this.toU8aInner());
        return {
            inner: this.isSigned
                ? this.inner.inspect().inner
                : this.inner.method.inspect().inner,
            outer: [(0, util_1.compactToU8a)(encoded.length), new Uint8Array([this.version])]
        };
    }
    /**
     * @description Sign the extrinsic with a specific keypair
     */
    sign(account, options) {
        this.inner.sign(account, options);
        this.__internal__hashCache = undefined;
        return this;
    }
    /**
     * @describe Adds a fake signature to the extrinsic
     */
    signFake(signer, options) {
        this.inner.signFake(signer, options);
        this.__internal__hashCache = undefined;
        return this;
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex(isBare) {
        return (0, util_1.u8aToHex)(this.toU8a(isBare));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExpanded) {
        return (0, util_1.objectSpread)({}, {
            isSigned: this.isSigned,
            method: this.method.toHuman(isExpanded)
        }, this.isSigned
            ? {
                era: this.era.toHuman(isExpanded),
                nonce: this.nonce.toHuman(isExpanded),
                signature: this.signature.toHex(),
                signer: this.signer.toHuman(isExpanded),
                tip: this.tip.toHuman(isExpanded)
            }
            : null);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.toHex();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Extrinsic';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value is not length-prefixed
     */
    toU8a(isBare) {
        const encoded = (0, util_1.u8aConcat)(...this.toU8aInner());
        return isBare
            ? encoded
            : (0, util_1.compactAddLength)(encoded);
    }
    toU8aInner() {
        // we do not apply bare to the internal values, rather this only determines out length addition,
        // where we strip all lengths this creates an extrinsic that cannot be decoded
        return [
            new Uint8Array([this.version]),
            this.inner.toU8a()
        ];
    }
}
exports.GenericExtrinsic = GenericExtrinsic;
GenericExtrinsic.LATEST_EXTRINSIC_VERSION = Extrinsic_js_1.EXTRINSIC_VERSION;


/***/ }),

/***/ 51121:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericExtrinsicEra = exports.MortalEra = exports.ImmortalEra = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const constants_js_1 = __nccwpck_require__(26242);
function getTrailingZeros(period) {
    const binary = period.toString(2);
    let index = 0;
    while (binary[binary.length - 1 - index] === '0') {
        index++;
    }
    return index;
}
/** @internal */
function decodeMortalEra(registry, value) {
    if ((0, util_1.isU8a)(value) || (0, util_1.isHex)(value) || Array.isArray(value)) {
        return decodeMortalU8a(registry, (0, util_1.u8aToU8a)(value));
    }
    else if (!value) {
        return [new types_codec_1.U64(registry), new types_codec_1.U64(registry)];
    }
    else if ((0, util_1.isObject)(value)) {
        return decodeMortalObject(registry, value);
    }
    throw new Error('Invalid data passed to Mortal era');
}
/** @internal */
function decodeMortalObject(registry, value) {
    const { current, period } = value;
    let calPeriod = Math.pow(2, Math.ceil(Math.log2(period)));
    calPeriod = Math.min(Math.max(calPeriod, 4), 1 << 16);
    const phase = current % calPeriod;
    const quantizeFactor = Math.max(calPeriod >> 12, 1);
    const quantizedPhase = phase / quantizeFactor * quantizeFactor;
    return [new types_codec_1.U64(registry, calPeriod), new types_codec_1.U64(registry, quantizedPhase)];
}
/** @internal */
function decodeMortalU8a(registry, value) {
    if (value.length === 0) {
        return [new types_codec_1.U64(registry), new types_codec_1.U64(registry)];
    }
    const first = (0, util_1.u8aToBn)(value.subarray(0, 1)).toNumber();
    const second = (0, util_1.u8aToBn)(value.subarray(1, 2)).toNumber();
    const encoded = first + (second << 8);
    const period = 2 << (encoded % (1 << 4));
    const quantizeFactor = Math.max(period >> 12, 1);
    const phase = (encoded >> 4) * quantizeFactor;
    if (period < 4 || phase >= period) {
        throw new Error('Invalid data passed to Mortal era');
    }
    return [new types_codec_1.U64(registry, period), new types_codec_1.U64(registry, phase)];
}
/** @internal */
function decodeExtrinsicEra(value = new Uint8Array()) {
    if ((0, util_1.isU8a)(value)) {
        return (!value.length || value[0] === 0)
            ? new Uint8Array([0])
            : new Uint8Array([1, value[0], value[1]]);
    }
    else if (!value) {
        return new Uint8Array([0]);
    }
    else if (value instanceof GenericExtrinsicEra) {
        return decodeExtrinsicEra(value.toU8a());
    }
    else if ((0, util_1.isHex)(value)) {
        return decodeExtrinsicEra((0, util_1.hexToU8a)(value));
    }
    else if ((0, util_1.isObject)(value)) {
        const entries = Object.entries(value).map(([k, v]) => [k.toLowerCase(), v]);
        const mortal = entries.find(([k]) => k.toLowerCase() === 'mortalera');
        const immortal = entries.find(([k]) => k.toLowerCase() === 'immortalera');
        // this is to de-serialize from JSON
        return mortal
            ? { MortalEra: mortal[1] }
            : immortal
                ? { ImmortalEra: immortal[1] }
                : { MortalEra: value };
    }
    throw new Error('Invalid data passed to Era');
}
/**
 * @name ImmortalEra
 * @description
 * The ImmortalEra for an extrinsic
 */
class ImmortalEra extends types_codec_1.Raw {
    constructor(registry, _value) {
        // For immortals, we always provide the known value (i.e. treated as a
        // constant no matter how it is constructed - it is a fixed structure)
        super(registry, constants_js_1.IMMORTAL_ERA);
    }
}
exports.ImmortalEra = ImmortalEra;
/**
 * @name MortalEra
 * @description
 * The MortalEra for an extrinsic, indicating period and phase
 */
class MortalEra extends types_codec_1.Tuple {
    constructor(registry, value) {
        super(registry, {
            period: types_codec_1.U64,
            phase: types_codec_1.U64
        }, decodeMortalEra(registry, value));
    }
    /**
     * @description Encoded length for mortals occupy 2 bytes, different from the actual Tuple since it is encoded. This is a shortcut fro `toU8a().length`
     */
    get encodedLength() {
        return 2 | 0;
    }
    /**
     * @description The period of this Mortal wraps as a [[U64]]
     */
    get period() {
        return this[0];
    }
    /**
     * @description The phase of this Mortal wraps as a [[U64]]
     */
    get phase() {
        return this[1];
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return {
            period: (0, util_1.formatNumber)(this.period),
            phase: (0, util_1.formatNumber)(this.phase)
        };
    }
    /**
     * @description Returns a JSON representation of the actual value
     */
    toJSON() {
        return this.toHex();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the parity-codec specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     * Period and phase are encoded:
     *   - The period of validity from the block hash found in the signing material.
     *   - The phase in the period that this transaction's lifetime begins (and, importantly,
     *     implies which block hash is included in the signature material). If the `period` is
     *     greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that
     *     `period` is.
     */
    toU8a(_isBare) {
        const period = this.period.toNumber();
        const encoded = Math.min(15, Math.max(1, getTrailingZeros(period) - 1)) + ((this.phase.toNumber() / Math.max(period >> 12, 1)) << 4);
        return new Uint8Array([
            encoded & 0xff,
            encoded >> 8
        ]);
    }
    /**
     * @description Get the block number of the start of the era whose properties this object describes that `current` belongs to.
     */
    birth(current) {
        const phase = this.phase.toNumber();
        const period = this.period.toNumber();
        // FIXME No toNumber() here
        return (~~((Math.max((0, util_1.bnToBn)(current).toNumber(), phase) - phase) / period) * period) + phase;
    }
    /**
     * @description Get the block number of the first block at which the era has ended.
     */
    death(current) {
        // FIXME No toNumber() here
        return this.birth(current) + this.period.toNumber();
    }
}
exports.MortalEra = MortalEra;
/**
 * @name GenericExtrinsicEra
 * @description
 * The era for an extrinsic, indicating either a mortal or immortal extrinsic
 */
class GenericExtrinsicEra extends types_codec_1.Enum {
    constructor(registry, value) {
        super(registry, {
            ImmortalEra,
            MortalEra
        }, decodeExtrinsicEra(value));
    }
    /**
     * @description Override the encoded length method
     */
    get encodedLength() {
        return this.isImmortalEra
            ? this.asImmortalEra.encodedLength
            : this.asMortalEra.encodedLength;
    }
    /**
     * @description Returns the item as a [[ImmortalEra]]
     */
    get asImmortalEra() {
        if (!this.isImmortalEra) {
            throw new Error(`Cannot convert '${this.type}' via asImmortalEra`);
        }
        return this.inner;
    }
    /**
     * @description Returns the item as a [[MortalEra]]
     */
    get asMortalEra() {
        if (!this.isMortalEra) {
            throw new Error(`Cannot convert '${this.type}' via asMortalEra`);
        }
        return this.inner;
    }
    /**
     * @description `true` if Immortal
     */
    get isImmortalEra() {
        return this.index === 0;
    }
    /**
     * @description `true` if Mortal
     */
    get isMortalEra() {
        return this.index > 0;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the parity-codec specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        return this.isMortalEra
            ? this.asMortalEra.toU8a(isBare)
            : this.asImmortalEra.toU8a(isBare);
    }
}
exports.GenericExtrinsicEra = GenericExtrinsicEra;


/***/ }),

/***/ 65583:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericExtrinsicPayload = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const constants_js_1 = __nccwpck_require__(26242);
const VERSIONS = [
    'ExtrinsicPayloadUnknown',
    'ExtrinsicPayloadUnknown',
    'ExtrinsicPayloadUnknown',
    'ExtrinsicPayloadUnknown',
    'ExtrinsicPayloadV4'
];
/** @internal */
function decodeExtrinsicPayload(registry, value, version = constants_js_1.DEFAULT_VERSION) {
    if (value instanceof GenericExtrinsicPayload) {
        return value.unwrap();
    }
    return registry.createTypeUnsafe(VERSIONS[version] || VERSIONS[0], [value, { version }]);
}
/**
 * @name GenericExtrinsicPayload
 * @description
 * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based
 * on the contents included
 */
class GenericExtrinsicPayload extends types_codec_1.AbstractBase {
    constructor(registry, value, { version } = {}) {
        super(registry, decodeExtrinsicPayload(registry, value, version));
    }
    /**
     * @description The block [[BlockHash]] the signature applies to (mortal/immortal)
     */
    get blockHash() {
        return this.inner.blockHash;
    }
    /**
     * @description The [[ExtrinsicEra]]
     */
    get era() {
        return this.inner.era;
    }
    /**
     * @description The genesis block [[BlockHash]] the signature applies to
     */
    get genesisHash() {
        // NOTE only v3+
        return this.inner.genesisHash || this.registry.createTypeUnsafe('Hash', []);
    }
    /**
     * @description The [[Bytes]] contained in the payload
     */
    get method() {
        return this.inner.method;
    }
    /**
     * @description The [[Index]]
     */
    get nonce() {
        return this.inner.nonce;
    }
    /**
     * @description The specVersion as a [[u32]] for this payload
     */
    get specVersion() {
        // NOTE only v3+
        return this.inner.specVersion || this.registry.createTypeUnsafe('u32', []);
    }
    /**
     * @description The [[Balance]]
     */
    get tip() {
        // NOTE from v2+
        return this.inner.tip || this.registry.createTypeUnsafe('Compact<Balance>', []);
    }
    /**
     * @description The transaction version as a [[u32]] for this payload
     */
    get transactionVersion() {
        // NOTE only v4+
        return this.inner.transactionVersion || this.registry.createTypeUnsafe('u32', []);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return this.inner.eq(other);
    }
    /**
     * @description Sign the payload with the keypair
     */
    sign(signerPair) {
        const signature = this.inner.sign(signerPair);
        // This is extensible, so we could quite readily extend to send back extra
        // information, such as for instance the payload, i.e. `payload: this.toHex()`
        // For the case here we sign via the extrinsic, we ignore the return, so generally
        // this is applicable for external signing
        return {
            signature: (0, util_1.u8aToHex)(signature)
        };
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        return this.inner.toHuman(isExtended);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.toHex();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'ExtrinsicPayload';
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return this.toHex();
    }
    /**
     * @description Returns a serialized u8a form
     */
    toU8a(isBare) {
        // call our parent, with only the method stripped
        return super.toU8a(isBare ? { method: true } : false);
    }
}
exports.GenericExtrinsicPayload = GenericExtrinsicPayload;


/***/ }),

/***/ 63227:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericExtrinsicPayloadUnknown = void 0;
const types_codec_1 = __nccwpck_require__(2997);
/**
 * @name GenericExtrinsicPayloadUnknown
 * @description
 * A default handler for payloads where the version is not known (default throw)
 */
class GenericExtrinsicPayloadUnknown extends types_codec_1.Struct {
    constructor(registry, _value, { version = 0 } = {}) {
        super(registry, {});
        throw new Error(`Unsupported extrinsic payload version ${version}`);
    }
}
exports.GenericExtrinsicPayloadUnknown = GenericExtrinsicPayloadUnknown;


/***/ }),

/***/ 2552:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericExtrinsicUnknown = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const constants_js_1 = __nccwpck_require__(26242);
/**
 * @name GenericExtrinsicUnknown
 * @description
 * A default handler for extrinsics where the version is not known (default throw)
 */
class GenericExtrinsicUnknown extends types_codec_1.Struct {
    constructor(registry, _value, { isSigned = false, version = 0 } = {}) {
        super(registry, {});
        throw new Error(`Unsupported ${isSigned ? '' : 'un'}signed extrinsic version ${version & constants_js_1.UNMASK_VERSION}`);
    }
}
exports.GenericExtrinsicUnknown = GenericExtrinsicUnknown;


/***/ }),

/***/ 507:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericSignerPayload = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const knownTypes = {
    address: 'Address',
    blockHash: 'Hash',
    blockNumber: 'BlockNumber',
    era: 'ExtrinsicEra',
    genesisHash: 'Hash',
    method: 'Call',
    nonce: 'Compact<Index>',
    runtimeVersion: 'RuntimeVersion',
    signedExtensions: 'Vec<Text>',
    tip: 'Compact<Balance>',
    version: 'u8'
};
/**
 * @name GenericSignerPayload
 * @description
 * A generic signer payload that can be used for serialization between API and signer
 */
class GenericSignerPayload extends types_codec_1.Struct {
    constructor(registry, value) {
        const extensionTypes = (0, util_1.objectSpread)({}, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra());
        super(registry, (0, util_1.objectSpread)({}, extensionTypes, knownTypes), value);
        this.__internal__extraTypes = {};
        const getter = (key) => this.get(key);
        // add all extras that are not in the base types
        for (const [key, type] of Object.entries(extensionTypes)) {
            if (!knownTypes[key]) {
                this.__internal__extraTypes[key] = type;
            }
            (0, util_1.objectProperty)(this, key, getter);
        }
    }
    get address() {
        return this.getT('address');
    }
    get blockHash() {
        return this.getT('blockHash');
    }
    get blockNumber() {
        return this.getT('blockNumber');
    }
    get era() {
        return this.getT('era');
    }
    get genesisHash() {
        return this.getT('genesisHash');
    }
    get method() {
        return this.getT('method');
    }
    get nonce() {
        return this.getT('nonce');
    }
    get runtimeVersion() {
        return this.getT('runtimeVersion');
    }
    get signedExtensions() {
        return this.getT('signedExtensions');
    }
    get tip() {
        return this.getT('tip');
    }
    get version() {
        return this.getT('version');
    }
    /**
     * @description Creates an representation of the structure as an ISignerPayload JSON
     */
    toPayload() {
        const result = {};
        const keys = Object.keys(this.__internal__extraTypes);
        // add any explicit overrides we may have
        for (let i = 0, count = keys.length; i < count; i++) {
            const key = keys[i];
            const value = this.getT(key);
            // Don't include Option.isNone
            if (!(value instanceof types_codec_1.Option) || value.isSome) {
                // NOTE In the spread below we convert (mostly) to Hex to align
                // with the typings. In the case of "unknown" fields, we use the
                // primitive toJSON conversion (which is serializable). Technically
                // we can include isNone in here as well ("null" is allowed), however
                // for empty fields we just skip it completely (historical compat)
                result[key] = value.toJSON();
            }
        }
        return (0, util_1.objectSpread)(result, {
            // the known defaults as managed explicitly and has different
            // formatting in cases, e.g. we mostly expose a hex format here
            address: this.address.toString(),
            blockHash: this.blockHash.toHex(),
            blockNumber: this.blockNumber.toHex(),
            era: this.era.toHex(),
            genesisHash: this.genesisHash.toHex(),
            method: this.method.toHex(),
            nonce: this.nonce.toHex(),
            signedExtensions: this.signedExtensions.map((e) => e.toString()),
            specVersion: this.runtimeVersion.specVersion.toHex(),
            tip: this.tip.toHex(),
            transactionVersion: this.runtimeVersion.transactionVersion.toHex(),
            version: this.version.toNumber()
        });
    }
    /**
     * @description Creates a representation of the payload in raw Exrinsic form
     */
    toRaw() {
        const payload = this.toPayload();
        const data = (0, util_1.u8aToHex)(this.registry
            .createTypeUnsafe('ExtrinsicPayload', [payload, { version: payload.version }])
            // NOTE Explicitly pass the bare flag so the method is encoded un-prefixed (non-decodable, for signing only)
            .toU8a({ method: true }));
        return {
            address: payload.address,
            data,
            type: 'payload'
        };
    }
}
exports.GenericSignerPayload = GenericSignerPayload;


/***/ }),

/***/ 26242:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UNMASK_VERSION = exports.IMMORTAL_ERA = exports.DEFAULT_VERSION = exports.EMPTY_U8A = exports.BIT_UNSIGNED = exports.BIT_SIGNED = void 0;
exports.BIT_SIGNED = 0b10000000;
exports.BIT_UNSIGNED = 0;
exports.EMPTY_U8A = new Uint8Array();
exports.DEFAULT_VERSION = 4;
exports.IMMORTAL_ERA = new Uint8Array([0]);
exports.UNMASK_VERSION = 0b01111111;


/***/ }),

/***/ 781:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericSignerPayload = exports.GenericExtrinsicUnknown = exports.GenericExtrinsicPayloadUnknown = exports.GenericExtrinsicPayload = exports.GenericMortalEra = exports.GenericImmortalEra = exports.GenericExtrinsicEra = exports.GenericExtrinsic = void 0;
const tslib_1 = __nccwpck_require__(19684);
var Extrinsic_js_1 = __nccwpck_require__(89551);
Object.defineProperty(exports, "GenericExtrinsic", ({ enumerable: true, get: function () { return Extrinsic_js_1.GenericExtrinsic; } }));
var ExtrinsicEra_js_1 = __nccwpck_require__(51121);
Object.defineProperty(exports, "GenericExtrinsicEra", ({ enumerable: true, get: function () { return ExtrinsicEra_js_1.GenericExtrinsicEra; } }));
Object.defineProperty(exports, "GenericImmortalEra", ({ enumerable: true, get: function () { return ExtrinsicEra_js_1.ImmortalEra; } }));
Object.defineProperty(exports, "GenericMortalEra", ({ enumerable: true, get: function () { return ExtrinsicEra_js_1.MortalEra; } }));
var ExtrinsicPayload_js_1 = __nccwpck_require__(65583);
Object.defineProperty(exports, "GenericExtrinsicPayload", ({ enumerable: true, get: function () { return ExtrinsicPayload_js_1.GenericExtrinsicPayload; } }));
var ExtrinsicPayloadUnknown_js_1 = __nccwpck_require__(63227);
Object.defineProperty(exports, "GenericExtrinsicPayloadUnknown", ({ enumerable: true, get: function () { return ExtrinsicPayloadUnknown_js_1.GenericExtrinsicPayloadUnknown; } }));
var ExtrinsicUnknown_js_1 = __nccwpck_require__(2552);
Object.defineProperty(exports, "GenericExtrinsicUnknown", ({ enumerable: true, get: function () { return ExtrinsicUnknown_js_1.GenericExtrinsicUnknown; } }));
var SignerPayload_js_1 = __nccwpck_require__(507);
Object.defineProperty(exports, "GenericSignerPayload", ({ enumerable: true, get: function () { return SignerPayload_js_1.GenericSignerPayload; } }));
tslib_1.__exportStar(__nccwpck_require__(19966), exports);


/***/ }),

/***/ 76067:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.emptyCheck = void 0;
exports.emptyCheck = {
    extrinsic: {},
    payload: {}
};


/***/ }),

/***/ 15832:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.expandExtensionTypes = exports.findUnknownExtensions = exports.fallbackExtensions = exports.allExtensions = void 0;
const util_1 = __nccwpck_require__(29795);
const polkadot_js_1 = __nccwpck_require__(61953);
const shell_js_1 = __nccwpck_require__(90601);
const statemint_js_1 = __nccwpck_require__(72437);
const substrate_js_1 = __nccwpck_require__(43449);
exports.allExtensions = (0, util_1.objectSpread)({}, substrate_js_1.substrate, polkadot_js_1.polkadot, shell_js_1.shell, statemint_js_1.statemint);
exports.fallbackExtensions = [
    'CheckVersion',
    'CheckGenesis',
    'CheckEra',
    'CheckNonce',
    'CheckWeight',
    'ChargeTransactionPayment',
    'CheckBlockGasLimit'
];
function findUnknownExtensions(extensions, userExtensions = {}) {
    const names = [...Object.keys(exports.allExtensions), ...Object.keys(userExtensions)];
    return extensions.filter((k) => !names.includes(k));
}
exports.findUnknownExtensions = findUnknownExtensions;
function expandExtensionTypes(extensions, type, userExtensions = {}) {
    return extensions
        // Always allow user extensions first - these should provide overrides
        .map((k) => userExtensions[k] || exports.allExtensions[k])
        .filter((info) => !!info)
        .reduce((result, info) => (0, util_1.objectSpread)(result, info[type]), {});
}
exports.expandExtensionTypes = expandExtensionTypes;


/***/ }),

/***/ 61953:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.polkadot = void 0;
const emptyCheck_js_1 = __nccwpck_require__(76067);
exports.polkadot = {
    LimitParathreadCommits: emptyCheck_js_1.emptyCheck,
    OnlyStakingAndClaims: emptyCheck_js_1.emptyCheck,
    PrevalidateAttests: emptyCheck_js_1.emptyCheck,
    RestrictFunctionality: emptyCheck_js_1.emptyCheck,
    TransactionCallFilter: emptyCheck_js_1.emptyCheck,
    ValidateDoubleVoteReports: emptyCheck_js_1.emptyCheck
};


/***/ }),

/***/ 90601:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.shell = void 0;
const emptyCheck_js_1 = __nccwpck_require__(76067);
exports.shell = {
    DisallowSigned: emptyCheck_js_1.emptyCheck
};


/***/ }),

/***/ 72437:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.statemint = void 0;
exports.statemint = {
    ChargeAssetTxPayment: {
        extrinsic: {
            tip: 'Compact<Balance>',
            // eslint-disable-next-line sort-keys
            assetId: 'Option<AssetId>'
        },
        payload: {}
    }
};


/***/ }),

/***/ 43449:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.substrate = void 0;
const emptyCheck_js_1 = __nccwpck_require__(76067);
const CheckMortality = {
    extrinsic: {
        era: 'ExtrinsicEra'
    },
    payload: {
        blockHash: 'Hash'
    }
};
exports.substrate = {
    ChargeTransactionPayment: {
        extrinsic: {
            tip: 'Compact<Balance>'
        },
        payload: {}
    },
    CheckBlockGasLimit: emptyCheck_js_1.emptyCheck,
    CheckEra: CheckMortality,
    CheckGenesis: {
        extrinsic: {},
        payload: {
            genesisHash: 'Hash'
        }
    },
    CheckMortality,
    CheckNonZeroSender: emptyCheck_js_1.emptyCheck,
    CheckNonce: {
        extrinsic: {
            nonce: 'Compact<Index>'
        },
        payload: {}
    },
    CheckSpecVersion: {
        extrinsic: {},
        payload: {
            specVersion: 'u32'
        }
    },
    CheckTxVersion: {
        extrinsic: {},
        payload: {
            transactionVersion: 'u32'
        }
    },
    CheckVersion: {
        extrinsic: {},
        payload: {
            specVersion: 'u32'
        }
    },
    CheckWeight: emptyCheck_js_1.emptyCheck,
    LockStakingStatus: emptyCheck_js_1.emptyCheck,
    ValidateEquivocationReport: emptyCheck_js_1.emptyCheck
};


/***/ }),

/***/ 77134:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sign = void 0;
function sign(registry, signerPair, u8a, options) {
    const encoded = u8a.length > 256
        ? registry.hash(u8a)
        : u8a;
    return signerPair.sign(encoded, options);
}
exports.sign = sign;


/***/ }),

/***/ 88589:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericExtrinsicV4 = exports.EXTRINSIC_VERSION = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
exports.EXTRINSIC_VERSION = 4;
/**
 * @name GenericExtrinsicV4
 * @description
 * The third generation of compact extrinsics
 */
class GenericExtrinsicV4 extends types_codec_1.Struct {
    constructor(registry, value, { isSigned } = {}) {
        super(registry, {
            signature: 'ExtrinsicSignatureV4',
            // eslint-disable-next-line sort-keys
            method: 'Call'
        }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));
    }
    /** @internal */
    static decodeExtrinsic(registry, value, isSigned = false) {
        if (value instanceof GenericExtrinsicV4) {
            return value;
        }
        else if (value instanceof registry.createClassUnsafe('Call')) {
            return { method: value };
        }
        else if ((0, util_1.isU8a)(value)) {
            // here we decode manually since we need to pull through the version information
            const signature = registry.createTypeUnsafe('ExtrinsicSignatureV4', [value, { isSigned }]);
            const method = registry.createTypeUnsafe('Call', [value.subarray(signature.encodedLength)]);
            return {
                method,
                signature
            };
        }
        return value || {};
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description The [[Call]] this extrinsic wraps
     */
    get method() {
        return this.getT('method');
    }
    /**
     * @description The [[ExtrinsicSignatureV4]]
     */
    get signature() {
        return this.getT('signature');
    }
    /**
     * @description The version for the signature
     */
    get version() {
        return exports.EXTRINSIC_VERSION;
    }
    /**
     * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)
     */
    addSignature(signer, signature, payload) {
        this.signature.addSignature(signer, signature, payload);
        return this;
    }
    /**
     * @description Sign the extrinsic with a specific keypair
     */
    sign(account, options) {
        this.signature.sign(this.method, account, options);
        return this;
    }
    /**
     * @describe Adds a fake signature to the extrinsic
     */
    signFake(signer, options) {
        this.signature.signFake(this.method, signer, options);
        return this;
    }
}
exports.GenericExtrinsicV4 = GenericExtrinsicV4;


/***/ }),

/***/ 66486:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericExtrinsicPayloadV4 = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const util_js_1 = __nccwpck_require__(77134);
/**
 * @name GenericExtrinsicPayloadV4
 * @description
 * A signing payload for an [[Extrinsic]]. For the final encoding, it is
 * variable length based on the contents included
 */
class GenericExtrinsicPayloadV4 extends types_codec_1.Struct {
    constructor(registry, value) {
        super(registry, (0, util_1.objectSpread)({ method: 'Bytes' }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), value);
        // Do detection for the type of extrinsic, in the case of MultiSignature
        // this is an enum, in the case of AnySignature, this is a Hash only
        // (which may be 64 or 65 bytes)
        this.__internal__signOptions = {
            withType: registry.createTypeUnsafe('ExtrinsicSignature', []) instanceof types_codec_1.Enum
        };
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        return super.inspect({ method: true });
    }
    /**
     * @description The block [[BlockHash]] the signature applies to (mortal/immortal)
     */
    get blockHash() {
        return this.getT('blockHash');
    }
    /**
     * @description The [[ExtrinsicEra]]
     */
    get era() {
        return this.getT('era');
    }
    /**
     * @description The genesis [[BlockHash]] the signature applies to (mortal/immortal)
     */
    get genesisHash() {
        return this.getT('genesisHash');
    }
    /**
     * @description The [[Bytes]] contained in the payload
     */
    get method() {
        return this.getT('method');
    }
    /**
     * @description The [[Index]]
     */
    get nonce() {
        return this.getT('nonce');
    }
    /**
     * @description The specVersion for this signature
     */
    get specVersion() {
        return this.getT('specVersion');
    }
    /**
     * @description The tip [[Balance]]
     */
    get tip() {
        return this.getT('tip');
    }
    /**
     * @description The transactionVersion for this signature
     */
    get transactionVersion() {
        return this.getT('transactionVersion');
    }
    /**
     * @description The (optional) asset id for this signature for chains that support transaction fees in assets
     */
    get assetId() {
        return this.getT('assetId');
    }
    /**
     * @description Sign the payload with the keypair
     */
    sign(signerPair) {
        // NOTE The `toU8a({ method: true })` argument is absolutely critical, we
        // don't want the method (Bytes) to have the length prefix included. This
        // means that the data-as-signed is un-decodable, but is also doesn't need
        // the extra information, only the pure data (and is not decoded) ...
        // The same applies to V1..V3, if we have a V5, carry this comment
        return (0, util_js_1.sign)(this.registry, signerPair, this.toU8a({ method: true }), this.__internal__signOptions);
    }
}
exports.GenericExtrinsicPayloadV4 = GenericExtrinsicPayloadV4;


/***/ }),

/***/ 13042:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericExtrinsicSignatureV4 = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const constants_js_1 = __nccwpck_require__(26242);
const ExtrinsicPayload_js_1 = __nccwpck_require__(66486);
const FAKE_SIGNATURE = new Uint8Array(256).fill(1);
function toAddress(registry, address) {
    return registry.createTypeUnsafe('Address', [(0, util_1.isU8a)(address) ? (0, util_1.u8aToHex)(address) : address]);
}
/**
 * @name GenericExtrinsicSignatureV4
 * @description
 * A container for the [[Signature]] associated with a specific [[Extrinsic]]
 */
class GenericExtrinsicSignatureV4 extends types_codec_1.Struct {
    constructor(registry, value, { isSigned } = {}) {
        const signTypes = registry.getSignedExtensionTypes();
        super(registry, (0, util_1.objectSpread)(
        // eslint-disable-next-line sort-keys
        { signer: 'Address', signature: 'ExtrinsicSignature' }, signTypes), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));
        this.__internal__signKeys = Object.keys(signTypes);
        (0, util_1.objectProperties)(this, this.__internal__signKeys, (k) => this.get(k));
    }
    /** @internal */
    static decodeExtrinsicSignature(value, isSigned = false) {
        if (!value) {
            return constants_js_1.EMPTY_U8A;
        }
        else if (value instanceof GenericExtrinsicSignatureV4) {
            return value;
        }
        return isSigned
            ? value
            : constants_js_1.EMPTY_U8A;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        return this.isSigned
            ? super.encodedLength
            : 0;
    }
    /**
     * @description `true` if the signature is valid
     */
    get isSigned() {
        return !this.signature.isEmpty;
    }
    /**
     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to
     */
    get era() {
        return this.getT('era');
    }
    /**
     * @description The [[Index]] for the signature
     */
    get nonce() {
        return this.getT('nonce');
    }
    /**
     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]
     */
    get signature() {
        // the second case here is when we don't have an enum signature, treat as raw
        return (this.multiSignature.value || this.multiSignature);
    }
    /**
     * @description The raw [[ExtrinsicSignature]]
     */
    get multiSignature() {
        return this.getT('signature');
    }
    /**
     * @description The [[Address]] that signed
     */
    get signer() {
        return this.getT('signer');
    }
    /**
     * @description The [[Balance]] tip
     */
    get tip() {
        return this.getT('tip');
    }
    _injectSignature(signer, signature, payload) {
        // use the fields exposed to guide the getters
        for (let i = 0, count = this.__internal__signKeys.length; i < count; i++) {
            const k = this.__internal__signKeys[i];
            const v = payload.get(k);
            if (!(0, util_1.isUndefined)(v)) {
                this.set(k, v);
            }
        }
        // additional fields (exposed in struct itself)
        this.set('signer', signer);
        this.set('signature', signature);
        return this;
    }
    /**
     * @description Adds a raw signature
     */
    addSignature(signer, signature, payload) {
        return this._injectSignature(toAddress(this.registry, signer), this.registry.createTypeUnsafe('ExtrinsicSignature', [signature]), new ExtrinsicPayload_js_1.GenericExtrinsicPayloadV4(this.registry, payload));
    }
    /**
     * @description Creates a payload from the supplied options
     */
    createPayload(method, options) {
        const { era, runtimeVersion: { specVersion, transactionVersion } } = options;
        return new ExtrinsicPayload_js_1.GenericExtrinsicPayloadV4(this.registry, (0, util_1.objectSpread)({}, options, {
            era: era || constants_js_1.IMMORTAL_ERA,
            method: method.toHex(),
            specVersion,
            transactionVersion
        }));
    }
    /**
     * @description Generate a payload and applies the signature from a keypair
     */
    sign(method, account, options) {
        if (!account?.addressRaw) {
            throw new Error(`Expected a valid keypair for signing, found ${(0, util_1.stringify)(account)}`);
        }
        const payload = this.createPayload(method, options);
        return this._injectSignature(toAddress(this.registry, account.addressRaw), this.registry.createTypeUnsafe('ExtrinsicSignature', [payload.sign(account)]), payload);
    }
    /**
     * @description Generate a payload and applies a fake signature
     */
    signFake(method, address, options) {
        if (!address) {
            throw new Error(`Expected a valid address for signing, found ${(0, util_1.stringify)(address)}`);
        }
        const payload = this.createPayload(method, options);
        return this._injectSignature(toAddress(this.registry, address), this.registry.createTypeUnsafe('ExtrinsicSignature', [FAKE_SIGNATURE]), payload);
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        return this.isSigned
            ? super.toU8a(isBare)
            : constants_js_1.EMPTY_U8A;
    }
}
exports.GenericExtrinsicSignatureV4 = GenericExtrinsicSignatureV4;


/***/ }),

/***/ 19966:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericExtrinsicSignatureV4 = exports.GenericExtrinsicPayloadV4 = exports.GenericExtrinsicV4 = void 0;
var Extrinsic_js_1 = __nccwpck_require__(88589);
Object.defineProperty(exports, "GenericExtrinsicV4", ({ enumerable: true, get: function () { return Extrinsic_js_1.GenericExtrinsicV4; } }));
var ExtrinsicPayload_js_1 = __nccwpck_require__(66486);
Object.defineProperty(exports, "GenericExtrinsicPayloadV4", ({ enumerable: true, get: function () { return ExtrinsicPayload_js_1.GenericExtrinsicPayloadV4; } }));
var ExtrinsicSignature_js_1 = __nccwpck_require__(13042);
Object.defineProperty(exports, "GenericExtrinsicSignatureV4", ({ enumerable: true, get: function () { return ExtrinsicSignature_js_1.GenericExtrinsicSignatureV4; } }));


/***/ }),

/***/ 47963:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericAccountId33 = exports.GenericAccountId = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
/** @internal */
function decodeAccountId(value) {
    if ((0, util_1.isU8a)(value) || Array.isArray(value)) {
        return (0, util_1.u8aToU8a)(value);
    }
    else if (!value) {
        return new Uint8Array();
    }
    else if ((0, util_1.isHex)(value)) {
        return (0, util_1.hexToU8a)(value);
    }
    else if ((0, util_1.isString)(value)) {
        return (0, util_crypto_1.decodeAddress)(value.toString());
    }
    throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof value}`);
}
class BaseAccountId extends types_codec_1.U8aFixed {
    constructor(registry, allowedBits = 256 | 264, value) {
        const decoded = decodeAccountId(value);
        const decodedBits = decoded.length * 8;
        // Part of stream containing >= 32 bytes or a all empty (defaults)
        if (decodedBits < allowedBits && decoded.some((b) => b)) {
            throw new Error(`Invalid AccountId provided, expected ${allowedBits >> 3} bytes, found ${decoded.length}`);
        }
        super(registry, decoded, allowedBits);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        return super.eq(decodeAccountId(other));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.toString();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return (0, util_crypto_1.encodeAddress)(this, this.registry.chainSS58);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'AccountId';
    }
}
/**
 * @name GenericAccountId
 * @description
 * A wrapper around an AccountId/PublicKey representation. Since we are dealing with
 * underlying PublicKeys (32 bytes in length), we extend from U8aFixed which is
 * just a Uint8Array wrapper with a fixed length.
 */
class GenericAccountId extends BaseAccountId {
    constructor(registry, value) {
        super(registry, 256, value);
    }
}
exports.GenericAccountId = GenericAccountId;
class GenericAccountId33 extends BaseAccountId {
    constructor(registry, value) {
        super(registry, 264, value);
    }
}
exports.GenericAccountId33 = GenericAccountId33;


/***/ }),

/***/ 97414:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericAccountIndex = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const PREFIX_1BYTE = 0xef;
const PREFIX_2BYTE = 0xfc;
const PREFIX_4BYTE = 0xfd;
const PREFIX_8BYTE = 0xfe;
const MAX_1BYTE = new util_1.BN(PREFIX_1BYTE);
const MAX_2BYTE = new util_1.BN(1).shln(16);
const MAX_4BYTE = new util_1.BN(1).shln(32);
/** @internal */
function decodeAccountIndex(value) {
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    if (value instanceof GenericAccountIndex) {
        // `value.toBn()` on AccountIndex returns a pure BN (i.e. not an
        // AccountIndex), which has the initial `toString()` implementation.
        return value.toBn();
    }
    else if ((0, util_1.isBn)(value) || (0, util_1.isNumber)(value) || (0, util_1.isHex)(value) || (0, util_1.isU8a)(value) || (0, util_1.isBigInt)(value)) {
        return value;
    }
    return decodeAccountIndex((0, util_crypto_1.decodeAddress)(value));
}
/**
 * @name GenericAccountIndex
 * @description
 * A wrapper around an AccountIndex, which is a shortened, variable-length encoding
 * for an Account. We extends from [[U32]] to provide the number-like properties.
 */
class GenericAccountIndex extends types_codec_1.u32 {
    constructor(registry, value = new util_1.BN(0)) {
        super(registry, decodeAccountIndex(value));
    }
    static calcLength(_value) {
        const value = (0, util_1.bnToBn)(_value);
        if (value.lte(MAX_1BYTE)) {
            return 1;
        }
        else if (value.lt(MAX_2BYTE)) {
            return 2;
        }
        else if (value.lt(MAX_4BYTE)) {
            return 4;
        }
        return 8;
    }
    static readLength(input) {
        const first = input[0];
        if (first === PREFIX_2BYTE) {
            return [1, 2];
        }
        else if (first === PREFIX_4BYTE) {
            return [1, 4];
        }
        else if (first === PREFIX_8BYTE) {
            return [1, 8];
        }
        return [0, 1];
    }
    static writeLength(input) {
        switch (input.length) {
            case 2: return new Uint8Array([PREFIX_2BYTE]);
            case 4: return new Uint8Array([PREFIX_4BYTE]);
            case 8: return new Uint8Array([PREFIX_8BYTE]);
            default: return new Uint8Array([]);
        }
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */
    eq(other) {
        // shortcut for BN or Number, don't create an object
        if ((0, util_1.isBn)(other) || (0, util_1.isNumber)(other)) {
            return super.eq(other);
        }
        // convert and compare
        return super.eq(this.registry.createTypeUnsafe('AccountIndex', [other]));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        return this.toString();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        const length = GenericAccountIndex.calcLength(this);
        return (0, util_crypto_1.encodeAddress)(this.toU8a().subarray(0, length), this.registry.chainSS58);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'AccountIndex';
    }
}
exports.GenericAccountIndex = GenericAccountIndex;


/***/ }),

/***/ 20552:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericBlock = void 0;
const types_codec_1 = __nccwpck_require__(2997);
/**
 * @name GenericBlock
 * @description
 * A block encoded with header and extrinsics
 */
class GenericBlock extends types_codec_1.Struct {
    constructor(registry, value) {
        super(registry, {
            header: 'Header',
            // eslint-disable-next-line sort-keys
            extrinsics: 'Vec<Extrinsic>'
        }, value);
    }
    /**
     * @description Encodes a content [[Hash]] for the block
     */
    get contentHash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description The [[Extrinsic]] contained in the block
     */
    get extrinsics() {
        return this.getT('extrinsics');
    }
    /**
     * @description Block/header [[Hash]]
     */
    get hash() {
        return this.header.hash;
    }
    /**
     * @description The [[Header]] of the block
     */
    get header() {
        return this.getT('header');
    }
}
exports.GenericBlock = GenericBlock;


/***/ }),

/***/ 14002:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericCall = exports.GenericCallIndex = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
/**
 * Get a mapping of `argument name -> argument type` for the function, from
 * its metadata.
 *
 * @param meta - The function metadata used to get the definition.
 * @internal
 */
function getArgsDef(registry, meta) {
    return meta.fields.reduce((result, { name, type }, index) => {
        result[name.unwrapOr(`param${index}`).toString()] = registry.createLookupType(type);
        return result;
    }, {});
}
/** @internal */
function decodeCallViaObject(registry, value, _meta) {
    // we only pass args/methodsIndex out
    const { args, callIndex } = value;
    // Get the correct lookupIndex
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    const lookupIndex = callIndex instanceof GenericCallIndex
        ? callIndex.toU8a()
        : callIndex;
    // Find metadata with callIndex
    const meta = _meta || registry.findMetaCall(lookupIndex).meta;
    return {
        args,
        argsDef: getArgsDef(registry, meta),
        callIndex,
        meta
    };
}
/** @internal */
function decodeCallViaU8a(registry, value, _meta) {
    // We need 2 bytes for the callIndex
    const callIndex = registry.firstCallIndex.slice();
    callIndex.set(value.subarray(0, 2), 0);
    // Find metadata with callIndex
    const meta = _meta || registry.findMetaCall(callIndex).meta;
    return {
        args: value.subarray(2),
        argsDef: getArgsDef(registry, meta),
        callIndex,
        meta
    };
}
/**
 * Decode input to pass into constructor.
 *
 * @param value - Value to decode, one of:
 * - hex
 * - Uint8Array
 * - {@see DecodeMethodInput}
 * @param _meta - Metadata to use, so that `injectMethods` lookup is not
 * necessary.
 * @internal
 */
function decodeCall(registry, value = new Uint8Array(), _meta) {
    if ((0, util_1.isU8a)(value) || (0, util_1.isHex)(value)) {
        return decodeCallViaU8a(registry, (0, util_1.u8aToU8a)(value), _meta);
    }
    else if ((0, util_1.isObject)(value) && value.callIndex && value.args) {
        return decodeCallViaObject(registry, value, _meta);
    }
    throw new Error(`Call: Cannot decode value '${value}' of type ${typeof value}`);
}
/**
 * @name GenericCallIndex
 * @description
 * A wrapper around the `[sectionIndex, methodIndex]` value that uniquely identifies a method
 */
class GenericCallIndex extends types_codec_1.U8aFixed {
    constructor(registry, value) {
        super(registry, value, 16);
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return this.toHex();
    }
}
exports.GenericCallIndex = GenericCallIndex;
/**
 * @name GenericCall
 * @description
 * Extrinsic function descriptor
 */
class GenericCall extends types_codec_1.Struct {
    constructor(registry, value, meta) {
        const decoded = decodeCall(registry, value, meta);
        try {
            super(registry, {
                callIndex: GenericCallIndex,
                // eslint-disable-next-line sort-keys
                args: types_codec_1.Struct.with(decoded.argsDef)
            }, decoded);
        }
        catch (error) {
            let method = 'unknown.unknown';
            try {
                const c = registry.findMetaCall(decoded.callIndex);
                method = `${c.section}.${c.method}`;
            }
            catch {
                // ignore
            }
            throw new Error(`Call: failed decoding ${method}:: ${error.message}`);
        }
        this._meta = decoded.meta;
    }
    /**
     * @description The arguments for the function call
     */
    get args() {
        return [...this.getT('args').values()];
    }
    /**
     * @description The argument definitions
     */
    get argsDef() {
        return getArgsDef(this.registry, this.meta);
    }
    /**
     * @description The argument entries
     */
    get argsEntries() {
        return [...this.getT('args').entries()];
    }
    /**
     * @description The encoded `[sectionIndex, methodIndex]` identifier
     */
    get callIndex() {
        return this.getT('callIndex').toU8a();
    }
    /**
     * @description The encoded data
     */
    get data() {
        return this.getT('args').toU8a();
    }
    /**
     * @description The [[FunctionMetadata]]
     */
    get meta() {
        return this._meta;
    }
    /**
     * @description Returns the name of the method
     */
    get method() {
        return this.registry.findMetaCall(this.callIndex).method;
    }
    /**
     * @description Returns the module containing the method
     */
    get section() {
        return this.registry.findMetaCall(this.callIndex).section;
    }
    /**
     * @description Checks if the source matches this in type
     */
    is(other) {
        return other.callIndex[0] === this.callIndex[0] && other.callIndex[1] === this.callIndex[1];
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExpanded) {
        let call;
        try {
            call = this.registry.findMetaCall(this.callIndex);
        }
        catch {
            // swallow
        }
        return (0, util_1.objectSpread)({
            args: this.argsEntries.reduce((args, [n, a]) => (0, util_1.objectSpread)(args, { [n]: a.toHuman(isExpanded) }), {}),
            method: call?.method,
            section: call?.section
        }, isExpanded && call
            ? { docs: call.meta.docs.map((d) => d.toString()) }
            : null);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Call';
    }
}
exports.GenericCall = GenericCall;


/***/ }),

/***/ 14977:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericChainProperties = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
function createValue(registry, type, value, asArray = true) {
    // We detect codec here as well - when found, generally this is constructed from itself
    if (value && (0, util_1.isFunction)(value.unwrapOrDefault)) {
        return value;
    }
    return registry.createTypeUnsafe(type, [
        asArray
            ? (0, util_1.isNull)(value) || (0, util_1.isUndefined)(value)
                ? null
                : Array.isArray(value)
                    ? value
                    : [value]
            : value
    ]);
}
function decodeValue(registry, key, value) {
    return key === 'ss58Format'
        ? createValue(registry, 'Option<u32>', value, false)
        : key === 'tokenDecimals'
            ? createValue(registry, 'Option<Vec<u32>>', value)
            : key === 'tokenSymbol'
                ? createValue(registry, 'Option<Vec<Text>>', value)
                : key === 'isEthereum'
                    ? createValue(registry, 'Bool', value, false)
                    : value;
}
function decode(registry, value) {
    return (
    // allow decoding from a map as well (ourselves)
    value && (0, util_1.isFunction)(value.entries)
        ? [...value.entries()]
        : Object.entries(value || {})).reduce((all, [key, value]) => {
        all[key] = decodeValue(registry, key, value);
        return all;
    }, {
        isEthereum: registry.createTypeUnsafe('Bool', []),
        ss58Format: registry.createTypeUnsafe('Option<u32>', []),
        tokenDecimals: registry.createTypeUnsafe('Option<Vec<u32>>', []),
        tokenSymbol: registry.createTypeUnsafe('Option<Vec<Text>>', [])
    });
}
class GenericChainProperties extends types_codec_1.Json {
    constructor(registry, value) {
        super(registry, decode(registry, value));
    }
    /**
     * @description The chain uses Ethereum addresses
     */
    get isEthereum() {
        return this.getT('isEthereum');
    }
    /**
     * @description The chain ss58Format
     */
    get ss58Format() {
        return this.getT('ss58Format');
    }
    /**
     * @description The decimals for each of the tokens
     */
    get tokenDecimals() {
        return this.getT('tokenDecimals');
    }
    /**
     * @description The symbols for the tokens
     */
    get tokenSymbol() {
        return this.getT('tokenSymbol');
    }
}
exports.GenericChainProperties = GenericChainProperties;


/***/ }),

/***/ 87275:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericConsensusEngineId = exports.CID_NMBS = exports.CID_POW = exports.CID_GRPA = exports.CID_BABE = exports.CID_AURA = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
exports.CID_AURA = (0, util_1.stringToU8a)('aura');
exports.CID_BABE = (0, util_1.stringToU8a)('BABE');
exports.CID_GRPA = (0, util_1.stringToU8a)('FRNK');
exports.CID_POW = (0, util_1.stringToU8a)('pow_');
exports.CID_NMBS = (0, util_1.stringToU8a)('nmbs');
function getAuraAuthor(registry, bytes, sessionValidators) {
    return sessionValidators[registry.createTypeUnsafe('RawAuraPreDigest', [bytes.toU8a(true)])
        .slotNumber
        .mod(new util_1.BN(sessionValidators.length))
        .toNumber()];
}
function getBabeAuthor(registry, bytes, sessionValidators) {
    const digest = registry.createTypeUnsafe('RawBabePreDigestCompat', [bytes.toU8a(true)]);
    return sessionValidators[digest.value.toNumber()];
}
function getBytesAsAuthor(registry, bytes) {
    return registry.createTypeUnsafe('AccountId', [bytes]);
}
/**
 * @name GenericConsensusEngineId
 * @description
 * A 4-byte identifier identifying the engine
 */
class GenericConsensusEngineId extends types_codec_1.U8aFixed {
    constructor(registry, value) {
        super(registry, (0, util_1.isNumber)(value)
            ? (0, util_1.bnToU8a)(value, { isLe: false })
            : value, 32);
    }
    /**
     * @description `true` if the engine matches aura
     */
    get isAura() {
        return this.eq(exports.CID_AURA);
    }
    /**
     * @description `true` is the engine matches babe
     */
    get isBabe() {
        return this.eq(exports.CID_BABE);
    }
    /**
     * @description `true` is the engine matches grandpa
     */
    get isGrandpa() {
        return this.eq(exports.CID_GRPA);
    }
    /**
     * @description `true` is the engine matches pow
     */
    get isPow() {
        return this.eq(exports.CID_POW);
    }
    /**
     * @description `true` is the engine matches nimbus
     */
    get isNimbus() {
        return this.eq(exports.CID_NMBS);
    }
    /**
     * @description From the input bytes, decode into an author
     */
    extractAuthor(bytes, sessionValidators) {
        if (sessionValidators?.length) {
            if (this.isAura) {
                return getAuraAuthor(this.registry, bytes, sessionValidators);
            }
            else if (this.isBabe) {
                return getBabeAuthor(this.registry, bytes, sessionValidators);
            }
        }
        // For pow & Nimbus, the bytes are the actual author
        if (this.isPow || this.isNimbus) {
            return getBytesAsAuthor(this.registry, bytes);
        }
        return undefined;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman() {
        return this.toString();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'ConsensusEngineId';
    }
    /**
     * @description Override the default toString to return a 4-byte string
     */
    toString() {
        return this.isAscii
            ? (0, util_1.u8aToString)(this)
            : (0, util_1.u8aToHex)(this);
    }
}
exports.GenericConsensusEngineId = GenericConsensusEngineId;


/***/ }),

/***/ 7977:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericEvent = exports.GenericEventData = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
/** @internal */
function decodeEvent(registry, value) {
    if (!value?.length) {
        return { DataType: types_codec_1.Null };
    }
    const index = value.subarray(0, 2);
    return {
        DataType: registry.findMetaEvent(index),
        value: {
            data: value.subarray(2),
            index
        }
    };
}
/**
 * @name GenericEventData
 * @description
 * Wrapper for the actual data that forms part of an [[Event]]
 */
class GenericEventData extends types_codec_1.Tuple {
    constructor(registry, value, meta, section = '<unknown>', method = '<unknown>') {
        const fields = meta?.fields || [];
        super(registry, fields.map(({ type }) => registry.createLookupType(type)), value);
        this.__internal__names = null;
        this.__internal__meta = meta;
        this.__internal__method = method;
        this.__internal__section = section;
        this.__internal__typeDef = fields.map(({ type }) => registry.lookup.getTypeDef(type));
        const names = fields
            .map(({ name }) => registry.lookup.sanitizeField(name)[0])
            .filter((n) => !!n);
        if (names.length === fields.length) {
            this.__internal__names = names;
            (0, util_1.objectProperties)(this, names, (_, i) => this[i]);
        }
    }
    /**
     * @description The wrapped [[EventMetadata]]
     */
    get meta() {
        return this.__internal__meta;
    }
    /**
     * @description The method as a string
     */
    get method() {
        return this.__internal__method;
    }
    /**
     * @description The field names (as available)
     */
    get names() {
        return this.__internal__names;
    }
    /**
     * @description The section as a string
     */
    get section() {
        return this.__internal__section;
    }
    /**
     * @description The [[TypeDef]] for this event
     */
    get typeDef() {
        return this.__internal__typeDef;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExtended) {
        if (this.__internal__names !== null) {
            const json = {};
            for (let i = 0, count = this.__internal__names.length; i < count; i++) {
                json[this.__internal__names[i]] = this[i].toHuman(isExtended);
            }
            return json;
        }
        return super.toHuman(isExtended);
    }
}
exports.GenericEventData = GenericEventData;
/**
 * @name GenericEvent
 * @description
 * A representation of a system event. These are generated via the [[Metadata]] interfaces and
 * specific to a specific Substrate runtime
 */
class GenericEvent extends types_codec_1.Struct {
    // Currently we _only_ decode from Uint8Array, since we expect it to
    // be used via EventRecord
    constructor(registry, _value) {
        const { DataType, value } = decodeEvent(registry, _value);
        super(registry, {
            index: 'EventId',
            // eslint-disable-next-line sort-keys
            data: DataType
        }, value);
    }
    /**
     * @description The wrapped [[EventData]]
     */
    get data() {
        return this.getT('data');
    }
    /**
     * @description The [[EventId]], identifying the raw event
     */
    get index() {
        return this.getT('index');
    }
    /**
     * @description The [[EventMetadata]] with the documentation
     */
    get meta() {
        return this.data.meta;
    }
    /**
     * @description The method string identifying the event
     */
    get method() {
        return this.data.method;
    }
    /**
     * @description The section string identifying the event
     */
    get section() {
        return this.data.section;
    }
    /**
     * @description The [[TypeDef]] for the event
     */
    get typeDef() {
        return this.data.typeDef;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExpanded) {
        return (0, util_1.objectSpread)({
            method: this.method,
            section: this.section
        }, isExpanded
            ? { docs: this.meta.docs.map((d) => d.toString()) }
            : null, super.toHuman(isExpanded));
    }
}
exports.GenericEvent = GenericEvent;


/***/ }),

/***/ 34901:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericLookupSource = exports.ACCOUNT_ID_PREFIX = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const AccountId_js_1 = __nccwpck_require__(47963);
const AccountIndex_js_1 = __nccwpck_require__(97414);
exports.ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);
/** @internal */
function decodeString(registry, value) {
    const decoded = (0, util_crypto_1.decodeAddress)(value);
    return decoded.length === 32
        ? registry.createTypeUnsafe('AccountId', [decoded])
        : registry.createTypeUnsafe('AccountIndex', [(0, util_1.u8aToBn)(decoded)]);
}
/** @internal */
function decodeU8a(registry, value) {
    // This allows us to instantiate an address with a raw publicKey. Do this first before
    // we checking the first byte, otherwise we may split an already-existent valid address
    if (value.length === 32) {
        return registry.createTypeUnsafe('AccountId', [value]);
    }
    else if (value[0] === 0xff) {
        return registry.createTypeUnsafe('AccountId', [value.subarray(1)]);
    }
    const [offset, length] = AccountIndex_js_1.GenericAccountIndex.readLength(value);
    return registry.createTypeUnsafe('AccountIndex', [(0, util_1.u8aToBn)(value.subarray(offset, offset + length))]);
}
/** @internal */
function decodeAddressOrIndex(registry, value) {
    return value instanceof GenericLookupSource
        ? value.inner
        : value instanceof AccountId_js_1.GenericAccountId || value instanceof AccountIndex_js_1.GenericAccountIndex
            ? value
            : (0, util_1.isBn)(value) || (0, util_1.isNumber)(value) || (0, util_1.isBigInt)(value)
                ? registry.createTypeUnsafe('AccountIndex', [value])
                : Array.isArray(value) || (0, util_1.isHex)(value) || (0, util_1.isU8a)(value)
                    ? decodeU8a(registry, (0, util_1.u8aToU8a)(value))
                    : decodeString(registry, value);
}
/**
 * @name LookupSource
 * @description
 * A wrapper around an AccountId and/or AccountIndex that is encoded with a prefix.
 * Since we are dealing with underlying publicKeys (or shorter encoded addresses),
 * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address
 * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec
 */
class GenericLookupSource extends types_codec_1.AbstractBase {
    constructor(registry, value = new Uint8Array()) {
        super(registry, decodeAddressOrIndex(registry, value));
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */
    get encodedLength() {
        const rawLength = this._rawLength;
        return rawLength + (
        // for 1 byte AccountIndexes, we are not adding a specific prefix
        rawLength > 1
            ? 1
            : 0);
    }
    /**
     * @description The length of the raw value, either AccountIndex or AccountId
     */
    get _rawLength() {
        return this.inner instanceof AccountIndex_js_1.GenericAccountIndex
            ? AccountIndex_js_1.GenericAccountIndex.calcLength(this.inner)
            : this.inner.encodedLength;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        const value = this.inner.toU8a().subarray(0, this._rawLength);
        return {
            outer: [
                new Uint8Array(this.inner instanceof AccountIndex_js_1.GenericAccountIndex
                    ? AccountIndex_js_1.GenericAccountIndex.writeLength(value)
                    : exports.ACCOUNT_ID_PREFIX),
                value
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */
    toHex() {
        return (0, util_1.u8aToHex)(this.toU8a());
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Address';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */
    toU8a(isBare) {
        const encoded = this.inner.toU8a().subarray(0, this._rawLength);
        return isBare
            ? encoded
            : (0, util_1.u8aConcat)(this.inner instanceof AccountIndex_js_1.GenericAccountIndex
                ? AccountIndex_js_1.GenericAccountIndex.writeLength(encoded)
                : exports.ACCOUNT_ID_PREFIX, encoded);
    }
}
exports.GenericLookupSource = GenericLookupSource;


/***/ }),

/***/ 23795:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericMultiAddress = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const AccountId_js_1 = __nccwpck_require__(47963);
const AccountIndex_js_1 = __nccwpck_require__(97414);
function decodeU8a(registry, u8a) {
    if ([0, 32].includes(u8a.length)) {
        return { Id: u8a };
    }
    else if (u8a.length === 20) {
        return { Address20: u8a };
    }
    else if (u8a.length <= 8) {
        return { Index: registry.createTypeUnsafe('AccountIndex', [u8a]).toNumber() };
    }
    return u8a;
}
function decodeMultiAny(registry, value) {
    if (value instanceof AccountId_js_1.GenericAccountId) {
        return { Id: value };
    }
    else if ((0, util_1.isU8a)(value)) {
        // NOTE This is after the AccountId check (which is U8a)
        return decodeU8a(registry, value);
    }
    else if (value instanceof GenericMultiAddress) {
        return value;
    }
    else if (value instanceof AccountIndex_js_1.GenericAccountIndex || (0, util_1.isBn)(value) || (0, util_1.isNumber)(value)) {
        return { Index: (0, util_1.isNumber)(value) ? value : value.toNumber() };
    }
    else if ((0, util_1.isString)(value)) {
        return decodeU8a(registry, (0, util_crypto_1.decodeAddress)(value.toString()));
    }
    return value;
}
class GenericMultiAddress extends types_codec_1.Enum {
    constructor(registry, value) {
        super(registry, {
            Id: 'AccountId',
            Index: 'Compact<AccountIndex>',
            Raw: 'Bytes',
            // eslint-disable-next-line sort-keys
            Address32: 'H256',
            // eslint-disable-next-line sort-keys
            Address20: 'H160'
        }, decodeMultiAny(registry, value));
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */
    inspect() {
        const { inner, outer = [] } = this.inner.inspect();
        return {
            inner,
            outer: [new Uint8Array([this.index]), ...outer]
        };
    }
    /**
     * @description Returns the string representation of the value
     */
    toString() {
        return this.value.toString();
    }
}
exports.GenericMultiAddress = GenericMultiAddress;


/***/ }),

/***/ 74544:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericVote = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const AYE_BITS = 0b10000000;
const NAY_BITS = 0b00000000;
const CON_MASK = 0b01111111;
const DEF_CONV = 0b00000000; // the default conviction, None
/** @internal */
function decodeVoteBool(value) {
    return value
        ? new Uint8Array([AYE_BITS | DEF_CONV])
        : new Uint8Array([NAY_BITS]);
}
/** @internal */
function decodeVoteU8a(value) {
    return value.length
        ? value.subarray(0, 1)
        : new Uint8Array([NAY_BITS]);
}
/** @internal */
function decodeVoteType(registry, value) {
    return new Uint8Array([
        (new types_codec_1.Bool(registry, value.aye).isTrue
            ? AYE_BITS
            : NAY_BITS) |
            registry.createTypeUnsafe('Conviction', [value.conviction || DEF_CONV]).index
    ]);
}
/** @internal */
function decodeVote(registry, value) {
    if ((0, util_1.isU8a)(value)) {
        return decodeVoteU8a(value);
    }
    else if ((0, util_1.isUndefined)(value) || value instanceof Boolean || (0, util_1.isBoolean)(value)) {
        return decodeVoteBool(new types_codec_1.Bool(registry, value).isTrue);
    }
    else if ((0, util_1.isNumber)(value)) {
        return decodeVoteBool(value < 0);
    }
    return decodeVoteType(registry, value);
}
/**
 * @name GenericVote
 * @description
 * A number of lock periods, plus a vote, one way or the other.
 */
class GenericVote extends types_codec_1.U8aFixed {
    constructor(registry, value) {
        // decoded is just 1 byte
        // Aye: Most Significant Bit
        // Conviction: 0000 - 0101
        const decoded = decodeVote(registry, value);
        super(registry, decoded, 8);
        this.__internal__aye = (decoded[0] & AYE_BITS) === AYE_BITS;
        this.__internal__conviction = this.registry.createTypeUnsafe('Conviction', [decoded[0] & CON_MASK]);
    }
    /**
     * @description returns a V2 conviction
     */
    get conviction() {
        return this.__internal__conviction;
    }
    /**
     * @description true if the wrapped value is a positive vote
     */
    get isAye() {
        return this.__internal__aye;
    }
    /**
     * @description true if the wrapped value is a negative vote
     */
    get isNay() {
        return !this.isAye;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */
    toHuman(isExpanded) {
        return {
            conviction: this.conviction.toHuman(isExpanded),
            vote: this.isAye ? 'Aye' : 'Nay'
        };
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */
    toPrimitive() {
        return {
            aye: this.isAye,
            conviction: this.conviction.toPrimitive()
        };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */
    toRawType() {
        return 'Vote';
    }
}
exports.GenericVote = GenericVote;


/***/ }),

/***/ 37449:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GenericVote = exports.GenericMultiAddress = exports.GenericAddress = exports.GenericLookupSource = exports.GenericEventData = exports.GenericEvent = exports.GenericConsensusEngineId = exports.GenericChainProperties = exports.GenericCall = exports.GenericBlock = exports.GenericAccountIndex = exports.GenericAccountId33 = exports.GenericAccountId32 = exports.GenericAccountId = void 0;
const tslib_1 = __nccwpck_require__(19684);
var AccountId_js_1 = __nccwpck_require__(47963);
Object.defineProperty(exports, "GenericAccountId", ({ enumerable: true, get: function () { return AccountId_js_1.GenericAccountId; } }));
Object.defineProperty(exports, "GenericAccountId32", ({ enumerable: true, get: function () { return AccountId_js_1.GenericAccountId; } }));
Object.defineProperty(exports, "GenericAccountId33", ({ enumerable: true, get: function () { return AccountId_js_1.GenericAccountId33; } }));
var AccountIndex_js_1 = __nccwpck_require__(97414);
Object.defineProperty(exports, "GenericAccountIndex", ({ enumerable: true, get: function () { return AccountIndex_js_1.GenericAccountIndex; } }));
var Block_js_1 = __nccwpck_require__(20552);
Object.defineProperty(exports, "GenericBlock", ({ enumerable: true, get: function () { return Block_js_1.GenericBlock; } }));
var Call_js_1 = __nccwpck_require__(14002);
Object.defineProperty(exports, "GenericCall", ({ enumerable: true, get: function () { return Call_js_1.GenericCall; } }));
var ChainProperties_js_1 = __nccwpck_require__(14977);
Object.defineProperty(exports, "GenericChainProperties", ({ enumerable: true, get: function () { return ChainProperties_js_1.GenericChainProperties; } }));
var ConsensusEngineId_js_1 = __nccwpck_require__(87275);
Object.defineProperty(exports, "GenericConsensusEngineId", ({ enumerable: true, get: function () { return ConsensusEngineId_js_1.GenericConsensusEngineId; } }));
var Event_js_1 = __nccwpck_require__(7977);
Object.defineProperty(exports, "GenericEvent", ({ enumerable: true, get: function () { return Event_js_1.GenericEvent; } }));
Object.defineProperty(exports, "GenericEventData", ({ enumerable: true, get: function () { return Event_js_1.GenericEventData; } }));
var LookupSource_js_1 = __nccwpck_require__(34901);
Object.defineProperty(exports, "GenericLookupSource", ({ enumerable: true, get: function () { return LookupSource_js_1.GenericLookupSource; } }));
var MultiAddress_js_1 = __nccwpck_require__(23795);
Object.defineProperty(exports, "GenericAddress", ({ enumerable: true, get: function () { return MultiAddress_js_1.GenericMultiAddress; } }));
Object.defineProperty(exports, "GenericMultiAddress", ({ enumerable: true, get: function () { return MultiAddress_js_1.GenericMultiAddress; } }));
var Vote_js_1 = __nccwpck_require__(74544);
Object.defineProperty(exports, "GenericVote", ({ enumerable: true, get: function () { return Vote_js_1.GenericVote; } }));
tslib_1.__exportStar(__nccwpck_require__(30254), exports);


/***/ }),

/***/ 79405:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(19684);
__nccwpck_require__(97270);
tslib_1.__exportStar(__nccwpck_require__(29621), exports);


/***/ }),

/***/ 59835:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(19684);
tslib_1.__exportStar(__nccwpck_require__(781), exports);
tslib_1.__exportStar(__nccwpck_require__(37449), exports);
tslib_1.__exportStar(__nccwpck_require__(66545), exports);


/***/ }),

/***/ 4202:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getAliasTypes = void 0;
const typesAlias = {
    assets: {
        Approval: 'AssetApproval',
        ApprovalKey: 'AssetApprovalKey',
        Balance: 'TAssetBalance',
        DestroyWitness: 'AssetDestroyWitness'
    },
    babe: {
        EquivocationProof: 'BabeEquivocationProof'
    },
    balances: {
        Status: 'BalanceStatus'
    },
    beefy: {
        AuthorityId: 'BeefyId'
    },
    contracts: {
        StorageKey: 'ContractStorageKey'
    },
    electionProviderMultiPhase: {
        Phase: 'ElectionPhase'
    },
    ethereum: {
        Block: 'EthBlock',
        Header: 'EthHeader',
        Receipt: 'EthReceipt',
        Transaction: 'EthTransaction',
        TransactionStatus: 'EthTransactionStatus'
    },
    evm: {
        Account: 'EvmAccount',
        Log: 'EvmLog',
        Vicinity: 'EvmVicinity'
    },
    grandpa: {
        Equivocation: 'GrandpaEquivocation',
        EquivocationProof: 'GrandpaEquivocationProof'
    },
    identity: {
        Judgement: 'IdentityJudgement'
    },
    inclusion: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    paraDisputes: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    paraInclusion: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    paraScheduler: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    paraShared: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    parachains: {
        Id: 'ParaId'
    },
    parasDisputes: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    parasInclusion: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    parasScheduler: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    parasShared: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    proposeParachain: {
        Proposal: 'ParachainProposal'
    },
    proxy: {
        Announcement: 'ProxyAnnouncement'
    },
    scheduler: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    shared: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    society: {
        Judgement: 'SocietyJudgement',
        Vote: 'SocietyVote'
    },
    staking: {
        Compact: 'CompactAssignments'
    },
    treasury: {
        Proposal: 'TreasuryProposal'
    },
    xcm: {
        AssetId: 'XcmAssetId'
    },
    xcmPallet: {
        AssetId: 'XcmAssetId'
    }
};
/**
 * @description Get types for specific modules (metadata override)
 */
function getAliasTypes({ knownTypes }, section) {
    return {
        ...(typesAlias[section] ?? {}),
        ...(knownTypes.typesAlias?.[section] ?? {})
    };
}
exports.getAliasTypes = getAliasTypes;


/***/ }),

/***/ 64336:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(66580);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {}
};


/***/ }),

/***/ 66580:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    AssetConversionApi: [
        {
            methods: {
                get_reserves: {
                    description: 'Get pool reserves',
                    params: [
                        {
                            name: 'asset1',
                            type: 'XcmV3MultiLocation'
                        },
                        {
                            name: 'asset2',
                            type: 'XcmV3MultiLocation'
                        }
                    ],
                    type: 'Option<(Balance,Balance)>'
                },
                quote_price_exact_tokens_for_tokens: {
                    description: 'Quote price: exact tokens for tokens',
                    params: [
                        {
                            name: 'asset1',
                            type: 'XcmV3MultiLocation'
                        },
                        {
                            name: 'asset2',
                            type: 'XcmV3MultiLocation'
                        },
                        {
                            name: 'amount',
                            type: 'u128'
                        },
                        {
                            name: 'include_fee',
                            type: 'bool'
                        }
                    ],
                    type: 'Option<(Balance)>'
                },
                quote_price_tokens_for_exact_tokens: {
                    description: 'Quote price: tokens for exact tokens',
                    params: [
                        {
                            name: 'asset1',
                            type: 'XcmV3MultiLocation'
                        },
                        {
                            name: 'asset2',
                            type: 'XcmV3MultiLocation'
                        },
                        {
                            name: 'amount',
                            type: 'u128'
                        },
                        {
                            name: 'include_fee',
                            type: 'bool'
                        }
                    ],
                    type: 'Option<(Balance)>'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 77827:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(71156);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        AssetApprovalKey: {
            owner: 'AccountId',
            delegate: 'AccountId'
        },
        AssetApproval: {
            amount: 'TAssetBalance',
            deposit: 'TAssetDepositBalance'
        },
        AssetBalance: {
            balance: 'TAssetBalance',
            isFrozen: 'bool',
            isSufficient: 'bool'
        },
        AssetDestroyWitness: {
            accounts: 'Compact<u32>',
            sufficients: 'Compact<u32>',
            approvals: 'Compact<u32>'
        },
        AssetDetails: {
            owner: 'AccountId',
            issuer: 'AccountId',
            admin: 'AccountId',
            freezer: 'AccountId',
            supply: 'TAssetBalance',
            deposit: 'TAssetDepositBalance',
            minBalance: 'TAssetBalance',
            isSufficient: 'bool',
            accounts: 'u32',
            sufficients: 'u32',
            approvals: 'u32',
            isFrozen: 'bool'
        },
        AssetMetadata: {
            deposit: 'TAssetDepositBalance',
            name: 'Vec<u8>',
            symbol: 'Vec<u8>',
            decimals: 'u8',
            isFrozen: 'bool'
        },
        TAssetBalance: 'u64',
        TAssetDepositBalance: 'BalanceOf'
    }
};


/***/ }),

/***/ 71156:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    AssetsApi: [
        {
            methods: {
                account_balances: {
                    description: 'Return the current set of authorities.',
                    params: [
                        {
                            name: 'account',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Vec<(u32, TAssetBalance)>'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 81428:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        BlockAttestations: {
            receipt: 'CandidateReceipt',
            valid: 'Vec<AccountId>',
            invalid: 'Vec<AccountId>'
        },
        IncludedBlocks: {
            actualNumber: 'BlockNumber',
            session: 'SessionIndex',
            randomSeed: 'H256',
            activeParachains: 'Vec<ParaId>',
            paraBlocks: 'Vec<Hash>'
        },
        MoreAttestations: {}
    }
};


/***/ }),

/***/ 49427:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(41180);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        RawAuraPreDigest: {
            slotNumber: 'u64'
        }
    }
};


/***/ }),

/***/ 41180:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    AuraApi: [
        {
            methods: {
                authorities: {
                    description: 'Return the current set of authorities.',
                    params: [],
                    type: 'Vec<AuthorityId>'
                },
                slot_duration: {
                    description: 'Returns the slot duration for Aura.',
                    params: [],
                    type: 'SlotDuration'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 38602:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(6429);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    types: {
        ExtrinsicOrHash: {
            _enum: {
                Hash: 'Hash',
                Extrinsic: 'Bytes'
            }
        },
        ExtrinsicStatus: {
            _enum: {
                Future: 'Null',
                Ready: 'Null',
                Broadcast: 'Vec<Text>',
                InBlock: 'Hash',
                Retracted: 'Hash',
                FinalityTimeout: 'Hash',
                Finalized: 'Hash',
                Usurped: 'Hash',
                Dropped: 'Null',
                Invalid: 'Null'
            }
        }
    }
};


/***/ }),

/***/ 6429:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    hasKey: {
        description: 'Returns true if the keystore has private keys for the given public key and key type.',
        isUnsafe: true,
        params: [
            {
                name: 'publicKey',
                type: 'Bytes'
            },
            {
                name: 'keyType',
                type: 'Text'
            }
        ],
        type: 'bool'
    },
    hasSessionKeys: {
        description: 'Returns true if the keystore has private keys for the given session public keys.',
        isUnsafe: true,
        params: [
            {
                name: 'sessionKeys',
                type: 'Bytes'
            }
        ],
        type: 'bool'
    },
    insertKey: {
        description: 'Insert a key into the keystore.',
        isUnsafe: true,
        params: [
            {
                name: 'keyType',
                type: 'Text'
            },
            {
                name: 'suri',
                type: 'Text'
            },
            {
                name: 'publicKey',
                type: 'Bytes'
            }
        ],
        type: 'Bytes'
    },
    pendingExtrinsics: {
        description: 'Returns all pending extrinsics, potentially grouped by sender',
        params: [],
        type: 'Vec<Extrinsic>'
    },
    removeExtrinsic: {
        description: 'Remove given extrinsic from the pool and temporarily ban it to prevent reimporting',
        isUnsafe: true,
        params: [
            {
                name: 'bytesOrHash',
                type: 'Vec<ExtrinsicOrHash>'
            }
        ],
        type: 'Vec<Hash>'
    },
    rotateKeys: {
        description: 'Generate new session keys and returns the corresponding public keys',
        isUnsafe: true,
        params: [],
        type: 'Bytes'
    },
    submitAndWatchExtrinsic: {
        description: 'Submit and subscribe to watch an extrinsic until unsubscribed',
        isSigned: true,
        params: [
            {
                name: 'extrinsic',
                type: 'Extrinsic'
            }
        ],
        pubsub: [
            'extrinsicUpdate',
            'submitAndWatchExtrinsic',
            'unwatchExtrinsic'
        ],
        type: 'ExtrinsicStatus'
    },
    submitExtrinsic: {
        description: 'Submit a fully formatted extrinsic for block inclusion',
        isSigned: true,
        params: [
            {
                name: 'extrinsic',
                type: 'Extrinsic'
            }
        ],
        type: 'Hash'
    }
};


/***/ }),

/***/ 11815:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        UncleEntryItem: {
            _enum: {
                InclusionHeight: 'BlockNumber',
                Uncle: '(Hash, Option<AccountId>)'
            }
        }
    }
};


/***/ }),

/***/ 70594:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(89247);
const runtime_js_1 = __nccwpck_require__(33352);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    runtime: runtime_js_1.runtime,
    types: {
        AllowedSlots: {
            _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
        },
        BabeAuthorityWeight: 'u64',
        BabeEpochConfiguration: {
            c: '(u64, u64)',
            allowedSlots: 'AllowedSlots'
        },
        BabeBlockWeight: 'u32',
        BabeEquivocationProof: {
            offender: 'AuthorityId',
            slotNumber: 'SlotNumber',
            firstHeader: 'Header',
            secondHeader: 'Header'
        },
        BabeGenesisConfiguration: {
            slotDuration: 'u64',
            epochLength: 'u64',
            c: '(u64, u64)',
            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',
            randomness: 'Randomness',
            allowedSlots: 'AllowedSlots'
        },
        BabeGenesisConfigurationV1: {
            slotDuration: 'u64',
            epochLength: 'u64',
            c: '(u64, u64)',
            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',
            randomness: 'Randomness',
            secondarySlots: 'bool'
        },
        BabeWeight: 'u64',
        MaybeRandomness: 'Option<Randomness>',
        MaybeVrf: 'Option<VrfData>',
        Epoch: {
            epochIndex: 'u64',
            startSlot: 'Slot',
            duration: 'u64',
            authorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',
            randomness: 'Hash',
            config: 'BabeEpochConfiguration'
        },
        EpochAuthorship: {
            primary: 'Vec<u64>',
            secondary: 'Vec<u64>',
            secondary_vrf: 'Vec<u64>'
        },
        NextConfigDescriptor: {
            _enum: {
                V0: 'Null',
                V1: 'NextConfigDescriptorV1'
            }
        },
        NextConfigDescriptorV1: {
            c: '(u64, u64)',
            allowedSlots: 'AllowedSlots'
        },
        OpaqueKeyOwnershipProof: 'Bytes',
        Randomness: 'Hash',
        RawBabePreDigest: {
            _enum: {
                Phantom: 'Null',
                Primary: 'RawBabePreDigestPrimary',
                SecondaryPlain: 'RawBabePreDigestSecondaryPlain',
                SecondaryVRF: 'RawBabePreDigestSecondaryVRF'
            }
        },
        RawBabePreDigestPrimary: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber',
            vrfOutput: 'VrfOutput',
            vrfProof: 'VrfProof'
        },
        RawBabePreDigestSecondaryPlain: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber'
        },
        RawBabePreDigestSecondaryVRF: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber',
            vrfOutput: 'VrfOutput',
            vrfProof: 'VrfProof'
        },
        RawBabePreDigestTo159: {
            _enum: {
                Primary: 'RawBabePreDigestPrimaryTo159',
                Secondary: 'RawBabePreDigestSecondaryTo159'
            }
        },
        RawBabePreDigestPrimaryTo159: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber',
            weight: 'BabeBlockWeight',
            vrfOutput: 'VrfOutput',
            vrfProof: 'VrfProof'
        },
        RawBabePreDigestSecondaryTo159: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber',
            weight: 'BabeBlockWeight'
        },
        // a cross old/new compatible version of the digest, that is _only_ useful
        // for partial parsing and extraction of the author. This assumes that all
        // entries has the authorityIndex in the first position - and that it is all
        // we are interested in
        RawBabePreDigestCompat: {
            _enum: {
                Zero: 'u32',
                One: 'u32',
                Two: 'u32',
                Three: 'u32'
            }
        },
        SlotNumber: 'u64',
        VrfData: '[u8; 32]',
        VrfOutput: '[u8; 32]',
        VrfProof: '[u8; 64]'
    }
};


/***/ }),

/***/ 89247:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    epochAuthorship: {
        description: 'Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore',
        isUnsafe: true,
        params: [],
        type: 'HashMap<AuthorityId, EpochAuthorship>'
    }
};


/***/ }),

/***/ 33352:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const V1_V2_SHARED = {
    current_epoch: {
        description: 'Returns information regarding the current epoch.',
        params: [],
        type: 'Epoch'
    },
    current_epoch_start: {
        description: 'Returns the slot that started the current epoch.',
        params: [],
        type: 'Slot'
    },
    generate_key_ownership_proof: {
        description: 'Generates a proof of key ownership for the given authority in the current epoch.',
        params: [
            {
                name: 'slot',
                type: 'Slot'
            },
            {
                name: 'authorityId',
                type: 'AuthorityId'
            }
        ],
        type: 'Option<OpaqueKeyOwnershipProof>'
    },
    next_epoch: {
        description: 'Returns information regarding the next epoch (which was already previously announced).',
        params: [],
        type: 'Epoch'
    },
    submit_report_equivocation_unsigned_extrinsic: {
        description: 'Submits an unsigned extrinsic to report an equivocation.',
        params: [
            {
                name: 'equivocationProof',
                type: 'BabeEquivocationProof'
            },
            {
                name: 'keyOwnerProof',
                type: 'OpaqueKeyOwnershipProof'
            }
        ],
        type: 'Option<Null>'
    }
};
exports.runtime = {
    BabeApi: [
        {
            methods: {
                configuration: {
                    description: 'Return the genesis configuration for BABE. The configuration is only read on genesis.',
                    params: [],
                    type: 'BabeGenesisConfiguration'
                },
                ...V1_V2_SHARED
            },
            version: 2
        },
        {
            methods: {
                configuration: {
                    description: 'Return the configuration for BABE. Version 1.',
                    params: [],
                    type: 'BabeGenesisConfigurationV1'
                },
                ...V1_V2_SHARED
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 15466:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        AccountData: {
            free: 'Balance',
            reserved: 'Balance',
            miscFrozen: 'Balance',
            feeFrozen: 'Balance'
        },
        BalanceLockTo212: {
            id: 'LockIdentifier',
            amount: 'Balance',
            until: 'BlockNumber',
            reasons: 'WithdrawReasons'
        },
        BalanceLock: {
            id: 'LockIdentifier',
            amount: 'Balance',
            reasons: 'Reasons'
        },
        BalanceStatus: {
            _enum: ['Free', 'Reserved']
        },
        Reasons: {
            _enum: ['Fee', 'Misc', 'All']
        },
        ReserveData: {
            id: 'ReserveIdentifier',
            amount: 'Balance'
        },
        ReserveIdentifier: '[u8; 8]',
        VestingSchedule: {
            offset: 'Balance',
            perBlock: 'Balance',
            startingBlock: 'BlockNumber'
        },
        WithdrawReasons: {
            _set: {
                TransactionPayment: 1,
                Transfer: 2,
                Reserve: 4,
                Fee: 8,
                Tip: 16
            }
        }
    }
};


/***/ }),

/***/ 36388:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(88324);
const runtime_js_1 = __nccwpck_require__(7998);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    runtime: runtime_js_1.runtime,
    types: {
        BeefyAuthoritySet: {
            id: 'u64',
            len: 'u32',
            root: 'H256'
        },
        BeefyCommitment: {
            payload: 'BeefyPayload',
            blockNumber: 'BlockNumber',
            validatorSetId: 'ValidatorSetId'
        },
        BeefyId: '[u8; 33]',
        BeefyEquivocationProof: {
            first: 'BeefyVoteMessage',
            second: 'BeefyVoteMessage'
        },
        BeefySignedCommitment: {
            commitment: 'BeefyCommitment',
            signatures: 'Vec<Option<EcdsaSignature>>'
        },
        BeefyNextAuthoritySet: {
            id: 'u64',
            len: 'u32',
            root: 'H256'
        },
        BeefyPayload: 'Vec<(BeefyPayloadId, Bytes)>',
        BeefyPayloadId: '[u8;2]',
        BeefyVoteMessage: {
            commitment: 'BeefyCommitment',
            id: 'AuthorityId',
            signature: 'Signature'
        },
        MmrRootHash: 'H256',
        ValidatorSetId: 'u64',
        ValidatorSet: {
            validators: 'Vec<AuthorityId>',
            id: 'ValidatorSetId'
        }
    }
};


/***/ }),

/***/ 88324:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    getFinalizedHead: {
        description: 'Returns hash of the latest BEEFY finalized block as seen by this client.',
        params: [],
        type: 'H256'
    },
    subscribeJustifications: {
        description: 'Returns the block most recently finalized by BEEFY, alongside side its justification.',
        params: [],
        pubsub: [
            'justifications',
            'subscribeJustifications',
            'unsubscribeJustifications'
        ],
        type: 'BeefySignedCommitment'
    }
};


/***/ }),

/***/ 7998:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const BEEFY_V1_V3 = {
    beefy_genesis: {
        description: 'Return the block number where BEEFY consensus is enabled/started',
        params: [],
        type: 'Option<BlockNumber>'
    },
    generate_key_ownership_proof: {
        description: 'Generates a proof of key ownership for the given authority in the given set.',
        params: [
            {
                name: 'setId',
                type: 'ValidatorSetId'
            },
            {
                name: 'authorityId',
                type: 'AuthorityId'
            }
        ],
        type: 'Option<OpaqueKeyOwnershipProof>'
    },
    submit_report_equivocation_unsigned_extrinsic: {
        description: 'Submits an unsigned extrinsic to report an equivocation.',
        params: [
            {
                name: 'equivocationProof',
                type: 'BeefyEquivocationProof'
            },
            {
                name: 'keyOwnerProof',
                type: 'OpaqueKeyOwnershipProof'
            }
        ],
        type: 'Option<Null>'
    },
    validator_set: {
        description: 'Return the current active BEEFY validator set',
        params: [],
        type: 'Option<ValidatorSet>'
    }
};
const BEEFY_MMR_V1 = {
    authority_set_proof: {
        description: 'Return the currently active BEEFY authority set proof.',
        params: [],
        type: 'BeefyAuthoritySet'
    },
    next_authority_set_proof: {
        description: 'Return the next/queued BEEFY authority set proof.',
        params: [],
        type: 'BeefyNextAuthoritySet'
    }
};
exports.runtime = {
    BeefyApi: [
        {
            methods: BEEFY_V1_V3,
            version: 3
        },
        {
            methods: BEEFY_V1_V3,
            version: 2
        },
        {
            methods: BEEFY_V1_V3,
            version: 1
        }
    ],
    BeefyMmrApi: [
        {
            methods: BEEFY_MMR_V1,
            version: 1
        }
    ]
};


/***/ }),

/***/ 65133:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(17939);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        BenchmarkBatch: {
            pallet: 'Text',
            instance: 'Text',
            benchmark: 'Text',
            results: 'Vec<BenchmarkResult>'
        },
        BenchmarkConfig: {
            pallet: 'Bytes',
            benchmark: 'Bytes',
            selectedComponents: 'Vec<(BenchmarkParameter, u32)>',
            verify: 'bool',
            internalRepeats: 'u32'
        },
        BenchmarkList: {
            pallet: 'Bytes',
            instance: 'Bytes',
            benchmarks: 'Vec<BenchmarkMetadata>'
        },
        BenchmarkMetadata: {
            name: 'Bytes',
            components: 'Vec<(BenchmarkParameter, u32, u32)>'
        },
        BenchmarkParameter: {
            _enum: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
        },
        BenchmarkResult: {
            components: 'Vec<(BenchmarkParameter, u32)>',
            extrinsicTime: 'u128',
            storageRootTime: 'u128',
            reads: 'u32',
            repeatReads: 'u32',
            writes: 'u32',
            repeatWrites: 'u32',
            proofSize: 'u32',
            benchKeys: 'Vec<(Vec<u8>, u32, u32, bool)>'
        }
    }
};


/***/ }),

/***/ 17939:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    Benchmark: [
        {
            methods: {
                benchmark_metadata: {
                    description: 'Get the benchmark metadata available for this runtime.',
                    params: [
                        {
                            name: 'extra',
                            type: 'bool'
                        }
                    ],
                    type: '(Vec<BenchmarkList>, Vec<StorageInfo>)'
                },
                dispatch_benchmark: {
                    description: 'Dispatch the given benchmark.',
                    params: [
                        {
                            name: 'config',
                            type: 'BenchmarkConfig'
                        }
                    ],
                    type: 'Result<Vec<BenchmarkBatch>, Text>'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 680:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(43966);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        CheckInherentsResult: {
            okay: 'bool',
            fatalError: 'bool',
            errors: 'InherentData'
        },
        InherentData: {
            data: 'BTreeMap<InherentIdentifier, Bytes>'
        },
        InherentIdentifier: '[u8; 8]'
    }
};


/***/ }),

/***/ 43966:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const BB_V2_TO_V4 = {
    // this was removed after V4
    random_seed: {
        description: 'Generate a random seed.',
        params: [],
        type: 'Hash'
    }
};
const BB_V2_TO_V5 = {
    apply_extrinsic: {
        description: 'Apply the given extrinsic.',
        params: [
            {
                name: 'extrinsic',
                type: 'Extrinsic'
            }
        ],
        type: 'ApplyExtrinsicResultPre6'
    }
};
const BB_V2_TO_V6 = {
    check_inherents: {
        description: 'Check that the inherents are valid.',
        params: [
            {
                name: 'block',
                type: 'Block'
            },
            {
                name: 'data',
                type: 'InherentData'
            }
        ],
        type: 'CheckInherentsResult'
    },
    inherent_extrinsics: {
        description: 'Generate inherent extrinsics.',
        params: [
            {
                name: 'inherent',
                type: 'InherentData'
            }
        ],
        type: 'Vec<Extrinsic>'
    }
};
const BB_V3_TO_V6 = {
    // renamed in v3 from finalize_block
    finalize_block: {
        description: 'Finish the current block.',
        params: [],
        type: 'Header'
    }
};
exports.runtime = {
    BlockBuilder: [
        {
            methods: {
                apply_extrinsic: {
                    description: 'Apply the given extrinsic.',
                    params: [
                        {
                            name: 'extrinsic',
                            type: 'Extrinsic'
                        }
                    ],
                    type: 'ApplyExtrinsicResult'
                },
                ...BB_V2_TO_V6,
                ...BB_V3_TO_V6
            },
            version: 6
        },
        {
            methods: {
                // apply_extrinsic result changed in 6
                ...BB_V2_TO_V5,
                ...BB_V2_TO_V6,
                ...BB_V3_TO_V6
            },
            version: 5
        },
        {
            methods: {
                // random_seed removed
                ...BB_V2_TO_V4,
                ...BB_V2_TO_V5,
                ...BB_V2_TO_V6,
                ...BB_V3_TO_V6
            },
            version: 4
        },
        {
            methods: {
                // finalize_block renamed
                ...BB_V2_TO_V4,
                ...BB_V2_TO_V6,
                ...BB_V3_TO_V6
            },
            version: 3
        },
        {
            methods: {
                finalise_block: {
                    description: 'Finish the current block.',
                    params: [],
                    type: 'Header'
                },
                ...BB_V2_TO_V4,
                ...BB_V2_TO_V6
            },
            version: 2
        }
    ]
};


/***/ }),

/***/ 8586:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        BridgedBlockHash: 'H256',
        BridgedBlockNumber: 'BlockNumber',
        BridgedHeader: 'Header',
        BridgeMessageId: '(LaneId, MessageNonce)',
        CallOrigin: {
            _enum: {
                SourceRoot: 'Null',
                TargetAccount: '(AccountId, MultiSigner, MultiSignature)',
                SourceAccount: 'AccountId'
            }
        },
        ChainId: '[u8; 4]',
        DeliveredMessages: {
            begin: 'MessageNonce',
            end: 'MessageNonce',
            // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;
            dispatchResults: 'BitVec'
        },
        DispatchFeePayment: {
            _enum: ['AtSourceChain', 'AtTargetChain']
        },
        InboundLaneData: {
            relayers: 'Vec<UnrewardedRelayer>',
            lastConfirmedNonce: 'MessageNonce'
        },
        InboundRelayer: 'AccountId',
        InitializationData: {
            header: 'Header',
            authorityList: 'AuthorityList',
            setId: 'SetId',
            isHalted: 'bool'
        },
        LaneId: '[u8; 4]',
        MessageData: {
            payload: 'Bytes',
            fee: 'Balance'
        },
        MessagesDeliveryProofOf: {
            bridgedHeaderHash: 'BlockHash',
            storageProof: 'Vec<Bytes>',
            lane: 'LaneId'
        },
        MessageKey: {
            laneId: 'LaneId',
            nonce: 'MessageNonce'
        },
        MessageNonce: 'u64',
        MessagesProofOf: {
            bridgedHeaderHash: 'BridgedBlockHash',
            storageProof: 'Vec<Bytes>',
            lane: 'LaneId',
            noncesStart: 'MessageNonce',
            noncesEnd: 'MessageNonce'
        },
        OperatingMode: {
            _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']
        },
        OutboundLaneData: {
            oldestUnprunedNonce: 'MessageNonce',
            latestReceivedNonce: 'MessageNonce',
            latestGeneratedNonce: 'MessageNonce'
        },
        OutboundMessageFee: 'Balance',
        OutboundPayload: {
            specVersion: 'u32',
            weight: 'Weight',
            origin: 'CallOrigin',
            dispatchFeePayment: 'DispatchFeePayment',
            call: 'Bytes'
        },
        Parameter: 'Null',
        RelayerId: 'AccountId',
        UnrewardedRelayer: {
            relayer: 'RelayerId',
            messages: 'DeliveredMessages'
        },
        UnrewardedRelayersState: {
            unrewardedRelayer_Entries: 'MessageNonce',
            messagesInOldestEntry: 'MessageNonce',
            totalMessages: 'MessageNonce'
        }
    }
};


/***/ }),

/***/ 94380:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(84768);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    types: {
        BlockHash: 'Hash'
    }
};


/***/ }),

/***/ 84768:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    getBlock: {
        description: 'Get header and body of a relay chain block',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'hash',
                type: 'BlockHash'
            }
        ],
        type: 'SignedBlock'
    },
    getBlockHash: {
        description: 'Get the block hash for a specific block',
        params: [
            {
                isOptional: true,
                name: 'blockNumber',
                type: 'BlockNumber'
            }
        ],
        type: 'BlockHash'
    },
    getFinalizedHead: {
        alias: ['chain_getFinalisedHead'],
        description: 'Get hash of the last finalized block in the canon chain',
        params: [],
        type: 'BlockHash'
    },
    getHeader: {
        alias: ['chain_getHead'],
        description: 'Retrieves the header for a specific block',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'hash',
                type: 'BlockHash'
            }
        ],
        type: 'Header'
    },
    subscribeAllHeads: {
        description: 'Retrieves the newest header via subscription',
        params: [],
        pubsub: [
            'allHead',
            'subscribeAllHeads',
            'unsubscribeAllHeads'
        ],
        type: 'Header'
    },
    subscribeFinalizedHeads: {
        alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],
        description: 'Retrieves the best finalized header via subscription',
        params: [],
        pubsub: [
            'finalizedHead',
            'subscribeFinalizedHeads',
            'unsubscribeFinalizedHeads'
        ],
        type: 'Header'
    },
    subscribeNewHeads: {
        alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],
        description: 'Retrieves the best header via subscription',
        params: [],
        // NOTE These still has the aliassed version, compatible with 1.x
        pubsub: [
            'newHead',
            'subscribeNewHead',
            'unsubscribeNewHead'
        ],
        type: 'Header'
    }
};


/***/ }),

/***/ 95929:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(25614);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    types: {
        // StorageKey extends Bytes
        PrefixedStorageKey: 'StorageKey'
    }
};


/***/ }),

/***/ 25614:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    getKeys: {
        description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'prefix',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getKeysPaged: {
        alias: ['childstate_getKeysPagedAt'],
        description: 'Returns the keys with prefix from a child storage with pagination support',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'prefix',
                type: 'StorageKey'
            },
            {
                name: 'count',
                type: 'u32'
            },
            {
                isOptional: true,
                name: 'startKey',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getStorage: {
        description: 'Returns a child storage entry at a specific block state',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Option<StorageData>'
    },
    getStorageEntries: {
        description: 'Returns child storage entries for multiple keys at a specific block state',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Vec<Option<StorageData>>'
    },
    getStorageHash: {
        description: 'Returns the hash of a child storage entry at a block state',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Option<Hash>'
    },
    getStorageSize: {
        description: 'Returns the size of a child storage entry at a block state',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Option<u64>'
    }
};


/***/ }),

/***/ 74264:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        StatementKind: {
            _enum: ['Regular', 'Saft']
        }
    }
};


/***/ }),

/***/ 76018:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        CollectiveOrigin: {
            _enum: {
                Members: '(MemberCount, MemberCount)',
                Member: 'AccountId'
            }
        },
        MemberCount: 'u32',
        ProposalIndex: 'u32',
        VotesTo230: {
            index: 'ProposalIndex',
            threshold: 'MemberCount',
            ayes: 'Vec<AccountId>',
            nays: 'Vec<AccountId>'
        },
        Votes: {
            index: 'ProposalIndex',
            threshold: 'MemberCount',
            ayes: 'Vec<AccountId>',
            nays: 'Vec<AccountId>',
            end: 'BlockNumber'
        }
    }
};


/***/ }),

/***/ 82753:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        AuthorityId: 'AccountId',
        RawVRFOutput: '[u8; 32]'
    }
};


/***/ }),

/***/ 15524:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(12509);
const runtime_js_1 = __nccwpck_require__(16415);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    runtime: runtime_js_1.runtime,
    types: {
        AliveContractInfo: {
            trieId: 'TrieId',
            storageSize: 'u32',
            pairCount: 'u32',
            codeHash: 'CodeHash',
            rentAllowance: 'Balance',
            rentPaid: 'Balance',
            deductBlock: 'BlockNumber',
            lastWrite: 'Option<BlockNumber>',
            _reserved: 'Option<Null>'
        },
        CodeHash: 'Hash',
        CodeSource: {
            _enum: {
                Upload: 'Bytes',
                Existing: 'Hash'
            }
        },
        CodeUploadRequest: {
            origin: 'AccountId',
            code: 'Bytes',
            storageDepositLimit: 'Option<Balance>'
        },
        CodeUploadResult: 'Result<CodeUploadResultValue, DispatchError>',
        CodeUploadResultValue: {
            codeHash: 'CodeHash',
            deposit: 'Balance'
        },
        ContractCallRequest: {
            origin: 'AccountId',
            dest: 'AccountId',
            value: 'Balance',
            gasLimit: 'u64',
            storageDepositLimit: 'Option<Balance>',
            inputData: 'Bytes'
        },
        ContractExecResultSuccessTo255: {
            status: 'u8',
            data: 'Raw'
        },
        ContractExecResultTo255: {
            _enum: {
                Success: 'ContractExecResultSuccessTo255',
                Error: 'Null'
            }
        },
        ContractExecResultSuccessTo260: {
            flags: 'ContractReturnFlags',
            data: 'Bytes',
            gasConsumed: 'u64'
        },
        ContractExecResultTo260: {
            _enum: {
                Success: 'ContractExecResultSuccessTo260',
                Error: 'Null'
            }
        },
        ContractExecResultOk: {
            flags: 'ContractReturnFlags',
            data: 'Bytes'
        },
        ContractExecResultResult: 'Result<ContractExecResultOk, DispatchError>',
        ContractExecResultTo267: {
            gasConsumed: 'u64',
            debugMessage: 'Text',
            result: 'ContractExecResultResult'
        },
        ContractExecResult: {
            gasConsumed: 'Weight',
            gasRequired: 'Weight',
            storageDeposit: 'StorageDeposit',
            debugMessage: 'Text',
            result: 'ContractExecResultResult'
        },
        ContractExecResultU64: {
            gasConsumed: 'u64',
            gasRequired: 'u64',
            storageDeposit: 'StorageDeposit',
            debugMessage: 'Text',
            result: 'ContractExecResultResult'
        },
        ContractInfo: {
            _enum: {
                Alive: 'AliveContractInfo',
                Tombstone: 'TombstoneContractInfo'
            }
        },
        ContractCallFlags: {
            _set: {
                _bitLength: 32,
                ForwardInput: 1,
                CloneInput: 2,
                TailCall: 4,
                AllowReentry: 8
            }
        },
        ContractReturnFlags: {
            _set: {
                _bitLength: 32,
                Revert: 1
            }
        },
        ContractStorageKey: '[u8; 32]',
        DeletedContract: {
            pairCount: 'u32',
            trieId: 'TrieId'
        },
        ExecReturnValue: {
            flags: 'ContractReturnFlags',
            data: 'Bytes'
        },
        Gas: 'u64',
        HostFnWeightsTo264: {
            caller: 'Weight',
            address: 'Weight',
            gasLeft: 'Weight',
            balance: 'Weight',
            valueTransferred: 'Weight',
            minimumBalance: 'Weight',
            tombstoneDeposit: 'Weight',
            rentAllowance: 'Weight',
            blockNumber: 'Weight',
            now: 'Weight',
            weightToFee: 'Weight',
            gas: 'Weight',
            input: 'Weight',
            inputPerByte: 'Weight',
            return: 'Weight',
            returnPerByte: 'Weight',
            terminate: 'Weight',
            restoreTo: 'Weight',
            restoreToPerDelta: 'Weight',
            random: 'Weight',
            depositEvent: 'Weight',
            depositEventPerTopic: 'Weight',
            depositEventPerByte: 'Weight',
            setRentAllowance: 'Weight',
            setStorage: 'Weight',
            setStoragePerByte: 'Weight',
            clearStorage: 'Weight',
            getStorage: 'Weight',
            getStoragePerByte: 'Weight',
            transfer: 'Weight',
            call: 'Weight',
            callTransferSurcharge: 'Weight',
            callPerInputByte: 'Weight',
            callPerOutputByte: 'Weight',
            instantiate: 'Weight',
            instantiatePerInputByte: 'Weight',
            instantiatePerOutputByte: 'Weight',
            hashSha2256: 'Weight',
            hashSha2256PerByte: 'Weight',
            hashKeccak256: 'Weight',
            hashKeccak256PerByte: 'Weight',
            hashBlake2256: 'Weight',
            hashBlake2256PerByte: 'Weight',
            hashBlake2128: 'Weight',
            hashBlake2128PerByte: 'Weight'
        },
        HostFnWeights: {
            caller: 'Weight',
            address: 'Weight',
            gasLeft: 'Weight',
            balance: 'Weight',
            valueTransferred: 'Weight',
            minimumBalance: 'Weight',
            tombstoneDeposit: 'Weight',
            rentAllowance: 'Weight',
            blockNumber: 'Weight',
            now: 'Weight',
            weightToFee: 'Weight',
            gas: 'Weight',
            input: 'Weight',
            inputPerByte: 'Weight',
            return: 'Weight',
            returnPerByte: 'Weight',
            terminate: 'Weight',
            terminatePerCodeByte: 'Weight',
            restoreTo: 'Weight',
            restoreToPerCallerCodeByte: 'Weight',
            restoreToPerTombstoneCodeByte: 'Weight',
            restoreToPerDelta: 'Weight',
            random: 'Weight',
            depositEvent: 'Weight',
            depositEventPerTopic: 'Weight',
            depositEventPerByte: 'Weight',
            setRentAllowance: 'Weight',
            setStorage: 'Weight',
            setStoragePerByte: 'Weight',
            clearStorage: 'Weight',
            getStorage: 'Weight',
            getStoragePerByte: 'Weight',
            transfer: 'Weight',
            call: 'Weight',
            callPerCodeByte: 'Weight',
            callTransferSurcharge: 'Weight',
            callPerInputByte: 'Weight',
            callPerOutputByte: 'Weight',
            instantiate: 'Weight',
            instantiatePerCodeByte: 'Weight',
            instantiatePerInputByte: 'Weight',
            instantiatePerOutputByte: 'Weight',
            instantiatePerSaltByte: 'Weight',
            hashSha2256: 'Weight',
            hashSha2256PerByte: 'Weight',
            hashKeccak256: 'Weight',
            hashKeccak256PerByte: 'Weight',
            hashBlake2256: 'Weight',
            hashBlake2256PerByte: 'Weight',
            hashBlake2128: 'Weight',
            hashBlake2128PerByte: 'Weight',
            rentParams: 'Weight'
        },
        InstantiateRequestV1: {
            origin: 'AccountId',
            value: 'Balance',
            gasLimit: 'Gas',
            code: 'Bytes',
            data: 'Bytes',
            salt: 'Bytes'
        },
        InstantiateRequestV2: {
            _fallback: 'InstantiateRequestV1',
            origin: 'AccountId',
            value: 'Balance',
            gasLimit: 'Gas',
            storageDepositLimit: 'Option<Balance>',
            code: 'Bytes',
            data: 'Bytes',
            salt: 'Bytes'
        },
        InstantiateRequest: {
            _fallback: 'InstantiateRequestV2',
            origin: 'AccountId',
            value: 'Balance',
            gasLimit: 'Gas',
            storageDepositLimit: 'Option<Balance>',
            code: 'CodeSource',
            data: 'Bytes',
            salt: 'Bytes'
        },
        ContractInstantiateResultTo267: 'Result<InstantiateReturnValueTo267, Null>',
        ContractInstantiateResultTo299: 'Result<InstantiateReturnValueOk, Null>',
        ContractInstantiateResult: {
            gasConsumed: 'WeightV2',
            gasRequired: 'WeightV2',
            storageDeposit: 'StorageDeposit',
            debugMessage: 'Text',
            result: 'InstantiateReturnValue'
        },
        ContractInstantiateResultU64: {
            // only this one can fail, the current version (above) _should_ be correctly
            // versioned now, aka no more deprecated RPCs involved, only runtime calls
            _fallback: 'ContractInstantiateResultTo299',
            gasConsumed: 'u64',
            gasRequired: 'u64',
            storageDeposit: 'StorageDeposit',
            debugMessage: 'Text',
            result: 'InstantiateReturnValue'
        },
        InstantiateReturnValueTo267: {
            result: 'ExecReturnValue',
            accountId: 'AccountId',
            rentProjection: 'Option<RentProjection>'
        },
        InstantiateReturnValueOk: {
            result: 'ExecReturnValue',
            accountId: 'AccountId'
        },
        InstantiateReturnValue: 'Result<InstantiateReturnValueOk, DispatchError>',
        InstructionWeights: {
            i64const: 'u32',
            i64load: 'u32',
            i64store: 'u32',
            select: 'u32',
            rIf: 'u32',
            br: 'u32',
            brIf: 'u32',
            brIable: 'u32',
            brIablePerEntry: 'u32',
            call: 'u32',
            callIndirect: 'u32',
            callIndirectPerParam: 'u32',
            localGet: 'u32',
            localSet: 'u32',
            local_tee: 'u32',
            globalGet: 'u32',
            globalSet: 'u32',
            memoryCurrent: 'u32',
            memoryGrow: 'u32',
            i64clz: 'u32',
            i64ctz: 'u32',
            i64popcnt: 'u32',
            i64eqz: 'u32',
            i64extendsi32: 'u32',
            i64extendui32: 'u32',
            i32wrapi64: 'u32',
            i64eq: 'u32',
            i64ne: 'u32',
            i64lts: 'u32',
            i64ltu: 'u32',
            i64gts: 'u32',
            i64gtu: 'u32',
            i64les: 'u32',
            i64leu: 'u32',
            i64ges: 'u32',
            i64geu: 'u32',
            i64add: 'u32',
            i64sub: 'u32',
            i64mul: 'u32',
            i64divs: 'u32',
            i64divu: 'u32',
            i64rems: 'u32',
            i64remu: 'u32',
            i64and: 'u32',
            i64or: 'u32',
            i64xor: 'u32',
            i64shl: 'u32',
            i64shrs: 'u32',
            i64shru: 'u32',
            i64rotl: 'u32',
            i64rotr: 'u32'
        },
        LimitsTo264: {
            eventTopics: 'u32',
            stackHeight: 'u32',
            globals: 'u32',
            parameters: 'u32',
            memoryPages: 'u32',
            tableSize: 'u32',
            brTableSize: 'u32',
            subjectLen: 'u32',
            codeSize: 'u32'
        },
        Limits: {
            eventTopics: 'u32',
            stackHeight: 'u32',
            globals: 'u32',
            parameters: 'u32',
            memoryPages: 'u32',
            tableSize: 'u32',
            brTableSize: 'u32',
            subjectLen: 'u32'
        },
        PrefabWasmModule: {
            scheduleVersion: 'Compact<u32>',
            initial: 'Compact<u32>',
            maximum: 'Compact<u32>',
            refcount: 'Compact<u64>',
            _reserved: 'Option<Null>',
            code: 'Bytes',
            originalCodeLen: 'u32'
        },
        RentProjection: {
            _enum: {
                EvictionAt: 'BlockNumber',
                NoEviction: 'Null'
            }
        },
        ScheduleTo212: {
            version: 'u32',
            putCodePerByteCost: 'Gas',
            growMemCost: 'Gas',
            regularOpCost: 'Gas',
            returnDataPerByteCost: 'Gas',
            eventDataPerByteCost: 'Gas',
            eventPerTopicCost: 'Gas',
            eventBaseCost: 'Gas',
            sandboxDataReadCost: 'Gas',
            sandboxDataWriteCost: 'Gas',
            maxEventTopics: 'u32',
            maxStackHeight: 'u32',
            maxMemoryPages: 'u32',
            enablePrintln: 'bool',
            maxSubjectLen: 'u32'
        },
        ScheduleTo258: {
            version: 'u32',
            putCodePerByteCost: 'Gas',
            growMemCost: 'Gas',
            regularOpCost: 'Gas',
            returnDataPerByteCost: 'Gas',
            eventDataPerByteCost: 'Gas',
            eventPerTopicCost: 'Gas',
            eventBaseCost: 'Gas',
            sandboxDataReadCost: 'Gas',
            sandboxDataWriteCost: 'Gas',
            transferCost: 'Gas',
            maxEventTopics: 'u32',
            maxStackHeight: 'u32',
            maxMemoryPages: 'u32',
            enablePrintln: 'bool',
            maxSubjectLen: 'u32'
        },
        ScheduleTo264: {
            version: 'u32',
            enablePrintln: 'bool',
            limits: 'LimitsTo264',
            instructionWeights: 'InstructionWeights',
            hostFnWeights: 'HostFnWeightsTo264'
        },
        Schedule: {
            version: 'u32',
            enablePrintln: 'bool',
            limits: 'Limits',
            instructionWeights: 'InstructionWeights',
            hostFnWeights: 'HostFnWeights'
        },
        SeedOf: 'Hash',
        StorageDeposit: {
            _enum: {
                Refund: 'Balance',
                Charge: 'Balance'
            }
        },
        TombstoneContractInfo: 'Hash',
        TrieId: 'Bytes'
    }
};


/***/ }),

/***/ 12509:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    call: {
        deprecated: 'Use the runtime interface `api.call.contractsApi.call` instead',
        description: 'Executes a call to a contract',
        params: [
            {
                name: 'callRequest',
                type: 'ContractCallRequest'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ContractExecResult'
    },
    getStorage: {
        deprecated: 'Use the runtime interface `api.call.contractsApi.getStorage` instead',
        description: 'Returns the value under a specified storage key in a contract',
        params: [
            {
                name: 'address',
                type: 'AccountId'
            },
            {
                name: 'key',
                type: 'H256'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Option<Bytes>'
    },
    instantiate: {
        deprecated: 'Use the runtime interface `api.call.contractsApi.instantiate` instead',
        description: 'Instantiate a new contract',
        params: [
            {
                name: 'request',
                type: 'InstantiateRequestV1'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ContractInstantiateResult'
    },
    rentProjection: {
        deprecated: 'Not available in newer versions of the contracts interfaces',
        description: 'Returns the projected time a given contract will be able to sustain paying its rent',
        params: [
            {
                name: 'address',
                type: 'AccountId'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Option<BlockNumber>'
    },
    uploadCode: {
        deprecated: 'Use the runtime interface `api.call.contractsApi.uploadCode` instead',
        description: 'Upload new code without instantiating a contract from it',
        // The RPC here is terribly misnamed - somebody forgot how the RPCs
        // are actually done, ie. <module>_<camelCasedMethod>
        endpoint: 'contracts_upload_code',
        params: [
            {
                name: 'uploadRequest',
                type: 'CodeUploadRequest'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'CodeUploadResult'
    }
};


/***/ }),

/***/ 16415:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const SHARED_V1_V2 = {
    get_storage: {
        description: 'Query a given storage key in a given contract.',
        params: [
            {
                name: 'address',
                type: 'AccountId'
            },
            {
                name: 'key',
                type: 'Bytes'
            }
        ],
        type: 'Option<Bytes>'
    },
    upload_code: {
        description: 'Upload new code without instantiating a contract from it.',
        params: [
            {
                name: 'origin',
                type: 'AccountId'
            },
            {
                name: 'code',
                type: 'Bytes'
            },
            {
                name: 'storageDepositLimit',
                type: 'Option<Balance>'
            }
        ],
        type: 'CodeUploadResult'
    }
};
exports.runtime = {
    ContractsApi: [
        {
            methods: {
                call: {
                    description: 'Perform a call from a specified account to a given contract.',
                    params: [
                        {
                            name: 'origin',
                            type: 'AccountId'
                        },
                        {
                            name: 'dest',
                            type: 'AccountId'
                        },
                        {
                            name: 'value',
                            type: 'Balance'
                        },
                        {
                            name: 'gasLimit',
                            type: 'Option<WeightV2>'
                        },
                        {
                            name: 'storageDepositLimit',
                            type: 'Option<Balance>'
                        },
                        {
                            name: 'inputData',
                            type: 'Vec<u8>'
                        }
                    ],
                    type: 'ContractExecResult'
                },
                instantiate: {
                    description: 'Instantiate a new contract.',
                    params: [
                        {
                            name: 'origin',
                            type: 'AccountId'
                        },
                        {
                            name: 'value',
                            type: 'Balance'
                        },
                        {
                            name: 'gasLimit',
                            type: 'Option<WeightV2>'
                        },
                        {
                            name: 'storageDepositLimit',
                            type: 'Option<Balance>'
                        },
                        {
                            name: 'code',
                            type: 'CodeSource'
                        },
                        {
                            name: 'data',
                            type: 'Bytes'
                        },
                        {
                            name: 'salt',
                            type: 'Bytes'
                        }
                    ],
                    type: 'ContractInstantiateResult'
                },
                ...SHARED_V1_V2
            },
            version: 2
        },
        {
            methods: {
                call: {
                    description: 'Perform a call from a specified account to a given contract.',
                    params: [
                        {
                            name: 'origin',
                            type: 'AccountId'
                        },
                        {
                            name: 'dest',
                            type: 'AccountId'
                        },
                        {
                            name: 'value',
                            type: 'Balance'
                        },
                        {
                            name: 'gasLimit',
                            type: 'u64'
                        },
                        {
                            name: 'storageDepositLimit',
                            type: 'Option<Balance>'
                        },
                        {
                            name: 'inputData',
                            type: 'Vec<u8>'
                        }
                    ],
                    type: 'ContractExecResultU64'
                },
                instantiate: {
                    description: 'Instantiate a new contract.',
                    params: [
                        {
                            name: 'origin',
                            type: 'AccountId'
                        },
                        {
                            name: 'value',
                            type: 'Balance'
                        },
                        {
                            name: 'gasLimit',
                            type: 'u64'
                        },
                        {
                            name: 'storageDepositLimit',
                            type: 'Option<Balance>'
                        },
                        {
                            name: 'code',
                            type: 'CodeSource'
                        },
                        {
                            name: 'data',
                            type: 'Bytes'
                        },
                        {
                            name: 'salt',
                            type: 'Bytes'
                        }
                    ],
                    type: 'ContractInstantiateResultU64'
                },
                ...SHARED_V1_V2
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 94707:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/* eslint-disable sort-keys */
const layout = {
    ContractCryptoHasher: {
        _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']
    },
    ContractDiscriminant: 'u32',
    ContractLayoutArray: {
        offset: 'ContractLayoutKey',
        len: 'u32',
        cellsPerElem: 'u64',
        layout: 'ContractStorageLayout'
    },
    ContractLayoutCell: {
        key: 'ContractLayoutKey',
        ty: 'SiLookupTypeId'
    },
    ContractLayoutEnum: {
        dispatchKey: 'ContractLayoutKey',
        variants: 'BTreeMap<ContractDiscriminant, ContractLayoutStruct>'
    },
    ContractLayoutHash: {
        offset: 'ContractLayoutKey',
        strategy: 'ContractLayoutHashingStrategy',
        layout: 'ContractStorageLayout'
    },
    ContractLayoutHashingStrategy: {
        hasher: 'ContractCryptoHasher',
        postfix: 'Vec<u8>',
        prefix: 'Vec<u8>'
    },
    ContractLayoutKey: '[u8; 32]',
    ContractLayoutStruct: {
        fields: 'Vec<ContractLayoutStructField>'
    },
    ContractLayoutStructField: {
        layout: 'ContractStorageLayout',
        name: 'Text'
    },
    ContractStorageLayout: {
        _enum: {
            Cell: 'ContractLayoutCell',
            Hash: 'ContractLayoutHash',
            Array: 'ContractLayoutArray',
            Struct: 'ContractLayoutStruct',
            Enum: 'ContractLayoutEnum'
        }
    }
};
const spec = {
    ContractConstructorSpecV0: {
        name: 'Text',
        selector: 'ContractSelector',
        args: 'Vec<ContractMessageParamSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractConstructorSpecV1: {
        name: 'Vec<Text>',
        selector: 'ContractSelector',
        args: 'Vec<ContractMessageParamSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractConstructorSpecV2: {
        label: 'Text',
        selector: 'ContractSelector',
        args: 'Vec<ContractMessageParamSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractConstructorSpecV3: {
        label: 'Text',
        selector: 'ContractSelector',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractConstructorSpecV4: {
        label: 'Text',
        selector: 'ContractSelector',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV2>',
        docs: 'Vec<Text>',
        default: 'bool',
        returnType: 'Option<ContractTypeSpec>'
    },
    ContractContractSpecV0: {
        constructors: 'Vec<ContractConstructorSpecV0>',
        messages: 'Vec<ContractMessageSpecV0>',
        events: 'Vec<ContractEventSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractContractSpecV1: {
        constructors: 'Vec<ContractConstructorSpecV1>',
        messages: 'Vec<ContractMessageSpecV1>',
        events: 'Vec<ContractEventSpecV1>',
        docs: 'Vec<Text>'
    },
    ContractContractSpecV2: {
        constructors: 'Vec<ContractConstructorSpecV2>',
        messages: 'Vec<ContractMessageSpecV2>',
        events: 'Vec<ContractEventSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractContractSpecV3: {
        constructors: 'Vec<ContractConstructorSpecV3>',
        messages: 'Vec<ContractMessageSpecV2>',
        events: 'Vec<ContractEventSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractContractSpecV4: {
        constructors: 'Vec<ContractConstructorSpecV4>',
        messages: 'Vec<ContractMessageSpecV3>',
        events: 'Vec<ContractEventSpecV2>',
        docs: 'Vec<Text>',
        environment: 'ContractEnvironmentV4'
    },
    ContractDisplayName: 'SiPath',
    ContractEventParamSpecV0: {
        name: 'Text',
        indexed: 'bool',
        type: 'ContractTypeSpec',
        docs: 'Vec<Text>'
    },
    ContractEventParamSpecV2: {
        label: 'Text',
        indexed: 'bool',
        type: 'ContractTypeSpec',
        docs: 'Vec<Text>'
    },
    ContractEventSpecV0: {
        name: 'Text',
        args: 'Vec<ContractEventParamSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractEventSpecV1: {
        name: 'Text',
        args: 'Vec<ContractEventParamSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractEventSpecV2: {
        label: 'Text',
        args: 'Vec<ContractEventParamSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractMessageParamSpecV0: {
        name: 'Text',
        type: 'ContractTypeSpec'
    },
    ContractMessageParamSpecV2: {
        label: 'Text',
        type: 'ContractTypeSpec'
    },
    ContractMessageSpecV0: {
        name: 'Text',
        selector: 'ContractSelector',
        mutates: 'bool',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV0>',
        returnType: 'Option<ContractTypeSpec>',
        docs: 'Vec<Text>'
    },
    ContractMessageSpecV1: {
        name: 'Vec<Text>',
        selector: 'ContractSelector',
        mutates: 'bool',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV0>',
        returnType: 'Option<ContractTypeSpec>',
        docs: 'Vec<Text>'
    },
    ContractMessageSpecV2: {
        label: 'Text',
        selector: 'ContractSelector',
        mutates: 'bool',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV2>',
        returnType: 'Option<ContractTypeSpec>',
        docs: 'Vec<Text>'
    },
    ContractMessageSpecV3: {
        label: 'Text',
        selector: 'ContractSelector',
        mutates: 'bool',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV2>',
        returnType: 'Option<ContractTypeSpec>',
        docs: 'Vec<Text>',
        default: 'bool'
    },
    ContractSelector: '[u8; 4]',
    ContractTypeSpec: {
        type: 'SiLookupTypeId',
        displayName: 'ContractDisplayName'
    }
};
const latest = {
    ContractConstructorSpecLatest: 'ContractConstructorSpecV4',
    ContractEventSpecLatest: 'ContractEventSpecV2',
    ContractEventParamSpecLatest: 'ContractEventParamSpecV2',
    ContractMessageParamSpecLatest: 'ContractMessageParamSpecV2',
    ContractMessageSpecLatest: 'ContractMessageSpecV3',
    ContractMetadataLatest: 'ContractMetadataV4'
};
exports["default"] = {
    rpc: {},
    types: {
        ...layout,
        ...spec,
        ...latest,
        ContractProjectInfo: {
            source: 'ContractProjectSource',
            contract: 'ContractProjectContract'
        },
        ContractMetadataV0: {
            metadataVersion: 'Text',
            types: 'Vec<Si0Type>',
            spec: 'ContractContractSpecV0'
        },
        ContractMetadataV1: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV1'
        },
        ContractMetadataV2: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV2'
        },
        ContractMetadataV3: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV3'
        },
        ContractMetadataV4: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV4'
        },
        ContractMetadata: {
            _enum: {
                V0: 'ContractMetadataV0',
                V1: 'ContractMetadataV1',
                V2: 'ContractMetadataV2',
                V3: 'ContractMetadataV3',
                V4: 'ContractMetadataV4'
            }
        },
        ContractProjectV0: {
            metadataVersion: 'Text',
            source: 'ContractProjectSource',
            contract: 'ContractProjectContract',
            types: 'Vec<Si0Type>',
            spec: 'ContractContractSpecV0'
        },
        ContractProject: '(ContractProjectInfo, ContractMetadata)',
        ContractProjectContract: {
            _alias: {
                docs: 'documentation'
            },
            name: 'Text',
            version: 'Text',
            authors: 'Vec<Text>',
            description: 'Option<Text>',
            docs: 'Option<Text>',
            repository: 'Option<Text>',
            homepage: 'Option<Text>',
            license: 'Option<Text>'
        },
        ContractProjectSource: {
            _alias: {
                wasmHash: 'hash'
            },
            wasmHash: '[u8; 32]',
            language: 'Text',
            compiler: 'Text',
            wasm: 'Raw'
        },
        ContractEnvironmentV4: {
            _alias: {
                hashType: 'hash'
            },
            // NOTE These are not marked optional in the Rust code, however since we
            // convert from older versions to newer, we may not have these fields.
            // The Option<...> works since our inputs are always JSON, so it will
            // be None when not specified.
            //
            // Additionally we don't mark the full structure as Option, rather we
            // do it on a per-field basis since fields may be added as the versions
            // progress.
            accountId: 'Option<ContractTypeSpec>',
            balance: 'Option<ContractTypeSpec>',
            blockNumber: 'Option<ContractTypeSpec>',
            hashType: 'Option<ContractTypeSpec>',
            timestamp: 'Option<ContractTypeSpec>',
            maxEventTopics: 'Option<u32>'
        }
    }
};


/***/ }),

/***/ 44676:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        FundIndex: 'u32',
        LastContribution: {
            _enum: {
                Never: 'Null',
                PreEnding: 'u32',
                Ending: 'BlockNumber'
            }
        },
        FundInfo: {
            depositor: 'AccountId',
            verifier: 'Option<MultiSigner>',
            deposit: 'Balance',
            raised: 'Balance',
            end: 'BlockNumber',
            cap: 'Balance',
            lastContribution: 'LastContribution',
            firstPeriod: 'LeasePeriod',
            lastPeriod: 'LeasePeriod',
            trieIndex: 'TrieIndex'
        },
        TrieIndex: 'u32'
    }
};


/***/ }),

/***/ 71360:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(40756);
const dmpQueue = {
    CollationInfo: {
        upwardMessages: 'Vec<UpwardMessage>',
        horizontalMessages: 'Vec<OutboundHrmpMessage>',
        newValidationCode: 'Option<ValidationCode>',
        processedDownwardMessages: 'u32',
        hrmpWatermark: 'RelayBlockNumber',
        headData: 'HeadData'
    },
    CollationInfoV1: {
        upwardMessages: 'Vec<UpwardMessage>',
        horizontalMessages: 'Vec<OutboundHrmpMessage>',
        newValidationCode: 'Option<ValidationCode>',
        processedDownwardMessages: 'u32',
        hrmpWatermark: 'RelayBlockNumber'
    },
    ConfigData: {
        maxIndividual: 'Weight'
    },
    MessageId: '[u8; 32]',
    OverweightIndex: 'u64',
    PageCounter: 'u32',
    PageIndexData: {
        beginUsed: 'PageCounter',
        endUsed: 'PageCounter',
        overweightCount: 'OverweightIndex'
    }
};
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: dmpQueue
};


/***/ }),

/***/ 40756:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    CollectCollationInfo: [
        {
            methods: {
                collect_collation_info: {
                    description: 'Collect information about a collation.',
                    params: [
                        {
                            name: 'header',
                            type: 'Header'
                        }
                    ],
                    type: 'CollationInfo'
                }
            },
            version: 2
        },
        {
            methods: {
                collect_collation_info: {
                    description: 'Collect information about a collation.',
                    params: [],
                    type: 'CollationInfoV1'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 36967:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.crowdloan = exports.claims = exports.bridges = exports.attestations = exports.vesting = exports.utility = exports.uniques = exports.txqueue = exports.txpayment = exports.treasury = exports.system = exports.syncstate = exports.support = exports.staking = exports.society = exports.session = exports.scheduler = exports.recovery = exports.proxy = exports.pow = exports.offences = exports.nompools = exports.nfts = exports.mmr = exports.lottery = exports.imOnline = exports.identity = exports.grandpa = exports.gilt = exports.genericAsset = exports.fungibles = exports.extrinsics = exports.evm = exports.engine = exports.elections = exports.discovery = exports.dev = exports.democracy = exports.contracts = exports.consensus = exports.collective = exports.blockbuilder = exports.benchmark = exports.beefy = exports.balances = exports.babe = exports.authorship = exports.aura = exports.assets = exports.assetConversion = void 0;
exports.state = exports.payment = exports.offchain = exports.childstate = exports.chain = exports.author = exports.rpc = exports.ormlTokens = exports.ormlOracle = exports.nimbus = exports.eth = exports.contractsAbi = exports.xcm = exports.purchase = exports.poll = exports.parachains = exports.finality = exports.cumulus = void 0;
const tslib_1 = __nccwpck_require__(19684);
tslib_1.__exportStar(__nccwpck_require__(38437), exports);
var definitions_js_1 = __nccwpck_require__(64336);
Object.defineProperty(exports, "assetConversion", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_1).default; } }));
var definitions_js_2 = __nccwpck_require__(77827);
Object.defineProperty(exports, "assets", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_2).default; } }));
var definitions_js_3 = __nccwpck_require__(49427);
Object.defineProperty(exports, "aura", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_3).default; } }));
var definitions_js_4 = __nccwpck_require__(11815);
Object.defineProperty(exports, "authorship", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_4).default; } }));
var definitions_js_5 = __nccwpck_require__(70594);
Object.defineProperty(exports, "babe", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_5).default; } }));
var definitions_js_6 = __nccwpck_require__(15466);
Object.defineProperty(exports, "balances", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_6).default; } }));
var definitions_js_7 = __nccwpck_require__(36388);
Object.defineProperty(exports, "beefy", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_7).default; } }));
var definitions_js_8 = __nccwpck_require__(65133);
Object.defineProperty(exports, "benchmark", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_8).default; } }));
var definitions_js_9 = __nccwpck_require__(680);
Object.defineProperty(exports, "blockbuilder", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_9).default; } }));
var definitions_js_10 = __nccwpck_require__(76018);
Object.defineProperty(exports, "collective", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_10).default; } }));
var definitions_js_11 = __nccwpck_require__(82753);
Object.defineProperty(exports, "consensus", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_11).default; } }));
var definitions_js_12 = __nccwpck_require__(15524);
Object.defineProperty(exports, "contracts", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_12).default; } }));
var definitions_js_13 = __nccwpck_require__(16959);
Object.defineProperty(exports, "democracy", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_13).default; } }));
var definitions_js_14 = __nccwpck_require__(83804);
Object.defineProperty(exports, "dev", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_14).default; } }));
var definitions_js_15 = __nccwpck_require__(50732);
Object.defineProperty(exports, "discovery", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_15).default; } }));
var definitions_js_16 = __nccwpck_require__(34909);
Object.defineProperty(exports, "elections", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_16).default; } }));
var definitions_js_17 = __nccwpck_require__(61301);
Object.defineProperty(exports, "engine", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_17).default; } }));
var definitions_js_18 = __nccwpck_require__(13211);
Object.defineProperty(exports, "evm", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_18).default; } }));
var definitions_js_19 = __nccwpck_require__(23400);
Object.defineProperty(exports, "extrinsics", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_19).default; } }));
var definitions_js_20 = __nccwpck_require__(50737);
Object.defineProperty(exports, "fungibles", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_20).default; } }));
var definitions_js_21 = __nccwpck_require__(84934);
Object.defineProperty(exports, "genericAsset", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_21).default; } }));
var definitions_js_22 = __nccwpck_require__(90462);
Object.defineProperty(exports, "gilt", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_22).default; } }));
var definitions_js_23 = __nccwpck_require__(17282);
Object.defineProperty(exports, "grandpa", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_23).default; } }));
var definitions_js_24 = __nccwpck_require__(41689);
Object.defineProperty(exports, "identity", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_24).default; } }));
var definitions_js_25 = __nccwpck_require__(64335);
Object.defineProperty(exports, "imOnline", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_25).default; } }));
var definitions_js_26 = __nccwpck_require__(23394);
Object.defineProperty(exports, "lottery", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_26).default; } }));
var definitions_js_27 = __nccwpck_require__(46325);
Object.defineProperty(exports, "mmr", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_27).default; } }));
var definitions_js_28 = __nccwpck_require__(9269);
Object.defineProperty(exports, "nfts", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_28).default; } }));
var definitions_js_29 = __nccwpck_require__(82060);
Object.defineProperty(exports, "nompools", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_29).default; } }));
var definitions_js_30 = __nccwpck_require__(54476);
Object.defineProperty(exports, "offences", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_30).default; } }));
var definitions_js_31 = __nccwpck_require__(38399);
Object.defineProperty(exports, "pow", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_31).default; } }));
var definitions_js_32 = __nccwpck_require__(43327);
Object.defineProperty(exports, "proxy", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_32).default; } }));
var definitions_js_33 = __nccwpck_require__(42865);
Object.defineProperty(exports, "recovery", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_33).default; } }));
var definitions_js_34 = __nccwpck_require__(79269);
Object.defineProperty(exports, "scheduler", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_34).default; } }));
var definitions_js_35 = __nccwpck_require__(34647);
Object.defineProperty(exports, "session", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_35).default; } }));
var definitions_js_36 = __nccwpck_require__(9620);
Object.defineProperty(exports, "society", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_36).default; } }));
var definitions_js_37 = __nccwpck_require__(44947);
Object.defineProperty(exports, "staking", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_37).default; } }));
var definitions_js_38 = __nccwpck_require__(13975);
Object.defineProperty(exports, "support", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_38).default; } }));
var definitions_js_39 = __nccwpck_require__(34117);
Object.defineProperty(exports, "syncstate", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_39).default; } }));
var definitions_js_40 = __nccwpck_require__(82068);
Object.defineProperty(exports, "system", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_40).default; } }));
var definitions_js_41 = __nccwpck_require__(69152);
Object.defineProperty(exports, "treasury", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_41).default; } }));
var definitions_js_42 = __nccwpck_require__(93118);
Object.defineProperty(exports, "txpayment", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_42).default; } }));
var definitions_js_43 = __nccwpck_require__(29582);
Object.defineProperty(exports, "txqueue", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_43).default; } }));
var definitions_js_44 = __nccwpck_require__(45928);
Object.defineProperty(exports, "uniques", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_44).default; } }));
var definitions_js_45 = __nccwpck_require__(49795);
Object.defineProperty(exports, "utility", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_45).default; } }));
var definitions_js_46 = __nccwpck_require__(31958);
Object.defineProperty(exports, "vesting", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_46).default; } }));
var definitions_js_47 = __nccwpck_require__(81428);
Object.defineProperty(exports, "attestations", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_47).default; } }));
var definitions_js_48 = __nccwpck_require__(8586);
Object.defineProperty(exports, "bridges", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_48).default; } }));
var definitions_js_49 = __nccwpck_require__(74264);
Object.defineProperty(exports, "claims", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_49).default; } }));
var definitions_js_50 = __nccwpck_require__(44676);
Object.defineProperty(exports, "crowdloan", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_50).default; } }));
var definitions_js_51 = __nccwpck_require__(71360);
Object.defineProperty(exports, "cumulus", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_51).default; } }));
var definitions_js_52 = __nccwpck_require__(74970);
Object.defineProperty(exports, "finality", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_52).default; } }));
var definitions_js_53 = __nccwpck_require__(74096);
Object.defineProperty(exports, "parachains", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_53).default; } }));
var definitions_js_54 = __nccwpck_require__(40961);
Object.defineProperty(exports, "poll", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_54).default; } }));
var definitions_js_55 = __nccwpck_require__(71375);
Object.defineProperty(exports, "purchase", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_55).default; } }));
var definitions_js_56 = __nccwpck_require__(86392);
Object.defineProperty(exports, "xcm", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_56).default; } }));
var definitions_js_57 = __nccwpck_require__(94707);
Object.defineProperty(exports, "contractsAbi", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_57).default; } }));
var definitions_js_58 = __nccwpck_require__(98833);
Object.defineProperty(exports, "eth", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_58).default; } }));
var definitions_js_59 = __nccwpck_require__(22988);
Object.defineProperty(exports, "nimbus", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_59).default; } }));
var definitions_js_60 = __nccwpck_require__(84598);
Object.defineProperty(exports, "ormlOracle", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_60).default; } }));
var definitions_js_61 = __nccwpck_require__(57387);
Object.defineProperty(exports, "ormlTokens", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_61).default; } }));
var definitions_js_62 = __nccwpck_require__(36300);
Object.defineProperty(exports, "rpc", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_62).default; } }));
var definitions_js_63 = __nccwpck_require__(38602);
Object.defineProperty(exports, "author", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_63).default; } }));
var definitions_js_64 = __nccwpck_require__(94380);
Object.defineProperty(exports, "chain", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_64).default; } }));
var definitions_js_65 = __nccwpck_require__(95929);
Object.defineProperty(exports, "childstate", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_65).default; } }));
var definitions_js_66 = __nccwpck_require__(80690);
Object.defineProperty(exports, "offchain", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_66).default; } }));
var definitions_js_67 = __nccwpck_require__(32952);
Object.defineProperty(exports, "payment", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_67).default; } }));
var definitions_js_68 = __nccwpck_require__(50494);
Object.defineProperty(exports, "state", ({ enumerable: true, get: function () { return tslib_1.__importDefault(definitions_js_68).default; } }));


/***/ }),

/***/ 16959:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AllConvictions = void 0;
exports.AllConvictions = [
    // 0.1x votes, unlocked.
    'None',
    // 1x votes, locked for an enactment period following a successful vote.
    'Locked1x',
    // 2x votes, locked for 2x enactment periods following a successful vote.
    'Locked2x',
    // 3x votes, locked for 4x...
    'Locked3x',
    // 4x votes, locked for 8x...
    'Locked4x',
    // 5x votes, locked for 16x...
    'Locked5x',
    // 6x votes, locked for 32x...
    'Locked6x'
];
exports["default"] = {
    rpc: {},
    types: {
        AccountVote: {
            _enum: {
                Standard: 'AccountVoteStandard',
                Split: 'AccountVoteSplit'
            }
        },
        AccountVoteSplit: {
            aye: 'Balance',
            nay: 'Balance'
        },
        AccountVoteStandard: {
            vote: 'Vote',
            balance: 'Balance'
        },
        Conviction: {
            _enum: exports.AllConvictions
        },
        Delegations: {
            votes: 'Balance',
            capital: 'Balance'
        },
        PreimageStatus: {
            _enum: {
                Missing: 'BlockNumber',
                Available: 'PreimageStatusAvailable'
            }
        },
        PreimageStatusAvailable: {
            data: 'Bytes',
            provider: 'AccountId',
            deposit: 'Balance',
            since: 'BlockNumber',
            expiry: 'Option<BlockNumber>'
        },
        PriorLock: '(BlockNumber, Balance)',
        PropIndex: 'u32',
        Proposal: 'Call',
        ProxyState: {
            _enum: {
                Open: 'AccountId',
                Active: 'AccountId'
            }
        },
        ReferendumIndex: 'u32',
        ReferendumInfoTo239: {
            end: 'BlockNumber',
            proposalHash: 'Hash',
            threshold: 'VoteThreshold',
            delay: 'BlockNumber'
        },
        ReferendumInfo: {
            _enum: {
                Ongoing: 'ReferendumStatus',
                Finished: 'ReferendumInfoFinished'
            }
        },
        ReferendumInfoFinished: {
            approved: 'bool',
            end: 'BlockNumber'
        },
        ReferendumStatus: {
            end: 'BlockNumber',
            proposalHash: 'Hash',
            threshold: 'VoteThreshold',
            delay: 'BlockNumber',
            tally: 'Tally'
        },
        Tally: {
            ayes: 'Balance',
            nays: 'Balance',
            turnout: 'Balance'
        },
        Voting: {
            _enum: {
                Direct: 'VotingDirect',
                Delegating: 'VotingDelegating'
            }
        },
        VotingDirect: {
            votes: 'Vec<VotingDirectVote>',
            delegations: 'Delegations',
            prior: 'PriorLock'
        },
        VotingDirectVote: '(ReferendumIndex, AccountVote)',
        VotingDelegating: {
            balance: 'Balance',
            target: 'AccountId',
            conviction: 'Conviction',
            delegations: 'Delegations',
            prior: 'PriorLock'
        }
    }
};


/***/ }),

/***/ 83804:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(19528);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    types: {
        BlockStats: {
            witnessLen: 'u64',
            witnessCompactLen: 'u64',
            blockLen: 'u64',
            blockNumExtrinsics: 'u64'
        }
    }
};


/***/ }),

/***/ 19528:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    getBlockStats: {
        description: 'Reexecute the specified `block_hash` and gather statistics while doing so',
        isUnsafe: true,
        params: [
            {
                isHistoric: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Option<BlockStats>'
    }
};


/***/ }),

/***/ 50732:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(74729);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {}
};


/***/ }),

/***/ 74729:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    AuthorityDiscoveryApi: [
        {
            methods: {
                authorities: {
                    description: 'Retrieve authority identifiers of the current and next authority set.',
                    params: [],
                    type: 'Vec<AuthorityId>'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 34909:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        ApprovalFlag: 'u32',
        DefunctVoter: {
            who: 'AccountId',
            voteCount: 'Compact<u32>',
            candidateCount: 'Compact<u32>'
        },
        Renouncing: {
            _enum: {
                Member: 'Null',
                RunnerUp: 'Null',
                Candidate: 'Compact<u32>'
            }
        },
        SetIndex: 'u32',
        Vote: 'GenericVote',
        VoteIndex: 'u32',
        VoterInfo: {
            lastActive: 'VoteIndex',
            lastWin: 'VoteIndex',
            pot: 'Balance',
            stake: 'Balance'
        },
        VoteThreshold: {
            _enum: [
                'Super Majority Approve',
                'Super Majority Against',
                'Simple Majority'
            ]
        }
    }
};


/***/ }),

/***/ 61301:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(9200);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    types: {
        CreatedBlock: {
            _alias: {
                blockHash: 'hash'
            },
            blockHash: 'BlockHash',
            aux: 'ImportedAux'
        },
        ImportedAux: {
            headerOnly: 'bool',
            clearJustificationRequests: 'bool',
            needsJustification: 'bool',
            badJustification: 'bool',
            needsFinalityProof: 'bool',
            isNewBest: 'bool'
        }
    }
};


/***/ }),

/***/ 9200:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    createBlock: {
        description: 'Instructs the manual-seal authorship task to create a new block',
        params: [
            {
                name: 'createEmpty',
                type: 'bool'
            },
            {
                name: 'finalize',
                type: 'bool'
            },
            {
                isOptional: true,
                name: 'parentHash',
                type: 'BlockHash'
            }
        ],
        type: 'CreatedBlock'
    },
    finalizeBlock: {
        description: 'Instructs the manual-seal authorship task to finalize a block',
        params: [
            {
                name: 'hash',
                type: 'BlockHash'
            },
            {
                isOptional: true,
                name: 'justification',
                type: 'Justification'
            }
        ],
        type: 'bool'
    }
};


/***/ }),

/***/ 38437:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scaleInfo = exports.runtime = exports.metadata = void 0;
var definitions_js_1 = __nccwpck_require__(57861);
Object.defineProperty(exports, "metadata", ({ enumerable: true, get: function () { return __importDefault(definitions_js_1).default; } }));
var definitions_js_2 = __nccwpck_require__(77010);
Object.defineProperty(exports, "runtime", ({ enumerable: true, get: function () { return __importDefault(definitions_js_2).default; } }));
var definitions_js_3 = __nccwpck_require__(61263);
Object.defineProperty(exports, "scaleInfo", ({ enumerable: true, get: function () { return __importDefault(definitions_js_3).default; } }));


/***/ }),

/***/ 98833:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(9475);
const runtime_js_1 = __nccwpck_require__(33051);
const V0 = {
    BlockV0: {
        header: 'EthHeader',
        transactions: 'Vec<TransactionV0>',
        ommers: 'Vec<EthHeader>'
    },
    LegacyTransaction: {
        nonce: 'U256',
        gasPrice: 'U256',
        gasLimit: 'U256',
        action: 'EthTransactionAction',
        value: 'U256',
        input: 'Bytes',
        signature: 'EthTransactionSignature'
    },
    TransactionV0: 'LegacyTransaction'
};
const V1 = {
    BlockV1: {
        header: 'EthHeader',
        transactions: 'Vec<TransactionV1>',
        ommers: 'Vec<EthHeader>'
    },
    EIP2930Transaction: {
        chainId: 'u64',
        nonce: 'U256',
        gasPrice: 'U256',
        gasLimit: 'U256',
        action: 'EthTransactionAction',
        value: 'U256',
        input: 'Bytes',
        accessList: 'EthAccessList',
        oddYParity: 'bool',
        r: 'H256',
        s: 'H256'
    },
    TransactionV1: {
        _enum: {
            Legacy: 'LegacyTransaction',
            EIP2930: 'EIP2930Transaction'
        }
    }
};
const V2 = {
    BlockV2: {
        header: 'EthHeader',
        transactions: 'Vec<TransactionV2>',
        ommers: 'Vec<EthHeader>'
    },
    EIP1559Transaction: {
        chainId: 'u64',
        nonce: 'U256',
        maxPriorityFeePerGas: 'U256',
        maxFeePerGas: 'U256',
        gasLimit: 'U256',
        action: 'EthTransactionAction',
        value: 'U256',
        input: 'Bytes',
        accessList: 'EthAccessList',
        oddYParity: 'bool',
        r: 'H256',
        s: 'H256'
    },
    TransactionV2: {
        _enum: {
            Legacy: 'LegacyTransaction',
            EIP2930: 'EIP2930Transaction',
            EIP1559: 'EIP1559Transaction'
        }
    }
};
const types = {
    ...V0,
    ...V1,
    ...V2,
    EthereumAccountId: 'GenericEthereumAccountId',
    EthereumAddress: 'GenericEthereumAccountId',
    EthereumLookupSource: 'GenericEthereumLookupSource',
    EthereumSignature: '[u8; 65]',
    EthAccessListItem: {
        address: 'EthAddress',
        slots: 'Vec<H256>'
    },
    EthAccessList: 'Vec<EthAccessListItem>',
    EthAccount: {
        address: 'EthAddress',
        balance: 'U256',
        nonce: 'U256',
        codeHash: 'H256',
        storageHash: 'H256',
        accountProof: 'Vec<Bytes>',
        storageProof: 'Vec<EthStorageProof>'
    },
    EthAddress: 'H160',
    EthBlock: {
        header: 'EthHeader',
        transactions: 'Vec<EthTransaction>',
        ommers: 'Vec<EthHeader>'
    },
    EthHeader: {
        parentHash: 'H256',
        ommersHash: 'H256',
        beneficiary: 'EthAddress',
        stateRoot: 'H256',
        transactionsRoot: 'H256',
        receiptsRoot: 'H256',
        logsBloom: 'EthBloom',
        difficulty: 'U256',
        number: 'U256',
        gasLimit: 'U256',
        gasUsed: 'U256',
        timestamp: 'u64',
        extraData: 'Bytes',
        mixMash: 'H256',
        nonce: 'H64'
    },
    EthRichBlock: {
        _alias: {
            blockHash: 'hash',
            blockSize: 'size'
        },
        blockHash: 'Option<H256>',
        parentHash: 'H256',
        sha3Uncles: 'H256',
        author: 'EthAddress',
        miner: 'EthAddress',
        stateRoot: 'H256',
        transactionsRoot: 'H256',
        receiptsRoot: 'H256',
        number: 'Option<U256>',
        gasUsed: 'U256',
        gasLimit: 'U256',
        extraData: 'Bytes',
        logsBloom: 'EthBloom',
        timestamp: 'U256',
        difficulty: 'U256',
        totalDifficulty: 'Option<U256>',
        sealFields: 'Vec<Bytes>',
        uncles: 'Vec<H256>',
        transactions: 'Vec<EthTransaction>',
        blockSize: 'Option<U256>'
    },
    EthBloom: 'H2048',
    EthCallRequest: {
        from: 'Option<EthAddress>',
        to: 'Option<EthAddress>',
        gasPrice: 'Option<U256>',
        gas: 'Option<U256>',
        value: 'Option<U256>',
        data: 'Option<Bytes>',
        nonce: 'Option<U256>'
    },
    EthFeeHistory: {
        oldestBlock: 'U256',
        baseFeePerGas: 'Vec<U256>',
        gasUsedRatio: 'Vec<f64>',
        reward: 'Option<Vec<Vec<U256>>>'
    },
    EthFilter: {
        fromBlock: 'Option<BlockNumber>',
        toBlock: 'Option<BlockNumber>',
        blockHash: 'Option<H256>',
        address: 'Option<EthFilterAddress>',
        topics: 'Option<EthFilterTopic>'
    },
    EthFilterAddress: {
        _enum: {
            Single: 'EthAddress',
            Multiple: 'Vec<EthAddress>',
            Null: 'Null'
        }
    },
    EthFilterChanges: {
        _enum: {
            Logs: 'Vec<EthLog>',
            Hashes: 'Vec<H256>',
            Empty: 'Null'
        }
    },
    EthFilterTopic: {
        _enum: {
            Single: 'EthFilterTopicInner',
            Multiple: 'Vec<EthFilterTopicInner>',
            Null: 'Null'
        }
    },
    EthFilterTopicEntry: 'Option<H256>',
    EthFilterTopicInner: {
        _enum: {
            Single: 'EthFilterTopicEntry',
            Multiple: 'Vec<EthFilterTopicEntry>',
            Null: 'Null'
        }
    },
    EthRichHeader: {
        _alias: {
            blockHash: 'hash',
            blockSize: 'size'
        },
        blockHash: 'Option<H256>',
        parentHash: 'H256',
        sha3Uncles: 'H256',
        author: 'EthAddress',
        miner: 'EthAddress',
        stateRoot: 'H256',
        transactionsRoot: 'H256',
        receiptsRoot: 'H256',
        number: 'Option<U256>',
        gasUsed: 'U256',
        gasLimit: 'U256',
        extraData: 'Bytes',
        logsBloom: 'EthBloom',
        timestamp: 'U256',
        difficulty: 'U256',
        sealFields: 'Vec<Bytes>',
        blockSize: 'Option<U256>'
    },
    EthLog: {
        address: 'EthAddress',
        topics: 'Vec<H256>',
        data: 'Bytes',
        blockHash: 'Option<H256>',
        blockNumber: 'Option<U256>',
        transactionHash: 'Option<H256>',
        transactionIndex: 'Option<U256>',
        logIndex: 'Option<U256>',
        transactionLogIndex: 'Option<U256>',
        removed: 'bool'
    },
    EthReceipt: {
        transactionHash: 'Option<H256>',
        transactionIndex: 'Option<U256>',
        blockHash: 'Option<H256>',
        from: 'Option<EthAddress>',
        to: 'Option<EthAddress>',
        blockNumber: 'Option<U256>',
        cumulativeGasUsed: 'U256',
        gasUsed: 'Option<U256>',
        contractAddress: 'Option<EthAddress>',
        logs: 'Vec<EthLog>',
        root: 'Option<H256>',
        logsBloom: 'EthBloom',
        statusCode: 'Option<U64>'
    },
    // not convinced, however the original commit matches, so... (maybe V3 is incorrect?)
    EthReceiptV0: 'EthReceipt',
    EthReceiptV3: 'EthReceipt',
    EthStorageProof: {
        key: 'U256',
        value: 'U256',
        proof: 'Vec<Bytes>'
    },
    EthSubKind: {
        _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']
    },
    EthSubParams: {
        _enum: {
            None: 'Null',
            Logs: 'EthFilter'
        }
    },
    EthSubResult: {
        _enum: {
            Header: 'EthRichHeader',
            Log: 'EthLog',
            TransactionHash: 'H256',
            SyncState: 'EthSyncStatus'
        }
    },
    EthSyncInfo: {
        startingBlock: 'U256',
        currentBlock: 'U256',
        highestBlock: 'U256',
        warpChunksAmount: 'Option<U256>',
        warpChunksProcessed: 'Option<U256>'
    },
    EthSyncStatus: {
        _enum: {
            Info: 'EthSyncInfo',
            None: 'Null'
        }
    },
    EthTransaction: {
        hash: 'H256',
        nonce: 'U256',
        blockHash: 'Option<H256>',
        blockNumber: 'Option<U256>',
        transactionIndex: 'Option<U256>',
        from: 'H160',
        to: 'Option<H160>',
        value: 'U256',
        gasPrice: 'Option<U256>',
        maxFeePerGas: 'Option<U256>',
        maxPriorityFeePerGas: 'Option<U256>',
        gas: 'U256',
        input: 'Bytes',
        creates: 'Option<H160>',
        raw: 'Bytes',
        publicKey: 'Option<H512>',
        chainId: 'Option<U64>',
        standardV: 'U256',
        v: 'U256',
        r: 'U256',
        s: 'U256',
        accessList: 'Option<Vec<EthAccessListItem>>',
        transactionType: 'Option<U256>'
    },
    EthTransactionSignature: {
        v: 'u64',
        r: 'H256',
        s: 'H256'
    },
    EthTransactionAction: {
        _enum: {
            Call: 'H160',
            Create: 'Null'
        }
    },
    EthTransactionCondition: {
        _enum: {
            block: 'u64',
            time: 'u64'
        }
    },
    EthTransactionRequest: {
        from: 'Option<EthAddress>',
        to: 'Option<EthAddress>',
        gasPrice: 'Option<U256>',
        gas: 'Option<U256>',
        value: 'Option<U256>',
        data: 'Option<Bytes>',
        nonce: 'Option<U256>'
    },
    EthTransactionStatus: {
        transactionHash: 'H256',
        transactionIndex: 'u32',
        from: 'EthAddress',
        to: 'Option<EthAddress>',
        contractAddress: 'Option<EthAddress>',
        logs: 'Vec<EthLog>',
        logsBloom: 'EthBloom'
    },
    EthWork: {
        powHash: 'H256',
        seedHash: 'H256',
        target: 'H256',
        number: 'Option<u64>'
    }
};
exports["default"] = { rpc: rpc_js_1.rpc, runtime: runtime_js_1.runtime, types };


/***/ }),

/***/ 9475:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
const netRpc = {
    listening: {
        aliasSection: 'net',
        description: 'Returns true if client is actively listening for network connections. Otherwise false.',
        params: [],
        type: 'bool'
    },
    peerCount: {
        aliasSection: 'net',
        description: 'Returns number of peers connected to node.',
        params: [],
        type: 'Text'
    },
    version: {
        aliasSection: 'net',
        description: 'Returns protocol version.',
        params: [],
        type: 'Text'
    }
};
const web3Rpc = {
    clientVersion: {
        aliasSection: 'web3',
        description: 'Returns current client version.',
        params: [],
        type: 'Text'
    },
    sha3: {
        aliasSection: 'web3',
        description: 'Returns sha3 of the given data',
        params: [{ name: 'data', type: 'Bytes' }],
        type: 'H256'
    }
};
exports.rpc = {
    ...netRpc,
    ...web3Rpc,
    accounts: {
        description: 'Returns accounts list.',
        params: [],
        type: 'Vec<H160>'
    },
    blockNumber: {
        description: 'Returns the blockNumber',
        params: [],
        type: 'U256'
    },
    call: {
        description: 'Call contract, returning the output data.',
        params: [
            {
                name: 'request',
                type: 'EthCallRequest'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'Bytes'
    },
    chainId: {
        description: 'Returns the chain ID used for transaction signing at the current best block. None is returned if not available.',
        params: [],
        type: 'U64'
    },
    coinbase: {
        description: 'Returns block author.',
        params: [],
        type: 'H160'
    },
    estimateGas: {
        description: 'Estimate gas needed for execution of given contract.',
        params: [
            {
                name: 'request',
                type: 'EthCallRequest'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    feeHistory: {
        description: 'Returns fee history for given block count & reward percentiles',
        params: [
            {
                name: 'blockCount',
                type: 'U256'
            },
            {
                name: 'newestBlock',
                type: 'BlockNumber'
            },
            {
                name: 'rewardPercentiles',
                type: 'Option<Vec<f64>>'
            }
        ],
        type: 'EthFeeHistory'
    },
    gasPrice: {
        description: 'Returns current gas price.',
        params: [],
        type: 'U256'
    },
    getBalance: {
        description: 'Returns balance of the given account.',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    getBlockByHash: {
        description: 'Returns block with given hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            },
            {
                name: 'full',
                type: 'bool'
            }
        ],
        type: 'Option<EthRichBlock>'
    },
    getBlockByNumber: {
        description: 'Returns block with given number.',
        params: [
            {
                name: 'block',
                type: 'BlockNumber'
            },
            { name: 'full', type: 'bool' }
        ],
        type: 'Option<EthRichBlock>'
    },
    getBlockTransactionCountByHash: {
        description: 'Returns the number of transactions in a block with given hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'U256'
    },
    getBlockTransactionCountByNumber: {
        description: 'Returns the number of transactions in a block with given block number.',
        params: [
            {
                name: 'block',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    getCode: {
        description: 'Returns the code at given address at given time (block number).',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'Bytes'
    },
    getFilterChanges: {
        description: 'Returns filter changes since last poll.',
        params: [
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthFilterChanges'
    },
    getFilterLogs: {
        description: 'Returns all logs matching given filter (in a range \'from\' - \'to\').',
        params: [
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'Vec<EthLog>'
    },
    getLogs: {
        description: 'Returns logs matching given filter object.',
        params: [
            {
                name: 'filter',
                type: 'EthFilter'
            }
        ],
        type: 'Vec<EthLog>'
    },
    getProof: {
        description: 'Returns proof for account and storage.',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                name: 'storageKeys',
                type: 'Vec<H256>'
            },
            {
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'EthAccount'
    },
    getStorageAt: {
        description: 'Returns content of the storage at given address.',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                name: 'index',
                type: 'U256'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'H256'
    },
    getTransactionByBlockHashAndIndex: {
        description: 'Returns transaction at given block hash and index.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            },
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthTransaction'
    },
    getTransactionByBlockNumberAndIndex: {
        description: 'Returns transaction by given block number and index.',
        params: [
            {
                name: 'number',
                type: 'BlockNumber'
            },
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthTransaction'
    },
    getTransactionByHash: {
        description: 'Get transaction by its hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'EthTransaction'
    },
    getTransactionCount: {
        description: 'Returns the number of transactions sent from given address at given time (block number).',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    getTransactionReceipt: {
        description: 'Returns transaction receipt by transaction hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'EthReceipt'
    },
    getUncleByBlockHashAndIndex: {
        description: 'Returns an uncles at given block and index.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            },
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthRichBlock'
    },
    getUncleByBlockNumberAndIndex: {
        description: 'Returns an uncles at given block and index.',
        params: [
            {
                name: 'number',
                type: 'BlockNumber'
            },
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthRichBlock'
    },
    getUncleCountByBlockHash: {
        description: 'Returns the number of uncles in a block with given hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'U256'
    },
    getUncleCountByBlockNumber: {
        description: 'Returns the number of uncles in a block with given block number.',
        params: [
            {
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    getWork: {
        description: 'Returns the hash of the current block, the seedHash, and the boundary condition to be met.',
        params: [],
        type: 'EthWork'
    },
    hashrate: {
        description: 'Returns the number of hashes per second that the node is mining with.',
        params: [],
        type: 'U256'
    },
    maxPriorityFeePerGas: {
        description: 'Returns max priority fee per gas',
        params: [],
        type: 'U256'
    },
    mining: {
        description: 'Returns true if client is actively mining new blocks.',
        params: [],
        type: 'bool'
    },
    newBlockFilter: {
        description: 'Returns id of new block filter.',
        params: [],
        type: 'U256'
    },
    newFilter: {
        description: 'Returns id of new filter.',
        params: [
            {
                name: 'filter',
                type: 'EthFilter'
            }
        ],
        type: 'U256'
    },
    newPendingTransactionFilter: {
        description: 'Returns id of new block filter.',
        params: [],
        type: 'U256'
    },
    protocolVersion: {
        description: 'Returns protocol version encoded as a string (quotes are necessary).',
        params: [],
        type: 'u64'
    },
    sendRawTransaction: {
        description: 'Sends signed transaction, returning its hash.',
        params: [
            {
                name: 'bytes',
                type: 'Bytes'
            }
        ],
        type: 'H256'
    },
    sendTransaction: {
        description: 'Sends transaction; will block waiting for signer to return the transaction hash',
        params: [
            {
                name: 'tx',
                type: 'EthTransactionRequest'
            }
        ],
        type: 'H256'
    },
    submitHashrate: {
        description: 'Used for submitting mining hashrate.',
        params: [
            {
                name: 'index',
                type: 'U256'
            },
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'bool'
    },
    submitWork: {
        description: 'Used for submitting a proof-of-work solution.',
        params: [
            {
                name: 'nonce',
                type: 'H64'
            },
            {
                name: 'headerHash',
                type: 'H256'
            },
            {
                name: 'mixDigest',
                type: 'H256'
            }
        ],
        type: 'bool'
    },
    subscribe: {
        description: 'Subscribe to Eth subscription.',
        params: [
            { name: 'kind', type: 'EthSubKind' },
            {
                isOptional: true,
                name: 'params',
                type: 'EthSubParams'
            }
        ],
        pubsub: [
            'subscription',
            'subscribe',
            'unsubscribe'
        ],
        type: 'Null'
    },
    syncing: {
        description: 'Returns an object with data about the sync status or false.',
        params: [],
        type: 'EthSyncStatus'
    },
    uninstallFilter: {
        description: 'Uninstalls filter.',
        params: [
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'bool'
    }
};


/***/ }),

/***/ 33051:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const ethMethodsV4 = {
    account_basic: {
        description: 'Returns pallet_evm::Accounts by address.',
        params: [
            {
                name: 'address',
                type: 'H160'
            }
        ],
        type: 'EvmAccount'
    },
    account_code_at: {
        description: 'For a given account address, returns pallet_evm::AccountCodes.',
        params: [
            {
                name: 'address',
                type: 'H160'
            }
        ],
        type: 'Bytes'
    },
    author: {
        description: 'Returns the converted FindAuthor::find_author authority id.',
        params: [],
        type: 'H160'
    },
    call: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [
            {
                name: 'from',
                type: 'H160'
            },
            {
                name: 'to',
                type: 'H160'
            },
            {
                name: 'data',
                type: 'Vec<u8>'
            },
            {
                name: 'value',
                type: 'U256'
            },
            {
                name: 'gasLimit',
                type: 'U256'
            },
            {
                name: 'maxFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'maxPriorityFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'nonce',
                type: 'Option<U256>'
            },
            {
                name: 'estimate',
                type: 'bool'
            },
            {
                name: 'accessList',
                type: 'Option<Vec<(H160, Vec<H256>)>>'
            }
        ],
        type: 'Result<EvmCallInfo, DispatchError>'
    },
    chain_id: {
        description: 'Returns runtime defined pallet_evm::ChainId.',
        params: [],
        type: 'u64'
    },
    create: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [
            {
                name: 'from',
                type: 'H160'
            },
            {
                name: 'data',
                type: 'Vec<u8>'
            },
            {
                name: 'value',
                type: 'U256'
            },
            {
                name: 'gasLimit',
                type: 'U256'
            },
            {
                name: 'maxFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'maxPriorityFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'nonce',
                type: 'Option<U256>'
            },
            {
                name: 'estimate',
                type: 'bool'
            },
            {
                name: 'accessList',
                type: 'Option<Vec<(H160, Vec<H256>)>>'
            }
        ],
        type: 'Result<EvmCreateInfo, DispatchError>'
    },
    current_all: {
        description: 'Return all the current data for a block in a single runtime call.',
        params: [],
        type: '(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)'
    },
    current_block: {
        description: 'Return the current block.',
        params: [],
        type: 'BlockV2'
    },
    current_receipts: {
        description: 'Return the current receipt.',
        params: [],
        type: 'Option<Vec<EthReceiptV3>>'
    },
    current_transaction_statuses: {
        description: 'Return the current transaction status.',
        params: [],
        type: 'Option<Vec<EthTransactionStatus>>'
    },
    elasticity: {
        description: 'Return the elasticity multiplier.',
        params: [],
        type: 'Option<Permill>'
    },
    extrinsic_filter: {
        description: 'Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.',
        params: [
            {
                name: 'xts',
                type: 'Vec<Extrinsic>'
            }
        ],
        type: 'Vec<TransactionV2>'
    },
    gas_price: {
        description: 'Returns FixedGasPrice::min_gas_price',
        params: [],
        type: 'u256'
    },
    storage_at: {
        description: 'For a given account address and index, returns pallet_evm::AccountStorages.',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                name: 'index',
                type: 'u256'
            }
        ],
        type: 'H256'
    }
};
const ethMethodsV5 = {
    call: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [
            {
                name: 'from',
                type: 'H160'
            },
            {
                name: 'to',
                type: 'H160'
            },
            {
                name: 'data',
                type: 'Vec<u8>'
            },
            {
                name: 'value',
                type: 'U256'
            },
            {
                name: 'gasLimit',
                type: 'U256'
            },
            {
                name: 'maxFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'maxPriorityFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'nonce',
                type: 'Option<U256>'
            },
            {
                name: 'estimate',
                type: 'bool'
            },
            {
                name: 'accessList',
                type: 'Option<Vec<(H160, Vec<H256>)>>'
            }
        ],
        type: 'Result<EvmCallInfoV2, DispatchError>'
    },
    create: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [
            {
                name: 'from',
                type: 'H160'
            },
            {
                name: 'data',
                type: 'Vec<u8>'
            },
            {
                name: 'value',
                type: 'U256'
            },
            {
                name: 'gasLimit',
                type: 'U256'
            },
            {
                name: 'maxFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'maxPriorityFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'nonce',
                type: 'Option<U256>'
            },
            {
                name: 'estimate',
                type: 'bool'
            },
            {
                name: 'accessList',
                type: 'Option<Vec<(H160, Vec<H256>)>>'
            }
        ],
        type: 'Result<EvmCreateInfoV2, DispatchError>'
    }
};
exports.runtime = {
    ConvertTransactionRuntimeApi: [
        {
            methods: {
                convert_transaction: {
                    description: 'Converts an Ethereum-style transaction to Extrinsic',
                    params: [
                        {
                            name: 'transaction',
                            type: 'TransactionV2'
                        }
                    ],
                    type: 'Extrinsic'
                }
            },
            version: 2
        }
    ],
    DebugRuntimeApi: [
        {
            methods: {
                trace_block: {
                    description: 'Trace all block extrinsics',
                    params: [
                        {
                            name: 'extrinsics',
                            type: 'Vec<Extrinsic>'
                        },
                        {
                            name: 'knownTransactions',
                            type: 'Vec<H256>'
                        }
                    ],
                    type: 'Result<(), DispatchError>'
                },
                trace_transaction: {
                    description: 'Trace transaction extrinsics',
                    params: [
                        {
                            name: 'extrinsics',
                            type: 'Vec<Extrinsic>'
                        },
                        {
                            name: 'transaction',
                            type: 'EthTransaction'
                        }
                    ],
                    type: 'Result<(), DispatchError>'
                }
            },
            version: 4
        }
    ],
    EthereumRuntimeRPCApi: [
        {
            methods: {
                ...ethMethodsV4
            },
            version: 4
        },
        {
            methods: {
                ...ethMethodsV4,
                ...ethMethodsV5
            },
            version: 5
        }
    ]
};


/***/ }),

/***/ 13211:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        EvmAccount: {
            nonce: 'u256',
            balance: 'u256'
        },
        EvmCallInfo: {
            exitReason: 'ExitReason',
            value: 'Bytes',
            usedGas: 'U256',
            logs: 'Vec<EvmLog>'
        },
        EvmCreateInfo: {
            exitReason: 'ExitReason',
            value: 'H160',
            usedGas: 'U256',
            logs: 'Vec<EvmLog>'
        },
        EvmCallInfoV2: {
            exitReason: 'ExitReason',
            value: 'Bytes',
            usedGas: 'U256',
            weightInfo: 'Option<EvmWeightInfo>',
            logs: 'Vec<EvmLog>'
        },
        EvmCreateInfoV2: {
            exitReason: 'ExitReason',
            value: 'H160',
            usedGas: 'U256',
            weightInfo: 'Option<EvmWeightInfo>',
            logs: 'Vec<EvmLog>'
        },
        EvmLog: {
            address: 'H160',
            topics: 'Vec<H256>',
            data: 'Bytes'
        },
        EvmVicinity: {
            gasPrice: 'u256',
            origin: 'H160'
        },
        EvmWeightInfo: {
            refTimeLimit: 'Option<u64>',
            proofSizeLimit: 'Option<u64>',
            refTimeUsage: 'Option<u64>',
            proofSizeUsage: 'Option<u64>'
        },
        ExitError: {
            _enum: {
                StackUnderflow: 'Null',
                StackOverflow: 'Null',
                InvalidJump: 'Null',
                InvalidRange: 'Null',
                DesignatedInvalid: 'Null',
                CallTooDeep: 'Null',
                CreateCollision: 'Null',
                CreateContractLimit: 'Null',
                OutOfOffset: 'Null',
                OutOfGas: 'Null',
                OutOfFund: 'Null',
                PCUnderflow: 'Null',
                CreateEmpty: 'Null',
                Other: 'Text'
            }
        },
        ExitFatal: {
            _enum: {
                NotSupported: 'Null',
                UnhandledInterrupt: 'Null',
                CallErrorAsFatal: 'ExitError',
                Other: 'Text'
            }
        },
        ExitReason: {
            _enum: {
                Succeed: 'ExitSucceed',
                Error: 'ExitError',
                Revert: 'ExitRevert',
                Fatal: 'ExitFatal'
            }
        },
        ExitRevert: {
            _enum: ['Reverted']
        },
        ExitSucceed: {
            _enum: ['Stopped', 'Returned', 'Suicided']
        }
    }
};


/***/ }),

/***/ 23400:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        Extrinsic: 'GenericExtrinsic',
        ExtrinsicEra: 'GenericExtrinsicEra',
        ExtrinsicPayload: 'GenericExtrinsicPayload',
        ExtrinsicSignature: 'MultiSignature',
        ExtrinsicV4: 'GenericExtrinsicV4',
        ExtrinsicPayloadV4: 'GenericExtrinsicPayloadV4',
        ExtrinsicSignatureV4: 'GenericExtrinsicSignatureV4',
        ExtrinsicUnknown: 'GenericExtrinsicUnknown',
        ExtrinsicPayloadUnknown: 'GenericExtrinsicPayloadUnknown',
        // eras
        Era: 'ExtrinsicEra',
        ImmortalEra: 'GenericImmortalEra',
        MortalEra: 'GenericMortalEra',
        // signatures & signer
        AnySignature: 'H512',
        MultiSignature: {
            _enum: {
                Ed25519: 'Ed25519Signature',
                Sr25519: 'Sr25519Signature',
                Ecdsa: 'EcdsaSignature'
            }
        },
        Signature: 'H512',
        SignerPayload: 'GenericSignerPayload',
        EcdsaSignature: '[u8; 65]',
        Ed25519Signature: 'H512',
        Sr25519Signature: 'H512'
    }
};


/***/ }),

/***/ 74970:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(75729);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {}
};


/***/ }),

/***/ 75729:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const finalityV1 = {
    methods: {
        best_finalized: {
            description: 'Returns number and hash of the best finalized header known to the bridge module.',
            params: [],
            type: '(BlockNumber, Hash)'
        }
    },
    version: 1
};
exports.runtime = {
    KusamaFinalityApi: [finalityV1],
    PolkadotFinalityApi: [finalityV1],
    RococoFinalityApi: [finalityV1],
    WestendFinalityApi: [finalityV1]
};


/***/ }),

/***/ 50737:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(38851);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        FungiblesAccessError: {
            _enum: ['AssetIdConversionFailed', 'AmountToBalanceConversionFailed']
        }
    }
};


/***/ }),

/***/ 38851:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    FungiblesApi: [
        {
            methods: {
                query_account_balances: {
                    description: 'Returns the list of all `MultiAsset` that an `AccountId` has',
                    params: [
                        {
                            name: 'account',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Result<Vec<XcmV3MultiAsset>, FungiblesAccessError>'
                }
            },
            version: 1
        },
        {
            methods: {
                query_account_balances: {
                    description: 'Returns the list of all `MultiAsset` that an `AccountId` has',
                    params: [
                        {
                            name: 'account',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Result<XcmVersionedMultiAssets, FungiblesAccessError>'
                }
            },
            version: 2
        }
    ]
};


/***/ }),

/***/ 84934:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        AssetOptions: {
            initalIssuance: 'Compact<Balance>',
            permissions: 'PermissionLatest'
        },
        Owner: {
            _enum: {
                None: 'Null',
                Address: 'AccountId'
            }
        },
        PermissionsV1: {
            update: 'Owner',
            mint: 'Owner',
            burn: 'Owner'
        },
        PermissionVersions: {
            _enum: {
                V1: 'PermissionsV1'
            }
        },
        PermissionLatest: 'PermissionsV1'
    }
};


/***/ }),

/***/ 90462:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        ActiveGilt: {
            proportion: 'Perquintill',
            amount: 'Balance',
            who: 'AccountId',
            expiry: 'BlockNumber'
        },
        ActiveGiltsTotal: {
            frozen: 'Balance',
            proportion: 'Perquintill',
            index: 'ActiveIndex',
            target: 'Perquintill'
        },
        ActiveIndex: 'u32',
        GiltBid: {
            amount: 'Balance',
            who: 'AccountId'
        }
    }
};


/***/ }),

/***/ 17282:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(97508);
const runtime_js_1 = __nccwpck_require__(54263);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    runtime: runtime_js_1.runtime,
    types: {
        AuthorityIndex: 'u64',
        AuthorityList: 'Vec<NextAuthority>',
        AuthoritySet: {
            currentAuthorities: 'AuthorityList',
            setId: 'u64',
            pendingStandardChanges: 'ForkTreePendingChange',
            pendingForcedChanges: 'Vec<PendingChange>',
            authoritySetChanges: 'AuthoritySetChanges'
        },
        ForkTreePendingChange: {
            roots: 'Vec<ForkTreePendingChangeNode>',
            bestFinalizedNumber: 'Option<BlockNumber>'
        },
        ForkTreePendingChangeNode: {
            hash: 'BlockHash',
            number: 'BlockNumber',
            data: 'PendingChange',
            children: 'Vec<ForkTreePendingChangeNode>'
        },
        AuthoritySetChange: '(U64, BlockNumber)',
        AuthoritySetChanges: 'Vec<AuthoritySetChange>',
        AuthorityWeight: 'u64',
        DelayKind: {
            _enum: {
                Finalized: 'Null',
                Best: 'DelayKindBest'
            }
        },
        DelayKindBest: {
            medianLastFinalized: 'BlockNumber'
        },
        EncodedFinalityProofs: 'Bytes',
        GrandpaEquivocation: {
            _enum: {
                Prevote: 'GrandpaEquivocationValue',
                Precommit: 'GrandpaEquivocationValue'
            }
        },
        GrandpaEquivocationProof: {
            setId: 'SetId',
            equivocation: 'GrandpaEquivocation'
        },
        GrandpaEquivocationValue: {
            roundNumber: 'u64',
            identity: 'AuthorityId',
            first: '(GrandpaPrevote, AuthoritySignature)',
            second: '(GrandpaPrevote, AuthoritySignature)'
        },
        GrandpaPrevote: {
            targetHash: 'Hash',
            targetNumber: 'BlockNumber'
        },
        GrandpaCommit: {
            targetHash: 'BlockHash',
            targetNumber: 'BlockNumber',
            precommits: 'Vec<GrandpaSignedPrecommit>'
        },
        GrandpaPrecommit: {
            targetHash: 'BlockHash',
            targetNumber: 'BlockNumber'
        },
        GrandpaSignedPrecommit: {
            precommit: 'GrandpaPrecommit',
            signature: 'AuthoritySignature',
            id: 'AuthorityId'
        },
        GrandpaJustification: {
            round: 'u64',
            commit: 'GrandpaCommit',
            votesAncestries: 'Vec<Header>'
        },
        JustificationNotification: 'Bytes',
        KeyOwnerProof: 'MembershipProof',
        NextAuthority: '(AuthorityId, AuthorityWeight)',
        PendingChange: {
            nextAuthorities: 'AuthorityList',
            delay: 'BlockNumber',
            canonHeight: 'BlockNumber',
            canonHash: 'BlockHash',
            delayKind: 'DelayKind'
        },
        PendingPause: {
            scheduledAt: 'BlockNumber',
            delay: 'BlockNumber'
        },
        PendingResume: {
            scheduledAt: 'BlockNumber',
            delay: 'BlockNumber'
        },
        Precommits: {
            currentWeight: 'u32',
            missing: 'BTreeSet<AuthorityId>'
        },
        Prevotes: {
            currentWeight: 'u32',
            missing: 'BTreeSet<AuthorityId>'
        },
        ReportedRoundStates: {
            setId: 'u32',
            best: 'RoundState',
            background: 'Vec<RoundState>'
        },
        RoundState: {
            round: 'u32',
            totalWeight: 'u32',
            thresholdWeight: 'u32',
            prevotes: 'Prevotes',
            precommits: 'Precommits'
        },
        SetId: 'u64',
        StoredPendingChange: {
            scheduledAt: 'BlockNumber',
            delay: 'BlockNumber',
            nextAuthorities: 'AuthorityList'
        },
        StoredState: {
            _enum: {
                Live: 'Null',
                PendingPause: 'PendingPause',
                Paused: 'Null',
                PendingResume: 'PendingResume'
            }
        }
    }
};


/***/ }),

/***/ 97508:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    proveFinality: {
        description: 'Prove finality for the given block number, returning the Justification for the last block in the set.',
        params: [
            {
                name: 'blockNumber',
                type: 'BlockNumber'
            }
        ],
        type: 'Option<EncodedFinalityProofs>'
    },
    roundState: {
        description: 'Returns the state of the current best round state as well as the ongoing background rounds',
        params: [],
        type: 'ReportedRoundStates'
    },
    subscribeJustifications: {
        description: 'Subscribes to grandpa justifications',
        params: [],
        pubsub: [
            'justifications',
            'subscribeJustifications',
            'unsubscribeJustifications'
        ],
        type: 'JustificationNotification'
    }
};


/***/ }),

/***/ 54263:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const GRANDPA_V2_V3 = {
    generate_key_ownership_proof: {
        description: 'Generates a proof of key ownership for the given authority in the given set.',
        params: [
            {
                name: 'setId',
                type: 'SetId'
            },
            {
                name: 'authorityId',
                type: 'AuthorityId'
            }
        ],
        type: 'Option<OpaqueKeyOwnershipProof>'
    },
    grandpa_authorities: {
        description: 'Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.',
        params: [],
        type: 'AuthorityList'
    },
    submit_report_equivocation_unsigned_extrinsic: {
        description: 'Submits an unsigned extrinsic to report an equivocation.',
        params: [
            {
                name: 'equivocationProof',
                type: 'GrandpaEquivocationProof'
            },
            {
                name: 'keyOwnerProof',
                type: 'OpaqueKeyOwnershipProof'
            }
        ],
        type: 'Option<Null>'
    }
};
exports.runtime = {
    GrandpaApi: [
        {
            methods: {
                current_set_id: {
                    description: 'Get current GRANDPA authority set id.',
                    params: [],
                    type: 'SetId'
                },
                ...GRANDPA_V2_V3
            },
            version: 3
        },
        {
            methods: GRANDPA_V2_V3,
            version: 2
        }
    ]
};


/***/ }),

/***/ 41689:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        IdentityFields: {
            _set: {
                _bitLength: 64,
                // Mapped here to 32 bits, in Rust these are 64-bit values
                Display: 1,
                Legal: 2,
                Web: 4,
                Riot: 8,
                Email: 16,
                PgpFingerprint: 32,
                Image: 64,
                Twitter: 128
            }
        },
        IdentityInfoAdditional: '(Data, Data)',
        IdentityInfoTo198: {
            additional: 'Vec<IdentityInfoAdditional>',
            display: 'Data',
            legal: 'Data',
            web: 'Data',
            riot: 'Data',
            email: 'Data',
            pgpFingerprint: 'Option<H160>',
            image: 'Data'
        },
        IdentityInfo: {
            _fallback: 'IdentityInfoTo198',
            additional: 'Vec<IdentityInfoAdditional>',
            display: 'Data',
            legal: 'Data',
            web: 'Data',
            riot: 'Data',
            email: 'Data',
            pgpFingerprint: 'Option<H160>',
            image: 'Data',
            twitter: 'Data'
        },
        IdentityJudgement: {
            _enum: {
                Unknown: 'Null',
                FeePaid: 'Balance',
                Reasonable: 'Null',
                KnownGood: 'Null',
                OutOfDate: 'Null',
                LowQuality: 'Null',
                Erroneous: 'Null'
            }
        },
        RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',
        RegistrationTo198: {
            judgements: 'Vec<RegistrationJudgement>',
            deposit: 'Balance',
            info: 'IdentityInfoTo198'
        },
        Registration: {
            _fallback: 'RegistrationTo198',
            judgements: 'Vec<RegistrationJudgement>',
            deposit: 'Balance',
            info: 'IdentityInfo'
        },
        RegistrarIndex: 'u32',
        RegistrarInfo: {
            account: 'AccountId',
            fee: 'Balance',
            fields: 'IdentityFields'
        }
    }
};


/***/ }),

/***/ 64335:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        AuthIndex: 'u32',
        AuthoritySignature: 'Signature',
        Heartbeat: {
            blockNumber: 'BlockNumber',
            networkState: 'OpaqueNetworkState',
            sessionIndex: 'SessionIndex',
            authorityIndex: 'AuthIndex',
            validatorsLen: 'u32'
        },
        HeartbeatTo244: {
            blockNumber: 'BlockNumber',
            networkState: 'OpaqueNetworkState',
            sessionIndex: 'SessionIndex',
            authorityIndex: 'AuthIndex'
        },
        OpaqueMultiaddr: 'Opaque<Bytes>',
        OpaquePeerId: 'Opaque<Bytes>',
        OpaqueNetworkState: {
            peerId: 'OpaquePeerId',
            externalAddresses: 'Vec<OpaqueMultiaddr>'
        }
    }
};


/***/ }),

/***/ 87662:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(19684);
const util_1 = __nccwpck_require__(29795);
const defs = tslib_1.__importStar(__nccwpck_require__(36967));
const jsonrpc = {};
Object.keys(defs).forEach((s) => Object.entries(defs[s].rpc || {}).forEach(([method, def]) => {
    // allow for section overrides
    const section = def.aliasSection || s;
    if (!jsonrpc[section]) {
        jsonrpc[section] = {};
    }
    jsonrpc[section][method] = (0, util_1.objectSpread)({}, def, {
        isSubscription: !!def.pubsub,
        jsonrpc: `${section}_${method}`,
        method,
        section
    });
}));
exports["default"] = jsonrpc;


/***/ }),

/***/ 23394:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        CallIndex: '(u8, u8)',
        LotteryConfig: {
            price: 'Balance',
            start: 'BlockNumber',
            length: 'BlockNumber',
            delay: 'BlockNumber',
            repeat: 'bool'
        }
    }
};


/***/ }),

/***/ 57861:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AllHashers = void 0;
const hashers_js_1 = __nccwpck_require__(3355);
Object.defineProperty(exports, "AllHashers", ({ enumerable: true, get: function () { return hashers_js_1.AllHashers; } }));
const runtime_js_1 = __nccwpck_require__(61457);
const v9_js_1 = __nccwpck_require__(46536);
const v10_js_1 = __nccwpck_require__(5765);
const v11_js_1 = __nccwpck_require__(54385);
const v12_js_1 = __nccwpck_require__(52084);
const v13_js_1 = __nccwpck_require__(59827);
const v14_js_1 = __nccwpck_require__(1536);
const v15_js_1 = __nccwpck_require__(94971);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        // all known
        ...v9_js_1.v9,
        ...v10_js_1.v10,
        ...v11_js_1.v11,
        ...v12_js_1.v12,
        ...v13_js_1.v13,
        ...v14_js_1.v14,
        ...v15_js_1.v15,
        // latest mappings
        // NOTE: For v15, we only added the runtime defintions,
        // hence latest for most pointing to the previous V14
        ErrorMetadataLatest: 'ErrorMetadataV14',
        EventMetadataLatest: 'EventMetadataV14',
        ExtrinsicMetadataLatest: 'ExtrinsicMetadataV15',
        FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV14',
        FunctionMetadataLatest: 'FunctionMetadataV14',
        MetadataLatest: 'MetadataV15',
        PalletCallMetadataLatest: 'PalletCallMetadataV14',
        PalletConstantMetadataLatest: 'PalletConstantMetadataV14',
        PalletErrorMetadataLatest: 'PalletErrorMetadataV14',
        PalletEventMetadataLatest: 'PalletEventMetadataV14',
        PalletMetadataLatest: 'PalletMetadataV15',
        PalletStorageMetadataLatest: 'PalletStorageMetadataV14',
        PortableType: 'PortableTypeV14',
        RuntimeApiMetadataLatest: 'RuntimeApiMetadataV15',
        SignedExtensionMetadataLatest: 'SignedExtensionMetadataV14',
        StorageEntryMetadataLatest: 'StorageEntryMetadataV14',
        StorageEntryModifierLatest: 'StorageEntryModifierV14',
        StorageEntryTypeLatest: 'StorageEntryTypeV14',
        StorageHasher: 'StorageHasherV14',
        // additional types
        OpaqueMetadata: 'Opaque<Bytes>',
        // the enum containing all the mappings
        MetadataAll: {
            _enum: {
                V0: 'DoNotConstruct<MetadataV0>',
                V1: 'DoNotConstruct<MetadataV1>',
                V2: 'DoNotConstruct<MetadataV2>',
                V3: 'DoNotConstruct<MetadataV3>',
                V4: 'DoNotConstruct<MetadataV4>',
                V5: 'DoNotConstruct<MetadataV5>',
                V6: 'DoNotConstruct<MetadataV6>',
                V7: 'DoNotConstruct<MetadataV7>',
                V8: 'DoNotConstruct<MetadataV8>',
                // First version on Kusama in V9, dropping will be problematic
                V9: 'MetadataV9',
                V10: 'MetadataV10',
                V11: 'MetadataV11',
                V12: 'MetadataV12',
                V13: 'MetadataV13',
                V14: 'MetadataV14',
                V15: 'MetadataV15'
            }
        }
    }
};


/***/ }),

/***/ 3355:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AllHashers = void 0;
/* eslint-disable sort-keys */
exports.AllHashers = {
    Blake2_128: null,
    Blake2_256: null,
    Blake2_128Concat: null,
    Twox128: null,
    Twox256: null,
    Twox64Concat: null,
    // new in v11
    Identity: null
};


/***/ }),

/***/ 61457:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const META_V1_TO_V2 = {
    metadata: {
        description: 'Returns the metadata of a runtime',
        params: [],
        type: 'OpaqueMetadata'
    }
};
exports.runtime = {
    Metadata: [
        {
            methods: {
                metadata_at_version: {
                    description: 'Returns the metadata at a given version.',
                    params: [
                        {
                            name: 'version',
                            type: 'u32'
                        }
                    ],
                    type: 'Option<OpaqueMetadata>'
                },
                metadata_versions: {
                    description: 'Returns the supported metadata versions.',
                    params: [],
                    type: 'Vec<u32>'
                },
                ...META_V1_TO_V2
            },
            version: 2
        },
        {
            methods: {
                ...META_V1_TO_V2
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 5765:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v10 = void 0;
exports.v10 = {
    // v10
    ErrorMetadataV10: 'ErrorMetadataV9',
    EventMetadataV10: 'EventMetadataV9',
    FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',
    FunctionMetadataV10: 'FunctionMetadataV9',
    MetadataV10: {
        modules: 'Vec<ModuleMetadataV10>'
    },
    ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',
    ModuleMetadataV10: {
        name: 'Text',
        storage: 'Option<StorageMetadataV10>',
        calls: 'Option<Vec<FunctionMetadataV10>>',
        events: 'Option<Vec<EventMetadataV10>>',
        constants: 'Vec<ModuleConstantMetadataV10>',
        errors: 'Vec<ErrorMetadataV10>'
    },
    StorageEntryModifierV10: 'StorageEntryModifierV9',
    StorageEntryMetadataV10: {
        name: 'Text',
        modifier: 'StorageEntryModifierV10',
        type: 'StorageEntryTypeV10',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryTypeV10: {
        _enum: {
            Plain: 'Type',
            Map: {
                hasher: 'StorageHasherV10',
                key: 'Type',
                value: 'Type',
                linked: 'bool'
            },
            DoubleMap: {
                hasher: 'StorageHasherV10',
                key1: 'Type',
                key2: 'Type',
                value: 'Type',
                key2Hasher: 'StorageHasherV10'
            }
        }
    },
    StorageMetadataV10: {
        prefix: 'Text',
        items: 'Vec<StorageEntryMetadataV10>'
    },
    StorageHasherV10: {
        _enum: {
            Blake2_128: null,
            Blake2_256: null,
            Blake2_128Concat: null,
            Twox128: null,
            Twox256: null,
            Twox64Concat: null
        }
    }
};


/***/ }),

/***/ 54385:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v11 = void 0;
const hashers_js_1 = __nccwpck_require__(3355);
exports.v11 = {
    // v11
    ErrorMetadataV11: 'ErrorMetadataV10',
    EventMetadataV11: 'EventMetadataV10',
    ExtrinsicMetadataV11: {
        version: 'u8',
        signedExtensions: 'Vec<Text>'
    },
    FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',
    FunctionMetadataV11: 'FunctionMetadataV10',
    MetadataV11: {
        modules: 'Vec<ModuleMetadataV11>',
        extrinsic: 'ExtrinsicMetadataV11'
    },
    ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',
    ModuleMetadataV11: {
        name: 'Text',
        storage: 'Option<StorageMetadataV11>',
        calls: 'Option<Vec<FunctionMetadataV11>>',
        events: 'Option<Vec<EventMetadataV11>>',
        constants: 'Vec<ModuleConstantMetadataV11>',
        errors: 'Vec<ErrorMetadataV11>'
    },
    StorageEntryModifierV11: 'StorageEntryModifierV10',
    StorageEntryMetadataV11: {
        name: 'Text',
        modifier: 'StorageEntryModifierV11',
        type: 'StorageEntryTypeV11',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryTypeV11: {
        _enum: {
            Plain: 'Type',
            Map: {
                hasher: 'StorageHasherV11',
                key: 'Type',
                value: 'Type',
                linked: 'bool'
            },
            DoubleMap: {
                hasher: 'StorageHasherV11',
                key1: 'Type',
                key2: 'Type',
                value: 'Type',
                key2Hasher: 'StorageHasherV11'
            }
        }
    },
    StorageMetadataV11: {
        prefix: 'Text',
        items: 'Vec<StorageEntryMetadataV11>'
    },
    StorageHasherV11: {
        _enum: hashers_js_1.AllHashers
    }
};


/***/ }),

/***/ 52084:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v12 = void 0;
exports.v12 = {
    // v12
    ErrorMetadataV12: 'ErrorMetadataV11',
    EventMetadataV12: 'EventMetadataV11',
    ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',
    FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',
    FunctionMetadataV12: 'FunctionMetadataV11',
    MetadataV12: {
        modules: 'Vec<ModuleMetadataV12>',
        extrinsic: 'ExtrinsicMetadataV12'
    },
    ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',
    ModuleMetadataV12: {
        name: 'Text',
        storage: 'Option<StorageMetadataV12>',
        calls: 'Option<Vec<FunctionMetadataV12>>',
        events: 'Option<Vec<EventMetadataV12>>',
        constants: 'Vec<ModuleConstantMetadataV12>',
        errors: 'Vec<ErrorMetadataV12>',
        index: 'u8'
    },
    StorageEntryModifierV12: 'StorageEntryModifierV11',
    StorageEntryMetadataV12: 'StorageEntryMetadataV11',
    StorageEntryTypeV12: 'StorageEntryTypeV11',
    StorageMetadataV12: 'StorageMetadataV11',
    StorageHasherV12: 'StorageHasherV11'
};


/***/ }),

/***/ 59827:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v13 = void 0;
exports.v13 = {
    // v13
    ErrorMetadataV13: 'ErrorMetadataV12',
    EventMetadataV13: 'EventMetadataV12',
    ExtrinsicMetadataV13: 'ExtrinsicMetadataV12',
    FunctionArgumentMetadataV13: 'FunctionArgumentMetadataV12',
    FunctionMetadataV13: 'FunctionMetadataV12',
    MetadataV13: {
        modules: 'Vec<ModuleMetadataV13>',
        extrinsic: 'ExtrinsicMetadataV13'
    },
    ModuleConstantMetadataV13: 'ModuleConstantMetadataV12',
    ModuleMetadataV13: {
        name: 'Text',
        storage: 'Option<StorageMetadataV13>',
        calls: 'Option<Vec<FunctionMetadataV13>>',
        events: 'Option<Vec<EventMetadataV13>>',
        constants: 'Vec<ModuleConstantMetadataV13>',
        errors: 'Vec<ErrorMetadataV13>',
        index: 'u8'
    },
    StorageEntryModifierV13: 'StorageEntryModifierV12',
    StorageEntryMetadataV13: {
        name: 'Text',
        modifier: 'StorageEntryModifierV13',
        type: 'StorageEntryTypeV13',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryTypeV13: {
        _enum: {
            Plain: 'Type',
            Map: {
                hasher: 'StorageHasherV13',
                key: 'Type',
                value: 'Type',
                linked: 'bool'
            },
            DoubleMap: {
                hasher: 'StorageHasherV13',
                key1: 'Type',
                key2: 'Type',
                value: 'Type',
                key2Hasher: 'StorageHasherV13'
            },
            NMap: {
                keyVec: 'Vec<Type>',
                hashers: 'Vec<StorageHasherV13>',
                value: 'Type'
            }
        }
    },
    StorageMetadataV13: {
        prefix: 'Text',
        items: 'Vec<StorageEntryMetadataV13>'
    },
    StorageHasherV13: 'StorageHasherV12'
};


/***/ }),

/***/ 1536:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v14 = void 0;
const v1_js_1 = __nccwpck_require__(55504);
exports.v14 = {
    // registry
    PortableTypeV14: {
        id: 'Si1LookupTypeId',
        type: 'Si1Type'
    },
    // compatibility with earlier layouts, i.e. don't break previous users
    ErrorMetadataV14: {
        ...v1_js_1.Si1Variant,
        args: 'Vec<Type>'
    },
    EventMetadataV14: {
        ...v1_js_1.Si1Variant,
        args: 'Vec<Type>'
    },
    FunctionArgumentMetadataV14: {
        name: 'Text',
        type: 'Type',
        typeName: 'Option<Type>'
    },
    FunctionMetadataV14: {
        ...v1_js_1.Si1Variant,
        args: 'Vec<FunctionArgumentMetadataV14>'
    },
    // V14
    ExtrinsicMetadataV14: {
        type: 'SiLookupTypeId',
        version: 'u8',
        signedExtensions: 'Vec<SignedExtensionMetadataV14>'
    },
    MetadataV14: {
        lookup: 'PortableRegistry',
        pallets: 'Vec<PalletMetadataV14>',
        extrinsic: 'ExtrinsicMetadataV14',
        type: 'SiLookupTypeId'
    },
    PalletCallMetadataV14: {
        type: 'SiLookupTypeId'
    },
    PalletConstantMetadataV14: {
        name: 'Text',
        type: 'SiLookupTypeId',
        value: 'Bytes',
        docs: 'Vec<Text>'
    },
    PalletErrorMetadataV14: {
        type: 'SiLookupTypeId'
    },
    PalletEventMetadataV14: {
        type: 'SiLookupTypeId'
    },
    PalletMetadataV14: {
        name: 'Text',
        storage: 'Option<PalletStorageMetadataV14>',
        calls: 'Option<PalletCallMetadataV14>',
        events: 'Option<PalletEventMetadataV14>',
        constants: 'Vec<PalletConstantMetadataV14>',
        errors: 'Option<PalletErrorMetadataV14>',
        index: 'u8'
    },
    PalletStorageMetadataV14: {
        prefix: 'Text',
        // NOTE: Renamed from entries
        items: 'Vec<StorageEntryMetadataV14>'
    },
    SignedExtensionMetadataV14: {
        identifier: 'Text',
        type: 'SiLookupTypeId',
        additionalSigned: 'SiLookupTypeId'
    },
    StorageEntryMetadataV14: {
        name: 'Text',
        modifier: 'StorageEntryModifierV14',
        type: 'StorageEntryTypeV14',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryModifierV14: 'StorageEntryModifierV13',
    StorageEntryTypeV14: {
        _enum: {
            Plain: 'SiLookupTypeId',
            Map: {
                hashers: 'Vec<StorageHasherV14>',
                key: 'SiLookupTypeId',
                value: 'SiLookupTypeId'
            }
        }
    },
    StorageHasherV14: 'StorageHasherV13'
};


/***/ }),

/***/ 94971:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v15 = void 0;
exports.v15 = {
    // new/adjusted in v15
    CustomMetadata15: {
        map: 'BTreeMap<Text, CustomValueMetadata15>'
    },
    CustomValueMetadata15: {
        type: 'SiLookupTypeId',
        value: 'Bytes'
    },
    ExtrinsicMetadataV15: {
        version: 'u8',
        addressType: 'SiLookupTypeId',
        callType: 'SiLookupTypeId',
        signatureType: 'SiLookupTypeId',
        extraType: 'SiLookupTypeId',
        signedExtensions: 'Vec<SignedExtensionMetadataV14>'
    },
    OuterEnums15: {
        callType: 'SiLookupTypeId',
        eventType: 'SiLookupTypeId',
        errorType: 'SiLookupTypeId'
    },
    PalletMetadataV15: {
        name: 'Text',
        storage: 'Option<PalletStorageMetadataV14>',
        calls: 'Option<PalletCallMetadataV14>',
        events: 'Option<PalletEventMetadataV14>',
        constants: 'Vec<PalletConstantMetadataV14>',
        errors: 'Option<PalletErrorMetadataV14>',
        index: 'u8',
        docs: 'Vec<Text>'
    },
    RuntimeApiMetadataV15: {
        name: 'Text',
        methods: 'Vec<RuntimeApiMethodMetadataV15>',
        docs: 'Vec<Text>'
    },
    RuntimeApiMethodMetadataV15: {
        name: 'Text',
        inputs: 'Vec<RuntimeApiMethodParamMetadataV15>',
        output: 'SiLookupTypeId',
        docs: 'Vec<Text>'
    },
    RuntimeApiMethodParamMetadataV15: {
        name: 'Text',
        type: 'SiLookupTypeId'
    },
    // actual v15 definition
    MetadataV15: {
        lookup: 'PortableRegistry',
        pallets: 'Vec<PalletMetadataV15>',
        extrinsic: 'ExtrinsicMetadataV15',
        type: 'SiLookupTypeId',
        apis: 'Vec<RuntimeApiMetadataV15>',
        outerEnums: 'OuterEnums15',
        custom: 'CustomMetadata15'
    }
};


/***/ }),

/***/ 46536:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v9 = void 0;
exports.v9 = {
    // v9
    ErrorMetadataV9: {
        name: 'Text',
        docs: 'Vec<Text>'
    },
    EventMetadataV9: {
        name: 'Text',
        args: 'Vec<Type>',
        docs: 'Vec<Text>'
    },
    FunctionArgumentMetadataV9: {
        name: 'Text',
        type: 'Type'
    },
    FunctionMetadataV9: {
        name: 'Text',
        args: 'Vec<FunctionArgumentMetadataV9>',
        docs: 'Vec<Text>'
    },
    MetadataV9: {
        modules: 'Vec<ModuleMetadataV9>'
    },
    ModuleConstantMetadataV9: {
        name: 'Text',
        type: 'Type',
        value: 'Bytes',
        docs: 'Vec<Text>'
    },
    ModuleMetadataV9: {
        name: 'Text',
        storage: 'Option<StorageMetadataV9>',
        calls: 'Option<Vec<FunctionMetadataV9>>',
        events: 'Option<Vec<EventMetadataV9>>',
        constants: 'Vec<ModuleConstantMetadataV9>',
        errors: 'Vec<ErrorMetadataV9>'
    },
    StorageEntryMetadataV9: {
        name: 'Text',
        modifier: 'StorageEntryModifierV9',
        type: 'StorageEntryTypeV9',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryModifierV9: {
        _enum: ['Optional', 'Default', 'Required']
    },
    StorageEntryTypeV9: {
        _enum: {
            Plain: 'Type',
            Map: {
                hasher: 'StorageHasherV9',
                key: 'Type',
                value: 'Type',
                linked: 'bool'
            },
            DoubleMap: {
                hasher: 'StorageHasherV9',
                key1: 'Type',
                key2: 'Type',
                value: 'Type',
                key2Hasher: 'StorageHasherV9'
            }
        }
    },
    StorageHasherV9: {
        _enum: {
            Blake2_128: null,
            Blake2_256: null,
            Twox128: null,
            Twox256: null,
            Twox64Concat: null
        }
    },
    StorageMetadataV9: {
        prefix: 'Text',
        items: 'Vec<StorageEntryMetadataV9>'
    }
};


/***/ }),

/***/ 46325:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(70657);
const runtime_js_1 = __nccwpck_require__(96424);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    runtime: runtime_js_1.runtime,
    types: {
        MmrBatchProof: {
            leafIndices: 'Vec<MmrLeafIndex>',
            leafCount: 'MmrNodeIndex',
            items: 'Vec<Hash>'
        },
        MmrEncodableOpaqueLeaf: 'Bytes',
        MmrError: {
            _enum: ['Push', 'GetRoot', 'Commit', 'GenerateProof', 'Verify', 'LeafNotFound', ' PalletNotIncluded', 'InvalidLeafIndex']
        },
        MmrHash: 'Hash',
        MmrLeafBatchProof: {
            blockHash: 'BlockHash',
            leaves: 'Bytes',
            proof: 'Bytes'
        },
        MmrLeafIndex: 'u64',
        MmrLeafProof: {
            blockHash: 'BlockHash',
            leaf: 'Bytes',
            proof: 'Bytes'
        },
        MmrNodeIndex: 'u64',
        MmrProof: {
            leafIndex: 'MmrLeafIndex',
            leafCount: 'MmrNodeIndex',
            items: 'Vec<Hash>'
        }
    }
};


/***/ }),

/***/ 70657:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    generateProof: {
        description: 'Generate MMR proof for the given block numbers.',
        params: [
            {
                name: 'blockNumbers',
                type: 'Vec<u64>'
            },
            {
                isOptional: true,
                name: 'bestKnownBlockNumber',
                type: 'u64'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'MmrLeafBatchProof'
    },
    root: {
        description: 'Get the MMR root hash for the current best block.',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'MmrHash'
    },
    verifyProof: {
        description: 'Verify an MMR proof',
        params: [
            {
                name: 'proof',
                type: 'MmrLeafBatchProof'
            }
        ],
        type: 'bool'
    },
    verifyProofStateless: {
        description: 'Verify an MMR proof statelessly given an mmr_root',
        params: [
            {
                name: 'root',
                type: 'MmrHash'
            },
            {
                name: 'proof',
                type: 'MmrLeafBatchProof'
            }
        ],
        type: 'bool'
    }
};


/***/ }),

/***/ 96424:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const MMR_V2 = {
    generate_proof: {
        description: 'Generate MMR proof for the given block numbers.',
        params: [
            {
                name: 'blockNumbers',
                type: 'Vec<BlockNumber>'
            },
            {
                name: 'bestKnownBlockNumber',
                type: 'Option<BlockNumber>'
            }
        ],
        type: 'Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>'
    },
    root: {
        description: 'Return the on-chain MMR root hash.',
        params: [],
        type: 'Result<Hash, MmrError>'
    },
    verify_proof: {
        description: 'Verify MMR proof against on-chain MMR.',
        params: [
            {
                name: 'leaves',
                type: 'Vec<MmrEncodableOpaqueLeaf>'
            },
            {
                name: 'proof',
                type: 'MmrBatchProof'
            }
        ],
        type: 'Result<(), MmrError>'
    },
    verify_proof_stateless: {
        description: 'Verify MMR proof against given root hash.',
        params: [
            {
                name: 'root',
                type: 'Hash'
            },
            {
                name: 'leaves',
                type: 'Vec<MmrEncodableOpaqueLeaf>'
            },
            {
                name: 'proof',
                type: 'MmrBatchProof'
            }
        ],
        type: 'Result<(), MmrError>'
    }
};
const MMR_V1 = {
    generate_batch_proof: {
        description: 'Generate MMR proof for a series of leaves under given indices.',
        params: [
            {
                name: 'leafIndices',
                type: 'Vec<MmrLeafIndex>'
            }
        ],
        type: 'Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>'
    },
    generate_proof: {
        description: 'Generate MMR proof for a leaf under given index.',
        params: [
            {
                name: 'leafIndex',
                type: 'MmrLeafIndex'
            }
        ],
        type: 'Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>'
    },
    mmr_root: {
        description: 'Return the on-chain MMR root hash.',
        params: [],
        type: 'Result<Hash, MmrError>'
    },
    verify_batch_proof: {
        description: 'Verify MMR proof against on-chain MMR for a batch of leaves.',
        params: [
            {
                name: 'leaves',
                type: 'Vec<MmrEncodableOpaqueLeaf>'
            },
            {
                name: 'proof',
                type: 'MmrBatchProof'
            }
        ],
        type: 'Result<(), MmrError>'
    },
    verify_batch_proof_stateless: {
        description: 'Verify MMR proof against given root hash or a batch of leaves.',
        params: [
            {
                name: 'root',
                type: 'Hash'
            },
            {
                name: 'leaves',
                type: 'Vec<MmrEncodableOpaqueLeaf>'
            },
            {
                name: 'proof',
                type: 'MmrBatchProof'
            }
        ],
        type: 'Result<(), MmrError>'
    },
    verify_proof: {
        description: 'Verify MMR proof against on-chain MMR.',
        params: [
            {
                name: 'leaf',
                type: 'MmrEncodableOpaqueLeaf'
            },
            {
                name: 'proof',
                type: 'MmrProof'
            }
        ],
        type: 'Result<(), MmrError>'
    },
    verify_proof_stateless: {
        description: 'Verify MMR proof against given root hash.',
        params: [
            {
                name: 'root',
                type: 'Hash'
            },
            {
                name: 'leaf',
                type: 'MmrEncodableOpaqueLeaf'
            },
            {
                name: 'proof',
                type: 'MmrProof'
            }
        ],
        type: 'Result<(), MmrError>'
    }
};
exports.runtime = {
    MmrApi: [
        {
            methods: MMR_V2,
            version: 2
        },
        {
            methods: MMR_V1,
            version: 1
        }
    ]
};


/***/ }),

/***/ 9269:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(16814);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        NftCollectionId: 'u32',
        NftItemId: 'u32'
    }
};


/***/ }),

/***/ 16814:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    NftsApi: [
        {
            methods: {
                attribute: {
                    description: 'An attribute',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'item',
                            type: 'NftItemId'
                        },
                        {
                            name: 'key',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Bytes>'
                },
                collection_attribute: {
                    description: 'A collection attribute',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'key',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Bytes>'
                },
                collection_owner: {
                    description: 'A collection owner',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        }
                    ],
                    type: 'Option<AccountId>'
                },
                custom_attribute: {
                    description: 'A custom attribute',
                    params: [
                        {
                            name: 'account',
                            type: 'AccountId'
                        },
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'item',
                            type: 'NftItemId'
                        },
                        {
                            name: 'key',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Bytes>'
                },
                owner: {
                    description: 'Collection owner',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'item',
                            type: 'NftItemId'
                        }
                    ],
                    type: 'Option<AccountId>'
                },
                system_attribute: {
                    description: 'System attribute',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'item',
                            type: 'NftItemId'
                        },
                        {
                            name: 'key',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Bytes>'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 22988:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(58170);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {}
};


/***/ }),

/***/ 58170:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    // deprecated, the NimbusApi is current - this is for backwards compat
    AuthorFilterAPI: [
        {
            methods: {
                can_author: {
                    description: 'The runtime api used to predict whether an author will be eligible in the given slot',
                    params: [
                        {
                            name: 'author',
                            type: 'AccountId'
                        },
                        {
                            name: 'relayParent',
                            type: 'u32'
                        },
                        {
                            name: 'parentHeader',
                            type: 'Header'
                        }
                    ],
                    type: 'bool'
                }
            },
            version: 2
        },
        {
            methods: {
                can_author: {
                    description: 'The runtime api used to predict whether an author will be eligible in the given slot',
                    params: [
                        {
                            name: 'author',
                            type: 'AccountId'
                        },
                        {
                            name: 'relayParent',
                            type: 'u32'
                        }
                    ],
                    type: 'bool'
                }
            },
            version: 1
        }
    ],
    NimbusApi: [
        {
            methods: {
                can_author: {
                    description: 'The runtime api used to predict whether a Nimbus author will be eligible in the given slot',
                    params: [
                        {
                            name: 'author',
                            type: 'AccountId'
                        },
                        {
                            name: 'relayParent',
                            type: 'u32'
                        },
                        {
                            name: 'parentHeader',
                            type: 'Header'
                        }
                    ],
                    type: 'bool'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 82060:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(88716);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        NpApiError: {
            _enum: ['MemberNotFound', 'OverflowInPendingRewards']
        },
        NpPoolId: 'u32'
    }
};


/***/ }),

/***/ 88716:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    NominationPoolsApi: [
        {
            methods: {
                balance_to_points: {
                    description: 'Returns the equivalent points of `new_funds` for a given pool.',
                    params: [
                        {
                            name: 'poolId',
                            type: 'NpPoolId'
                        },
                        {
                            name: 'newFunds',
                            type: 'Balance'
                        }
                    ],
                    type: 'Balance'
                },
                pending_rewards: {
                    description: 'Returns the pending rewards for the given member.',
                    params: [
                        {
                            name: 'member',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Balance'
                },
                points_to_balance: {
                    description: 'Returns the equivalent balance of `points` for a given pool.',
                    params: [
                        {
                            name: 'poolId',
                            type: 'NpPoolId'
                        },
                        {
                            name: 'points',
                            type: 'Balance'
                        }
                    ],
                    type: 'Balance'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 80690:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(51827);
const runtime_js_1 = __nccwpck_require__(66677);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    runtime: runtime_js_1.runtime,
    types: {
        StorageKind: {
            _enum: {
                PERSISTENT: 1,
                LOCAL: 2
            }
        }
    }
};


/***/ }),

/***/ 51827:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    localStorageGet: {
        description: 'Get offchain local storage under given key and prefix',
        isUnsafe: true,
        params: [
            {
                name: 'kind',
                type: 'StorageKind'
            },
            {
                name: 'key',
                type: 'Bytes'
            }
        ],
        type: 'Option<Bytes>'
    },
    localStorageSet: {
        description: 'Set offchain local storage under given key and prefix',
        isUnsafe: true,
        params: [
            {
                name: 'kind',
                type: 'StorageKind'
            },
            {
                name: 'key',
                type: 'Bytes'
            },
            {
                name: 'value',
                type: 'Bytes'
            }
        ],
        type: 'Null'
    }
};


/***/ }),

/***/ 66677:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    OffchainWorkerApi: [
        {
            methods: {
                offchain_worker: {
                    description: 'Starts the off-chain task for given block header.',
                    params: [
                        {
                            name: 'header',
                            type: 'Header'
                        }
                    ],
                    type: 'Null'
                }
            },
            version: 2
        },
        {
            methods: {
                offchain_worker: {
                    description: 'Starts the off-chain task for given block header.',
                    params: [
                        {
                            name: 'number',
                            type: 'BlockNumber'
                        }
                    ],
                    type: 'Null'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 54476:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        DeferredOffenceOf: '(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)',
        Kind: '[u8; 16]',
        OffenceDetails: {
            offender: 'Offender',
            reporters: 'Vec<Reporter>'
        },
        Offender: 'IdentificationTuple',
        OpaqueTimeSlot: 'Bytes',
        ReportIdOf: 'Hash',
        Reporter: 'AccountId'
    }
};


/***/ }),

/***/ 84598:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(92369);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {}
};


/***/ }),

/***/ 92369:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/oracle/rpc/runtime-api/src/lib.rs#L12-L21
    OracleApi: [
        {
            methods: {
                get_all_values: {
                    description: 'Retrieves all values',
                    params: [
                        {
                            name: 'providerId',
                            // This is a Codec type
                            type: 'Raw'
                        }
                    ],
                    // This won't actually work as expected - since we have
                    // no information about the actual Raw sizes, we cannot
                    // handle it in this format (it would need an override
                    // for the specific Codec). So return the Raw value.
                    // type: 'Vec<(Raw, Option<Raw>)>'
                    type: 'Raw'
                },
                get_value: {
                    description: 'Retrieves a single value',
                    params: [
                        {
                            name: 'providerId',
                            // This is a Codec type
                            type: 'Raw'
                        },
                        {
                            name: 'key',
                            // This is a Codec type
                            type: 'Raw'
                        }
                    ],
                    // This is an Option<Codec> type
                    type: 'Option<Raw>'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 57387:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(80219);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {}
};


/***/ }),

/***/ 80219:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/tokens/rpc/runtime-api/src/lib.rs#L11-L18
    TokensApi: [
        {
            methods: {
                query_existential_deposit: {
                    description: 'Query the existential amount for a specific currency',
                    params: [
                        {
                            name: 'currencyId',
                            // This is CurrencyId, as per the return value, we are unsure
                            // if this is specialized and/or global to the chain or not
                            type: 'Raw'
                        }
                    ],
                    // This is Balance - since we don't understand enough about the way
                    // in which this is used, we default to u128 here (it certainly could
                    // be a specialized type that doesn't map to the on-chain Balance)
                    type: 'u128'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 74096:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(19684);
const hrmp_js_1 = tslib_1.__importDefault(__nccwpck_require__(44491));
const runtime_js_1 = __nccwpck_require__(85703);
const slots_js_1 = tslib_1.__importDefault(__nccwpck_require__(92995));
const proposeTypes = {
    ParachainProposal: {
        proposer: 'AccountId',
        genesisHead: 'HeadData',
        validators: 'Vec<ValidatorId>',
        name: 'Bytes',
        balance: 'Balance'
    },
    RegisteredParachainInfo: {
        validators: 'Vec<ValidatorId>',
        proposer: 'AccountId'
    }
};
const cumulusTypes = {
    ServiceQuality: {
        _enum: ['Ordered', 'Fast']
    }
};
const disputeTypes = {
    DisputeLocation: {
        _enum: ['Local', 'Remote']
    },
    DisputeResult: {
        _enum: ['Valid', 'Invalid']
    },
    DisputeState: {
        validatorsFor: 'BitVec',
        validatorsAgainst: 'BitVec',
        start: 'BlockNumber',
        concludedAt: 'Option<BlockNumber>'
    },
    DisputeStatement: {
        _enum: {
            Valid: 'ValidDisputeStatementKind',
            Invalid: 'InvalidDisputeStatementKind'
        }
    },
    DisputeStatementSet: {
        candidateHash: 'CandidateHash',
        session: 'SessionIndex',
        statements: 'Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>'
    },
    ExecutorParam: {
        _enum: {
            Phantom: 'Null',
            MaxMemoryPages: 'u32',
            StackLogicalMax: 'u32',
            StackNativeMax: 'u32',
            PrecheckingMaxMemory: 'u64',
            PvfPrepTimeout: '(PvfPrepTimeoutKind, u64)',
            PvfExecTimeout: '(PvfExecTimeoutKind, u64)'
        }
    },
    ExecutorParamsHash: 'Hash',
    ExecutorParams: 'Vec<ExecutorParam>',
    ExplicitDisputeStatement: {
        valid: 'bool',
        candidateHash: 'CandidateHash',
        session: 'SessionIndex'
    },
    InvalidDisputeStatementKind: {
        _enum: ['Explicit']
    },
    MultiDisputeStatementSet: 'Vec<DisputeStatementSet>',
    PvfExecTimeoutKind: {
        _enum: ['Backing', 'Approval']
    },
    PvfPrepTimeoutKind: {
        _enum: ['Precheck', 'Lenient']
    },
    ValidDisputeStatementKind: {
        _enum: {
            Explicit: 'Null',
            BackingSeconded: 'Hash',
            BackingValid: 'Hash',
            ApprovalChecking: 'Null'
        }
    }
};
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        ...cumulusTypes,
        ...disputeTypes,
        ...hrmp_js_1.default,
        ...proposeTypes,
        ...slots_js_1.default,
        AbridgedCandidateReceipt: {
            parachainIndex: 'ParaId',
            relayParent: 'Hash',
            headData: 'HeadData',
            collator: 'CollatorId',
            signature: 'CollatorSignature',
            povBlockHash: 'Hash',
            commitments: 'CandidateCommitments'
        },
        AbridgedHostConfiguration: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            maxUpwardQueueCount: 'u32',
            maxUpwardQueueSize: 'u32',
            maxUpwardMessageSize: 'u32',
            maxUpwardMessageNumPerCandidate: 'u32',
            hrmpMaxMessageNumPerCandidate: 'u32',
            validationUpgradeFrequency: 'BlockNumber',
            validationUpgradeDelay: 'BlockNumber'
        },
        AbridgedHrmpChannel: {
            maxCapacity: 'u32',
            maxTotalSize: 'u32',
            maxMessageSize: 'u32',
            msgCount: 'u32',
            totalSize: 'u32',
            mqcHead: 'Option<Hash>'
        },
        AssignmentId: 'AccountId',
        AssignmentKind: {
            _enum: {
                Parachain: 'Null',
                Parathread: '(CollatorId, u32)'
            }
        },
        AttestedCandidate: {
            candidate: 'AbridgedCandidateReceipt',
            validityVotes: 'Vec<ValidityAttestation>',
            validatorIndices: 'BitVec'
        },
        AuthorityDiscoveryId: 'AccountId',
        AvailabilityBitfield: 'BitVec',
        AvailabilityBitfieldRecord: {
            bitfield: 'AvailabilityBitfield',
            submittedTt: 'BlockNumber'
        },
        BackedCandidate: {
            candidate: 'CommittedCandidateReceipt',
            validityVotes: 'Vec<ValidityAttestation>',
            validatorIndices: 'BitVec'
        },
        BufferedSessionChange: {
            applyAt: 'BlockNumber',
            validators: 'Vec<ValidatorId>',
            queued: 'Vec<ValidatorId>',
            sessionIndex: 'SessionIndex'
        },
        CandidateCommitments: {
            upwardMessages: 'Vec<UpwardMessage>',
            horizontalMessages: 'Vec<OutboundHrmpMessage>',
            newValidationCode: 'Option<ValidationCode>',
            headData: 'HeadData',
            processedDownwardMessages: 'u32',
            hrmpWatermark: 'BlockNumber'
        },
        CandidateDescriptor: {
            paraId: 'ParaId',
            relayParent: 'RelayChainHash',
            collatorId: 'CollatorId',
            persistedValidationDataHash: 'Hash',
            povHash: 'Hash',
            erasureRoot: 'Hash',
            signature: 'CollatorSignature',
            paraHead: 'Hash',
            validationCodeHash: 'ValidationCodeHash'
        },
        CandidateEvent: {
            _enum: {
                CandidateBacked: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',
                CandidateIncluded: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',
                CandidateTimedOut: '(CandidateReceipt, HeadData, CoreIndex)'
            }
        },
        CandidateHash: 'Hash',
        CandidateInfo: {
            who: 'AccountId',
            deposit: 'Balance'
        },
        CandidatePendingAvailability: {
            core: 'CoreIndex',
            hash: 'CandidateHash',
            descriptor: 'CandidateDescriptor',
            availabilityVotes: 'BitVec',
            backers: 'BitVec',
            relayParentNumber: 'BlockNumber',
            backedInNumber: 'BlockNumber',
            backingGroup: 'GroupIndex'
        },
        CandidateReceipt: {
            descriptor: 'CandidateDescriptor',
            commitmentsHash: 'Hash'
        },
        GlobalValidationData: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            blockNumber: 'BlockNumber'
        },
        CollatorId: 'H256',
        CollatorSignature: 'Signature',
        CommittedCandidateReceipt: {
            descriptor: 'CandidateDescriptor',
            commitments: 'CandidateCommitments'
        },
        CoreAssignment: {
            core: 'CoreIndex',
            paraId: 'ParaId',
            kind: 'AssignmentKind',
            groupIdx: 'GroupIndex'
        },
        CoreIndex: 'u32',
        CoreOccupied: {
            _enum: {
                Parathread: 'ParathreadEntry',
                Parachain: 'Null'
            }
        },
        CoreState: {
            _enum: {
                Occupied: 'OccupiedCore',
                Scheduled: 'ScheduledCore',
                Free: 'Null'
            }
        },
        DisputeProof: {
            timeSlot: 'DisputesTimeSlot',
            kind: 'SlashingOffenceKind',
            validatorIndex: 'ValidatorIndex',
            validatorId: 'ValidatorId'
        },
        DisputesTimeSlot: {
            sessionIndex: 'SessionIndex',
            candidateHash: 'CandidateHash'
        },
        DoubleVoteReport: {
            identity: 'ValidatorId',
            first: '(Statement, ValidatorSignature)',
            second: '(Statement, ValidatorSignature)',
            proof: 'MembershipProof',
            signingContext: 'SigningContext'
        },
        DownwardMessage: 'Bytes',
        GroupIndex: 'u32',
        GroupRotationInfo: {
            sessionStartBlock: 'BlockNumber',
            groupRotationFrequency: 'BlockNumber',
            now: 'BlockNumber'
        },
        GlobalValidationSchedule: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            blockNumber: 'BlockNumber'
        },
        HeadData: 'Bytes',
        HostConfiguration: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            maxUpwardQueueCount: 'u32',
            maxUpwardQueueSize: 'u32',
            maxUpwardMessageSize: 'u32',
            maxUpwardMessageNumPerCandidate: 'u32',
            hrmpMaxMessageNumPerCandidate: 'u32',
            validationUpgradeFrequency: 'BlockNumber',
            validationUpgradeDelay: 'BlockNumber',
            maxPovSize: 'u32',
            maxDownwardMessageSize: 'u32',
            preferredDispatchableUpwardMessagesStepWeight: 'Weight',
            hrmpMaxParachainOutboundChannels: 'u32',
            hrmpMaxParathreadOutboundChannels: 'u32',
            hrmpOpenRequestTtl: 'u32',
            hrmpSenderDeposit: 'Balance',
            hrmpRecipientDeposit: 'Balance',
            hrmpChannelMaxCapacity: 'u32',
            hrmpChannelMaxTotalSize: 'u32',
            hrmpMaxParachainInboundChannels: 'u32',
            hrmpMaxParathreadInboundChannels: 'u32',
            hrmpChannelMaxMessageSize: 'u32',
            codeRetentionPeriod: 'BlockNumber',
            parathreadCores: 'u32',
            parathreadRetries: 'u32',
            groupRotationFrequency: 'BlockNumber',
            chainAvailabilityPeriod: 'BlockNumber',
            threadAvailabilityPeriod: 'BlockNumber',
            schedulingLookahead: 'u32',
            maxValidatorsPerCore: 'Option<u32>',
            maxValidators: 'Option<u32>',
            disputePeriod: 'SessionIndex',
            disputePostConclusionAcceptancePeriod: 'BlockNumber',
            disputeMaxSpamSlots: 'u32',
            disputeConclusionByTimeOutPeriod: 'BlockNumber',
            noShowSlots: 'u32',
            nDelayTranches: 'u32',
            zerothDelayTrancheWidth: 'u32',
            neededApprovals: 'u32',
            relayVrfModuloSamples: 'u32'
        },
        InboundDownwardMessage: {
            pubSentAt: 'BlockNumber',
            pubMsg: 'DownwardMessage'
        },
        InboundHrmpMessage: {
            sentAt: 'BlockNumber',
            data: 'Bytes'
        },
        InboundHrmpMessages: 'Vec<InboundHrmpMessage>',
        LocalValidationData: {
            parentHead: 'HeadData',
            balance: 'Balance',
            codeUpgradeAllowed: 'Option<BlockNumber>'
        },
        MessageIngestionType: {
            downwardMessages: 'Vec<InboundDownwardMessage>',
            horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'
        },
        MessageQueueChain: 'RelayChainHash',
        OccupiedCore: {
            nextUpOnAvailable: 'Option<ScheduledCore>',
            occupiedSince: 'BlockNumber',
            timeOutAt: 'BlockNumber',
            nextUpOnTimeOut: 'Option<ScheduledCore>',
            availability: 'BitVec',
            groupResponsible: 'GroupIndex',
            candidateHash: 'CandidateHash',
            candidateDescriptor: 'CandidateDescriptor'
        },
        OccupiedCoreAssumption: {
            _enum: ['Included,', 'TimedOut', 'Free']
        },
        OutboundHrmpMessage: {
            recipient: 'u32',
            data: 'Bytes'
        },
        PendingSlashes: {
            _alias: {
                slashKeys: 'keys'
            },
            slashKeys: 'BTreeMap<ValidatorIndex, ValidatorId>',
            kind: 'SlashingOffenceKind'
        },
        ParachainDispatchOrigin: {
            _enum: ['Signed', 'Parachain', 'Root']
        },
        ParachainInherentData: {
            validationData: 'PersistedValidationData',
            relayChainState: 'StorageProof',
            downwardMessages: 'Vec<InboundDownwardMessage>',
            horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'
        },
        ParachainsInherentData: {
            bitfields: 'SignedAvailabilityBitfields',
            backedCandidates: 'Vec<BackedCandidate>',
            disputes: 'MultiDisputeStatementSet',
            parentHeader: 'Header'
        },
        ParaGenesisArgs: {
            genesisHead: 'Bytes',
            validationCode: 'Bytes',
            parachain: 'bool'
        },
        ParaId: 'u32',
        ParaInfo: {
            manager: 'AccountId',
            deposit: 'Balance',
            locked: 'bool'
        },
        ParaLifecycle: {
            _enum: ['Onboarding', 'Parathread', 'Parachain', 'UpgradingToParachain', 'DowngradingToParathread', 'OutgoingParathread', 'OutgoingParachain']
        },
        ParaPastCodeMeta: {
            upgradeTimes: 'Vec<ReplacementTimes>',
            lastPruned: 'Option<BlockNumber>'
        },
        ParaScheduling: {
            _enum: ['Always', 'Dynamic']
        },
        ParathreadClaim: '(ParaId, CollatorId)',
        ParathreadClaimQueue: {
            queue: 'Vec<QueuedParathread>',
            nextCoreOffset: 'u32'
        },
        ParathreadEntry: {
            claim: 'ParathreadClaim',
            retries: 'u32'
        },
        ParaValidatorIndex: 'u32',
        PersistedValidationData: {
            parentHead: 'HeadData',
            relayParentNumber: 'RelayChainBlockNumber',
            relayParentStorageRoot: 'Hash',
            maxPovSize: 'u32'
        },
        PvfCheckStatement: {
            accept: 'bool',
            subject: 'ValidationCodeHash',
            sessionIndex: 'SessionIndex',
            validatorIndex: 'ParaValidatorIndex'
        },
        QueuedParathread: {
            claim: 'ParathreadEntry',
            coreOffset: 'u32'
        },
        RelayBlockNumber: 'u32',
        RelayChainBlockNumber: 'RelayBlockNumber',
        RelayHash: 'Hash',
        RelayChainHash: 'RelayHash',
        Remark: '[u8; 32]',
        ReplacementTimes: {
            expectedAt: 'BlockNumber',
            activatedAt: 'BlockNumber'
        },
        Retriable: {
            _enum: {
                Never: 'Null',
                WithRetries: 'u32'
            }
        },
        ScheduledCore: {
            paraId: 'ParaId',
            collator: 'Option<CollatorId>'
        },
        Scheduling: {
            _enum: ['Always', 'Dynamic']
        },
        ScrapedOnChainVotes: {
            session: 'SessionIndex',
            backingValidatorsPerCandidate: 'Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>',
            disputes: 'MultiDisputeStatementSet'
        },
        SessionInfo: {
            activeValidatorIndices: 'Vec<ParaValidatorIndex>',
            randomSeed: '[u8; 32]',
            disputePeriod: 'SessionIndex',
            validators: 'Vec<ValidatorId>',
            discoveryKeys: 'Vec<AuthorityDiscoveryId>',
            assignmentKeys: 'Vec<AssignmentId>',
            validatorGroups: 'Vec<Vec<ValidatorIndex>>',
            nCores: 'u32',
            zerothDelayTrancheWidth: 'u32',
            relayVrfModuloSamples: 'u32',
            nDelayTranches: 'u32',
            noShowSlots: 'u32',
            neededApprovals: 'u32'
        },
        OldV1SessionInfo: {
            validators: 'Vec<ValidatorId>',
            discoveryKeys: 'Vec<AuthorityDiscoveryId>',
            assignmentKeys: 'Vec<AssignmentId>',
            validatorGroups: 'Vec<Vec<ParaValidatorIndex>>',
            nCores: 'u32',
            zerothDelayTrancheWidth: 'u32',
            relayVrfModuloSamples: 'u32',
            nDelayTranches: 'u32',
            noShowSlots: 'u32',
            neededApprovals: 'u32'
        },
        SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',
        SignedAvailabilityBitfield: {
            payload: 'BitVec',
            validatorIndex: 'ParaValidatorIndex',
            signature: 'ValidatorSignature'
        },
        SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',
        SigningContext: {
            sessionIndex: 'SessionIndex',
            parentHash: 'Hash'
        },
        SlashingOffenceKind: {
            _enum: ['ForInvalid', 'AgainstValid']
        },
        Statement: {
            _enum: {
                Never: 'Null',
                Candidate: 'Hash',
                Valid: 'Hash',
                Invalid: 'Hash'
            }
        },
        TransientValidationData: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            balance: 'Balance',
            codeUpgradeAllowed: 'Option<BlockNumber>',
            dmqLength: 'u32'
        },
        UpgradeGoAhead: {
            _enum: ['Abort', 'GoAhead']
        },
        UpgradeRestriction: {
            _enum: ['Present']
        },
        UpwardMessage: 'Bytes',
        ValidationFunctionParams: {
            maxCodeSize: 'u32',
            relayChainHeight: 'RelayChainBlockNumber',
            codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'
        },
        ValidationCode: 'Bytes',
        ValidationCodeHash: 'Hash',
        ValidationData: {
            persisted: 'PersistedValidationData',
            transient: 'TransientValidationData'
        },
        ValidationDataType: {
            validationData: 'ValidationData',
            relayChainState: 'Vec<Bytes>'
        },
        ValidatorSignature: 'Signature',
        ValidityAttestation: {
            _enum: {
                Never: 'Null',
                Implicit: 'ValidatorSignature',
                Explicit: 'ValidatorSignature'
            }
        },
        MessagingStateSnapshot: {
            relayDispatchQueueSize: '(u32, u32)',
            egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'
        },
        MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',
        SystemInherentData: 'ParachainInherentData',
        VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'
    }
};


/***/ }),

/***/ 44491:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/* eslint-disable sort-keys */
exports["default"] = {
    HrmpChannel: {
        maxCapacity: 'u32',
        maxTotalSize: 'u32',
        maxMessageSize: 'u32',
        msgCount: 'u32',
        totalSize: 'u32',
        mqcHead: 'Option<Hash>',
        senderDeposit: 'Balance',
        recipientDeposit: 'Balance'
    },
    HrmpChannelId: {
        sender: 'u32',
        receiver: 'u32'
    },
    HrmpOpenChannelRequest: {
        confirmed: 'bool',
        age: 'SessionIndex',
        senderDeposit: 'Balance',
        maxMessageSize: 'u32',
        maxCapacity: 'u32',
        maxTotalSize: 'u32'
    }
};


/***/ }),

/***/ 85703:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const PH_V1_TO_V2 = {
    assumed_validation_data: {
        description: 'Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'hash',
                type: 'Hash'
            }
        ],
        type: 'Option<(PersistedValidationData, ValidationCodeHash)>'
    },
    availability_cores: {
        description: 'Yields information on all availability cores as relevant to the child block.',
        params: [],
        type: 'Vec<CoreState>'
    },
    candidate_events: {
        description: 'Get a vector of events concerning candidates that occurred within a block.',
        params: [],
        type: 'Vec<CandidateEvent>'
    },
    candidate_pending_availability: {
        description: 'Get the receipt of a candidate pending availability.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            }
        ],
        type: 'Option<CommittedCandidateReceipt>'
    },
    check_validation_outputs: {
        description: 'Checks if the given validation outputs pass the acceptance criteria.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'outputs',
                type: 'CandidateCommitments'
            }
        ],
        type: 'bool'
    },
    dmq_contents: {
        description: 'Get all the pending inbound messages in the downward message queue for a para.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            }
        ],
        type: 'Vec<InboundDownwardMessage>'
    },
    inbound_hrmp_channels_contents: {
        description: 'Get the contents of all channels addressed to the given recipient.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            }
        ],
        type: 'Vec<InboundHrmpMessage>'
    },
    on_chain_votes: {
        description: 'Scrape dispute relevant from on-chain, backing votes and resolved disputes.',
        params: [],
        type: 'Option<ScrapedOnChainVotes>'
    },
    persisted_validation_data: {
        description: 'Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'assumption',
                type: 'OccupiedCoreAssumption'
            }
        ],
        type: 'Option<PersistedValidationData>'
    },
    session_index_for_child: {
        description: 'Returns the session index expected at a child of the block.',
        params: [],
        type: 'SessionIndex'
    },
    validation_code: {
        description: 'Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'assumption',
                type: 'OccupiedCoreAssumption'
            }
        ],
        type: 'ValidationCode'
    },
    validation_code_by_hash: {
        description: 'Get the validation code from its hash.',
        params: [
            {
                name: 'hash',
                type: 'ValidationCodeHash'
            }
        ],
        type: 'Option<ValidationCode>'
    },
    validator_groups: {
        description: 'Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on',
        params: [],
        type: '(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)'
    },
    validators: {
        description: 'Get the current validators.',
        params: [],
        type: 'Vec<ValidatorId>'
    }
};
const PH_V2_TO_V3 = {
    pvfs_require_precheck: {
        description: 'Returns code hashes of PVFs that require pre-checking by validators in the active set.',
        params: [],
        type: 'Vec<ValidationCodeHash>'
    },
    session_info: {
        description: 'Get the session info for the given session, if stored.',
        params: [
            {
                name: 'index',
                type: 'SessionIndex'
            }
        ],
        type: 'Option<SessionInfo>'
    },
    submit_pvf_check_statement: {
        description: 'Submits a PVF pre-checking statement into the transaction pool.',
        params: [
            {
                name: 'stmt',
                type: 'PvfCheckStatement'
            },
            {
                name: 'signature',
                type: 'ValidatorSignature'
            }
        ],
        type: 'Null'
    },
    validation_code_hash: {
        description: 'Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'assumption',
                type: 'OccupiedCoreAssumption'
            }
        ],
        type: 'Option<ValidationCodeHash>'
    }
};
const PH_V3 = {
    disputes: {
        description: 'Returns all onchain disputes.',
        params: [],
        type: 'Vec<(SessionIndex, CandidateHash, DisputeState)>'
    }
};
const PH_V4 = {
    session_executor_params: {
        description: 'Returns execution parameters for the session.',
        params: [
            {
                name: 'sessionIndex',
                type: 'SessionIndex'
            }
        ],
        type: 'Option<ExecutorParams>'
    }
};
const PH_V5 = {
    key_ownership_proof: {
        description: 'Returns a merkle proof of a validator session key',
        params: [
            {
                name: 'validatorId',
                type: 'ValidatorId'
            }
        ],
        type: 'Option<OpaqueKeyOwnershipProof>'
    },
    submit_report_dispute_lost: {
        description: 'Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session',
        params: [
            {
                name: 'disputeProof',
                type: 'DisputeProof'
            },
            {
                name: 'keyOwnershipProof',
                type: 'OpaqueKeyOwnershipProof'
            }
        ],
        type: 'Option<Null>'
    },
    unapplied_slashes: {
        description: 'Returns a list of validators that lost a past session dispute and need to be slashed',
        params: [],
        type: 'Vec<(SessionIndex, CandidateHash, PendingSlashes)>'
    }
};
exports.runtime = {
    ParachainHost: [
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4,
                ...PH_V5
            },
            version: 5
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4
            },
            version: 4
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3
            },
            version: 3
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3
            },
            version: 2
        },
        {
            methods: {
                session_info: {
                    description: 'Get the session info for the given session, if stored.',
                    params: [
                        {
                            name: 'index',
                            type: 'SessionIndex'
                        }
                    ],
                    type: 'Option<OldV1SessionInfo>'
                },
                ...PH_V1_TO_V2
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 92995:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/* eslint-disable sort-keys */
const SlotRange10 = {
    _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']
};
const SlotRange = {
    _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'ZeroFour', 'ZeroFive', 'ZeroSix', 'ZeroSeven', 'OneOne', 'OneTwo', 'OneThree', 'OneFour', 'OneFive', 'OneSix', 'OneSeven', 'TwoTwo', 'TwoThree', 'TwoFour', 'TwoFive', 'TwoSix', 'TwoSeven', 'ThreeThree', 'ThreeFour', 'ThreeFive', 'ThreeSix', 'ThreeSeven', 'FourFour', 'FourFive', 'FourSix', 'FourSeven', 'FiveFive', 'FiveSix', 'FiveSeven', 'SixSix', 'SixSeven', 'SevenSeven']
};
const oldTypes = {
    Bidder: {
        _enum: {
            New: 'NewBidder',
            Existing: 'ParaId'
        }
    },
    IncomingParachain: {
        _enum: {
            Unset: 'NewBidder',
            Fixed: 'IncomingParachainFixed',
            Deploy: 'IncomingParachainDeploy'
        }
    },
    IncomingParachainDeploy: {
        code: 'ValidationCode',
        initialHeadData: 'HeadData'
    },
    IncomingParachainFixed: {
        codeHash: 'Hash',
        codeSize: 'u32',
        initialHeadData: 'HeadData'
    },
    NewBidder: {
        who: 'AccountId',
        sub: 'SubId'
    },
    SubId: 'u32'
};
exports["default"] = {
    ...oldTypes,
    AuctionIndex: 'u32',
    LeasePeriod: 'BlockNumber',
    LeasePeriodOf: 'BlockNumber',
    SlotRange10,
    SlotRange,
    WinningData10: `[WinningDataEntry; ${SlotRange10._enum.length}]`,
    WinningData: `[WinningDataEntry; ${SlotRange._enum.length}]`,
    WinningDataEntry: 'Option<(AccountId, ParaId, BalanceOf)>',
    WinnersData10: 'Vec<WinnersDataTuple10>',
    WinnersData: 'Vec<WinnersDataTuple>',
    WinnersDataTuple10: '(AccountId, ParaId, BalanceOf, SlotRange10)',
    WinnersDataTuple: '(AccountId, ParaId, BalanceOf, SlotRange)'
};


/***/ }),

/***/ 32952:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(14105);
const runtime_js_1 = __nccwpck_require__(42466);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    runtime: runtime_js_1.runtime,
    types: {
        FeeDetails: {
            inclusionFee: 'Option<InclusionFee>'
            // skipped in serde
            // tip: 'Balance'
        },
        InclusionFee: {
            baseFee: 'Balance',
            lenFee: 'Balance',
            adjustedWeightFee: 'Balance'
        },
        RuntimeDispatchInfo: {
            weight: 'Weight',
            class: 'DispatchClass',
            partialFee: 'Balance'
        },
        RuntimeDispatchInfoV1: {
            weight: 'WeightV1',
            class: 'DispatchClass',
            partialFee: 'Balance'
        },
        RuntimeDispatchInfoV2: {
            weight: 'WeightV2',
            class: 'DispatchClass',
            partialFee: 'Balance'
        }
    }
};


/***/ }),

/***/ 14105:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    queryFeeDetails: {
        // NOTE: Not deprecated (yet) in Substrate, but it is the intent to do so
        deprecated: 'Use `api.call.transactionPaymentApi.queryFeeDetails` instead',
        description: 'Query the detailed fee of a given encoded extrinsic',
        params: [
            {
                name: 'extrinsic',
                type: 'Bytes'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'FeeDetails'
    },
    queryInfo: {
        // NOTE: Not deprecated (yet) in Substrate, but it is the intent to do so
        deprecated: 'Use `api.call.transactionPaymentApi.queryInfo` instead',
        description: 'Retrieves the fee information for an encoded extrinsic',
        params: [
            {
                name: 'extrinsic',
                type: 'Bytes'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        // NOTE: Stuck on V1 forever (at least for the time being)
        type: 'RuntimeDispatchInfoV1'
    }
};


/***/ }),

/***/ 42466:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const V1_TO_V4_SHARED_PAY = {
    query_fee_details: {
        description: 'The transaction fee details',
        params: [
            {
                name: 'uxt',
                type: 'Extrinsic'
            },
            {
                name: 'len',
                type: 'u32'
            }
        ],
        type: 'FeeDetails'
    }
};
const V1_TO_V3_SHARED_CALL = {
    query_call_fee_details: {
        description: 'The call fee details',
        params: [
            {
                name: 'call',
                type: 'Call'
            },
            {
                name: 'len',
                type: 'u32'
            }
        ],
        type: 'FeeDetails'
    }
};
const V2_TO_V4_SHARED_PAY = {
    query_info: {
        description: 'The transaction info',
        params: [
            {
                name: 'uxt',
                type: 'Extrinsic'
            },
            {
                name: 'len',
                type: 'u32'
            }
        ],
        type: 'RuntimeDispatchInfo'
    }
};
const V2_V3_SHARED_CALL = {
    query_call_info: {
        description: 'The call info',
        params: [
            {
                name: 'call',
                type: 'Call'
            },
            {
                name: 'len',
                type: 'u32'
            }
        ],
        type: 'RuntimeDispatchInfo'
    }
};
const V3_SHARED_PAY_CALL = {
    query_length_to_fee: {
        description: 'Query the output of the current LengthToFee given some input',
        params: [
            {
                name: 'length',
                type: 'u32'
            }
        ],
        type: 'Balance'
    },
    query_weight_to_fee: {
        description: 'Query the output of the current WeightToFee given some input',
        params: [
            {
                name: 'weight',
                type: 'Weight'
            }
        ],
        type: 'Balance'
    }
};
exports.runtime = {
    TransactionPaymentApi: [
        {
            // V4 is equivalent to V3 (V4 just dropped all V1 references)
            methods: {
                ...V3_SHARED_PAY_CALL,
                ...V2_TO_V4_SHARED_PAY,
                ...V1_TO_V4_SHARED_PAY
            },
            version: 4
        },
        {
            methods: {
                ...V3_SHARED_PAY_CALL,
                ...V2_TO_V4_SHARED_PAY,
                ...V1_TO_V4_SHARED_PAY
            },
            version: 3
        },
        {
            methods: {
                ...V2_TO_V4_SHARED_PAY,
                ...V1_TO_V4_SHARED_PAY
            },
            version: 2
        },
        {
            methods: {
                query_info: {
                    description: 'The transaction info',
                    params: [
                        {
                            name: 'uxt',
                            type: 'Extrinsic'
                        },
                        {
                            name: 'len',
                            type: 'u32'
                        }
                    ],
                    // NOTE: _Should_ be V1 (as per current Substrate), however the interface was
                    // changed mid-flight between versions. So we have some of each depending on
                    // runtime. (We do detect the weight type, so correct)
                    type: 'RuntimeDispatchInfo'
                },
                ...V1_TO_V4_SHARED_PAY
            },
            version: 1
        }
    ],
    TransactionPaymentCallApi: [
        {
            methods: {
                ...V3_SHARED_PAY_CALL,
                ...V2_V3_SHARED_CALL,
                ...V1_TO_V3_SHARED_CALL
            },
            version: 3
        },
        {
            methods: {
                ...V2_V3_SHARED_CALL,
                ...V1_TO_V3_SHARED_CALL
            },
            version: 2
        },
        {
            methods: {
                CALL: {
                    description: 'The call info',
                    params: [
                        {
                            name: 'call',
                            type: 'Call'
                        },
                        {
                            name: 'len',
                            type: 'u32'
                        }
                    ],
                    // NOTE: As per the above comment, the below is correct according to Substrate, but
                    // _may_ yield fallback decoding on some versions of the runtime
                    type: 'RuntimeDispatchInfo'
                },
                ...V1_TO_V3_SHARED_CALL
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 40961:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        Approvals: '[bool; 4]'
    }
};


/***/ }),

/***/ 38399:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(5790);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {}
};


/***/ }),

/***/ 5790:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    DifficultyApi: [
        {
            methods: {
                difficulty: {
                    description: 'Return the target difficulty of the next block.',
                    params: [],
                    // This is Difficulty in the original, however this is chain-specific
                    type: 'Raw'
                }
            },
            version: 1
        }
    ],
    TimestampApi: [
        {
            methods: {
                timestamp: {
                    description: 'API necessary for timestamp-based difficulty adjustment algorithms.',
                    params: [],
                    type: 'Moment'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 43327:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        ProxyDefinition: {
            delegate: 'AccountId',
            proxyType: 'ProxyType',
            delay: 'BlockNumber'
        },
        ProxyType: {
            _enum: ['Any', 'NonTransfer', 'Governance', 'Staking']
        },
        ProxyAnnouncement: {
            real: 'AccountId',
            callHash: 'Hash',
            height: 'BlockNumber'
        }
    }
};


/***/ }),

/***/ 71375:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        AccountStatus: {
            validity: 'AccountValidity',
            freeBalance: 'Balance',
            lockedBalance: 'Balance',
            signature: 'Vec<u8>',
            vat: 'Permill'
        },
        AccountValidity: {
            _enum: ['Invalid', 'Initiated', 'Pending', 'ValidLow', 'ValidHigh', 'Completed']
        }
    }
};


/***/ }),

/***/ 42865:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        ActiveRecovery: {
            created: 'BlockNumber',
            deposit: 'Balance',
            friends: 'Vec<AccountId>'
        },
        RecoveryConfig: {
            delayPeriod: 'BlockNumber',
            deposit: 'Balance',
            friends: 'Vec<AccountId>',
            threshold: 'u16'
        }
    }
};


/***/ }),

/***/ 36300:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(49732);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    types: {
        RpcMethods: {
            version: 'u32',
            methods: 'Vec<Text>'
        }
    }
};


/***/ }),

/***/ 49732:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    methods: {
        description: 'Retrieves the list of RPC methods that are exposed by the node',
        params: [],
        type: 'RpcMethods'
    }
};


/***/ }),

/***/ 77010:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.knownOrigins = void 0;
const runtime_js_1 = __nccwpck_require__(36231);
const numberTypes = {
    Fixed64: 'Int<64, Fixed64>',
    FixedI64: 'Int<64, FixedI64>',
    FixedU64: 'UInt<64, FixedU64>',
    Fixed128: 'Int<128, Fixed128>',
    FixedI128: 'Int<128, FixedI128>',
    FixedU128: 'UInt<128, FixedU128>',
    I32F32: 'Int<64, I32F32>',
    U32F32: 'UInt<64, U32F32>',
    PerU16: 'UInt<16, PerU16>',
    Perbill: 'UInt<32, Perbill>',
    Percent: 'UInt<8, Percent>',
    Permill: 'UInt<32, Permill>',
    Perquintill: 'UInt<64, Perquintill>'
};
exports.knownOrigins = {
    //
    // (1) Defaults from Substrate
    //
    Council: 'CollectiveOrigin',
    System: 'SystemOrigin',
    TechnicalCommittee: 'CollectiveOrigin',
    //
    // (2) Defaults from Polkadot
    //
    Xcm: 'XcmOrigin',
    XcmPallet: 'XcmOrigin',
    //
    // (3) Defaults from Acala
    //
    Authority: 'AuthorityOrigin',
    GeneralCouncil: 'CollectiveOrigin'
};
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        ...numberTypes,
        AccountId: 'AccountId32',
        AccountId20: 'GenericEthereumAccountId',
        AccountId32: 'GenericAccountId32',
        AccountId33: 'GenericAccountId33',
        AccountIdOf: 'AccountId',
        AccountIndex: 'GenericAccountIndex',
        Address: 'MultiAddress',
        AssetId: 'u32',
        Balance: 'UInt<128, Balance>',
        BalanceOf: 'Balance',
        Block: 'GenericBlock',
        BlockNumber: 'u32',
        BlockNumberFor: 'BlockNumber',
        BlockNumberOf: 'BlockNumber',
        Call: 'GenericCall',
        CallHash: 'Hash',
        CallHashOf: 'CallHash',
        ChangesTrieConfiguration: {
            digestInterval: 'u32',
            digestLevels: 'u32'
        },
        ChangesTrieSignal: {
            _enum: {
                NewConfiguration: 'Option<ChangesTrieConfiguration>'
            }
        },
        ConsensusEngineId: 'GenericConsensusEngineId',
        CodecHash: 'Hash',
        CrateVersion: {
            major: 'u16',
            minor: 'u8',
            patch: 'u8'
        },
        Digest: {
            logs: 'Vec<DigestItem>'
        },
        DigestItem: {
            _enum: {
                Other: 'Bytes',
                AuthoritiesChange: 'Vec<AuthorityId>',
                ChangesTrieRoot: 'Hash',
                SealV0: 'SealV0',
                Consensus: 'Consensus',
                Seal: 'Seal',
                PreRuntime: 'PreRuntime',
                ChangesTrieSignal: 'ChangesTrieSignal',
                RuntimeEnvironmentUpdated: 'Null' // 8
            }
        },
        ExtrinsicsWeight: {
            normal: 'Weight',
            operational: 'Weight'
        },
        H32: '[u8; 4; H32]',
        H64: '[u8; 8; H64]',
        H128: '[u8; 16; H128]',
        H160: '[u8; 20; H160]',
        H256: '[u8; 32; H256]',
        H512: '[u8; 64; H512]',
        H1024: '[u8; 128; H1024]',
        H2048: '[u8; 256; H2048]',
        Hash: 'H256',
        Header: {
            parentHash: 'Hash',
            number: 'Compact<BlockNumber>',
            stateRoot: 'Hash',
            extrinsicsRoot: 'Hash',
            digest: 'Digest'
        },
        HeaderPartial: {
            parentHash: 'Hash',
            // since we only parse JSON with this, having non-compact works
            number: 'BlockNumber'
        },
        IndicesLookupSource: 'GenericLookupSource',
        Index: 'u32',
        Justification: '(ConsensusEngineId, EncodedJustification)',
        EncodedJustification: 'Bytes',
        Justifications: 'Vec<Justification>',
        KeyValue: '(StorageKey, StorageData)',
        KeyTypeId: 'u32',
        LockIdentifier: '[u8; 8]',
        LookupSource: 'MultiAddress',
        LookupTarget: 'AccountId',
        ModuleId: 'LockIdentifier',
        MultiAddress: 'GenericMultiAddress',
        MultiSigner: {
            _enum: {
                Ed25519: '[u8; 32]',
                Sr25519: '[u8; 32]',
                Ecdsa: '[u8; 33]'
            }
        },
        Moment: 'UInt<64, Moment>',
        OpaqueCall: 'Bytes',
        Origin: 'DoNotConstruct<Origin>',
        OriginCaller: {
            _enum: {
                // this should be dynamically built from the actual modules, based on index
                System: 'SystemOrigin'
            }
        },
        PalletId: 'LockIdentifier',
        PalletsOrigin: 'OriginCaller',
        PalletVersion: {
            major: 'u16',
            minor: 'u8',
            patch: 'u8'
        },
        Pays: {
            _enum: ['Yes', 'No']
        },
        Phantom: 'Null',
        PhantomData: 'Null',
        Releases: {
            _enum: ['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10']
        },
        RuntimeCall: 'Call',
        RuntimeEvent: 'Event',
        RuntimeDbWeight: {
            read: 'Weight',
            write: 'Weight'
        },
        SignedBlock: 'SignedBlockWithJustifications',
        SignedBlockWithJustification: {
            block: 'Block',
            justification: 'Option<EncodedJustification>'
        },
        SignedBlockWithJustifications: {
            block: 'Block',
            justifications: 'Option<Justifications>'
        },
        Slot: 'u64',
        SlotDuration: 'u64',
        StorageData: 'Bytes',
        StorageInfo: {
            palletName: 'Bytes',
            storage_name: 'Bytes',
            prefix: 'Bytes',
            maxValues: 'Option<u32>',
            maxSize: 'Option<u32>'
        },
        StorageProof: {
            trieNodes: 'Vec<Bytes>'
        },
        TransactionPriority: 'u64',
        TransactionLongevity: 'u64',
        TransactionTag: 'Bytes',
        TransactionInfo: {
            _alias: {
                dataSize: 'size'
            },
            chunkRoot: 'H256',
            contentHash: 'H256',
            dataSize: 'u32',
            blockChunks: 'u32'
        },
        TransactionStorageProof: {
            chunk: 'Vec<u8>',
            proof: 'Vec<Vec<u8>>'
        },
        ValidatorId: 'AccountId',
        ValidatorIdOf: 'ValidatorId',
        WeightV0: 'u32',
        WeightV1: 'u64',
        WeightV2: {
            refTime: 'Compact<u64>',
            proofSize: 'Compact<u64>'
        },
        Weight: 'WeightV2',
        WeightMultiplier: 'Fixed64',
        // digest
        PreRuntime: '(ConsensusEngineId, Bytes)',
        SealV0: '(u64, Signature)',
        Seal: '(ConsensusEngineId, Bytes)',
        Consensus: '(ConsensusEngineId, Bytes)'
    }
};


/***/ }),

/***/ 36231:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
const CORE_V1_TO_V4 = {
    execute_block: {
        description: 'Execute the given block.',
        params: [
            {
                name: 'block',
                type: 'Block'
            }
        ],
        type: 'Null'
    }
};
const CORE_V1_TO_V2 = {
    version: {
        description: 'Returns the version of the runtime.',
        params: [],
        type: 'RuntimeVersionPre3'
    }
};
const CORE_V2_TO_V4 = {
    initialize_block: {
        description: 'Initialize a block with the given header.',
        params: [
            {
                name: 'header',
                type: 'Header'
            }
        ],
        type: 'Null'
    }
};
exports.runtime = {
    Core: [
        {
            methods: {
                version: {
                    description: 'Returns the version of the runtime.',
                    params: [],
                    type: 'RuntimeVersion'
                },
                ...CORE_V1_TO_V4,
                ...CORE_V2_TO_V4
            },
            version: 4
        },
        {
            methods: {
                version: {
                    description: 'Returns the version of the runtime.',
                    params: [],
                    type: 'RuntimeVersionPre4'
                },
                ...CORE_V1_TO_V4,
                ...CORE_V2_TO_V4
            },
            version: 3
        },
        {
            methods: {
                ...CORE_V1_TO_V2,
                ...CORE_V1_TO_V4,
                ...CORE_V2_TO_V4
            },
            version: 2
        },
        {
            methods: {
                initialise_block: {
                    description: 'Initialize a block with the given header.',
                    params: [
                        {
                            name: 'header',
                            type: 'Header'
                        }
                    ],
                    type: 'Null'
                },
                ...CORE_V1_TO_V2,
                ...CORE_V1_TO_V4
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 61263:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const v0_js_1 = __nccwpck_require__(70254);
const v1_js_1 = __nccwpck_require__(55504);
/* eslint-disable sort-keys */
exports["default"] = {
    rpc: {},
    types: {
        ...v0_js_1.v0,
        ...v1_js_1.v1,
        // latest mappings
        SiField: 'Si1Field',
        SiLookupTypeId: 'Si1LookupTypeId',
        SiPath: 'Si1Path',
        SiType: 'Si1Type',
        SiTypeDef: 'Si1TypeDef',
        SiTypeDefArray: 'Si1TypeDefArray',
        SiTypeDefBitSequence: 'Si1TypeDefBitSequence',
        SiTypeDefCompact: 'Si1TypeDefCompact',
        SiTypeDefComposite: 'Si1TypeDefComposite',
        SiTypeDefPrimitive: 'Si1TypeDefPrimitive',
        SiTypeDefSequence: 'Si1TypeDefSequence',
        SiTypeDefTuple: 'Si1TypeDefTuple',
        SiTypeParameter: 'Si1TypeParameter',
        SiTypeDefVariant: 'Si1TypeDefVariant',
        SiVariant: 'Si1Variant'
    }
};


/***/ }),

/***/ 70254:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v0 = void 0;
/* eslint-disable sort-keys */
exports.v0 = {
    Si0Field: {
        name: 'Option<Text>',
        type: 'Si0LookupTypeId',
        typeName: 'Option<Text>',
        docs: 'Vec<Text>'
    },
    Si0LookupTypeId: 'u32',
    Si0Path: 'Vec<Text>',
    Si0Type: {
        path: 'Si0Path',
        params: 'Vec<Si0LookupTypeId>',
        def: 'Si0TypeDef'
    },
    Si0TypeDef: {
        _enum: {
            Composite: 'Si0TypeDefComposite',
            Variant: 'Si0TypeDefVariant',
            Sequence: 'Si0TypeDefSequence',
            Array: 'Si0TypeDefArray',
            Tuple: 'Si0TypeDefTuple',
            Primitive: 'Si0TypeDefPrimitive',
            Compact: 'Si0TypeDefCompact',
            Phantom: 'Si0TypeDefPhantom',
            BitSequence: 'Si0TypeDefBitSequence'
        }
    },
    Si0TypeDefArray: {
        len: 'u32',
        type: 'Si0LookupTypeId'
    },
    Si0TypeDefBitSequence: {
        bitStoreType: 'Si0LookupTypeId',
        bitOrderType: 'Si0LookupTypeId'
    },
    Si0TypeDefCompact: {
        type: 'Si0LookupTypeId'
    },
    Si0TypeDefComposite: {
        fields: 'Vec<Si0Field>'
    },
    Si0TypeDefPhantom: 'Null',
    Si0TypeDefVariant: {
        variants: 'Vec<Si0Variant>'
    },
    Si0TypeDefPrimitive: {
        _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'U256', 'I8', 'I16', 'I32', 'I64', 'I128', 'I256']
    },
    Si0TypeDefSequence: {
        type: 'Si0LookupTypeId'
    },
    Si0TypeDefTuple: 'Vec<Si0LookupTypeId>',
    Si0TypeParameter: {
        name: 'Text',
        type: 'Option<Si0LookupTypeId>'
    },
    Si0Variant: {
        name: 'Text',
        fields: 'Vec<Si0Field>',
        index: 'Option<u8>',
        discriminant: 'Option<u64>',
        docs: 'Vec<Text>'
    }
};


/***/ }),

/***/ 55504:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v1 = exports.Si1Variant = void 0;
/* eslint-disable sort-keys */
exports.Si1Variant = {
    name: 'Text',
    fields: 'Vec<Si1Field>',
    index: 'u8',
    docs: 'Vec<Text>'
};
exports.v1 = {
    Si1Field: {
        name: 'Option<Text>',
        type: 'Si1LookupTypeId',
        typeName: 'Option<Text>',
        docs: 'Vec<Text>'
    },
    Si1LookupTypeId: 'Compact<u32>',
    Si1Path: 'Si0Path',
    Si1Type: {
        path: 'Si1Path',
        params: 'Vec<Si1TypeParameter>',
        def: 'Si1TypeDef',
        docs: 'Vec<Text>'
    },
    Si1TypeDef: {
        _enum: {
            Composite: 'Si1TypeDefComposite',
            Variant: 'Si1TypeDefVariant',
            Sequence: 'Si1TypeDefSequence',
            Array: 'Si1TypeDefArray',
            Tuple: 'Si1TypeDefTuple',
            Primitive: 'Si1TypeDefPrimitive',
            Compact: 'Si1TypeDefCompact',
            BitSequence: 'Si1TypeDefBitSequence',
            // NOTE: This is specific to the implementation for pre-v14 metadata
            // compatibility (always keep this as the last entry in the enum)
            HistoricMetaCompat: 'Type'
        }
    },
    Si1TypeDefArray: {
        len: 'u32',
        type: 'Si1LookupTypeId'
    },
    Si1TypeDefBitSequence: {
        bitStoreType: 'Si1LookupTypeId',
        bitOrderType: 'Si1LookupTypeId'
    },
    Si1TypeDefCompact: {
        type: 'Si1LookupTypeId'
    },
    Si1TypeDefComposite: {
        fields: 'Vec<Si1Field>'
    },
    Si1TypeDefPrimitive: 'Si0TypeDefPrimitive',
    Si1TypeDefSequence: {
        type: 'Si1LookupTypeId'
    },
    Si1TypeDefTuple: 'Vec<Si1LookupTypeId>',
    Si1TypeParameter: {
        name: 'Text',
        type: 'Option<Si1LookupTypeId>'
    },
    Si1TypeDefVariant: {
        variants: 'Vec<Si1Variant>'
    },
    Si1Variant: exports.Si1Variant
};


/***/ }),

/***/ 79269:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        Period: '(BlockNumber, u32)',
        Priority: 'u8',
        SchedulePeriod: 'Period',
        SchedulePriority: 'Priority',
        Scheduled: {
            maybeId: 'Option<Bytes>',
            priority: 'SchedulePriority',
            call: 'Call',
            maybePeriodic: 'Option<SchedulePeriod>',
            origin: 'PalletsOrigin'
        },
        ScheduledTo254: {
            maybeId: 'Option<Bytes>',
            priority: 'SchedulePriority',
            call: 'Call',
            maybePeriodic: 'Option<SchedulePeriod>'
        },
        TaskAddress: '(BlockNumber, u32)'
    }
};


/***/ }),

/***/ 34647:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(6369);
const keyTypes = {
    // key for beefy
    BeefyKey: '[u8; 33]',
    // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)
    Keys: 'SessionKeys4',
    SessionKeys1: '(AccountId)',
    SessionKeys2: '(AccountId, AccountId)',
    SessionKeys3: '(AccountId, AccountId, AccountId)',
    SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',
    SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys6B: '(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
    SessionKeys7: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys7B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
    SessionKeys8: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys8B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
    SessionKeys9: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys9B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
    SessionKeys10: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys10B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)'
};
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        ...keyTypes,
        FullIdentification: 'Exposure',
        IdentificationTuple: '(ValidatorId, FullIdentification)',
        MembershipProof: {
            session: 'SessionIndex',
            trieNodes: 'Vec<Bytes>',
            validatorCount: 'ValidatorCount'
        },
        SessionIndex: 'u32',
        ValidatorCount: 'u32'
    }
};


/***/ }),

/***/ 6369:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    SessionKeys: [
        {
            methods: {
                decode_session_keys: {
                    description: 'Decode the given public session keys.',
                    params: [
                        {
                            name: 'encoded',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Vec<(Bytes, KeyTypeId)>>'
                },
                generate_session_keys: {
                    description: 'Generate a set of session keys with optionally using the given seed.',
                    params: [
                        {
                            name: 'seed',
                            type: 'Option<Bytes>'
                        }
                    ],
                    type: 'Bytes'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 9620:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        Bid: {
            who: 'AccountId',
            kind: 'BidKind',
            value: 'Balance'
        },
        BidKind: {
            _enum: {
                Deposit: 'Balance',
                Vouch: '(AccountId, Balance)'
            }
        },
        // a society-specific Judgement (not the same as identity Judgement)
        SocietyJudgement: {
            _enum: ['Rebid', 'Reject', 'Approve']
        },
        // a society-specific Vote
        SocietyVote: {
            _enum: ['Skeptic', 'Reject', 'Approve']
        },
        StrikeCount: 'u32',
        VouchingStatus: {
            _enum: ['Vouching', 'Banned']
        }
    }
};


/***/ }),

/***/ 44947:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(40941);
const deprecated = {
    Points: 'u32',
    EraPoints: {
        total: 'Points',
        individual: 'Vec<Points>'
    }
};
const phragmen = {
    CompactAssignments: 'CompactAssignmentsWith16',
    CompactAssignmentsWith16: {
        votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',
        votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',
        votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',
        votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',
        votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',
        votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',
        votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',
        votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',
        votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',
        votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',
        votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',
        votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',
        votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',
        votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',
        votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',
        votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'
    },
    CompactAssignmentsWith24: {
        votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',
        votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',
        votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',
        votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',
        votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',
        votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',
        votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',
        votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',
        votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',
        votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',
        votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',
        votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',
        votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',
        votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',
        votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',
        votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',
        votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',
        votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',
        votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',
        votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',
        votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',
        votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',
        votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',
        votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'
    },
    CompactAssignmentsTo265: 'CompactAssignmentsWith16',
    CompactAssignmentsTo257: {
        votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',
        votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',
        votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',
        votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',
        votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',
        votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',
        votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',
        votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',
        votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',
        votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',
        votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',
        votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',
        votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',
        votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',
        votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',
        votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'
    },
    CompactScore: '(ValidatorIndex, OffchainAccuracy)',
    CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',
    ElectionCompute: {
        // in previous versions the last entry was "AuthorityId"
        // (since no data attached, and it is via SCALE can rename)
        _enum: ['OnChain', 'Signed', 'Unsigned']
    },
    ElectionPhase: {
        _enum: {
            Off: null,
            Signed: null,
            Unsigned: '(bool, BlockNumber)',
            Emergency: null
        }
    },
    ElectionResult: {
        compute: 'ElectionCompute',
        slotStake: 'Balance',
        electedStashes: 'Vec<AccountId>',
        exposures: 'Vec<(AccountId, Exposure)>'
    },
    ElectionScore: '[u128; 3]',
    ElectionSize: {
        validators: 'Compact<ValidatorIndex>',
        nominators: 'Compact<NominatorIndex>'
    },
    ElectionStatus: {
        _enum: {
            Close: 'Null',
            Open: 'BlockNumber'
        }
    },
    ExtendedBalance: 'u128',
    RawSolution: 'RawSolutionWith16',
    RawSolutionWith16: {
        compact: 'CompactAssignmentsWith16',
        score: 'ElectionScore',
        round: 'u32'
    },
    RawSolutionWith24: {
        compact: 'CompactAssignmentsWith24',
        score: 'ElectionScore',
        round: 'u32'
    },
    RawSolutionTo265: 'RawSolutionWith16',
    ReadySolution: {
        supports: 'SolutionSupports',
        score: 'ElectionScore',
        compute: 'ElectionCompute'
    },
    RoundSnapshot: {
        voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',
        targets: 'Vec<AccountId>'
    },
    SeatHolder: {
        who: 'AccountId',
        stake: 'Balance',
        deposit: 'Balance'
    },
    SignedSubmission: {
        _fallback: 'SignedSubmissionTo276',
        who: 'AccountId',
        deposit: 'Balance',
        solution: 'RawSolution',
        reward: 'Balance'
    },
    SignedSubmissionTo276: {
        who: 'AccountId',
        deposit: 'Balance',
        solution: 'RawSolution'
    },
    SignedSubmissionOf: 'SignedSubmission',
    SolutionOrSnapshotSize: {
        voters: 'Compact<u32>',
        targets: 'Compact<u32>'
    },
    SolutionSupport: {
        total: 'ExtendedBalance',
        voters: 'Vec<(AccountId, ExtendedBalance)>'
    },
    SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',
    Supports: 'SolutionSupports',
    SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',
    Voter: {
        votes: 'Vec<AccountId>',
        stake: 'Balance',
        deposit: 'Balance'
    },
    VoteWeight: 'u64'
};
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        ...deprecated,
        ...phragmen,
        ActiveEraInfo: {
            index: 'EraIndex',
            start: 'Option<Moment>'
        },
        EraIndex: 'u32',
        EraRewardPoints: {
            total: 'RewardPoint',
            individual: 'BTreeMap<AccountId, RewardPoint>'
        },
        EraRewards: {
            total: 'u32',
            rewards: 'Vec<u32>'
        },
        Exposure: {
            total: 'Compact<Balance>',
            own: 'Compact<Balance>',
            others: 'Vec<IndividualExposure>'
        },
        Forcing: {
            _enum: [
                'NotForcing',
                'ForceNew',
                'ForceNone',
                'ForceAlways'
            ]
        },
        IndividualExposure: {
            who: 'AccountId',
            value: 'Compact<Balance>'
        },
        KeyType: 'AccountId',
        MomentOf: 'Moment',
        Nominations: {
            targets: 'Vec<AccountId>',
            submittedIn: 'EraIndex',
            suppressed: 'bool'
        },
        NominatorIndex: 'u32',
        NominatorIndexCompact: 'Compact<NominatorIndex>',
        OffchainAccuracy: 'PerU16',
        OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',
        PhragmenScore: '[u128; 3]',
        Points: 'u32',
        RewardDestination: {
            _enum: {
                Staked: 'Null',
                Stash: 'Null',
                Controller: 'Null',
                Account: 'AccountId',
                None: 'Null'
            }
        },
        RewardPoint: 'u32',
        SlashJournalEntry: {
            who: 'AccountId',
            amount: 'Balance',
            ownSlash: 'Balance'
        },
        SlashingSpansTo204: {
            spanIndex: 'SpanIndex',
            lastStart: 'EraIndex',
            prior: 'Vec<EraIndex>'
        },
        SlashingSpans: {
            spanIndex: 'SpanIndex',
            lastStart: 'EraIndex',
            lastNonzeroSlash: 'EraIndex',
            prior: 'Vec<EraIndex>'
        },
        SpanIndex: 'u32',
        SpanRecord: {
            slashed: 'Balance',
            paidOut: 'Balance'
        },
        StakingLedgerTo223: {
            stash: 'AccountId',
            total: 'Compact<Balance>',
            active: 'Compact<Balance>',
            unlocking: 'Vec<UnlockChunk>'
        },
        StakingLedgerTo240: {
            _fallback: 'StakingLedgerTo223',
            stash: 'AccountId',
            total: 'Compact<Balance>',
            active: 'Compact<Balance>',
            unlocking: 'Vec<UnlockChunk>',
            lastReward: 'Option<EraIndex>'
        },
        StakingLedger: {
            stash: 'AccountId',
            total: 'Compact<Balance>',
            active: 'Compact<Balance>',
            unlocking: 'Vec<UnlockChunk>',
            claimedRewards: 'Vec<EraIndex>'
        },
        UnappliedSlashOther: '(AccountId, Balance)',
        UnappliedSlash: {
            validator: 'AccountId',
            own: 'Balance',
            others: 'Vec<UnappliedSlashOther>',
            reporters: 'Vec<AccountId>',
            payout: 'Balance'
        },
        UnlockChunk: {
            value: 'Compact<Balance>',
            era: 'Compact<BlockNumber>'
        },
        ValidatorIndex: 'u16',
        ValidatorIndexCompact: 'Compact<ValidatorIndex>',
        ValidatorPrefs: 'ValidatorPrefsWithBlocked',
        ValidatorPrefsWithCommission: {
            commission: 'Compact<Perbill>'
        },
        ValidatorPrefsWithBlocked: {
            commission: 'Compact<Perbill>',
            blocked: 'bool'
        },
        ValidatorPrefsTo196: {
            validatorPayment: 'Compact<Balance>'
        },
        ValidatorPrefsTo145: {
            unstakeThreshold: 'Compact<u32>',
            validatorPayment: 'Compact<Balance>'
        }
    }
};


/***/ }),

/***/ 40941:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    StakingApi: [
        {
            methods: {
                nominations_quota: {
                    description: 'Returns the nominations quota for a nominator with a given balance.',
                    params: [
                        {
                            name: 'balance',
                            type: 'Balance'
                        }
                    ],
                    type: 'u32'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 50494:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(95556);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    types: {
        ApiId: '[u8; 8]',
        BlockTrace: {
            blockHash: 'Text',
            parentHash: 'Text',
            tracingTargets: 'Text',
            storageKeys: 'Text',
            spans: 'Vec<BlockTraceSpan>',
            events: 'Vec<BlockTraceEvent>'
        },
        BlockTraceEvent: {
            target: 'Text',
            data: 'BlockTraceEventData',
            parentId: 'Option<u64>'
        },
        BlockTraceEventData: {
            stringValues: 'HashMap<Text, Text>'
        },
        BlockTraceSpan: {
            id: 'u64',
            parentId: 'Option<u64>',
            name: 'Text',
            target: 'Text',
            wasm: 'bool'
        },
        KeyValueOption: '(StorageKey, Option<StorageData>)',
        MigrationStatusResult: {
            topRemainingToMigrate: 'u64',
            childRemainingToMigrate: 'u64'
        },
        ReadProof: {
            at: 'Hash',
            proof: 'Vec<Bytes>'
        },
        RuntimeVersionApi: '(ApiId, u32)',
        RuntimeVersion: {
            specName: 'Text',
            implName: 'Text',
            authoringVersion: 'u32',
            specVersion: 'u32',
            implVersion: 'u32',
            apis: 'Vec<RuntimeVersionApi>',
            transactionVersion: 'u32',
            stateVersion: 'u8'
        },
        RuntimeVersionPre4: {
            specName: 'Text',
            implName: 'Text',
            authoringVersion: 'u32',
            specVersion: 'u32',
            implVersion: 'u32',
            apis: 'Vec<RuntimeVersionApi>',
            transactionVersion: 'u32'
        },
        RuntimeVersionPre3: {
            specName: 'Text',
            implName: 'Text',
            authoringVersion: 'u32',
            specVersion: 'u32',
            implVersion: 'u32',
            apis: 'Vec<RuntimeVersionApi>'
        },
        RuntimeVersionPartial: {
            specName: 'Text',
            specVersion: 'u32',
            apis: 'Vec<RuntimeVersionApi>'
        },
        SpecVersion: 'u32',
        StorageChangeSet: {
            block: 'Hash',
            changes: 'Vec<KeyValueOption>'
        },
        TraceBlockResponse: {
            _enum: {
                TraceError: 'TraceError',
                BlockTrace: 'BlockTrace'
            }
        },
        TraceError: {
            error: 'Text'
        }
    }
};


/***/ }),

/***/ 95556:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    call: {
        alias: ['state_callAt'],
        description: 'Perform a call to a builtin on the chain',
        params: [
            {
                name: 'method',
                type: 'Text'
            },
            {
                name: 'data',
                type: 'Bytes'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Bytes'
    },
    getChildKeys: {
        description: 'Retrieves the keys with prefix of a specific child storage',
        params: [
            {
                name: 'childStorageKey',
                type: 'StorageKey'
            },
            {
                name: 'childDefinition',
                type: 'StorageKey'
            },
            {
                name: 'childType',
                type: 'u32'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getChildReadProof: {
        description: 'Returns proof of storage for child key entries at a specific block state.',
        params: [
            {
                name: 'childStorageKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ReadProof'
    },
    getChildStorage: {
        description: 'Retrieves the child storage for a key',
        params: [
            {
                name: 'childStorageKey',
                type: 'StorageKey'
            },
            {
                name: 'childDefinition',
                type: 'StorageKey'
            },
            {
                name: 'childType',
                type: 'u32'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'StorageData'
    },
    getChildStorageHash: {
        description: 'Retrieves the child storage hash',
        params: [
            {
                name: 'childStorageKey',
                type: 'StorageKey'
            },
            {
                name: 'childDefinition',
                type: 'StorageKey'
            },
            {
                name: 'childType',
                type: 'u32'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Hash'
    },
    getChildStorageSize: {
        description: 'Retrieves the child storage size',
        params: [
            {
                name: 'childStorageKey',
                type: 'StorageKey'
            },
            {
                name: 'childDefinition',
                type: 'StorageKey'
            },
            {
                name: 'childType',
                type: 'u32'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'u64'
    },
    getKeys: {
        deprecated: 'Use `api.rpc.state.getKeysPaged` to retrieve keys',
        description: 'Retrieves the keys with a certain prefix',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getKeysPaged: {
        alias: ['state_getKeysPagedAt'],
        description: 'Returns the keys with prefix with pagination support.',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                name: 'count',
                type: 'u32'
            },
            {
                isOptional: true,
                name: 'startKey',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getMetadata: {
        description: 'Returns the runtime metadata',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Metadata'
    },
    getPairs: {
        deprecated: 'Use `api.rpc.state.getKeysPaged` to retrieve keys',
        description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',
        isUnsafe: true,
        params: [
            {
                name: 'prefix',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<KeyValue>'
    },
    getReadProof: {
        description: 'Returns proof of storage entries at a specific block state',
        params: [
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ReadProof'
    },
    getRuntimeVersion: {
        alias: ['chain_getRuntimeVersion'],
        description: 'Get the runtime version',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'RuntimeVersion'
    },
    getStorage: {
        alias: ['state_getStorageAt'],
        description: 'Retrieves the storage for a key',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'StorageData'
    },
    getStorageHash: {
        alias: ['state_getStorageHashAt'],
        description: 'Retrieves the storage hash',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Hash'
    },
    getStorageSize: {
        alias: ['state_getStorageSizeAt'],
        description: 'Retrieves the storage size',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'u64'
    },
    queryStorage: {
        description: 'Query historical storage entries (by key) starting from a start block',
        isUnsafe: true,
        params: [
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                name: 'fromBlock',
                type: 'Hash'
            },
            {
                isOptional: true,
                name: 'toBlock',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageChangeSet>'
    },
    queryStorageAt: {
        description: 'Query storage entries (by key) starting at block hash given as the second parameter',
        params: [
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageChangeSet>'
    },
    subscribeRuntimeVersion: {
        alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],
        description: 'Retrieves the runtime version via subscription',
        params: [],
        pubsub: [
            'runtimeVersion',
            'subscribeRuntimeVersion',
            'unsubscribeRuntimeVersion'
        ],
        type: 'RuntimeVersion'
    },
    subscribeStorage: {
        description: 'Subscribes to storage changes for the provided keys',
        // NOTE Just marking it here to follow the logic - this is unsafe when no
        // keys are provided (i.e. subscribing to all), generally this is used
        // extensively with normal subscriptions
        // isUnsafe: true,
        params: [
            {
                isOptional: true,
                name: 'keys',
                type: 'Vec<StorageKey>'
            }
        ],
        pubsub: [
            'storage',
            'subscribeStorage',
            'unsubscribeStorage'
        ],
        type: 'StorageChangeSet'
    },
    traceBlock: {
        description: 'Provides a way to trace the re-execution of a single block',
        isUnsafe: true,
        params: [
            {
                name: 'block',
                type: 'Hash'
            },
            {
                name: 'targets',
                type: 'Option<Text>'
            },
            {
                name: 'storageKeys',
                type: 'Option<Text>'
            },
            {
                name: 'methods',
                type: 'Option<Text>'
            }
        ],
        type: 'TraceBlockResponse'
    },
    trieMigrationStatus: {
        description: 'Check current migration state',
        isUnsafe: true,
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'MigrationStatusResult'
    }
};


/***/ }),

/***/ 13975:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        WeightToFeeCoefficient: {
            coeffInteger: 'Balance',
            coeffFrac: 'Perbill',
            negative: 'bool',
            degree: 'u8'
        }
    }
};


/***/ }),

/***/ 34117:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(18512);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    types: {}
};


/***/ }),

/***/ 18512:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    genSyncSpec: {
        description: 'Returns the json-serialized chainspec running the node, with a sync state.',
        endpoint: 'sync_state_genSyncSpec',
        params: [
            {
                name: 'raw',
                type: 'bool'
            }
        ],
        type: 'Json'
    }
};


/***/ }),

/***/ 82068:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const rpc_js_1 = __nccwpck_require__(98285);
const runtime_js_1 = __nccwpck_require__(34350);
exports["default"] = {
    rpc: rpc_js_1.rpc,
    runtime: runtime_js_1.runtime,
    types: {
        AccountInfo: 'AccountInfoWithTripleRefCount',
        AccountInfoWithRefCountU8: {
            nonce: 'Index',
            refcount: 'u8',
            data: 'AccountData'
        },
        AccountInfoWithRefCount: {
            _fallback: 'AccountInfoWithRefCountU8',
            nonce: 'Index',
            refcount: 'RefCount',
            data: 'AccountData'
        },
        AccountInfoWithDualRefCount: {
            _fallback: 'AccountInfoWithRefCount',
            nonce: 'Index',
            consumers: 'RefCount',
            providers: 'RefCount',
            data: 'AccountData'
        },
        // original naming
        AccountInfoWithProviders: 'AccountInfoWithDualRefCount',
        AccountInfoWithTripleRefCount: {
            _fallback: 'AccountInfoWithDualRefCount',
            nonce: 'Index',
            consumers: 'RefCount',
            providers: 'RefCount',
            sufficients: 'RefCount',
            data: 'AccountData'
        },
        ApplyExtrinsicResult: 'Result<DispatchOutcome, TransactionValidityError>',
        ApplyExtrinsicResultPre6: 'Result<DispatchOutcomePre6, TransactionValidityError>',
        ArithmeticError: {
            _enum: [
                'Underflow',
                'Overflow',
                'DivisionByZero'
            ]
        },
        BlockLength: {
            max: 'PerDispatchClassU32'
        },
        BlockWeights: {
            baseBlock: 'Weight',
            maxBlock: 'Weight',
            perClass: 'PerDispatchClassWeightsPerClass'
        },
        ChainProperties: 'GenericChainProperties',
        ChainType: {
            _enum: {
                Development: 'Null',
                Local: 'Null',
                Live: 'Null',
                Custom: 'Text'
            }
        },
        ConsumedWeight: 'PerDispatchClassWeight',
        DigestOf: 'Digest',
        DispatchClass: {
            _enum: ['Normal', 'Operational', 'Mandatory']
        },
        DispatchError: {
            _enum: {
                Other: 'Null',
                CannotLookup: 'Null',
                BadOrigin: 'Null',
                Module: 'DispatchErrorModule',
                ConsumerRemaining: 'Null',
                NoProviders: 'Null',
                TooManyConsumers: 'Null',
                Token: 'TokenError',
                Arithmetic: 'ArithmeticError',
                Transactional: 'TransactionalError',
                Exhausted: 'Null',
                Corruption: 'Null',
                Unavailable: 'Null'
            }
        },
        DispatchErrorPre6: {
            _enum: {
                Other: 'Null',
                CannotLookup: 'Null',
                BadOrigin: 'Null',
                Module: 'DispatchErrorModulePre6',
                ConsumerRemaining: 'Null',
                NoProviders: 'Null',
                TooManyConsumers: 'Null',
                Token: 'TokenError',
                Arithmetic: 'ArithmeticError',
                Transactional: 'TransactionalError'
            }
        },
        DispatchErrorPre6First: {
            // The enum was modified mid-flight, affecting asset chains -
            // https://github.com/paritytech/substrate/pull/10382/files#diff-e4e016b33a82268b6208dc974eea841bad47597865a749fee2f937eb6fdf67b4R498
            _enum: {
                Other: 'Null',
                CannotLookup: 'Null',
                BadOrigin: 'Null',
                Module: 'DispatchErrorModulePre6',
                ConsumerRemaining: 'Null',
                NoProviders: 'Null',
                Token: 'TokenError',
                Arithmetic: 'ArithmeticError',
                Transactional: 'TransactionalError'
            }
        },
        DispatchErrorModuleU8: {
            index: 'u8',
            error: 'u8'
        },
        DispatchErrorModuleU8a: {
            index: 'u8',
            error: '[u8; 4]'
        },
        DispatchErrorModule: 'DispatchErrorModuleU8a',
        DispatchErrorModulePre6: 'DispatchErrorModuleU8',
        DispatchErrorTo198: {
            module: 'Option<u8>',
            error: 'u8'
        },
        DispatchInfo: {
            weight: 'Weight',
            class: 'DispatchClass',
            paysFee: 'Pays'
        },
        DispatchInfoTo190: {
            weight: 'Weight',
            class: 'DispatchClass'
        },
        DispatchInfoTo244: {
            weight: 'Weight',
            class: 'DispatchClass',
            paysFee: 'bool'
        },
        DispatchOutcome: 'Result<(), DispatchError>',
        DispatchOutcomePre6: 'Result<(), DispatchErrorPre6>',
        DispatchResult: 'Result<(), DispatchError>',
        DispatchResultOf: 'DispatchResult',
        DispatchResultTo198: 'Result<(), Text>',
        Event: 'GenericEvent',
        EventId: '[u8; 2]',
        EventIndex: 'u32',
        EventRecord: {
            phase: 'Phase',
            event: 'Event',
            topics: 'Vec<Hash>'
        },
        Health: {
            peers: 'u64',
            isSyncing: 'bool',
            shouldHavePeers: 'bool'
        },
        InvalidTransaction: {
            _enum: {
                Call: 'Null',
                Payment: 'Null',
                Future: 'Null',
                Stale: 'Null',
                BadProof: 'Null',
                AncientBirthBlock: 'Null',
                ExhaustsResources: 'Null',
                Custom: 'u8',
                BadMandatory: 'Null',
                MandatoryDispatch: 'Null',
                BadSigner: 'Null'
            }
        },
        Key: 'Bytes',
        LastRuntimeUpgradeInfo: {
            specVersion: 'Compact<u32>',
            specName: 'Text'
        },
        NetworkState: {
            peerId: 'Text',
            listenedAddresses: 'Vec<Text>',
            externalAddresses: 'Vec<Text>',
            connectedPeers: 'HashMap<Text, Peer>',
            notConnectedPeers: 'HashMap<Text, NotConnectedPeer>',
            averageDownloadPerSec: 'u64',
            averageUploadPerSec: 'u64',
            peerset: 'NetworkStatePeerset'
        },
        NetworkStatePeerset: {
            messageQueue: 'u64',
            nodes: 'HashMap<Text, NetworkStatePeersetInfo>'
        },
        NetworkStatePeersetInfo: {
            connected: 'bool',
            reputation: 'i32'
        },
        NodeRole: {
            _enum: {
                Full: 'Null',
                LightClient: 'Null',
                Authority: 'Null',
                UnknownRole: 'u8'
            }
        },
        NotConnectedPeer: {
            knownAddresses: 'Vec<Text>',
            latestPingTime: 'Option<PeerPing>',
            versionString: 'Option<Text>'
        },
        Peer: {
            enabled: 'bool',
            endpoint: 'PeerEndpoint',
            knownAddresses: 'Vec<Text>',
            latestPingTime: 'PeerPing',
            open: 'bool',
            versionString: 'Text'
        },
        PeerEndpoint: {
            listening: 'PeerEndpointAddr'
        },
        PeerEndpointAddr: {
            _alias: {
                localAddr: 'local_addr',
                sendBackAddr: 'send_back_addr'
            },
            localAddr: 'Text',
            sendBackAddr: 'Text'
        },
        PeerPing: {
            nanos: 'u64',
            secs: 'u64'
        },
        PeerInfo: {
            peerId: 'Text',
            roles: 'Text',
            protocolVersion: 'u32',
            bestHash: 'Hash',
            bestNumber: 'BlockNumber'
        },
        PerDispatchClassU32: {
            normal: 'u32',
            operational: 'u32',
            mandatory: 'u32'
        },
        PerDispatchClassWeight: {
            normal: 'Weight',
            operational: 'Weight',
            mandatory: 'Weight'
        },
        PerDispatchClassWeightsPerClass: {
            normal: 'WeightPerClass',
            operational: 'WeightPerClass',
            mandatory: 'WeightPerClass'
        },
        Phase: {
            _enum: {
                ApplyExtrinsic: 'u32',
                Finalization: 'Null',
                Initialization: 'Null'
            }
        },
        RawOrigin: {
            _enum: {
                Root: 'Null',
                Signed: 'AccountId',
                None: 'Null'
            }
        },
        RefCount: 'u32',
        RefCountTo259: 'u8',
        SyncState: {
            startingBlock: 'BlockNumber',
            currentBlock: 'BlockNumber',
            highestBlock: 'Option<BlockNumber>'
        },
        SystemOrigin: 'RawOrigin',
        TokenError: {
            _enum: [
                'NoFunds',
                'WouldDie',
                'BelowMinimum',
                'CannotCreate',
                'UnknownAsset',
                'Frozen',
                'Unsupported',
                // these are dropped, but still in older versions
                // (if this adjusts, will need to take a re-look)
                'Underflow',
                'Overflow'
            ]
        },
        TransactionValidityError: {
            _enum: {
                Invalid: 'InvalidTransaction',
                Unknown: 'UnknownTransaction'
            }
        },
        TransactionalError: {
            _enum: [
                'LimitReached',
                'NoLayer'
            ]
        },
        UnknownTransaction: {
            _enum: {
                CannotLookup: 'Null',
                NoUnsignedValidator: 'Null',
                Custom: 'u8'
            }
        },
        WeightPerClass: {
            baseExtrinsic: 'Weight',
            maxExtrinsic: 'Option<Weight>',
            maxTotal: 'Option<Weight>',
            reserved: 'Option<Weight>'
        }
    }
};


/***/ }),

/***/ 98285:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rpc = void 0;
exports.rpc = {
    accountNextIndex: {
        alias: ['account_nextIndex'],
        description: 'Retrieves the next accountIndex as available on the node',
        params: [
            {
                name: 'accountId',
                type: 'AccountId'
            }
        ],
        type: 'Index'
    },
    addLogFilter: {
        description: 'Adds the supplied directives to the current log filter',
        isUnsafe: true,
        params: [
            {
                name: 'directives',
                type: 'Text'
            }
        ],
        type: 'Null'
    },
    addReservedPeer: {
        description: 'Adds a reserved peer',
        isUnsafe: true,
        params: [
            {
                name: 'peer',
                type: 'Text'
            }
        ],
        type: 'Text'
    },
    chain: {
        description: 'Retrieves the chain',
        params: [],
        type: 'Text'
    },
    chainType: {
        description: 'Retrieves the chain type',
        params: [],
        type: 'ChainType'
    },
    dryRun: {
        alias: ['system_dryRunAt'],
        description: 'Dry run an extrinsic at a given block',
        isUnsafe: true,
        params: [
            {
                name: 'extrinsic',
                type: 'Bytes'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ApplyExtrinsicResult'
    },
    health: {
        description: 'Return health status of the node',
        noErrorLog: true,
        params: [],
        type: 'Health'
    },
    localListenAddresses: {
        description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',
        params: [],
        type: 'Vec<Text>'
    },
    localPeerId: {
        description: 'Returns the base58-encoded PeerId of the node',
        params: [],
        type: 'Text'
    },
    name: {
        description: 'Retrieves the node name',
        params: [],
        type: 'Text'
    },
    networkState: {
        alias: ['system_unstable_networkState'],
        description: 'Returns current state of the network',
        isUnsafe: true,
        params: [],
        type: 'NetworkState'
    },
    nodeRoles: {
        description: 'Returns the roles the node is running as',
        params: [],
        type: 'Vec<NodeRole>'
    },
    peers: {
        description: 'Returns the currently connected peers',
        isUnsafe: true,
        params: [],
        type: 'Vec<PeerInfo>'
    },
    properties: {
        description: 'Get a custom set of properties as a JSON object, defined in the chain spec',
        params: [],
        type: 'ChainProperties'
    },
    removeReservedPeer: {
        description: 'Remove a reserved peer',
        isUnsafe: true,
        params: [
            {
                name: 'peerId',
                type: 'Text'
            }
        ],
        type: 'Text'
    },
    reservedPeers: {
        description: 'Returns the list of reserved peers',
        params: [],
        type: 'Vec<Text>'
    },
    resetLogFilter: {
        description: 'Resets the log filter to Substrate defaults',
        isUnsafe: true,
        params: [],
        type: 'Null'
    },
    syncState: {
        description: 'Returns the state of the syncing of the node',
        params: [],
        type: 'SyncState'
    },
    version: {
        description: 'Retrieves the version of the node',
        params: [],
        type: 'Text'
    }
};


/***/ }),

/***/ 34350:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    AccountNonceApi: [
        {
            methods: {
                account_nonce: {
                    description: 'The API to query account nonce (aka transaction index)',
                    params: [
                        {
                            name: 'accountId',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Index'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 69152:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        Bounty: {
            proposer: 'AccountId',
            value: 'Balance',
            fee: 'Balance',
            curatorDeposit: 'Balance',
            bond: 'Balance',
            status: 'BountyStatus'
        },
        BountyIndex: 'u32',
        BountyStatus: {
            _enum: {
                Proposed: 'Null',
                Approved: 'Null',
                Funded: 'Null',
                CuratorProposed: 'BountyStatusCuratorProposed',
                Active: 'BountyStatusActive',
                PendingPayout: 'BountyStatusPendingPayout'
            }
        },
        BountyStatusActive: {
            curator: 'AccountId',
            updateDue: 'BlockNumber'
        },
        BountyStatusCuratorProposed: {
            curator: 'AccountId'
        },
        BountyStatusPendingPayout: {
            curator: 'AccountId',
            beneficiary: 'AccountId',
            unlockAt: 'BlockNumber'
        },
        OpenTip: {
            reason: 'Hash',
            who: 'AccountId',
            finder: 'AccountId',
            deposit: 'Balance',
            closes: 'Option<BlockNumber>',
            tips: 'Vec<OpenTipTip>',
            findersFee: 'bool'
        },
        OpenTipTo225: {
            reason: 'Hash',
            who: 'AccountId',
            finder: 'Option<OpenTipFinderTo225>',
            closes: 'Option<BlockNumber>',
            tips: 'Vec<OpenTipTip>'
        },
        OpenTipFinderTo225: '(AccountId, Balance)',
        OpenTipTip: '(AccountId, Balance)',
        TreasuryProposal: {
            proposer: 'AccountId',
            value: 'Balance',
            beneficiary: 'AccountId',
            bond: 'Balance'
        }
    }
};


/***/ }),

/***/ 93118:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        Multiplier: 'Fixed128'
    }
};


/***/ }),

/***/ 29582:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const runtime_js_1 = __nccwpck_require__(87122);
exports["default"] = {
    rpc: {},
    runtime: runtime_js_1.runtime,
    types: {
        TransactionSource: {
            _enum: ['InBlock', 'Local', 'External']
        },
        TransactionValidity: 'Result<ValidTransaction, TransactionValidityError>',
        ValidTransaction: {
            priority: 'TransactionPriority',
            requires: 'Vec<TransactionTag>',
            provides: 'Vec<TransactionTag>',
            longevity: 'TransactionLongevity',
            propagate: 'bool'
        }
    }
};


/***/ }),

/***/ 87122:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.runtime = void 0;
exports.runtime = {
    TaggedTransactionQueue: [
        {
            methods: {
                validate_transaction: {
                    description: 'Validate the transaction.',
                    params: [
                        {
                            name: 'source',
                            type: 'TransactionSource'
                        },
                        {
                            name: 'tx',
                            type: 'Extrinsic'
                        },
                        {
                            name: 'blockHash',
                            type: 'BlockHash'
                        }
                    ],
                    type: 'TransactionValidity'
                }
            },
            version: 3
        },
        {
            methods: {
                validate_transaction: {
                    description: 'Validate the transaction.',
                    params: [
                        {
                            name: 'source',
                            type: 'TransactionSource'
                        },
                        {
                            name: 'tx',
                            type: 'Extrinsic'
                        }
                    ],
                    type: 'TransactionValidity'
                }
            },
            version: 2
        },
        {
            methods: {
                validate_transaction: {
                    description: 'Validate the transaction.',
                    params: [
                        {
                            name: 'tx',
                            type: 'Extrinsic'
                        }
                    ],
                    type: 'TransactionValidity'
                }
            },
            version: 1
        }
    ]
};


/***/ }),

/***/ 45928:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        ClassId: 'u32',
        InstanceId: 'u32',
        DepositBalance: 'Balance',
        DepositBalanceOf: 'Balance',
        ClassDetails: {
            owner: 'AccountId',
            issuer: 'AccountId',
            admin: 'AccountId',
            freezer: 'AccountId',
            totalDeposit: 'DepositBalance',
            freeHolding: 'bool',
            instances: 'u32',
            instanceMetadatas: 'u32',
            attributes: 'u32',
            isFrozen: 'bool'
        },
        DestroyWitness: {
            instances: 'Compact<u32>',
            instanceMetadatas: 'Compact<u32>',
            attributes: 'Compact<u32>'
        },
        InstanceDetails: {
            owner: 'AccountId',
            approved: 'Option<AccountId>',
            isFrozen: 'bool',
            deposit: 'DepositBalance'
        },
        ClassMetadata: {
            deposit: 'DepositBalance',
            data: 'Vec<u8>',
            isFrozen: 'bool'
        },
        InstanceMetadata: {
            deposit: 'DepositBalance',
            data: 'Vec<u8>',
            isFrozen: 'bool'
        }
    }
};


/***/ }),

/***/ 49795:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        Multisig: {
            when: 'Timepoint',
            deposit: 'Balance',
            depositor: 'AccountId',
            approvals: 'Vec<AccountId>'
        },
        Timepoint: {
            height: 'BlockNumber',
            index: 'u32'
        }
    }
};


/***/ }),

/***/ 31958:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = {
    rpc: {},
    types: {
        VestingInfo: {
            locked: 'Balance',
            perBlock: 'Balance',
            startingBlock: 'BlockNumber'
        }
    }
};


/***/ }),

/***/ 86392:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const types_create_1 = __nccwpck_require__(49134);
const v0_js_1 = __nccwpck_require__(94689);
const v1_js_1 = __nccwpck_require__(71053);
const v2_js_1 = __nccwpck_require__(68402);
const XCM_LATEST = 'V2';
const xcm = {
    XcmOrigin: {
        _enum: {
            Xcm: 'MultiLocation'
        }
    },
    XcmpMessageFormat: {
        _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']
    },
    XcmAssetId: {
        _enum: {
            Concrete: 'MultiLocation',
            Abstract: 'Bytes'
        }
    },
    InboundStatus: {
        _enum: ['Ok', 'Suspended']
    },
    OutboundStatus: {
        _enum: ['Ok', 'Suspended']
    },
    MultiAssets: 'Vec<MultiAsset>'
};
const location = {
    BodyId: {
        _enum: {
            Unit: 'Null',
            Named: 'Vec<u8>',
            Index: 'Compact<u32>',
            Executive: 'Null',
            Technical: 'Null',
            Legislative: 'Null',
            Judicial: 'Null'
        }
    },
    BodyPart: {
        _enum: {
            Voice: 'Null',
            Members: 'Compact<u32>',
            Fraction: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            },
            AtLeastProportion: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            },
            MoreThanProportion: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            }
        }
    },
    InteriorMultiLocation: 'Junctions',
    NetworkId: {
        _enum: {
            Any: 'Null',
            Named: 'Vec<u8>',
            Polkadot: 'Null',
            Kusama: 'Null'
        }
    }
};
exports["default"] = {
    rpc: {},
    types: {
        ...location,
        ...xcm,
        ...v0_js_1.v0,
        ...v1_js_1.v1,
        ...v2_js_1.v2,
        ...(0, types_create_1.mapXcmTypes)(XCM_LATEST),
        DoubleEncodedCall: {
            encoded: 'Vec<u8>'
        },
        XcmOriginKind: {
            _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']
        },
        Outcome: {
            _enum: {
                Complete: 'Weight',
                Incomplete: '(Weight, XcmErrorV0)',
                Error: 'XcmErrorV0'
            }
        },
        QueryId: 'u64',
        QueryStatus: {
            _enum: {
                Pending: {
                    responder: 'VersionedMultiLocation',
                    maybeNotify: 'Option<(u8, u8)>',
                    timeout: 'BlockNumber'
                },
                Ready: {
                    response: 'VersionedResponse',
                    at: 'BlockNumber'
                }
            }
        },
        QueueConfigData: {
            suspendThreshold: 'u32',
            dropThreshold: 'u32',
            resumeThreshold: 'u32',
            thresholdWeight: 'Weight',
            weightRestrictDecay: 'Weight'
        },
        VersionMigrationStage: {
            _enum: {
                MigrateSupportedVersion: 'Null',
                MigrateVersionNotifiers: 'Null',
                NotifyCurrentTargets: 'Option<Bytes>',
                MigrateAndNotifyOldTargets: 'Null'
            }
        },
        VersionedMultiAsset: {
            _enum: {
                V0: 'MultiAssetV0',
                V1: 'MultiAssetV1',
                V2: 'MultiAssetV2'
            }
        },
        VersionedMultiAssets: {
            _enum: {
                V0: 'Vec<MultiAssetV0>',
                V1: 'MultiAssetsV1',
                V2: 'MultiAssetsV2'
            }
        },
        VersionedMultiLocation: {
            _enum: {
                V0: 'MultiLocationV0',
                V1: 'MultiLocationV1',
                V2: 'MultiLocationV2'
            }
        },
        VersionedResponse: {
            V0: 'ResponseV0',
            V1: 'ResponseV1',
            V2: 'ResponseV2'
        },
        VersionedXcm: {
            _enum: {
                V0: 'XcmV0',
                V1: 'XcmV1',
                V2: 'XcmV2'
            }
        },
        XcmVersion: 'u32'
    }
};


/***/ }),

/***/ 94689:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v0 = void 0;
exports.v0 = {
    FungibilityV0: 'FungibilityV1',
    WildFungibilityV0: 'WildFungibilityV1',
    AssetInstanceV0: {
        _enum: {
            Undefined: 'Null',
            Index8: 'u8',
            Index16: 'Compact<u16>',
            Index32: 'Compact<u32>',
            Index64: 'Compact<u64>',
            Index128: 'Compact<u128>',
            Array4: '[u8; 4]',
            Array8: '[u8; 8]',
            Array16: '[u8; 16]',
            Array32: '[u8; 32]',
            Blob: 'Vec<u8>'
        }
    },
    JunctionV0: {
        _enum: {
            Parent: 'Null',
            Parachain: 'Compact<u32>',
            AccountId32: {
                network: 'NetworkId',
                id: 'AccountId'
            },
            AccountIndex64: {
                network: 'NetworkId',
                index: 'Compact<u64>'
            },
            AccountKey20: {
                network: 'NetworkId',
                key: '[u8; 20]'
            },
            PalletInstance: 'u8',
            GeneralIndex: 'Compact<u128>',
            GeneralKey: 'Vec<u8>',
            OnlyChild: 'Null',
            Plurality: {
                id: 'BodyId',
                part: 'BodyPart'
            }
        }
    },
    MultiAssetV0: {
        _enum: {
            None: 'Null',
            All: 'Null',
            AllFungible: 'Null',
            AllNonFungible: 'Null',
            AllAbstractFungible: 'Vec<u8>',
            AllAbstractNonFungible: 'Vec<u8>',
            AllConcreteFungible: 'MultiLocationV0',
            AllConcreteNonFungible: 'MultiLocationV0',
            AbstractFungible: {
                id: 'Vec<u8>',
                instance: 'Compact<u128>'
            },
            AbstractNonFungible: {
                class: 'Vec<u8>',
                instance: 'AssetInstanceV0'
            },
            ConcreteFungible: {
                id: 'MultiLocationV0',
                amount: 'Compact<u128>'
            },
            ConcreteNonFungible: {
                class: 'MultiLocationV0',
                instance: 'AssetInstanceV0'
            }
        }
    },
    MultiLocationV0: {
        _enum: {
            Here: 'Null',
            X1: 'JunctionV0',
            X2: '(JunctionV0, JunctionV0)',
            X3: '(JunctionV0, JunctionV0, JunctionV0)',
            X4: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
            X5: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
            X6: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
            X7: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
            X8: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)'
        }
    },
    OriginKindV0: {
        _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']
    },
    ResponseV0: {
        _enum: {
            Assets: 'Vec<MultiAssetV0>'
        }
    },
    XcmV0: {
        _enum: {
            WithdrawAsset: {
                assets: 'Vec<MultiAssetV0>',
                effects: 'Vec<XcmOrderV0>'
            },
            ReserveAssetDeposit: {
                assets: 'Vec<MultiAssetV0>',
                effects: 'Vec<XcmOrderV0>'
            },
            ReceiveTeleportedAsset: {
                assets: 'Vec<MultiAssetV0>',
                effects: 'Vec<XcmOrderV0>'
            },
            QueryResponse: {
                queryId: 'Compact<u64>',
                response: 'ResponseV0'
            },
            TransferAsset: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0'
            },
            TransferReserveAsset: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0',
                effects: 'Vec<XcmOrderV0>'
            },
            Transact: {
                originType: 'XcmOriginKind',
                requireWeightAtMost: 'u64',
                call: 'DoubleEncodedCall'
            },
            HrmpNewChannelOpenRequest: {
                sender: 'Compact<u32>',
                maxMessageSize: 'Compact<u32>',
                maxCapacity: 'Compact<u32>'
            },
            HrmpChannelAccepted: {
                recipient: 'Compact<u32>'
            },
            HrmpChannelClosing: {
                initiator: 'Compact<u32>',
                sender: 'Compact<u32>',
                recipient: 'Compact<u32>'
            },
            RelayedFrom: {
                who: 'MultiLocationV0',
                message: 'XcmV0'
            }
        }
    },
    XcmErrorV0: {
        _enum: {
            Undefined: 'Null',
            Overflow: 'Null',
            Unimplemented: 'Null',
            UnhandledXcmVersion: 'Null',
            UnhandledXcmMessage: 'Null',
            UnhandledEffect: 'Null',
            EscalationOfPrivilege: 'Null',
            UntrustedReserveLocation: 'Null',
            UntrustedTeleportLocation: 'Null',
            DestinationBufferOverflow: 'Null',
            SendFailed: 'Null',
            CannotReachDestination: '(MultiLocation, Xcm)',
            MultiLocationFull: 'Null',
            FailedToDecode: 'Null',
            BadOrigin: 'Null',
            ExceedsMaxMessageSize: 'Null',
            FailedToTransactAsset: 'Null',
            WeightLimitReached: 'Weight',
            Wildcard: 'Null',
            TooMuchWeightRequired: 'Null',
            NotHoldingFees: 'Null',
            WeightNotComputable: 'Null',
            Barrier: 'Null',
            NotWithdrawable: 'Null',
            LocationCannotHold: 'Null',
            TooExpensive: 'Null',
            AssetNotFound: 'Null',
            RecursionLimitReached: 'Null'
        }
    },
    XcmOrderV0: {
        _enum: {
            Null: 'Null',
            DepositAsset: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0'
            },
            DepositReserveAsset: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0',
                effects: 'Vec<XcmOrderV0>'
            },
            ExchangeAsset: {
                give: 'Vec<MultiAssetV0>',
                receive: 'Vec<MultiAssetV0>'
            },
            InitiateReserveWithdraw: {
                assets: 'Vec<MultiAssetV0>',
                reserve: 'MultiLocationV0',
                effects: 'Vec<XcmOrderV0>'
            },
            InitiateTeleport: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0',
                effects: 'Vec<XcmOrderV0>'
            },
            QueryHolding: {
                queryId: 'Compact<u64>',
                dest: 'MultiLocationV0',
                assets: 'Vec<MultiAssetV0>'
            },
            BuyExecution: {
                fees: 'MultiAssetV0',
                weight: 'u64',
                debt: 'u64',
                haltOnError: 'bool',
                xcm: 'Vec<XcmV0>'
            }
        }
    }
};


/***/ }),

/***/ 71053:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v1 = void 0;
exports.v1 = {
    AssetInstanceV1: {
        _enum: {
            Undefined: 'Null',
            Index: 'Compact<u128>',
            Array4: '[u8; 4]',
            Array8: '[u8; 8]',
            Array16: '[u8; 16]',
            Array32: '[u8; 32]',
            Blob: 'Bytes'
        }
    },
    FungibilityV1: {
        _enum: {
            Fungible: 'Compact<u128>',
            NonFungible: 'AssetInstanceV1'
        }
    },
    JunctionV1: {
        _enum: {
            Parachain: 'Compact<u32>',
            AccountId32: {
                network: 'NetworkId',
                id: 'AccountId'
            },
            AccountIndex64: {
                network: 'NetworkId',
                index: 'Compact<u64>'
            },
            AccountKey20: {
                network: 'NetworkId',
                key: '[u8; 20]'
            },
            PalletInstance: 'u8',
            GeneralIndex: 'Compact<u128>',
            GeneralKey: 'Vec<u8>',
            OnlyChild: 'Null',
            Plurality: {
                id: 'BodyId',
                part: 'BodyPart'
            }
        }
    },
    JunctionsV1: {
        _enum: {
            Here: 'Null',
            X1: 'JunctionV1',
            X2: '(JunctionV1, JunctionV1)',
            X3: '(JunctionV1, JunctionV1, JunctionV1)',
            X4: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
            X5: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
            X6: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
            X7: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
            X8: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)'
        }
    },
    MultiAssetsV1: 'Vec<MultiAssetV1>',
    MultiAssetV1: {
        id: 'XcmAssetId',
        fungibility: 'FungibilityV1'
    },
    MultiAssetFilterV1: {
        _enum: {
            Definite: 'MultiAssetsV1',
            Wild: 'WildMultiAssetV1'
        }
    },
    MultiLocationV1: {
        parents: 'u8',
        interior: 'JunctionsV1'
    },
    OriginKindV1: 'OriginKindV0',
    ResponseV1: {
        _enum: {
            Assets: 'MultiAssetsV1'
        }
    },
    WildFungibilityV1: {
        _enum: ['Fungible', 'NonFungible']
    },
    WildMultiAssetV1: {
        _enum: {
            All: 'Null',
            AllOf: {
                id: 'XcmAssetId',
                fungibility: 'WildFungibilityV1'
            }
        }
    },
    XcmV1: {
        _enum: {
            WithdrawAsset: {
                assets: 'MultiAssetsV1',
                effects: 'Vec<XcmOrderV1>'
            },
            ReserveAssetDeposit: {
                assets: 'MultiAssetsV1',
                effects: 'Vec<XcmOrderV1>'
            },
            ReceiveTeleportedAsset: {
                assets: 'MultiAssetsV1',
                effects: 'Vec<XcmOrderV1>'
            },
            QueryResponse: {
                queryId: 'Compact<u64>',
                response: 'ResponseV1'
            },
            TransferAsset: {
                assets: 'MultiAssetsV1',
                dest: 'MultiLocationV1'
            },
            TransferReserveAsset: {
                assets: 'MultiAssetsV1',
                dest: 'MultiLocationV1',
                effects: 'Vec<XcmOrderV1>'
            },
            Transact: {
                originType: 'XcmOriginKind',
                requireWeightAtMost: 'u64',
                call: 'DoubleEncodedCall'
            },
            HrmpNewChannelOpenRequest: {
                sender: 'Compact<u32>',
                maxMessageSize: 'Compact<u32>',
                maxCapacity: 'Compact<u32>'
            },
            HrmpChannelAccepted: {
                recipient: 'Compact<u32>'
            },
            HrmpChannelClosing: {
                initiator: 'Compact<u32>',
                sender: 'Compact<u32>',
                recipient: 'Compact<u32>'
            },
            RelayedFrom: {
                who: 'MultiLocationV1',
                message: 'XcmV1'
            }
        }
    },
    XcmErrorV1: {
        _enum: {
            Undefined: 'Null',
            Overflow: 'Null',
            Unimplemented: 'Null',
            UnhandledXcmVersion: 'Null',
            UnhandledXcmMessage: 'Null',
            UnhandledEffect: 'Null',
            EscalationOfPrivilege: 'Null',
            UntrustedReserveLocation: 'Null',
            UntrustedTeleportLocation: 'Null',
            DestinationBufferOverflow: 'Null',
            SendFailed: 'Null',
            CannotReachDestination: '(MultiLocationV1, XcmV1)',
            MultiLocationFull: 'Null',
            FailedToDecode: 'Null',
            BadOrigin: 'Null',
            ExceedsMaxMessageSize: 'Null',
            FailedToTransactAsset: 'Null',
            WeightLimitReached: 'Weight',
            Wildcard: 'Null',
            TooMuchWeightRequired: 'Null',
            NotHoldingFees: 'Null',
            WeightNotComputable: 'Null',
            Barrier: 'Null',
            NotWithdrawable: 'Null',
            LocationCannotHold: 'Null',
            TooExpensive: 'Null',
            AssetNotFound: 'Null',
            DestinationUnsupported: 'Null',
            RecursionLimitReached: 'Null'
        }
    },
    XcmOrderV1: {
        _enum: {
            Noop: 'Null',
            DepositAsset: {
                assets: 'MultiAssetFilterV1',
                maxAssets: 'u32',
                beneficiary: 'MultiLocationV1'
            },
            DepositReserveAsset: {
                assets: 'MultiAssetFilterV1',
                maxAssets: 'u32',
                dest: 'MultiLocationV1',
                effects: 'Vec<XcmOrderV1>'
            },
            ExchangeAsset: {
                give: 'MultiAssetFilterV1',
                receive: 'MultiAssetsV1'
            },
            InitiateReserveWithdraw: {
                assets: 'MultiAssetFilterV1',
                reserve: 'MultiLocationV1',
                effects: 'Vec<XcmOrderV1>'
            },
            InitiateTeleport: {
                assets: 'MultiAssetFilterV1',
                dest: 'MultiLocationV1',
                effects: 'Vec<XcmOrderV1>'
            },
            QueryHolding: {
                queryId: 'Compact<u64>',
                dest: 'MultiLocationV1',
                assets: 'MultiAssetFilterV1'
            },
            BuyExecution: {
                fees: 'MultiAssetV1',
                weight: 'u64',
                debt: 'u64',
                haltOnError: 'bool',
                instructions: 'Vec<XcmV1>'
            }
        }
    }
};


/***/ }),

/***/ 68402:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.v2 = void 0;
exports.v2 = {
    AssetInstanceV2: 'AssetInstanceV1',
    FungibilityV2: 'FungibilityV1',
    JunctionV2: 'JunctionV1',
    JunctionsV2: 'JunctionsV1',
    MultiAssetsV2: 'MultiAssetsV1',
    MultiAssetV2: 'MultiAssetV1',
    MultiAssetFilterV2: 'MultiAssetFilterV1',
    MultiLocationV2: 'MultiLocationV1',
    OriginKindV2: 'OriginKindV1',
    WildFungibilityV2: 'WildFungibilityV1',
    ResponseV2: {
        _enum: {
            Null: 'Null',
            Assets: 'MultiAssetsV2',
            ExecutionResult: 'ResponseV2Result'
        }
    },
    ResponseV2Error: '(u32, XcmErrorV2)',
    ResponseV2Result: 'Result<Null, ResponseV2Error>',
    WeightLimitV2: {
        _enum: {
            Unlimited: 'Null',
            Limited: 'Compact<u64>'
        }
    },
    InstructionV2: {
        _enum: {
            WithdrawAsset: 'MultiAssetsV2',
            ReserveAssetDeposited: 'MultiAssetsV2',
            ReceiveTeleportedAsset: 'MultiAssetsV2',
            QueryResponse: {
                queryId: 'Compact<u64>',
                response: 'ResponseV2',
                maxWeight: 'Compact<u64>'
            },
            TransferAsset: {
                assets: 'MultiAssetsV2',
                beneficiary: 'MultiLocationV2'
            },
            TransferReserveAsset: {
                assets: 'MultiAssetsV2',
                dest: 'MultiLocationV2',
                xcm: 'XcmV2'
            },
            Transact: {
                originType: 'OriginKindV2',
                requireWeightAtMost: 'u64',
                call: 'DoubleEncodedCall'
            },
            HrmpNewChannelOpenRequest: {
                sender: 'Compact<u32>',
                maxMessageSize: 'Compact<u32>',
                maxCapacity: 'Compact<u32>'
            },
            HrmpChannelAccepted: {
                recipient: 'Compact<u32>'
            },
            HrmpChannelClosing: {
                initiator: 'Compact<u32>',
                sender: 'Compact<u32>',
                recipient: 'Compact<u32>'
            },
            ClearOrigin: 'Null',
            DescendOrigin: 'InteriorMultiLocation',
            ReportError: {
                queryId: 'Compact<u64>',
                dest: 'MultiLocationV2',
                maxResponseWeight: 'Compact<u64>'
            },
            DepositAsset: {
                assets: 'MultiAssetFilterV2',
                maxAssets: 'u32',
                beneficiary: 'MultiLocationV2'
            },
            DepositReserveAsset: {
                assets: 'MultiAssetFilterV2',
                maxAssets: 'u32',
                dest: 'MultiLocationV2',
                xcm: 'XcmV2'
            },
            ExchangeAsset: {
                give: 'MultiAssetFilterV2',
                receive: 'MultiAssetsV2'
            },
            InitiateReserveWithdraw: {
                assets: 'MultiAssetFilterV2',
                reserve: 'MultiLocationV2',
                xcm: 'XcmV2'
            },
            InitiateTeleport: {
                assets: 'MultiAssetFilterV2',
                dest: 'MultiLocationV2',
                xcm: 'XcmV2'
            },
            QueryHolding: {
                query_id: 'Compact<u64>',
                dest: 'MultiLocationV2',
                assets: 'MultiAssetFilterV2',
                maxResponse_Weight: 'Compact<u64>'
            },
            BuyExecution: {
                fees: 'MultiAssetV2',
                weightLimit: 'WeightLimitV2'
            },
            RefundSurplus: 'Null',
            SetErrorHandler: 'XcmV2',
            SetAppendix: 'XcmV2',
            ClearError: 'Null',
            ClaimAsset: {
                assets: 'MultiAssetsV2',
                ticket: 'MultiLocationV2'
            },
            Trap: 'u64'
        }
    },
    WildMultiAssetV2: 'WildMultiAssetV1',
    XcmV2: 'Vec<InstructionV2>',
    XcmErrorV2: {
        _enum: {
            Undefined: 'Null',
            Overflow: 'Null',
            Unimplemented: 'Null',
            UnhandledXcmVersion: 'Null',
            UnhandledXcmMessage: 'Null',
            UnhandledEffect: 'Null',
            EscalationOfPrivilege: 'Null',
            UntrustedReserveLocation: 'Null',
            UntrustedTeleportLocation: 'Null',
            DestinationBufferOverflow: 'Null',
            MultiLocationFull: 'Null',
            MultiLocationNotInvertible: 'Null',
            FailedToDecode: 'Null',
            BadOrigin: 'Null',
            ExceedsMaxMessageSize: 'Null',
            FailedToTransactAsset: 'Null',
            WeightLimitReached: 'Weight',
            Wildcard: 'Null',
            TooMuchWeightRequired: 'Null',
            NotHoldingFees: 'Null',
            WeightNotComputable: 'Null',
            Barrier: 'Null',
            NotWithdrawable: 'Null',
            LocationCannotHold: 'Null',
            TooExpensive: 'Null',
            AssetNotFound: 'Null',
            DestinationUnsupported: 'Null',
            RecursionLimitReached: 'Null',
            Transport: 'Null',
            Unroutable: 'Null',
            UnknownWeightRequired: 'Null',
            Trap: 'u64',
            UnknownClaim: 'Null',
            InvalidLocation: 'Null'
        }
    },
    XcmOrderV2: 'XcmOrderV1'
};


/***/ }),

/***/ 38037:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MagicNumber = exports.MAGIC_NUMBER = void 0;
const types_codec_1 = __nccwpck_require__(2997);
exports.MAGIC_NUMBER = 0x6174656d; // `meta`, reversed for Little Endian encoding
class MagicNumber extends types_codec_1.U32 {
    constructor(registry, value) {
        super(registry, value);
        if (!this.isEmpty && !this.eq(exports.MAGIC_NUMBER)) {
            throw new Error(`MagicNumber mismatch: expected ${registry.createTypeUnsafe('u32', [exports.MAGIC_NUMBER]).toHex()}, found ${this.toHex()}`);
        }
    }
}
exports.MagicNumber = MagicNumber;


/***/ }),

/***/ 81090:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Metadata = void 0;
const util_1 = __nccwpck_require__(29795);
const MetadataVersioned_js_1 = __nccwpck_require__(78761);
const EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);
const VERSION_IDX = EMPTY_METADATA.length - 1;
/** @internal */
function decodeU8a(registry, u8a) {
    if (u8a.length === 0) {
        return EMPTY_METADATA;
    }
    else if (u8a[VERSION_IDX] === 9) {
        // This is an f-ing hack as a follow-up to another ugly hack
        // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2
        // when we fail on V9, try to re-parse it as v10...
        try {
            return new MetadataVersioned_js_1.MetadataVersioned(registry, u8a);
        }
        catch {
            u8a[VERSION_IDX] = 10;
        }
    }
    return u8a;
}
/**
 * @name Metadata
 * @description
 * The versioned runtime metadata as a decoded structure
 */
class Metadata extends MetadataVersioned_js_1.MetadataVersioned {
    constructor(registry, value) {
        // const timeStart = performance.now()
        super(registry, (0, util_1.isU8a)(value) || (0, util_1.isString)(value)
            ? decodeU8a(registry, (0, util_1.u8aToU8a)(value))
            : value);
        // console.log('Metadata', `${(performance.now() - timeStart).toFixed(2)}ms`)
    }
}
exports.Metadata = Metadata;


/***/ }),

/***/ 78761:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MetadataVersioned = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const index_js_1 = __nccwpck_require__(16908);
const toV10_js_1 = __nccwpck_require__(99093);
const toV11_js_1 = __nccwpck_require__(49520);
const toV12_js_1 = __nccwpck_require__(78724);
const toV13_js_1 = __nccwpck_require__(66497);
const toV14_js_1 = __nccwpck_require__(61578);
const toV15_js_1 = __nccwpck_require__(859);
const toLatest_js_1 = __nccwpck_require__(15190);
const MagicNumber_js_1 = __nccwpck_require__(38037);
const versions_js_1 = __nccwpck_require__(74874);
/**
 * @name MetadataVersioned
 * @description
 * The versioned runtime metadata as a decoded structure
 */
class MetadataVersioned extends types_codec_1.Struct {
    constructor(registry, value) {
        // const timeStart = performance.now()
        super(registry, {
            magicNumber: MagicNumber_js_1.MagicNumber,
            metadata: 'MetadataAll'
        }, value);
        this.__internal__converted = new Map();
        this.__internal__assertVersion = (version) => {
            if (this.version > version) {
                throw new Error(`Cannot convert metadata from version ${this.version} to ${version}`);
            }
            return this.version === version;
        };
        this.__internal__getVersion = (version, fromPrev) => {
            if (version !== 'latest' && this.__internal__assertVersion(version)) {
                const asCurr = `asV${version}`;
                return this.__internal__metadata()[asCurr];
            }
            if (!this.__internal__converted.has(version)) {
                const asPrev = version === 'latest'
                    ? `asV${versions_js_1.LATEST_VERSION}`
                    : `asV${(version - 1)}`;
                this.__internal__converted.set(version, fromPrev(this.registry, this[asPrev], this.version));
            }
            return this.__internal__converted.get(version);
        };
        /**
         * @description the metadata wrapped
         */
        this.__internal__metadata = () => {
            return this.getT('metadata');
        };
        // console.log('MetadataVersioned', `${(performance.now() - timeStart).toFixed(2)}ms`)
    }
    /**
     * @description Returns the wrapped metadata as a limited calls-only (latest) version
     */
    get asCallsOnly() {
        return new MetadataVersioned(this.registry, {
            magicNumber: this.magicNumber,
            metadata: this.registry.createTypeUnsafe('MetadataAll', [(0, index_js_1.toCallsOnly)(this.registry, this.asLatest), versions_js_1.TO_CALLS_VERSION])
        });
    }
    /**
     * @description Returns the wrapped metadata as a V9 object
     */
    get asV9() {
        this.__internal__assertVersion(9);
        return this.__internal__metadata().asV9;
    }
    /**
     * @description Returns the wrapped values as a V10 object
     */
    get asV10() {
        return this.__internal__getVersion(10, toV10_js_1.toV10);
    }
    /**
     * @description Returns the wrapped values as a V11 object
     */
    get asV11() {
        return this.__internal__getVersion(11, toV11_js_1.toV11);
    }
    /**
     * @description Returns the wrapped values as a V12 object
     */
    get asV12() {
        return this.__internal__getVersion(12, toV12_js_1.toV12);
    }
    /**
     * @description Returns the wrapped values as a V13 object
     */
    get asV13() {
        return this.__internal__getVersion(13, toV13_js_1.toV13);
    }
    /**
     * @description Returns the wrapped values as a V14 object
     */
    get asV14() {
        return this.__internal__getVersion(14, toV14_js_1.toV14);
    }
    /**
     * @description Returns the wrapped values as a V14 object
     */
    get asV15() {
        return this.__internal__getVersion(15, toV15_js_1.toV15);
    }
    /**
     * @description Returns the wrapped values as a latest version object
     */
    get asLatest() {
        return this.__internal__getVersion('latest', toLatest_js_1.toLatest);
    }
    /**
     * @description The magicNumber for the Metadata (known constant)
     */
    get magicNumber() {
        return this.getT('magicNumber');
    }
    /**
     * @description the metadata version this structure represents
     */
    get version() {
        return this.__internal__metadata().index;
    }
    getUniqTypes(throwError) {
        return (0, index_js_1.getUniqTypes)(this.registry, this.asLatest, throwError);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */
    toJSON() {
        // HACK(y): ensure that we apply the aliases if we have not done so already, this is
        // needed to ensure we have the correct overrides (which is only applied in toLatest)
        // eslint-disable-next-line no-unused-expressions
        this.asLatest;
        return super.toJSON();
    }
}
exports.MetadataVersioned = MetadataVersioned;


/***/ }),

/***/ 53408:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PortableRegistry = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const types_create_1 = __nccwpck_require__(49134);
const util_1 = __nccwpck_require__(29795);
const l = (0, util_1.logger)('PortableRegistry');
const TYPE_UNWRAP = { toNumber: () => -1 };
const PRIMITIVE_ALIAS = {
    Char: 'u32',
    Str: 'Text'
};
const PATHS_ALIAS = splitNamespace([
    // full matching on exact names...
    // these are well-known types with additional encoding
    'sp_core::crypto::AccountId32',
    'sp_runtime::generic::era::Era',
    'sp_runtime::multiaddress::MultiAddress',
    // ethereum overrides (Frontier, Moonbeam, Polkadot claims)
    'fp_account::AccountId20',
    'account::AccountId20',
    'polkadot_runtime_common::claims::EthereumAddress',
    // weights 2 is a structure, however for 1.5. with a single field it
    // should be flatenned (can appear in Compact<Weight> extrinsics)
    'frame_support::weights::weight_v2::Weight',
    'sp_weights::weight_v2::Weight',
    // wildcard matching in place...
    // these have a specific encoding or logic, use a wildcard for {pallet, darwinia}_democracy
    '*_democracy::vote::Vote',
    '*_conviction_voting::vote::Vote',
    '*_identity::types::Data',
    // these are opaque Vec<u8> wrappers
    'sp_core::OpaqueMetadata',
    'sp_core::OpaquePeerId',
    'sp_core::offchain::OpaqueMultiaddr',
    // shorten some well-known types
    'primitive_types::*',
    'sp_arithmetic::per_things::*',
    // runtime
    '*_runtime::RuntimeCall',
    '*_runtime::RuntimeEvent',
    // ink!
    'ink::env::types::*',
    'ink::primitives::types::*',
    'ink_env::types::*',
    'ink_primitives::types::*',
    // noir
    'np_runtime::accountname::AccountName',
    'np_runtime::universaladdress::UniversalAddress'
]);
const PATHS_SET = splitNamespace([
    'pallet_identity::types::BitFlags'
]);
const BITVEC_NS_LSB = ['bitvec::order::Lsb0', 'BitOrderLsb0'];
const BITVEC_NS_MSB = ['bitvec::order::Msb0', 'BitOrderMsb0'];
const BITVEC_NS = [...BITVEC_NS_LSB, ...BITVEC_NS_MSB];
const WRAPPERS = ['BoundedBTreeMap', 'BoundedBTreeSet', 'BoundedVec', 'Box', 'BTreeMap', 'BTreeSet', 'Cow', 'Option', 'Range', 'RangeInclusive', 'Result', 'WeakBoundedVec', 'WrapperKeepOpaque', 'WrapperOpaque'];
const RESERVED = [
    // JS reserved words
    'entries', 'keys', 'new', 'size',
    // exposed by all Codec objects
    'hash', 'registry'
];
const PATH_RM_INDEX_1 = ['generic', 'misc', 'pallet', 'traits', 'types'];
/** @internal Converts a Text[] into string[] (used as part of definitions) */
function sanitizeDocs(docs) {
    const count = docs.length;
    const result = new Array(count);
    for (let i = 0; i < count; i++) {
        result[i] = docs[i].toString();
    }
    return result;
}
/** @internal Split a namespace with :: into individual parts */
function splitNamespace(values) {
    const count = values.length;
    const result = new Array(count);
    for (let i = 0; i < count; i++) {
        result[i] = values[i].split('::');
    }
    return result;
}
/** @internal Match a namespace based on parts (alongside wildcards) */
function matchParts(first, second) {
    return first.length === second.length && first.every((a, index) => {
        const b = second[index].toString();
        if ((a === '*') || (a === b)) {
            return true;
        }
        if (a.includes('*') && a.includes('_') && b.includes('_')) {
            let suba = a.split('_');
            let subb = b.split('_');
            // match initial *'s to multiples if we have a match for the other
            if (suba[0] === '*') {
                const indexOf = subb.indexOf(suba[1]);
                if (indexOf !== -1) {
                    suba = suba.slice(1);
                    subb = subb.slice(indexOf);
                }
            }
            // check for * matches at the end, adjust accordingly
            if ((suba.length === 2) && (suba[1] === '*') && (suba[0] === subb[0])) {
                return true;
            }
            return matchParts(suba, subb);
        }
        return false;
    });
}
/** @internal check if the path matches the PATHS_ALIAS (with wildcards) */
function getAliasPath({ def, path }) {
    // specific logic for weights - we override when non-complex struct
    // (as applied in Weight 1.5 where we also have `Compact<{ refTime: u64 }>)
    if (['frame_support::weights::weight_v2::Weight', 'sp_weights::weight_v2::Weight'].includes(path.join('::'))) {
        return !def.isComposite || def.asComposite.fields.length === 1
            ? 'WeightV1'
            : null;
    }
    // TODO We need to handle ink! Balance in some way
    return path.length && PATHS_ALIAS.some((a) => matchParts(a, path))
        ? path[path.length - 1].toString()
        : null;
}
/** @internal Converts a type name into a JS-API compatible name */
function extractNameFlat(portable, lookupIndex, params, path, isInternal = false) {
    const count = path.length;
    // if we have no path or determined as a wrapper, we just skip it
    if (count === 0 || WRAPPERS.includes(path[count - 1].toString())) {
        return null;
    }
    const camels = new Array(count);
    const lowers = new Array(count);
    // initially just create arrays of the camelCase and lowercase path
    // parts - we will check these to extract the final values. While
    // we have 2 loops here, we also don't do the same operation twice
    for (let i = 0; i < count; i++) {
        const c = (0, util_1.stringPascalCase)(isInternal
            ? path[i].replace('pallet_', '')
            : path[i]);
        const l = c.toLowerCase();
        camels[i] = c;
        lowers[i] = l;
    }
    let name = '';
    for (let i = 0; i < count; i++) {
        const l = lowers[i];
        // Remove ::{generic, misc, pallet, traits, types}::
        if (i !== 1 || !PATH_RM_INDEX_1.includes(l)) {
            // sp_runtime::generic::digest::Digest -> sp_runtime::generic::Digest
            // sp_runtime::multiaddress::MultiAddress -> sp_runtime::MultiAddress
            if (l !== lowers[i + 1]) {
                name += camels[i];
            }
        }
    }
    // do magic for RawOrigin lookup, e.g. pallet_collective::RawOrigin
    if (camels[1] === 'RawOrigin' && count === 2 && params.length === 2 && params[1].type.isSome) {
        const instanceType = portable[params[1].type.unwrap().toNumber()];
        if (instanceType.type.path.length === 2) {
            name = `${name}${instanceType.type.path[1].toString()}`;
        }
    }
    return { lookupIndex, name, params };
}
/** @internal Alias for extractNameFlat with PortableType as a last parameter */
function extractName(portable, lookupIndex, { type: { params, path } }) {
    return extractNameFlat(portable, lookupIndex, params, path);
}
/** @internal Check for dupes from a specific index onwards */
function nextDupeMatches(name, startAt, names) {
    const result = [names[startAt]];
    for (let i = startAt + 1, count = names.length; i < count; i++) {
        const v = names[i];
        if (v.name === name) {
            result.push(v);
        }
    }
    return result;
}
/** @internal Checks to see if a type is a full duplicate (with all params matching) */
function rewriteDupes(input, rewrite) {
    const count = input.length;
    for (let i = 0; i < count; i++) {
        const a = input[i];
        for (let j = i + 1; j < count; j++) {
            const b = input[j];
            // if the indexes are not the same and the names match, we have a dupe
            if (a.lookupIndex !== b.lookupIndex && a.name === b.name) {
                return false;
            }
        }
    }
    // add all the adjusted values to the rewite map
    for (let i = 0; i < count; i++) {
        const p = input[i];
        rewrite[p.lookupIndex] = p.name;
    }
    return true;
}
/** @internal Find duplicates and adjust the names based on parameters */
function removeDupeNames(lookup, portable, names) {
    const rewrite = {};
    return names
        .map((original, startAt) => {
        const { lookupIndex, name, params } = original;
        if (!name) {
            // the name is empty (this is not expected, but have a failsafe)
            return null;
        }
        else if (rewrite[lookupIndex]) {
            // we have already rewritten this one, we can skip it
            return original;
        }
        // those where the name is matching starting from this index
        const allSame = nextDupeMatches(name, startAt, names);
        // we only have one, so all ok
        if (allSame.length === 1) {
            return original;
        }
        // are there param differences between matching names
        const anyDiff = allSame.some((o) => params.length !== o.params.length ||
            params.some((p, index) => !p.name.eq(o.params[index].name) ||
                p.type.unwrapOr(TYPE_UNWRAP).toNumber() !== o.params[index].type.unwrapOr(TYPE_UNWRAP).toNumber()));
        // everything matches, we can combine these
        if (!anyDiff) {
            return original;
        }
        // TODO We probably want to attach all the indexes with differences,
        // not just the first
        // find the first parameter that yields differences
        const paramIdx = params.findIndex(({ type }, index) => allSame.every(({ params }, aIndex) => params[index].type.isSome && (aIndex === 0 ||
            !params[index].type.eq(type))));
        // No param found that is different
        if (paramIdx === -1) {
            return original;
        }
        // see if using the param type helps
        const sameCount = allSame.length;
        const adjusted = new Array(sameCount);
        // loop through all, specifically checking that index where the
        // first param yields differences
        for (let i = 0; i < sameCount; i++) {
            const { lookupIndex, name, params } = allSame[i];
            const { def, path } = lookup.getSiType(params[paramIdx].type.unwrap());
            // if it is not a primitive and it doesn't have a path, we really cannot
            // do anything at this point
            if (!def.isPrimitive && !path.length) {
                return null;
            }
            adjusted[i] = {
                lookupIndex,
                name: def.isPrimitive
                    ? `${name}${def.asPrimitive.toString()}`
                    : `${name}${path[path.length - 1].toString()}`
            };
        }
        // check to see if the adjusted names have no issues
        if (rewriteDupes(adjusted, rewrite)) {
            return original;
        }
        // TODO This is duplicated from the section just above...
        // ... we certainly need a better solution here
        //
        // Last-ditch effort to use the full type path - ugly
        // loop through all, specifically checking that index where the
        // first param yields differences
        for (let i = 0; i < sameCount; i++) {
            const { lookupIndex, name, params } = allSame[i];
            const { def, path } = lookup.getSiType(params[paramIdx].type.unwrap());
            const flat = extractNameFlat(portable, lookupIndex, params, path, true);
            if (def.isPrimitive || !flat) {
                return null;
            }
            adjusted[i] = {
                lookupIndex,
                name: `${name}${flat.name}`
            };
        }
        // check to see if the adjusted names have no issues
        if (rewriteDupes(adjusted, rewrite)) {
            return original;
        }
        return null;
    })
        .filter((n) => !!n)
        .map(({ lookupIndex, name, params }) => ({
        lookupIndex,
        name: rewrite[lookupIndex] || name,
        params
    }));
}
/** @internal Detect on-chain types (AccountId/Signature) as set as the default */
function registerTypes(lookup, lookups, names, params) {
    // Register the types we extracted
    lookup.registry.register(lookups);
    // Try and extract the AccountId/Address/Signature type from UncheckedExtrinsic
    if (params.SpRuntimeUncheckedExtrinsic) {
        // Address, Call, Signature, Extra
        const [addrParam, , sigParam] = params.SpRuntimeUncheckedExtrinsic;
        const siAddress = lookup.getSiType(addrParam.type.unwrap());
        const siSignature = lookup.getSiType(sigParam.type.unwrap());
        const nsSignature = siSignature.path.join('::');
        let nsAccountId = siAddress.path.join('::');
        const isMultiAddress = nsAccountId === 'sp_runtime::multiaddress::MultiAddress';
        // With multiaddress, we check the first type param again
        if (isMultiAddress) {
            // AccountId, AccountIndex
            const [idParam] = siAddress.params;
            nsAccountId = lookup.getSiType(idParam.type.unwrap()).path.join('::');
        }
        lookup.registry.register({
            // known: account::AccountId20, fp_account::AccountId20, primitive_types::H160
            AccountId: nsAccountId.endsWith('::AccountId20') || nsAccountId.endsWith('::H160')
                ? 'AccountId20'
                : 'AccountId32',
            Address: isMultiAddress
                ? 'MultiAddress'
                : 'AccountId',
            ExtrinsicSignature: ['sp_runtime::MultiSignature'].includes(nsSignature)
                ? 'MultiSignature'
                : names[sigParam.type.unwrap().toNumber()] || 'MultiSignature'
        });
    }
}
/**
 * @internal Extracts aliases based on what we know the runtime config looks like in a
 * Substrate chain. Specifically we want to have access to the Call and Event params
 **/
function extractAliases(params, isContract) {
    const hasParams = Object.keys(params).some((k) => !k.startsWith('Pallet'));
    const alias = {};
    if (params.SpRuntimeUncheckedExtrinsic) {
        // Address, Call, Signature, Extra
        const [, { type }] = params.SpRuntimeUncheckedExtrinsic;
        alias[type.unwrap().toNumber()] = 'Call';
    }
    else if (hasParams && !isContract) {
        l.warn('Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic');
    }
    if (params.FrameSystemEventRecord) {
        // Event, Topic
        const [{ type }] = params.FrameSystemEventRecord;
        alias[type.unwrap().toNumber()] = 'Event';
    }
    else if (hasParams && !isContract) {
        l.warn('Unable to determine runtime Event type, cannot inspect frame_system::EventRecord');
    }
    return alias;
}
/** @internal Extracts all the intreresting type information for this registry */
function extractTypeInfo(lookup, portable) {
    const nameInfo = [];
    const types = {};
    for (let i = 0, count = portable.length; i < count; i++) {
        const type = portable[i];
        const lookupIndex = type.id.toNumber();
        const extracted = extractName(portable, lookupIndex, portable[i]);
        if (extracted) {
            nameInfo.push(extracted);
        }
        types[lookupIndex] = type;
    }
    const lookups = {};
    const names = {};
    const params = {};
    const dedup = removeDupeNames(lookup, portable, nameInfo);
    for (let i = 0, count = dedup.length; i < count; i++) {
        const { lookupIndex, name, params: p } = dedup[i];
        names[lookupIndex] = name;
        lookups[name] = lookup.registry.createLookupType(lookupIndex);
        params[name] = p;
    }
    return { lookups, names, params, types };
}
class PortableRegistry extends types_codec_1.Struct {
    constructor(registry, value, isContract) {
        // const timeStart = performance.now()
        super(registry, {
            types: 'Vec<PortableType>'
        }, value);
        this.__internal__typeDefs = {};
        const { lookups, names, params, types } = extractTypeInfo(this, this.types);
        this.__internal__alias = extractAliases(params, isContract);
        this.__internal__lookups = lookups;
        this.__internal__names = names;
        this.__internal__params = params;
        this.__internal__types = types;
        // console.log('PortableRegistry', `${(performance.now() - timeStart).toFixed(2)}ms`)
    }
    /**
     * @description Returns all the available type names for this chain
     **/
    get names() {
        return Object.values(this.__internal__names).sort();
    }
    /**
     * @description Returns all the available parameterized types for this chain
     **/
    get paramTypes() {
        return this.__internal__params;
    }
    /**
     * @description The types of the registry
     */
    get types() {
        return this.getT('types');
    }
    /**
     * @description Register all available types into the registry (generally for internal usage)
     */
    register() {
        registerTypes(this, this.__internal__lookups, this.__internal__names, this.__internal__params);
    }
    /**
     * @description Returns the name for a specific lookup
     */
    getName(lookupId) {
        return this.__internal__names[this.__internal__getLookupId(lookupId)];
    }
    /**
     * @description Finds a specific type in the registry
     */
    getSiType(lookupId) {
        // NOTE catch-22 - this may already be used as part of the constructor, so
        // ensure that we have actually initialized it correctly
        const found = (this.__internal__types || this.types)[this.__internal__getLookupId(lookupId)];
        if (!found) {
            throw new Error(`PortableRegistry: Unable to find type with lookupId ${lookupId.toString()}`);
        }
        return found.type;
    }
    /**
     * @description Lookup the type definition for the index
     */
    getTypeDef(lookupId) {
        const lookupIndex = this.__internal__getLookupId(lookupId);
        if (!this.__internal__typeDefs[lookupIndex]) {
            const lookupName = this.__internal__names[lookupIndex];
            const empty = {
                info: types_create_1.TypeDefInfo.DoNotConstruct,
                lookupIndex,
                lookupName,
                type: this.registry.createLookupType(lookupIndex)
            };
            // Set named items since we will get into circular lookups along the way
            if (lookupName) {
                this.__internal__typeDefs[lookupIndex] = empty;
            }
            const extracted = this.__internal__extract(this.getSiType(lookupId), lookupIndex);
            // For non-named items, we only set this right at the end
            if (!lookupName) {
                this.__internal__typeDefs[lookupIndex] = empty;
            }
            Object.keys(extracted).forEach((k) => {
                if (k !== 'lookupName' || extracted[k]) {
                    // these are safe since we are looking through the keys as set
                    this.__internal__typeDefs[lookupIndex][k] = extracted[k];
                }
            });
            // don't set lookupName on lower-level, we want to always direct to the type
            if (extracted.info === types_create_1.TypeDefInfo.Plain) {
                this.__internal__typeDefs[lookupIndex].lookupNameRoot = this.__internal__typeDefs[lookupIndex].lookupName;
                delete this.__internal__typeDefs[lookupIndex].lookupName;
            }
        }
        return this.__internal__typeDefs[lookupIndex];
    }
    /**
     * @description For a specific field, perform adjustments to not have built-in conflicts
     */
    sanitizeField(name) {
        let nameField = null;
        let nameOrig = null;
        if (name.isSome) {
            nameField = (0, util_1.stringCamelCase)(name.unwrap());
            if (nameField.includes('#')) {
                nameOrig = nameField;
                nameField = nameOrig.replace(/#/g, '_');
            }
            else if (RESERVED.includes(nameField)) {
                nameOrig = nameField;
                nameField = `${nameField}_`;
            }
        }
        return [nameField, nameOrig];
    }
    /** @internal Creates a TypeDef based on an internal lookupId */
    __internal__createSiDef(lookupId) {
        const typeDef = this.getTypeDef(lookupId);
        const lookupIndex = lookupId.toNumber();
        // Setup for a lookup on complex types
        return [types_create_1.TypeDefInfo.DoNotConstruct, types_create_1.TypeDefInfo.Enum, types_create_1.TypeDefInfo.Struct].includes(typeDef.info) && typeDef.lookupName
            ? {
                docs: typeDef.docs,
                info: types_create_1.TypeDefInfo.Si,
                lookupIndex,
                lookupName: this.__internal__names[lookupIndex],
                type: this.registry.createLookupType(lookupId)
            }
            : typeDef;
    }
    /** @internal Converts a lookupId input to the actual lookup index */
    __internal__getLookupId(lookupId) {
        if ((0, util_1.isString)(lookupId)) {
            if (!this.registry.isLookupType(lookupId)) {
                throw new Error(`PortableRegistry: Expected a lookup string type, found ${lookupId}`);
            }
            return parseInt(lookupId.replace('Lookup', ''), 10);
        }
        else if ((0, util_1.isNumber)(lookupId)) {
            return lookupId;
        }
        return lookupId.toNumber();
    }
    /** @internal Converts a type into a TypeDef for Codec usage */
    __internal__extract(type, lookupIndex) {
        const namespace = type.path.join('::');
        let typeDef;
        const aliasType = this.__internal__alias[lookupIndex] || getAliasPath(type);
        try {
            if (aliasType) {
                typeDef = this.__internal__extractAliasPath(lookupIndex, aliasType);
            }
            else {
                switch (type.def.type) {
                    case 'Array':
                        typeDef = this.__internal__extractArray(lookupIndex, type.def.asArray);
                        break;
                    case 'BitSequence':
                        typeDef = this.__internal__extractBitSequence(lookupIndex, type.def.asBitSequence);
                        break;
                    case 'Compact':
                        typeDef = this.__internal__extractCompact(lookupIndex, type.def.asCompact);
                        break;
                    case 'Composite':
                        typeDef = this.__internal__extractComposite(lookupIndex, type, type.def.asComposite);
                        break;
                    case 'HistoricMetaCompat':
                        typeDef = this.__internal__extractHistoric(lookupIndex, type.def.asHistoricMetaCompat);
                        break;
                    case 'Primitive':
                        typeDef = this.__internal__extractPrimitive(lookupIndex, type);
                        break;
                    case 'Sequence':
                        typeDef = this.__internal__extractSequence(lookupIndex, type.def.asSequence);
                        break;
                    case 'Tuple':
                        typeDef = this.__internal__extractTuple(lookupIndex, type.def.asTuple);
                        break;
                    case 'Variant':
                        typeDef = this.__internal__extractVariant(lookupIndex, type, type.def.asVariant);
                        break;
                    default: (0, util_1.assertUnreachable)(type.def.type);
                }
            }
        }
        catch (error) {
            throw new Error(`PortableRegistry: ${lookupIndex}${namespace ? ` (${namespace})` : ''}: Error extracting ${(0, util_1.stringify)(type)}: ${error.message}`);
        }
        return (0, util_1.objectSpread)({
            docs: sanitizeDocs(type.docs),
            namespace
        }, typeDef);
    }
    /** @internal Extracts a ScaleInfo Array into TypeDef.VecFixed */
    __internal__extractArray(_, { len, type }) {
        const length = len.toNumber();
        if (length > 2048) {
            throw new Error('Only support for [Type; <length>], where length <= 2048');
        }
        return (0, types_create_1.withTypeString)(this.registry, {
            info: types_create_1.TypeDefInfo.VecFixed,
            length,
            sub: this.__internal__createSiDef(type)
        });
    }
    /** @internal Extracts a ScaleInfo BitSequence into TypeDef.Plain */
    __internal__extractBitSequence(_, { bitOrderType, bitStoreType }) {
        // With the v3 of scale-info this swapped around, but obviously the decoder cannot determine
        // the order. With that in-mind, we apply a detection for LSb0/Msb and set accordingly
        const a = this.__internal__createSiDef(bitOrderType);
        const b = this.__internal__createSiDef(bitStoreType);
        const [bitOrder, bitStore] = BITVEC_NS.includes(a.namespace || '')
            ? [a, b]
            : [b, a];
        if (!bitOrder.namespace || !BITVEC_NS.includes(bitOrder.namespace)) {
            throw new Error(`Unexpected bitOrder found as ${bitOrder.namespace || '<unknown>'}`);
        }
        else if (bitStore.info !== types_create_1.TypeDefInfo.Plain || bitStore.type !== 'u8') {
            throw new Error(`Only u8 bitStore is currently supported, found ${bitStore.type}`);
        }
        const isLsb = BITVEC_NS_LSB.includes(bitOrder.namespace);
        if (!isLsb) {
            // TODO To remove this limitation, we need to pass an extra info flag
            // through to the TypeDef (Here we could potentially re-use something
            // like index (???) to indicate and ensure we use it to pass to the
            // BitVec constructor - which does handle this type)
            //
            // See https://github.com/polkadot-js/api/issues/5588
            // throw new Error(`Only LSB BitVec is currently supported, found ${bitOrder.namespace}`);
        }
        return {
            info: types_create_1.TypeDefInfo.Plain,
            type: 'BitVec'
        };
    }
    /** @internal Extracts a ScaleInfo Compact into TypeDef.Compact */
    __internal__extractCompact(_, { type }) {
        return (0, types_create_1.withTypeString)(this.registry, {
            info: types_create_1.TypeDefInfo.Compact,
            sub: this.__internal__createSiDef(type)
        });
    }
    /** @internal Extracts a ScaleInfo Composite into TypeDef.{BTree*, Range*, Wrapper*} */
    __internal__extractComposite(lookupIndex, { params, path }, { fields }) {
        if (path.length) {
            const pathFirst = path[0].toString();
            const pathLast = path[path.length - 1].toString();
            if (path.length === 1 && pathFirst === 'BTreeMap') {
                if (params.length !== 2) {
                    throw new Error(`BTreeMap requires 2 parameters, found ${params.length}`);
                }
                return (0, types_create_1.withTypeString)(this.registry, {
                    info: types_create_1.TypeDefInfo.BTreeMap,
                    sub: params.map(({ type }) => this.__internal__createSiDef(type.unwrap()))
                });
            }
            else if (path.length === 1 && pathFirst === 'BTreeSet') {
                if (params.length !== 1) {
                    throw new Error(`BTreeSet requires 1 parameter, found ${params.length}`);
                }
                return (0, types_create_1.withTypeString)(this.registry, {
                    info: types_create_1.TypeDefInfo.BTreeSet,
                    sub: this.__internal__createSiDef(params[0].type.unwrap())
                });
            }
            else if (['Range', 'RangeInclusive'].includes(pathFirst)) {
                if (params.length !== 1) {
                    throw new Error(`Range requires 1 parameter, found ${params.length}`);
                }
                return (0, types_create_1.withTypeString)(this.registry, {
                    info: pathFirst === 'Range'
                        ? types_create_1.TypeDefInfo.Range
                        : types_create_1.TypeDefInfo.RangeInclusive,
                    sub: this.__internal__createSiDef(params[0].type.unwrap()),
                    type: pathFirst
                });
            }
            else if (['WrapperKeepOpaque', 'WrapperOpaque'].includes(pathLast)) {
                if (params.length !== 1) {
                    throw new Error(`WrapperOpaque requires 1 parameter, found ${params.length}`);
                }
                return (0, types_create_1.withTypeString)(this.registry, {
                    info: pathLast === 'WrapperKeepOpaque'
                        ? types_create_1.TypeDefInfo.WrapperKeepOpaque
                        : types_create_1.TypeDefInfo.WrapperOpaque,
                    sub: this.__internal__createSiDef(params[0].type.unwrap()),
                    type: pathLast
                });
            }
        }
        return PATHS_SET.some((p) => matchParts(p, path))
            ? this.__internal__extractCompositeSet(lookupIndex, params, fields)
            : this.__internal__extractFields(lookupIndex, fields);
    }
    /** @internal Extracts a ScaleInfo CompositeSet into TypeDef.Set */
    __internal__extractCompositeSet(_, params, fields) {
        if (params.length !== 1 || fields.length !== 1) {
            throw new Error('Set handling expects param/field as single entries');
        }
        return (0, types_create_1.withTypeString)(this.registry, {
            info: types_create_1.TypeDefInfo.Set,
            length: this.registry.createTypeUnsafe(this.registry.createLookupType(fields[0].type), []).bitLength(),
            sub: this.getSiType(params[0].type.unwrap()).def.asVariant.variants.map(({ index, name }) => ({
                // This will be an issue > 2^53 - 1 ... don't have those (yet)
                index: index.toNumber(),
                info: types_create_1.TypeDefInfo.Plain,
                name: name.toString(),
                type: 'Null'
            }))
        });
    }
    /** @internal Extracts ScaleInfo enum/struct fields into TypeDef.{Struct, Tuple} */
    __internal__extractFields(lookupIndex, fields) {
        let isStruct = true;
        let isTuple = true;
        const count = fields.length;
        for (let f = 0; f < count; f++) {
            const { name } = fields[f];
            isStruct = isStruct && name.isSome;
            isTuple = isTuple && name.isNone;
        }
        if (!isTuple && !isStruct) {
            throw new Error('Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)');
        }
        if (count === 0) {
            return {
                info: types_create_1.TypeDefInfo.Null,
                type: 'Null'
            };
        }
        else if (isTuple && count === 1) {
            const typeDef = this.__internal__createSiDef(fields[0].type);
            return (0, util_1.objectSpread)({}, typeDef, lookupIndex === -1
                ? null
                : {
                    lookupIndex,
                    lookupName: this.__internal__names[lookupIndex],
                    lookupNameRoot: typeDef.lookupName
                }, fields[0].typeName.isSome
                ? { typeName: (0, types_codec_1.sanitize)(fields[0].typeName.unwrap()) }
                : null);
        }
        const [sub, alias] = this.__internal__extractFieldsAlias(fields);
        return (0, types_create_1.withTypeString)(this.registry, (0, util_1.objectSpread)({
            info: isTuple // Tuple check first
                ? types_create_1.TypeDefInfo.Tuple
                : types_create_1.TypeDefInfo.Struct,
            sub
        }, alias.size
            ? { alias }
            : null, lookupIndex === -1
            ? null
            : {
                lookupIndex,
                lookupName: this.__internal__names[lookupIndex]
            }));
    }
    /** @internal Apply field aliassed (with no JS conflicts) */
    __internal__extractFieldsAlias(fields) {
        const alias = new Map();
        const count = fields.length;
        const sub = new Array(count);
        for (let i = 0; i < count; i++) {
            const { docs, name, type, typeName } = fields[i];
            const typeDef = this.__internal__createSiDef(type);
            if (name.isNone) {
                sub[i] = typeDef;
            }
            else {
                const [nameField, nameOrig] = this.sanitizeField(name);
                if (nameField && nameOrig) {
                    alias.set(nameField, nameOrig);
                }
                sub[i] = (0, util_1.objectSpread)({
                    docs: sanitizeDocs(docs),
                    name: nameField
                }, typeDef, typeName.isSome
                    ? { typeName: (0, types_codec_1.sanitize)(typeName.unwrap()) }
                    : null);
            }
        }
        return [sub, alias];
    }
    /** @internal Extracts an internal Historic (pre V14) type  */
    __internal__extractHistoric(_, type) {
        return (0, util_1.objectSpread)({
            displayName: type.toString(),
            isFromSi: true
        }, (0, types_create_1.getTypeDef)(type));
    }
    /** @internal Extracts a ScaleInfo Primitive into TypeDef.Plain */
    __internal__extractPrimitive(_, type) {
        const typeStr = type.def.asPrimitive.type.toString();
        return {
            info: types_create_1.TypeDefInfo.Plain,
            type: PRIMITIVE_ALIAS[typeStr] || typeStr.toLowerCase()
        };
    }
    /** @internal Applies an alias path onto the TypeDef */
    __internal__extractAliasPath(_, type) {
        return {
            info: types_create_1.TypeDefInfo.Plain,
            type
        };
    }
    /** @internal Extracts a ScaleInfo Sequence into TypeDef.Vec (with Bytes shortcut) */
    __internal__extractSequence(lookupIndex, { type }) {
        const sub = this.__internal__createSiDef(type);
        if (sub.type === 'u8') {
            return {
                info: types_create_1.TypeDefInfo.Plain,
                type: 'Bytes'
            };
        }
        return (0, types_create_1.withTypeString)(this.registry, {
            info: types_create_1.TypeDefInfo.Vec,
            lookupIndex,
            lookupName: this.__internal__names[lookupIndex],
            sub
        });
    }
    /** @internal Extracts a ScaleInfo Tuple into TypeDef.Tuple */
    __internal__extractTuple(lookupIndex, ids) {
        if (ids.length === 0) {
            return {
                info: types_create_1.TypeDefInfo.Null,
                type: 'Null'
            };
        }
        else if (ids.length === 1) {
            return this.getTypeDef(ids[0]);
        }
        const sub = ids.map((t) => this.__internal__createSiDef(t));
        return (0, types_create_1.withTypeString)(this.registry, {
            info: types_create_1.TypeDefInfo.Tuple,
            lookupIndex,
            lookupName: this.__internal__names[lookupIndex],
            sub
        });
    }
    /** @internal Extracts a ScaleInfo Variant into TypeDef.{Option, Result, Enum} */
    __internal__extractVariant(lookupIndex, { params, path }, { variants }) {
        if (path.length) {
            const specialVariant = path[0].toString();
            if (specialVariant === 'Option') {
                if (params.length !== 1) {
                    throw new Error(`Option requires 1 parameter, found ${params.length}`);
                }
                // NOTE This is opt-in (unhandled), not by default
                // if (sub.type === 'bool') {
                //   return withTypeString(this.registry, {
                //     info: TypeDefInfo.Plain,
                //     type: 'OptionBool'
                //   });
                // }
                return (0, types_create_1.withTypeString)(this.registry, {
                    info: types_create_1.TypeDefInfo.Option,
                    sub: this.__internal__createSiDef(params[0].type.unwrap())
                });
            }
            else if (specialVariant === 'Result') {
                if (params.length !== 2) {
                    throw new Error(`Result requires 2 parameters, found ${params.length}`);
                }
                return (0, types_create_1.withTypeString)(this.registry, {
                    info: types_create_1.TypeDefInfo.Result,
                    sub: params.map(({ type }, index) => (0, util_1.objectSpread)({
                        name: ['Ok', 'Error'][index]
                    }, this.__internal__createSiDef(type.unwrap())))
                });
            }
        }
        if (variants.length === 0) {
            return {
                info: types_create_1.TypeDefInfo.Null,
                type: 'Null'
            };
        }
        return this.__internal__extractVariantEnum(lookupIndex, variants);
    }
    /** @internal Extracts a ScaleInfo Variant into TypeDef.Enum */
    __internal__extractVariantEnum(lookupIndex, variants) {
        const sub = [];
        // we may get entries out of order, arrange them first before creating with gaps filled
        // NOTE: Since we mutate, use a copy of the array as an input
        variants
            .slice()
            .sort((a, b) => a.index.cmp(b.index))
            .forEach(({ fields, index: bnIndex, name }) => {
            const index = bnIndex.toNumber();
            while (sub.length !== index) {
                sub.push({
                    index: sub.length,
                    info: types_create_1.TypeDefInfo.Null,
                    name: `__Unused${sub.length}`,
                    type: 'Null'
                });
            }
            sub.push((0, util_1.objectSpread)(this.__internal__extractFields(-1, fields), {
                index,
                name: name.toString()
            }));
        });
        return (0, types_create_1.withTypeString)(this.registry, {
            info: types_create_1.TypeDefInfo.Enum,
            lookupIndex,
            lookupName: this.__internal__names[lookupIndex],
            sub
        });
    }
}
exports.PortableRegistry = PortableRegistry;


/***/ }),

/***/ 23480:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.convertSiV0toV1 = exports.PortableRegistry = void 0;
var PortableRegistry_js_1 = __nccwpck_require__(53408);
Object.defineProperty(exports, "PortableRegistry", ({ enumerable: true, get: function () { return PortableRegistry_js_1.PortableRegistry; } }));
var toV1_js_1 = __nccwpck_require__(96927);
Object.defineProperty(exports, "convertSiV0toV1", ({ enumerable: true, get: function () { return toV1_js_1.toV1; } }));


/***/ }),

/***/ 96927:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toV1 = void 0;
const util_1 = __nccwpck_require__(29795);
function convertType(key) {
    return (registry, { type }) => registry.createType('Si1TypeDef', {
        [key]: {
            type: type.toNumber()
        }
    });
}
function convertArray(registry, { len, type }) {
    return registry.createType('Si1TypeDef', {
        Array: {
            len,
            type: type.toNumber()
        }
    });
}
function convertBitSequence(registry, { bitOrderType, bitStoreType }) {
    return registry.createType('Si1TypeDef', {
        BitSequence: {
            bitOrderType: bitOrderType.toNumber(),
            bitStoreType: bitStoreType.toNumber()
        }
    });
}
const convertCompact = convertType('Compact');
function convertComposite(registry, { fields }) {
    return registry.createType('Si1TypeDef', {
        Composite: {
            fields: convertFields(registry, fields)
        }
    });
}
function convertFields(registry, fields) {
    return fields.map(({ docs, name, type, typeName }) => registry.createType('Si1Field', {
        docs,
        name,
        type: type.toNumber(),
        typeName
    }));
}
function convertPhantom(registry, path) {
    console.warn(`Converting phantom type ${path.map((p) => p.toString()).join('::')} to empty tuple`);
    return registry.createType('Si1TypeDef', {
        Tuple: []
    });
}
function convertPrimitive(registry, prim) {
    return registry.createType('Si1TypeDef', {
        Primitive: prim.toString()
    });
}
const convertSequence = convertType('Sequence');
function convertTuple(registry, types) {
    return registry.createType('Si1TypeDef', {
        Tuple: types.map((t) => t.toNumber())
    });
}
function convertVariant(registry, { variants }) {
    return registry.createType('Si1TypeDef', {
        Variant: {
            variants: variants.map(({ discriminant, docs, fields, name }, index) => registry.createType('Si1Variant', {
                docs,
                fields: convertFields(registry, fields),
                index: discriminant.isSome
                    ? discriminant.unwrap().toNumber()
                    : index,
                name
            }))
        }
    });
}
function convertDef(registry, { def, path }) {
    let result;
    switch (def.type) {
        case 'Array':
            result = convertArray(registry, def.asArray);
            break;
        case 'BitSequence':
            result = convertBitSequence(registry, def.asBitSequence);
            break;
        case 'Compact':
            result = convertCompact(registry, def.asCompact);
            break;
        case 'Composite':
            result = convertComposite(registry, def.asComposite);
            break;
        case 'Phantom':
            result = convertPhantom(registry, path);
            break;
        case 'Primitive':
            result = convertPrimitive(registry, def.asPrimitive);
            break;
        case 'Sequence':
            result = convertSequence(registry, def.asSequence);
            break;
        case 'Tuple':
            result = convertTuple(registry, def.asTuple);
            break;
        case 'Variant':
            result = convertVariant(registry, def.asVariant);
            break;
        default: (0, util_1.assertUnreachable)(def.type);
    }
    return result;
}
function toV1(registry, types) {
    return types.map((t, index) => registry.createType('PortableType', {
        // offsets are +1 from v0
        id: index + 1,
        type: {
            def: convertDef(registry, t),
            docs: [],
            params: t.params.map((p) => registry.createType('Si1TypeParameter', {
                type: p.toNumber()
            })),
            path: t.path.map((p) => p.toString())
        }
    }));
}
exports.toV1 = toV1;


/***/ }),

/***/ 26550:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decorateConstants = void 0;
const util_1 = __nccwpck_require__(29795);
const util_js_1 = __nccwpck_require__(27838);
/** @internal */
function decorateConstants(registry, { pallets }, _version) {
    const result = {};
    for (let i = 0, count = pallets.length; i < count; i++) {
        const { constants, name } = pallets[i];
        if (!constants.isEmpty) {
            (0, util_1.lazyMethod)(result, (0, util_1.stringCamelCase)(name), () => (0, util_1.lazyMethods)({}, constants, (constant) => {
                const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [(0, util_1.hexToU8a)(constant.value.toHex())]);
                // We are casting here since we are assigning to a read-only property
                codec.meta = constant;
                return codec;
            }, util_js_1.objectNameToCamel));
        }
    }
    return result;
}
exports.decorateConstants = decorateConstants;


/***/ }),

/***/ 22618:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decorateErrors = exports.variantToMeta = void 0;
const util_1 = __nccwpck_require__(29795);
const lazy_js_1 = __nccwpck_require__(3718);
const util_js_1 = __nccwpck_require__(27838);
function variantToMeta(lookup, variant) {
    return (0, util_1.objectSpread)({ args: variant.fields.map(({ type }) => lookup.getTypeDef(type).type) }, variant);
}
exports.variantToMeta = variantToMeta;
/** @internal */
function decorateErrors(registry, { lookup, pallets }, version) {
    const result = {};
    for (let i = 0, count = pallets.length; i < count; i++) {
        const { errors, index, name } = pallets[i];
        if (errors.isSome) {
            const sectionIndex = version >= 12 ? index.toNumber() : i;
            (0, util_1.lazyMethod)(result, (0, util_1.stringCamelCase)(name), () => (0, lazy_js_1.lazyVariants)(lookup, errors.unwrap(), util_js_1.objectNameToString, (variant) => ({
                // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects
                is: (errorMod) => (0, util_1.isCodec)(errorMod) &&
                    (0, util_1.isCodec)(errorMod.index) &&
                    errorMod.index.eq(sectionIndex) && ((0, util_1.isU8a)(errorMod.error)
                    ? errorMod.error[0] === variant.index.toNumber()
                    : (0, util_1.isCodec)(errorMod.error) && errorMod.error.eq(variant.index)),
                meta: registry.createTypeUnsafe('ErrorMetadataLatest', [variantToMeta(lookup, variant)])
            })));
        }
    }
    return result;
}
exports.decorateErrors = decorateErrors;


/***/ }),

/***/ 72092:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decorateEvents = exports.filterEventsSome = void 0;
const util_1 = __nccwpck_require__(29795);
const lazy_js_1 = __nccwpck_require__(3718);
const index_js_1 = __nccwpck_require__(22618);
const util_js_1 = __nccwpck_require__(27838);
function filterEventsSome({ events }) {
    return events.isSome;
}
exports.filterEventsSome = filterEventsSome;
/** @internal */
function decorateEvents(registry, { lookup, pallets }, version) {
    const result = {};
    const filtered = pallets.filter(filterEventsSome);
    for (let i = 0, count = filtered.length; i < count; i++) {
        const { events, index, name } = filtered[i];
        const sectionIndex = version >= 12 ? index.toNumber() : i;
        (0, util_1.lazyMethod)(result, (0, util_1.stringCamelCase)(name), () => (0, lazy_js_1.lazyVariants)(lookup, events.unwrap(), util_js_1.objectNameToString, (variant) => ({
            // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects
            is: (eventRecord) => (0, util_1.isCodec)(eventRecord) &&
                (0, util_1.isU8a)(eventRecord.index) &&
                sectionIndex === eventRecord.index[0] &&
                variant.index.eq(eventRecord.index[1]),
            meta: registry.createTypeUnsafe('EventMetadataLatest', [(0, index_js_1.variantToMeta)(lookup, variant)])
        })));
    }
    return result;
}
exports.decorateEvents = decorateEvents;


/***/ }),

/***/ 82980:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createUnchecked = void 0;
const util_1 = __nccwpck_require__(29795);
function isTx(tx, callIndex) {
    return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];
}
/** @internal */
function createUnchecked(registry, section, callIndex, callMetadata) {
    const expectedArgs = callMetadata.fields;
    const funcName = (0, util_1.stringCamelCase)(callMetadata.name);
    const extrinsicFn = (...args) => {
        if (expectedArgs.length !== args.length) {
            throw new Error(`Extrinsic ${section}.${funcName} expects ${expectedArgs.length} arguments, got ${args.length}.`);
        }
        return registry.createTypeUnsafe('Call', [{ args, callIndex }, callMetadata]);
    };
    extrinsicFn.is = (tx) => isTx(tx, callIndex);
    extrinsicFn.callIndex = callIndex;
    extrinsicFn.meta = callMetadata;
    extrinsicFn.method = funcName;
    extrinsicFn.section = section;
    extrinsicFn.toJSON = () => callMetadata.toJSON();
    return extrinsicFn;
}
exports.createUnchecked = createUnchecked;


/***/ }),

/***/ 82678:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decorateExtrinsics = exports.createCallFunction = exports.filterCallsSome = void 0;
const util_1 = __nccwpck_require__(29795);
const lazy_js_1 = __nccwpck_require__(3718);
const index_js_1 = __nccwpck_require__(16908);
const util_js_1 = __nccwpck_require__(27838);
const createUnchecked_js_1 = __nccwpck_require__(82980);
function filterCallsSome({ calls }) {
    return calls.isSome;
}
exports.filterCallsSome = filterCallsSome;
function createCallFunction(registry, lookup, variant, sectionName, sectionIndex) {
    const { fields, index } = variant;
    const count = fields.length;
    const args = new Array(count);
    for (let i = 0; i < count; i++) {
        const { name, type, typeName } = fields[i];
        args[i] = (0, util_1.objectSpread)({
            name: (0, util_1.stringCamelCase)(name.unwrapOr(`param${i}`)),
            type: (0, index_js_1.getSiName)(lookup, type)
        }, typeName.isSome
            ? { typeName: typeName.unwrap() }
            : null);
    }
    return (0, createUnchecked_js_1.createUnchecked)(registry, sectionName, new Uint8Array([sectionIndex, index.toNumber()]), registry.createTypeUnsafe('FunctionMetadataLatest', [(0, util_1.objectSpread)({ args }, variant)]));
}
exports.createCallFunction = createCallFunction;
/** @internal */
function decorateExtrinsics(registry, { lookup, pallets }, version) {
    const result = {};
    const filtered = pallets.filter(filterCallsSome);
    for (let i = 0, count = filtered.length; i < count; i++) {
        const { calls, index, name } = filtered[i];
        const sectionName = (0, util_1.stringCamelCase)(name);
        const sectionIndex = version >= 12 ? index.toNumber() : i;
        (0, util_1.lazyMethod)(result, sectionName, () => (0, lazy_js_1.lazyVariants)(lookup, calls.unwrap(), util_js_1.objectNameToCamel, (variant) => createCallFunction(registry, lookup, variant, sectionName, sectionIndex)));
    }
    return result;
}
exports.decorateExtrinsics = decorateExtrinsics;


/***/ }),

/***/ 78982:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.filterEventsSome = exports.filterCallsSome = exports.decorateStorage = exports.decorateExtrinsics = exports.decorateEvents = exports.decorateErrors = exports.decorateConstants = exports.expandMetadata = void 0;
const Metadata_js_1 = __nccwpck_require__(81090);
const index_js_1 = __nccwpck_require__(26550);
Object.defineProperty(exports, "decorateConstants", ({ enumerable: true, get: function () { return index_js_1.decorateConstants; } }));
const index_js_2 = __nccwpck_require__(22618);
Object.defineProperty(exports, "decorateErrors", ({ enumerable: true, get: function () { return index_js_2.decorateErrors; } }));
const index_js_3 = __nccwpck_require__(72092);
Object.defineProperty(exports, "decorateEvents", ({ enumerable: true, get: function () { return index_js_3.decorateEvents; } }));
Object.defineProperty(exports, "filterEventsSome", ({ enumerable: true, get: function () { return index_js_3.filterEventsSome; } }));
const index_js_4 = __nccwpck_require__(82678);
Object.defineProperty(exports, "decorateExtrinsics", ({ enumerable: true, get: function () { return index_js_4.decorateExtrinsics; } }));
Object.defineProperty(exports, "filterCallsSome", ({ enumerable: true, get: function () { return index_js_4.filterCallsSome; } }));
const index_js_5 = __nccwpck_require__(56088);
Object.defineProperty(exports, "decorateStorage", ({ enumerable: true, get: function () { return index_js_5.decorateStorage; } }));
/**
 * Expands the metadata by decoration into consts, query and tx sections
 */
function expandMetadata(registry, metadata) {
    if (!(metadata instanceof Metadata_js_1.Metadata)) {
        throw new Error('You need to pass a valid Metadata instance to Decorated');
    }
    const latest = metadata.asLatest;
    const version = metadata.version;
    return {
        consts: (0, index_js_1.decorateConstants)(registry, latest, version),
        errors: (0, index_js_2.decorateErrors)(registry, latest, version),
        events: (0, index_js_3.decorateEvents)(registry, latest, version),
        query: (0, index_js_5.decorateStorage)(registry, latest, version),
        registry,
        tx: (0, index_js_4.decorateExtrinsics)(registry, latest, version)
    };
}
exports.expandMetadata = expandMetadata;


/***/ }),

/***/ 33233:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createFunction = exports.createKeyRaw = exports.createKeyInspect = exports.createKeyRawParts = exports.NO_RAW_ARGS = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const index_js_1 = __nccwpck_require__(16908);
const getHasher_js_1 = __nccwpck_require__(7978);
exports.NO_RAW_ARGS = {
    args: [],
    hashers: [],
    keys: []
};
/** @internal */
function filterDefined(a) {
    return !(0, util_1.isUndefined)(a);
}
/** @internal */
function assertArgs({ method, section }, { args, keys }) {
    if (!Array.isArray(args)) {
        throw new Error(`Call to ${(0, util_1.stringCamelCase)(section || 'unknown')}.${(0, util_1.stringCamelCase)(method || 'unknown')} needs ${keys.length} arguments`);
    }
    else if (args.filter(filterDefined).length !== keys.length) {
        throw new Error(`Call to ${(0, util_1.stringCamelCase)(section || 'unknown')}.${(0, util_1.stringCamelCase)(method || 'unknown')} needs ${keys.length} arguments, found [${args.join(', ')}]`);
    }
}
/** @internal */
function createKeyRawParts(registry, itemFn, { args, hashers, keys }) {
    const count = keys.length;
    const extra = new Array(count);
    for (let i = 0; i < count; i++) {
        extra[i] = (0, getHasher_js_1.getHasher)(hashers[i])(registry.createTypeUnsafe(registry.createLookupType(keys[i]), [args[i]]).toU8a());
    }
    return [
        [
            (0, util_crypto_1.xxhashAsU8a)(itemFn.prefix, 128),
            (0, util_crypto_1.xxhashAsU8a)(itemFn.method, 128)
        ],
        extra
    ];
}
exports.createKeyRawParts = createKeyRawParts;
/** @internal */
function createKeyInspect(registry, itemFn, args) {
    assertArgs(itemFn, args);
    const { meta } = itemFn;
    const [prefix, extra] = createKeyRawParts(registry, itemFn, args);
    let types = [];
    if (meta.type.isMap) {
        const { hashers, key } = meta.type.asMap;
        types = hashers.length === 1
            ? [`${hashers[0].type}(${(0, index_js_1.getSiName)(registry.lookup, key)})`]
            : registry.lookup.getSiType(key).def.asTuple.map((k, i) => `${hashers[i].type}(${(0, index_js_1.getSiName)(registry.lookup, k)})`);
    }
    const names = ['module', 'method'].concat(...args.args.map((_, i) => types[i]));
    return {
        inner: prefix
            .concat(...extra)
            .map((v, i) => ({ name: names[i], outer: [v] }))
    };
}
exports.createKeyInspect = createKeyInspect;
/** @internal */
function createKeyRaw(registry, itemFn, args) {
    const [prefix, extra] = createKeyRawParts(registry, itemFn, args);
    return (0, util_1.u8aConcat)(...prefix, ...extra);
}
exports.createKeyRaw = createKeyRaw;
/** @internal */
function createKey(registry, itemFn, args) {
    assertArgs(itemFn, args);
    // always add the length prefix (underlying it is Bytes)
    return (0, util_1.compactAddLength)(createKeyRaw(registry, itemFn, args));
}
/** @internal */
function createStorageInspect(registry, itemFn, options) {
    const { meta: { type } } = itemFn;
    return (...args) => {
        if (type.isPlain) {
            return options.skipHashing
                ? { inner: [], name: 'wellKnown', outer: [(0, util_1.u8aToU8a)(options.key)] }
                : createKeyInspect(registry, itemFn, exports.NO_RAW_ARGS);
        }
        const { hashers, key } = type.asMap;
        return hashers.length === 1
            ? createKeyInspect(registry, itemFn, { args, hashers, keys: [key] })
            : createKeyInspect(registry, itemFn, { args, hashers, keys: registry.lookup.getSiType(key).def.asTuple });
    };
}
/** @internal */
function createStorageFn(registry, itemFn, options) {
    const { meta: { type } } = itemFn;
    let cacheKey = null;
    // Can only have zero or one argument:
    //   - storage.system.account(address)
    //   - storage.timestamp.blockPeriod()
    // For higher-map queries the params are passed in as an tuple, [key1, key2]
    return (...args) => {
        if (type.isPlain) {
            if (!cacheKey) {
                cacheKey = options.skipHashing
                    ? (0, util_1.compactAddLength)((0, util_1.u8aToU8a)(options.key))
                    : createKey(registry, itemFn, exports.NO_RAW_ARGS);
            }
            return cacheKey;
        }
        const { hashers, key } = type.asMap;
        return hashers.length === 1
            ? createKey(registry, itemFn, { args, hashers, keys: [key] })
            : createKey(registry, itemFn, { args, hashers, keys: registry.lookup.getSiType(key).def.asTuple });
    };
}
/** @internal */
function createWithMeta(registry, itemFn, options) {
    const { meta, method, prefix, section } = itemFn;
    const storageFn = createStorageFn(registry, itemFn, options);
    storageFn.inspect = createStorageInspect(registry, itemFn, options);
    storageFn.meta = meta;
    storageFn.method = (0, util_1.stringCamelCase)(method);
    storageFn.prefix = prefix;
    storageFn.section = section;
    // explicitly add the actual method in the toJSON, this gets used to determine caching and without it
    // instances (e.g. collective) will not work since it is only matched on param meta
    storageFn.toJSON = () => (0, util_1.objectSpread)({ storage: { method, prefix, section } }, meta.toJSON());
    return storageFn;
}
/** @internal */
function extendHeadMeta(registry, { meta: { docs, name, type }, section }, { method }, iterFn) {
    // metadata with a fallback value using the type of the key, the normal
    // meta fallback only applies to actual entry values, create one for head
    const meta = registry.createTypeUnsafe('StorageEntryMetadataLatest', [{
            docs,
            fallback: registry.createTypeUnsafe('Bytes', []),
            modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', [1]),
            name,
            type: registry.createTypeUnsafe('StorageEntryTypeLatest', [type.asMap.key, 0])
        }]);
    iterFn.meta = meta;
    const fn = (...args) => registry.createTypeUnsafe('StorageKey', [iterFn(...args), { method, section }]);
    fn.meta = meta;
    return fn;
}
/** @internal */
function extendPrefixedMap(registry, itemFn, storageFn) {
    const { meta: { type }, method, section } = itemFn;
    storageFn.iterKey = extendHeadMeta(registry, itemFn, storageFn, (...args) => {
        if (args.length && (type.isPlain || (args.length >= type.asMap.hashers.length))) {
            throw new Error(`Iteration of ${(0, util_1.stringCamelCase)(section || 'unknown')}.${(0, util_1.stringCamelCase)(method || 'unknown')} needs arguments to be at least one less than the full arguments, found [${args.join(', ')}]`);
        }
        if (args.length) {
            if (type.isMap) {
                const { hashers, key } = type.asMap;
                const keysVec = hashers.length === 1
                    ? [key]
                    : registry.lookup.getSiType(key).def.asTuple;
                return new types_codec_1.Raw(registry, createKeyRaw(registry, itemFn, { args, hashers: hashers.slice(0, args.length), keys: keysVec.slice(0, args.length) }));
            }
        }
        return new types_codec_1.Raw(registry, createKeyRaw(registry, itemFn, exports.NO_RAW_ARGS));
    });
    return storageFn;
}
/** @internal */
function createFunction(registry, itemFn, options) {
    const { meta: { type } } = itemFn;
    const storageFn = createWithMeta(registry, itemFn, options);
    if (type.isMap) {
        extendPrefixedMap(registry, itemFn, storageFn);
    }
    storageFn.keyPrefix = (...args) => (storageFn.iterKey && storageFn.iterKey(...args)) ||
        (0, util_1.compactStripLength)(storageFn())[1];
    return storageFn;
}
exports.createFunction = createFunction;


/***/ }),

/***/ 7978:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getHasher = void 0;
const util_1 = __nccwpck_require__(29795);
const util_crypto_1 = __nccwpck_require__(37723);
const DEFAULT_FN = (data) => (0, util_crypto_1.xxhashAsU8a)(data, 128);
const HASHERS = {
    Blake2_128: (data) => // eslint-disable-line camelcase
     (0, util_crypto_1.blake2AsU8a)(data, 128),
    Blake2_128Concat: (data) => // eslint-disable-line camelcase
     (0, util_1.u8aConcat)((0, util_crypto_1.blake2AsU8a)(data, 128), (0, util_1.u8aToU8a)(data)),
    Blake2_256: (data) => // eslint-disable-line camelcase
     (0, util_crypto_1.blake2AsU8a)(data, 256),
    Identity: (data) => (0, util_1.u8aToU8a)(data),
    Twox128: (data) => (0, util_crypto_1.xxhashAsU8a)(data, 128),
    Twox256: (data) => (0, util_crypto_1.xxhashAsU8a)(data, 256),
    Twox64Concat: (data) => (0, util_1.u8aConcat)((0, util_crypto_1.xxhashAsU8a)(data, 64), (0, util_1.u8aToU8a)(data))
};
/** @internal */
function getHasher(hasher) {
    return HASHERS[hasher.type] || DEFAULT_FN;
}
exports.getHasher = getHasher;


/***/ }),

/***/ 99593:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getStorage = void 0;
const substrate_js_1 = __nccwpck_require__(3912);
/** @internal */
function getStorage(registry) {
    const storage = {};
    const entries = Object.entries(substrate_js_1.substrate);
    for (let e = 0, count = entries.length; e < count; e++) {
        storage[entries[e][0]] = entries[e][1](registry);
    }
    return { substrate: storage };
}
exports.getStorage = getStorage;


/***/ }),

/***/ 56088:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decorateStorage = void 0;
const util_1 = __nccwpck_require__(29795);
const util_js_1 = __nccwpck_require__(27838);
const createFunction_js_1 = __nccwpck_require__(33233);
const getStorage_js_1 = __nccwpck_require__(99593);
const util_js_2 = __nccwpck_require__(39281);
const VERSION_NAME = 'palletVersion';
const VERSION_KEY = ':__STORAGE_VERSION__:';
const VERSION_DOCS = { docs: 'Returns the current pallet version from storage', type: 'u16' };
/** @internal */
function decorateStorage(registry, { pallets }, _metaVersion) {
    const result = (0, getStorage_js_1.getStorage)(registry);
    for (let i = 0, count = pallets.length; i < count; i++) {
        const { name, storage } = pallets[i];
        if (storage.isSome) {
            const section = (0, util_1.stringCamelCase)(name);
            const { items, prefix: _prefix } = storage.unwrap();
            const prefix = _prefix.toString();
            (0, util_1.lazyMethod)(result, section, () => (0, util_1.lazyMethods)({
                palletVersion: (0, util_js_2.createRuntimeFunction)({ method: VERSION_NAME, prefix, section }, (0, createFunction_js_1.createKeyRaw)(registry, { method: VERSION_KEY, prefix: name.toString() }, createFunction_js_1.NO_RAW_ARGS), VERSION_DOCS)(registry)
            }, items, (meta) => (0, createFunction_js_1.createFunction)(registry, { meta, method: meta.name.toString(), prefix, section }, {}), util_js_1.objectNameToCamel));
        }
    }
    return result;
}
exports.decorateStorage = decorateStorage;


/***/ }),

/***/ 3912:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.substrate = void 0;
const util_js_1 = __nccwpck_require__(39281);
const prefix = 'Substrate';
const section = 'substrate';
function createSubstrateFn(method, key, meta) {
    return (0, util_js_1.createRuntimeFunction)({ method, prefix, section }, key, meta);
}
exports.substrate = {
    changesTrieConfig: createSubstrateFn('changesTrieConfig', ':changes_trie', {
        docs: 'Changes trie configuration is stored under this key.',
        type: 'u32'
    }),
    childStorageKeyPrefix: createSubstrateFn('childStorageKeyPrefix', ':child_storage:', {
        docs: 'Prefix of child storage keys.',
        type: 'u32'
    }),
    code: createSubstrateFn('code', ':code', {
        docs: 'Wasm code of the runtime.',
        type: 'Bytes'
    }),
    extrinsicIndex: createSubstrateFn('extrinsicIndex', ':extrinsic_index', {
        docs: 'Current extrinsic index (u32) is stored under this key.',
        type: 'u32'
    }),
    heapPages: createSubstrateFn('heapPages', ':heappages', {
        docs: 'Number of wasm linear memory pages required for execution of the runtime.',
        type: 'u64'
    })
};


/***/ }),

/***/ 39281:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createRuntimeFunction = void 0;
const createFunction_js_1 = __nccwpck_require__(33233);
function findSiPrimitive(registry, _prim) {
    const prim = _prim.toLowerCase();
    return registry.lookup.types.find((t) => (t.type.def.isPrimitive &&
        t.type.def.asPrimitive.toString().toLowerCase() === prim) || (t.type.def.isHistoricMetaCompat &&
        t.type.def.asHistoricMetaCompat.toString().toLowerCase() === prim));
}
function findSiType(registry, orig) {
    let portable = findSiPrimitive(registry, orig);
    if (!portable && orig === 'Bytes') {
        const u8 = findSiPrimitive(registry, 'u8');
        if (u8) {
            portable = registry.lookup.types.find((t) => (t.type.def.isSequence &&
                t.type.def.asSequence.type.eq(u8.id)) || (t.type.def.isHistoricMetaCompat &&
                t.type.def.asHistoricMetaCompat.eq(orig)));
        }
    }
    if (!portable) {
        console.warn(`Unable to map ${orig} to a lookup index`);
    }
    return portable;
}
/** @internal */
function createRuntimeFunction({ method, prefix, section }, key, { docs, type }) {
    return (registry) => (0, createFunction_js_1.createFunction)(registry, {
        meta: registry.createTypeUnsafe('StorageEntryMetadataLatest', [{
                docs: registry.createTypeUnsafe('Vec<Text>', [[docs]]),
                modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', ['Required']),
                name: registry.createTypeUnsafe('Text', [method]),
                toJSON: () => key,
                type: registry.createTypeUnsafe('StorageEntryTypeLatest', [{ Plain: findSiType(registry, type)?.id || 0 }])
            }]),
        method,
        prefix,
        section
    }, { key, skipHashing: true });
}
exports.createRuntimeFunction = createRuntimeFunction;


/***/ }),

/***/ 27838:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectNameToString = exports.objectNameToCamel = void 0;
const util_1 = __nccwpck_require__(29795);
function convert(fn) {
    return ({ name }) => fn(name);
}
exports.objectNameToCamel = convert(util_1.stringCamelCase);
exports.objectNameToString = convert((n) => n.toString());


/***/ }),

/***/ 1870:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PortableRegistry = exports.Metadata = exports.expandMetadata = exports.decorateStorage = exports.decorateExtrinsics = exports.decorateConstants = void 0;
var index_js_1 = __nccwpck_require__(78982);
Object.defineProperty(exports, "decorateConstants", ({ enumerable: true, get: function () { return index_js_1.decorateConstants; } }));
Object.defineProperty(exports, "decorateExtrinsics", ({ enumerable: true, get: function () { return index_js_1.decorateExtrinsics; } }));
Object.defineProperty(exports, "decorateStorage", ({ enumerable: true, get: function () { return index_js_1.decorateStorage; } }));
Object.defineProperty(exports, "expandMetadata", ({ enumerable: true, get: function () { return index_js_1.expandMetadata; } }));
var Metadata_js_1 = __nccwpck_require__(81090);
Object.defineProperty(exports, "Metadata", ({ enumerable: true, get: function () { return Metadata_js_1.Metadata; } }));
var index_js_2 = __nccwpck_require__(23480);
Object.defineProperty(exports, "PortableRegistry", ({ enumerable: true, get: function () { return index_js_2.PortableRegistry; } }));


/***/ }),

/***/ 74172:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extractTypes = void 0;
const types_create_1 = __nccwpck_require__(49134);
function extractSubSingle(_, { sub }) {
    const { lookupName, type } = sub;
    return extractTypes([lookupName || type]);
}
function extractSubArray(_, { sub }) {
    return extractTypes(sub.map(({ lookupName, type }) => lookupName || type));
}
function unhandled(type, { info }) {
    throw new Error(`Unhandled: Unable to create and validate type from ${type} (info=${types_create_1.TypeDefInfo[info]})`);
}
const mapping = {
    [types_create_1.TypeDefInfo.BTreeMap]: extractSubArray,
    [types_create_1.TypeDefInfo.BTreeSet]: extractSubSingle,
    [types_create_1.TypeDefInfo.Compact]: extractSubSingle,
    [types_create_1.TypeDefInfo.DoNotConstruct]: unhandled,
    [types_create_1.TypeDefInfo.Enum]: extractSubArray,
    [types_create_1.TypeDefInfo.HashMap]: extractSubArray,
    [types_create_1.TypeDefInfo.Int]: unhandled,
    [types_create_1.TypeDefInfo.Linkage]: extractSubSingle,
    [types_create_1.TypeDefInfo.Null]: unhandled,
    [types_create_1.TypeDefInfo.Option]: extractSubSingle,
    [types_create_1.TypeDefInfo.Plain]: (_, typeDef) => typeDef.lookupName || typeDef.type,
    [types_create_1.TypeDefInfo.Range]: extractSubSingle,
    [types_create_1.TypeDefInfo.RangeInclusive]: extractSubSingle,
    [types_create_1.TypeDefInfo.Result]: extractSubArray,
    [types_create_1.TypeDefInfo.Set]: extractSubArray,
    [types_create_1.TypeDefInfo.Si]: unhandled,
    [types_create_1.TypeDefInfo.Struct]: extractSubArray,
    [types_create_1.TypeDefInfo.Tuple]: extractSubArray,
    [types_create_1.TypeDefInfo.UInt]: unhandled,
    [types_create_1.TypeDefInfo.Vec]: extractSubSingle,
    [types_create_1.TypeDefInfo.VecFixed]: extractSubSingle,
    [types_create_1.TypeDefInfo.WrapperKeepOpaque]: extractSubSingle,
    [types_create_1.TypeDefInfo.WrapperOpaque]: extractSubSingle
};
/** @internal */
function extractTypes(types) {
    const count = types.length;
    const result = new Array(count);
    for (let i = 0; i < count; i++) {
        const type = types[i];
        const typeDef = (0, types_create_1.getTypeDef)(type);
        result[i] = mapping[typeDef.info](type, typeDef);
    }
    return result;
}
exports.extractTypes = extractTypes;


/***/ }),

/***/ 65878:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.flattenUniq = void 0;
/** @internal */
function flattenUniq(list, result = []) {
    for (let i = 0, count = list.length; i < count; i++) {
        const entry = list[i];
        if (Array.isArray(entry)) {
            flattenUniq(entry, result);
        }
        else {
            result.push(entry);
        }
    }
    return [...new Set(result)];
}
exports.flattenUniq = flattenUniq;


/***/ }),

/***/ 6712:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getSiName = void 0;
function getSiName(lookup, type) {
    const typeDef = lookup.getTypeDef(type);
    return typeDef.lookupName || typeDef.type;
}
exports.getSiName = getSiName;


/***/ }),

/***/ 82631:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getUniqTypes = void 0;
const flattenUniq_js_1 = __nccwpck_require__(65878);
const validateTypes_js_1 = __nccwpck_require__(79852);
/** @internal */
function extractTypes(lookup, types) {
    return types.map(({ type }) => lookup.getTypeDef(type).type);
}
/** @internal */
function extractFieldTypes(lookup, type) {
    return lookup.getSiType(type).def.asVariant.variants.map(({ fields }) => extractTypes(lookup, fields));
}
/** @internal */
function getPalletNames({ lookup, pallets }) {
    return pallets.reduce((all, { calls, constants, events, storage }) => {
        all.push([extractTypes(lookup, constants)]);
        if (calls.isSome) {
            all.push(extractFieldTypes(lookup, calls.unwrap().type));
        }
        if (events.isSome) {
            all.push(extractFieldTypes(lookup, events.unwrap().type));
        }
        if (storage.isSome) {
            all.push(storage.unwrap().items.map(({ type }) => {
                if (type.isPlain) {
                    return [lookup.getTypeDef(type.asPlain).type];
                }
                const { hashers, key, value } = type.asMap;
                return hashers.length === 1
                    ? [
                        lookup.getTypeDef(value).type,
                        lookup.getTypeDef(key).type
                    ]
                    : [
                        lookup.getTypeDef(value).type,
                        ...lookup.getSiType(key).def.asTuple.map((t) => lookup.getTypeDef(t).type)
                    ];
            }));
        }
        return all;
    }, []);
}
/** @internal */
function getUniqTypes(registry, meta, throwError) {
    return (0, validateTypes_js_1.validateTypes)(registry, throwError, (0, flattenUniq_js_1.flattenUniq)(getPalletNames(meta)));
}
exports.getUniqTypes = getUniqTypes;


/***/ }),

/***/ 16908:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.validateTypes = exports.toCallsOnly = exports.getUniqTypes = exports.getSiName = exports.flattenUniq = void 0;
var flattenUniq_js_1 = __nccwpck_require__(65878);
Object.defineProperty(exports, "flattenUniq", ({ enumerable: true, get: function () { return flattenUniq_js_1.flattenUniq; } }));
var getSiName_js_1 = __nccwpck_require__(6712);
Object.defineProperty(exports, "getSiName", ({ enumerable: true, get: function () { return getSiName_js_1.getSiName; } }));
var getUniqTypes_js_1 = __nccwpck_require__(82631);
Object.defineProperty(exports, "getUniqTypes", ({ enumerable: true, get: function () { return getUniqTypes_js_1.getUniqTypes; } }));
var toCallsOnly_js_1 = __nccwpck_require__(67674);
Object.defineProperty(exports, "toCallsOnly", ({ enumerable: true, get: function () { return toCallsOnly_js_1.toCallsOnly; } }));
var validateTypes_js_1 = __nccwpck_require__(79852);
Object.defineProperty(exports, "validateTypes", ({ enumerable: true, get: function () { return validateTypes_js_1.validateTypes; } }));


/***/ }),

/***/ 67674:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCallsOnly = void 0;
const util_1 = __nccwpck_require__(29795);
function trimDocs(docs) {
    const strings = docs.map((d) => d.toString().trim());
    const firstEmpty = strings.findIndex((d) => !d.length);
    return firstEmpty === -1
        ? strings
        : strings.slice(0, firstEmpty);
}
/** @internal */
function toCallsOnly(registry, { extrinsic, lookup, pallets }) {
    return registry.createTypeUnsafe('MetadataLatest', [{
            extrinsic,
            lookup: {
                types: lookup.types.map(({ id, type }) => registry.createTypeUnsafe('PortableType', [{
                        id,
                        type: (0, util_1.objectSpread)({}, type, { docs: trimDocs(type.docs) })
                    }]))
            },
            pallets: pallets.map(({ calls, index, name }) => ({
                calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [calls.unwrapOr(null)]),
                index,
                name
            }))
        }]).toJSON();
}
exports.toCallsOnly = toCallsOnly;


/***/ }),

/***/ 79852:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.validateTypes = void 0;
const util_1 = __nccwpck_require__(29795);
const extractTypes_js_1 = __nccwpck_require__(74172);
const flattenUniq_js_1 = __nccwpck_require__(65878);
const l = (0, util_1.logger)('metadata');
/** @internal */
function validateTypes(registry, throwError, types) {
    const missing = (0, flattenUniq_js_1.flattenUniq)((0, extractTypes_js_1.extractTypes)(types))
        .filter((type) => !registry.hasType(type) &&
        !registry.isLookupType(type))
        .sort();
    if (missing.length !== 0) {
        const message = `Unknown types found, no types for ${missing.join(', ')}`;
        if (throwError) {
            throw new Error(message);
        }
        else {
            l.warn(message);
        }
    }
    return types;
}
exports.validateTypes = validateTypes;


/***/ }),

/***/ 49520:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toV11 = void 0;
/** @internal */
function toV11(registry, { modules }) {
    return registry.createTypeUnsafe('MetadataV11', [{
            // This is new in V11, pass V0 here - something non-existing, telling the API to use
            // the fallback for this information (on-chain detection)
            extrinsic: {
                signedExtensions: [],
                version: 0
            },
            modules
        }]);
}
exports.toV11 = toV11;


/***/ }),

/***/ 78724:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toV12 = void 0;
const util_1 = __nccwpck_require__(29795);
/**
 * @internal
 **/
function toV12(registry, { extrinsic, modules }) {
    return registry.createTypeUnsafe('MetadataV12', [{
            extrinsic,
            modules: modules.map((mod) => registry.createTypeUnsafe('ModuleMetadataV12', [(0, util_1.objectSpread)({}, mod, { index: 255 })]))
        }]);
}
exports.toV12 = toV12;


/***/ }),

/***/ 66497:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toV13 = void 0;
/**
 * @internal
 **/
function toV13(registry, v12) {
    return registry.createTypeUnsafe('MetadataV13', [v12]);
}
exports.toV13 = toV13;


/***/ }),

/***/ 61578:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toV14 = void 0;
const util_1 = __nccwpck_require__(29795);
const alias_js_1 = __nccwpck_require__(4202);
const definitions_js_1 = __nccwpck_require__(77010);
const BOXES = [['<', '>'], ['<', ','], [',', '>'], ['(', ')'], ['(', ','], [',', ','], [',', ')']];
/**
 * Creates a compatible type mapping
 * @internal
 **/
function compatType(specs, _type) {
    const type = _type.toString();
    const index = specs.findIndex(({ def }) => def.HistoricMetaCompat === type);
    if (index !== -1) {
        return index;
    }
    return specs.push({
        def: {
            HistoricMetaCompat: type
        }
    }) - 1;
}
function compatTypes(specs, ...types) {
    for (let i = 0, count = types.length; i < count; i++) {
        compatType(specs, types[i]);
    }
}
function makeTupleType(specs, entries) {
    return specs.push({
        def: {
            Tuple: entries
        }
    }) - 1;
}
function makeVariantType(modName, variantType, specs, variants) {
    return specs.push({
        def: {
            Variant: { variants }
        },
        path: [`pallet_${modName.toString()}`, 'pallet', variantType]
    }) - 1;
}
/**
 * @internal
 * generate & register the OriginCaller type
 **/
function registerOriginCaller(registry, modules, metaVersion) {
    registry.register({
        OriginCaller: {
            _enum: modules
                .map((mod, index) => [
                mod.name.toString(),
                metaVersion >= 12
                    ? mod.index.toNumber()
                    : index
            ])
                .sort((a, b) => a[1] - b[1])
                .reduce((result, [name, index]) => {
                for (let i = Object.keys(result).length; i < index; i++) {
                    result[`Empty${i}`] = 'Null';
                }
                result[name] = definitions_js_1.knownOrigins[name] || 'Null';
                return result;
            }, {})
        }
    });
}
/**
 * Find and apply the correct type override
 * @internal
 **/
function setTypeOverride(sectionTypes, types) {
    types.forEach((type) => {
        const override = Object.keys(sectionTypes).find((aliased) => type.eq(aliased));
        if (override) {
            type.setOverride(sectionTypes[override]);
        }
        else {
            // FIXME: NOT happy with this approach, but gets over the initial hump cased by (Vec<Announcement>,BalanceOf)
            const orig = type.toString();
            const alias = Object
                .entries(sectionTypes)
                .reduce((result, [src, dst]) => BOXES.reduce((result, [a, z]) => result.replace(`${a}${src}${z}`, `${a}${dst}${z}`), result), orig);
            if (orig !== alias) {
                type.setOverride(alias);
            }
        }
    });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 **/
function convertCalls(specs, registry, modName, calls, sectionTypes) {
    const variants = calls.map(({ args, docs, name }, index) => {
        setTypeOverride(sectionTypes, args.map(({ type }) => type));
        return registry.createTypeUnsafe('SiVariant', [{
                docs,
                fields: args.map(({ name, type }) => registry.createTypeUnsafe('SiField', [{ name, type: compatType(specs, type) }])),
                index,
                name
            }]);
    });
    return registry.createTypeUnsafe('PalletCallMetadataV14', [{
            type: makeVariantType(modName, 'Call', specs, variants)
        }]);
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 */
function convertConstants(specs, registry, constants, sectionTypes) {
    return constants.map(({ docs, name, type, value }) => {
        setTypeOverride(sectionTypes, [type]);
        return registry.createTypeUnsafe('PalletConstantMetadataV14', [{
                docs,
                name,
                type: compatType(specs, type),
                value
            }]);
    });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 */
function convertErrors(specs, registry, modName, errors, _sectionTypes) {
    const variants = errors.map(({ docs, name }, index) => registry.createTypeUnsafe('SiVariant', [{
            docs,
            fields: [],
            index,
            name
        }]));
    return registry.createTypeUnsafe('PalletErrorMetadataV14', [{
            type: makeVariantType(modName, 'Error', specs, variants)
        }]);
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 **/
function convertEvents(specs, registry, modName, events, sectionTypes) {
    const variants = events.map(({ args, docs, name }, index) => {
        setTypeOverride(sectionTypes, args);
        return registry.createTypeUnsafe('SiVariant', [{
                docs,
                fields: args.map((t) => registry.createTypeUnsafe('SiField', [{ type: compatType(specs, t) }])),
                index,
                name
            }]);
    });
    return registry.createTypeUnsafe('PalletEventMetadataV14', [{
            type: makeVariantType(modName, 'Event', specs, variants)
        }]);
}
function createMapEntry(specs, registry, sectionTypes, { hashers, isLinked, isOptional, keys, value }) {
    setTypeOverride(sectionTypes, [value, ...(Array.isArray(keys) ? keys : [keys])]);
    return registry.createTypeUnsafe('StorageEntryTypeV14', [{
            Map: {
                hashers,
                key: hashers.length === 1
                    ? compatType(specs, keys[0])
                    : makeTupleType(specs, keys.map((t) => compatType(specs, t))),
                value: isLinked
                    // For previous-generation linked-map support, the actual storage result
                    // is a Tuple with the value and the Linkage (Option appears in teh value-part only)
                    ? compatType(specs, `(${isOptional ? `Option<${value.toString()}>` : value.toString()}, Linkage<${keys[0].toString()}>)`)
                    : compatType(specs, value)
            }
        }]);
}
/**
 * Apply module-specific storage type overrides (always part of toV14)
 * @internal
 **/
function convertStorage(specs, registry, { items, prefix }, sectionTypes) {
    return registry.createTypeUnsafe('PalletStorageMetadataV14', [{
            items: items.map(({ docs, fallback, modifier, name, type }) => {
                let entryType;
                if (type.isPlain) {
                    const plain = type.asPlain;
                    setTypeOverride(sectionTypes, [plain]);
                    entryType = registry.createTypeUnsafe('StorageEntryTypeV14', [{
                            Plain: compatType(specs, plain)
                        }]);
                }
                else if (type.isMap) {
                    const map = type.asMap;
                    entryType = createMapEntry(specs, registry, sectionTypes, {
                        hashers: [map.hasher],
                        isLinked: map.linked.isTrue,
                        isOptional: modifier.isOptional,
                        keys: [map.key],
                        value: map.value
                    });
                }
                else if (type.isDoubleMap) {
                    const dm = type.asDoubleMap;
                    entryType = createMapEntry(specs, registry, sectionTypes, {
                        hashers: [dm.hasher, dm.key2Hasher],
                        isLinked: false,
                        isOptional: modifier.isOptional,
                        keys: [dm.key1, dm.key2],
                        value: dm.value
                    });
                }
                else {
                    const nm = type.asNMap;
                    entryType = createMapEntry(specs, registry, sectionTypes, {
                        hashers: nm.hashers,
                        isLinked: false,
                        isOptional: modifier.isOptional,
                        keys: nm.keyVec,
                        value: nm.value
                    });
                }
                return registry.createTypeUnsafe('StorageEntryMetadataV14', [{
                        docs,
                        fallback,
                        modifier,
                        name,
                        type: entryType
                    }]);
            }),
            prefix
        }]);
}
/** @internal */
function convertExtrinsic(registry, { signedExtensions, version }) {
    return registry.createTypeUnsafe('ExtrinsicMetadataV14', [{
            signedExtensions: signedExtensions.map((identifier) => ({
                identifier,
                type: 0 // we don't map the fields at all
            })),
            type: 0,
            version
        }]);
}
/** @internal */
function createPallet(specs, registry, mod, { calls, constants, errors, events, storage }) {
    const sectionTypes = (0, alias_js_1.getAliasTypes)(registry, (0, util_1.stringCamelCase)(mod.name));
    return registry.createTypeUnsafe('PalletMetadataV14', [{
            calls: calls && convertCalls(specs, registry, mod.name, calls, sectionTypes),
            constants: convertConstants(specs, registry, constants, sectionTypes),
            errors: errors && convertErrors(specs, registry, mod.name, errors, sectionTypes),
            events: events && convertEvents(specs, registry, mod.name, events, sectionTypes),
            index: mod.index,
            name: mod.name,
            storage: storage && convertStorage(specs, registry, storage, sectionTypes)
        }]);
}
/**
 * Convert the Metadata to v14
 * @internal
 **/
function toV14(registry, v13, metaVersion) {
    const specs = [];
    // position 0 always has Null, additionally add internal defaults
    compatTypes(specs, 'Null', 'u8', 'u16', 'u32', 'u64');
    registerOriginCaller(registry, v13.modules, metaVersion);
    const extrinsic = convertExtrinsic(registry, v13.extrinsic);
    const pallets = v13.modules.map((mod) => createPallet(specs, registry, mod, {
        calls: mod.calls.unwrapOr(null),
        constants: mod.constants,
        errors: mod.errors.length ? mod.errors : null,
        events: mod.events.unwrapOr(null),
        storage: mod.storage.unwrapOr(null)
    }));
    return registry.createTypeUnsafe('MetadataV14', [{
            extrinsic,
            lookup: {
                types: specs.map((type, id) => registry.createTypeUnsafe('PortableType', [{ id, type }]))
            },
            pallets
        }]);
}
exports.toV14 = toV14;


/***/ }),

/***/ 859:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toV15 = void 0;
const util_1 = __nccwpck_require__(29795);
/**
 * Convert the Metadata to v15
 * @internal
 **/
function toV15(registry, v14, _) {
    // V15 is mostly equivalent to v14 however it does add
    //
    // 1. The top-level apis entry - it is assumed that in usage we would
    //    just check for all-empty (like this would construct)
    // 2. A docs param on the pallet itself
    // 3. Additional extrinsic parameters
    //
    // A straight conversion with createTypeUndafe magic fills in details
    // We need the UncheckedExtrinsic to extract the types, at least for v14
    // which does have these details embedded (previous-gen won't populate)
    const unchecked = v14.lookup.paramTypes.SpRuntimeUncheckedExtrinsic;
    return registry.createTypeUnsafe('MetadataV15', [
        (0, util_1.objectSpread)({}, v14, {
            extrinsic: registry.createTypeUnsafe('ExtrinsicMetadataV15', [
                (0, util_1.objectSpread)({}, v14.extrinsic, {
                    addressType: unchecked?.[0].type.unwrapOr(0),
                    callType: unchecked?.[1].type.unwrapOr(0),
                    extraType: unchecked?.[3].type.unwrapOr(0),
                    signatureType: unchecked?.[2].type.unwrapOr(0)
                })
            ]),
            outerEnums: registry.createTypeUnsafe('OuterEnums15', [{
                    // FIXME We need to extract & add the errorType in here
                    // (these doesn't seem to be an esay way to detect & extract it)
                    callType: unchecked?.[1].type.unwrapOr(0),
                    eventType: v14.lookup.paramTypes.FrameSystemEventRecord?.[0].type.unwrapOr(0)
                }])
        })
    ]);
}
exports.toV15 = toV15;


/***/ }),

/***/ 15190:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toLatest = void 0;
/**
 * Convert the Metadata (which is an alias) to latest
 * @internal
 **/
function toLatest(_registry, v15, _metaVersion) {
    return v15;
}
exports.toLatest = toLatest;


/***/ }),

/***/ 99093:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toV10 = void 0;
const util_1 = __nccwpck_require__(29795);
/** @internal */
function createStorageHasher(registry, hasher) {
    // Blake2_128_Concat has been added at index 2, so we increment all the
    // indexes greater than 2
    if (hasher.toNumber() >= 2) {
        return registry.createTypeUnsafe('StorageHasherV10', [hasher.toNumber() + 1]);
    }
    return registry.createTypeUnsafe('StorageHasherV10', [hasher]);
}
/** @internal */
function createStorageType(registry, entryType) {
    if (entryType.isMap) {
        return [(0, util_1.objectSpread)({}, entryType.asMap, {
                hasher: createStorageHasher(registry, entryType.asMap.hasher)
            }), 1];
    }
    if (entryType.isDoubleMap) {
        return [(0, util_1.objectSpread)({}, entryType.asDoubleMap, {
                hasher: createStorageHasher(registry, entryType.asDoubleMap.hasher),
                key2Hasher: createStorageHasher(registry, entryType.asDoubleMap.key2Hasher)
            }), 2];
    }
    return [entryType.asPlain, 0];
}
/** @internal */
function convertModule(registry, mod) {
    const storage = mod.storage.unwrapOr(null);
    return registry.createTypeUnsafe('ModuleMetadataV10', [(0, util_1.objectSpread)({}, mod, {
            storage: storage
                ? (0, util_1.objectSpread)({}, storage, {
                    items: storage.items.map((item) => (0, util_1.objectSpread)({}, item, {
                        type: registry.createTypeUnsafe('StorageEntryTypeV10', createStorageType(registry, item.type))
                    }))
                })
                : null
        })]);
}
/** @internal */
function toV10(registry, { modules }) {
    return registry.createTypeUnsafe('MetadataV10', [{
            modules: modules.map((mod) => convertModule(registry, mod))
        }]);
}
exports.toV10 = toV10;


/***/ }),

/***/ 74874:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TO_CALLS_VERSION = exports.LATEST_VERSION = exports.KNOWN_VERSIONS = void 0;
exports.KNOWN_VERSIONS = [15, 14, 13, 12, 11, 10, 9];
exports.LATEST_VERSION = exports.KNOWN_VERSIONS[0];
exports.TO_CALLS_VERSION = 14; // LATEST_VERSION;


/***/ }),

/***/ 74402:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/types', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '10.10.1' };


/***/ }),

/***/ 39824:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Data = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
/** @internal */
function decodeDataU8a(registry, value) {
    const indicator = value[0];
    if (!indicator) {
        return [undefined, undefined];
    }
    else if (indicator >= 1 && indicator <= 33) {
        const length = indicator - 1;
        const data = value.subarray(1, length + 1);
        // in this case, we are passing a Raw back (since we have no length)
        return [registry.createTypeUnsafe('Raw', [data]), 1];
    }
    else if (indicator >= 34 && indicator <= 37) {
        return [value.subarray(1, 32 + 1), indicator - 32]; // 34 becomes 2
    }
    throw new Error(`Unable to decode Data, invalid indicator byte ${indicator}`);
}
/** @internal */
function decodeData(registry, value) {
    if ((0, util_1.isU8a)(value) || (0, util_1.isString)(value)) {
        return decodeDataU8a(registry, (0, util_1.u8aToU8a)(value));
    }
    else if (!value) {
        return [undefined, undefined];
    }
    // assume we have an Enum or an  object input, handle this via the normal Enum decoding
    return [value, undefined];
}
/**
 * @name Data
 * @description
 * A [[Data]] container with node, raw or hashed data
 */
class Data extends types_codec_1.Enum {
    constructor(registry, value) {
        super(registry, {
            None: 'Null',
            Raw: 'Bytes',
            // eslint-disable-next-line sort-keys
            BlakeTwo256: 'H256',
            Sha256: 'H256',
            // eslint-disable-next-line sort-keys
            Keccak256: 'H256',
            ShaThree256: 'H256' // 5
        }, ...decodeData(registry, value));
        if (this.isRaw && this.asRaw.length > 32) {
            throw new Error('Data.Raw values are limited to a maximum length of 32 bytes');
        }
    }
    get asBlakeTwo256() {
        return this.value;
    }
    get asKeccak256() {
        return this.value;
    }
    get asRaw() {
        return this.value;
    }
    get asSha256() {
        return this.value;
    }
    get asShaThree256() {
        return this.value;
    }
    get isBlakeTwo256() {
        return this.index === 2;
    }
    get isKeccak256() {
        return this.index === 4;
    }
    get isNone() {
        return this.index === 0;
    }
    get isRaw() {
        return this.index === 1;
    }
    get isSha256() {
        return this.index === 3;
    }
    get isShaThree256() {
        return this.index === 5;
    }
    /**
     * @description The encoded length
     */
    get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */
    toU8a() {
        if (this.index === 0) {
            return new Uint8Array(1);
        }
        else if (this.index === 1) {
            // don't add the length, just the data
            const data = this.value.toU8a(true);
            const length = Math.min(data.length, 32);
            const u8a = new Uint8Array(length + 1);
            u8a.set([length + 1], 0);
            u8a.set(data.subarray(0, length), 1);
            return u8a;
        }
        // otherwise we simply have a hash
        const u8a = new Uint8Array(33);
        u8a.set([this.index + 32], 0);
        u8a.set(this.value.toU8a(), 1);
        return u8a;
    }
}
exports.Data = Data;


/***/ }),

/***/ 40793:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StorageKey = void 0;
const types_codec_1 = __nccwpck_require__(2997);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(16908);
const index_js_2 = __nccwpck_require__(10512);
const HASHER_MAP = {
    // opaque
    Blake2_128: [16, false],
    Blake2_128Concat: [16, true],
    Blake2_256: [32, false],
    Identity: [0, true],
    Twox128: [16, false],
    Twox256: [32, false],
    Twox64Concat: [8, true]
};
/** @internal */
function decodeStorageKey(value) {
    if ((0, util_1.isU8a)(value) || !value || (0, util_1.isString)(value)) {
        // let Bytes handle these inputs
        return { key: value };
    }
    else if (value instanceof StorageKey) {
        return {
            key: value,
            method: value.method,
            section: value.section
        };
    }
    else if ((0, util_1.isFunction)(value)) {
        return {
            key: value(),
            method: value.method,
            section: value.section
        };
    }
    else if (Array.isArray(value)) {
        const [fn, args = []] = value;
        if (!(0, util_1.isFunction)(fn)) {
            throw new Error('Expected function input for key construction');
        }
        if (fn.meta && fn.meta.type.isMap) {
            const map = fn.meta.type.asMap;
            if (!Array.isArray(args) || args.length !== map.hashers.length) {
                throw new Error(`Expected an array of ${map.hashers.length} values as params to a Map query`);
            }
        }
        return {
            key: fn(...args),
            method: fn.method,
            section: fn.section
        };
    }
    throw new Error(`Unable to convert input ${value} to StorageKey`);
}
/** @internal */
function decodeHashers(registry, value, hashers) {
    // the storage entry is xxhashAsU8a(prefix, 128) + xxhashAsU8a(method, 128), 256 bits total
    let offset = 32;
    const count = hashers.length;
    const result = new Array(count);
    for (let i = 0; i < count; i++) {
        const [hasher, type] = hashers[i];
        const [hashLen, canDecode] = HASHER_MAP[hasher.type];
        const decoded = canDecode
            ? registry.createTypeUnsafe((0, index_js_1.getSiName)(registry.lookup, type), [value.subarray(offset + hashLen)])
            : registry.createTypeUnsafe('Raw', [value.subarray(offset, offset + hashLen)]);
        offset += hashLen + (canDecode ? decoded.encodedLength : 0);
        result[i] = decoded;
    }
    return result;
}
/** @internal */
function decodeArgsFromMeta(registry, value, meta) {
    if (!meta || !meta.type.isMap) {
        return [];
    }
    const { hashers, key } = meta.type.asMap;
    const keys = hashers.length === 1
        ? [key]
        : registry.lookup.getSiType(key).def.asTuple;
    return decodeHashers(registry, value, hashers.map((h, i) => [h, keys[i]]));
}
/** @internal */
function getMeta(value) {
    if (value instanceof StorageKey) {
        return value.meta;
    }
    else if ((0, util_1.isFunction)(value)) {
        return value.meta;
    }
    else if (Array.isArray(value)) {
        const [fn] = value;
        return fn.meta;
    }
    return undefined;
}
/** @internal */
function getType(registry, value) {
    if (value instanceof StorageKey) {
        return value.outputType;
    }
    else if ((0, util_1.isFunction)(value)) {
        return (0, index_js_2.unwrapStorageType)(registry, value.meta.type);
    }
    else if (Array.isArray(value)) {
        const [fn] = value;
        if (fn.meta) {
            return (0, index_js_2.unwrapStorageType)(registry, fn.meta.type);
        }
    }
    // If we have no type set, default to Raw
    return 'Raw';
}
/**
 * @name StorageKey
 * @description
 * A representation of a storage key (typically hashed) in the system. It can be
 * constructed by passing in a raw key or a StorageEntry with (optional) arguments.
 */
class StorageKey extends types_codec_1.Bytes {
    constructor(registry, value, override = {}) {
        const { key, method, section } = decodeStorageKey(value);
        super(registry, key);
        this.__internal__outputType = getType(registry, value);
        // decode the args (as applicable based on the key and the hashers, after all init)
        this.setMeta(getMeta(value), override.section || section, override.method || method);
    }
    /**
     * @description Return the decoded arguments (applicable to map with decodable values)
     */
    get args() {
        return this.__internal__args;
    }
    /**
     * @description The metadata or `undefined` when not available
     */
    get meta() {
        return this.__internal__meta;
    }
    /**
     * @description The key method or `undefined` when not specified
     */
    get method() {
        return this.__internal__method;
    }
    /**
     * @description The output type
     */
    get outputType() {
        return this.__internal__outputType;
    }
    /**
     * @description The key section or `undefined` when not specified
     */
    get section() {
        return this.__internal__section;
    }
    is(key) {
        return key.section === this.section && key.method === this.method;
    }
    /**
     * @description Sets the meta for this key
     */
    setMeta(meta, section, method) {
        this.__internal__meta = meta;
        this.__internal__method = method || this.__internal__method;
        this.__internal__section = section || this.__internal__section;
        if (meta) {
            this.__internal__outputType = (0, index_js_2.unwrapStorageType)(this.registry, meta.type);
        }
        try {
            this.__internal__args = decodeArgsFromMeta(this.registry, this.toU8a(true), meta);
        }
        catch {
            // ignore...
        }
        return this;
    }
    /**
     * @description Returns the Human representation for this type
     */
    toHuman() {
        return this.__internal__args.length
            ? this.__internal__args.map((a) => a.toHuman())
            : super.toHuman();
    }
    /**
     * @description Returns the raw type for this
     */
    toRawType() {
        return 'StorageKey';
    }
}
exports.StorageKey = StorageKey;


/***/ }),

/***/ 66545:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StorageKey = exports.Data = exports.usize = exports.USize = exports.u256 = exports.U256 = exports.u128 = exports.U128 = exports.u64 = exports.U64 = exports.u32 = exports.U32 = exports.u16 = exports.U16 = exports.u8 = exports.U8 = exports.Type = exports.Text = exports.OptionBool = exports.Null = exports.isize = exports.ISize = exports.i256 = exports.I256 = exports.i128 = exports.I128 = exports.i64 = exports.I64 = exports.i32 = exports.I32 = exports.i16 = exports.I16 = exports.i8 = exports.I8 = exports.f64 = exports.F64 = exports.f32 = exports.F32 = exports.Bytes = exports.bool = exports.Bool = exports.BitVec = void 0;
/**
 * @summary Type definitions that are used in the system
 */
var types_codec_1 = __nccwpck_require__(2997);
Object.defineProperty(exports, "BitVec", ({ enumerable: true, get: function () { return types_codec_1.BitVec; } }));
Object.defineProperty(exports, "Bool", ({ enumerable: true, get: function () { return types_codec_1.Bool; } }));
Object.defineProperty(exports, "bool", ({ enumerable: true, get: function () { return types_codec_1.bool; } }));
Object.defineProperty(exports, "Bytes", ({ enumerable: true, get: function () { return types_codec_1.Bytes; } }));
Object.defineProperty(exports, "F32", ({ enumerable: true, get: function () { return types_codec_1.F32; } }));
Object.defineProperty(exports, "f32", ({ enumerable: true, get: function () { return types_codec_1.f32; } }));
Object.defineProperty(exports, "F64", ({ enumerable: true, get: function () { return types_codec_1.F64; } }));
Object.defineProperty(exports, "f64", ({ enumerable: true, get: function () { return types_codec_1.f64; } }));
Object.defineProperty(exports, "I8", ({ enumerable: true, get: function () { return types_codec_1.I8; } }));
Object.defineProperty(exports, "i8", ({ enumerable: true, get: function () { return types_codec_1.i8; } }));
Object.defineProperty(exports, "I16", ({ enumerable: true, get: function () { return types_codec_1.I16; } }));
Object.defineProperty(exports, "i16", ({ enumerable: true, get: function () { return types_codec_1.i16; } }));
Object.defineProperty(exports, "I32", ({ enumerable: true, get: function () { return types_codec_1.I32; } }));
Object.defineProperty(exports, "i32", ({ enumerable: true, get: function () { return types_codec_1.i32; } }));
Object.defineProperty(exports, "I64", ({ enumerable: true, get: function () { return types_codec_1.I64; } }));
Object.defineProperty(exports, "i64", ({ enumerable: true, get: function () { return types_codec_1.i64; } }));
Object.defineProperty(exports, "I128", ({ enumerable: true, get: function () { return types_codec_1.I128; } }));
Object.defineProperty(exports, "i128", ({ enumerable: true, get: function () { return types_codec_1.i128; } }));
Object.defineProperty(exports, "I256", ({ enumerable: true, get: function () { return types_codec_1.I256; } }));
Object.defineProperty(exports, "i256", ({ enumerable: true, get: function () { return types_codec_1.i256; } }));
Object.defineProperty(exports, "ISize", ({ enumerable: true, get: function () { return types_codec_1.ISize; } }));
Object.defineProperty(exports, "isize", ({ enumerable: true, get: function () { return types_codec_1.isize; } }));
Object.defineProperty(exports, "Null", ({ enumerable: true, get: function () { return types_codec_1.Null; } }));
Object.defineProperty(exports, "OptionBool", ({ enumerable: true, get: function () { return types_codec_1.OptionBool; } }));
Object.defineProperty(exports, "Text", ({ enumerable: true, get: function () { return types_codec_1.Text; } }));
Object.defineProperty(exports, "Type", ({ enumerable: true, get: function () { return types_codec_1.Type; } }));
Object.defineProperty(exports, "U8", ({ enumerable: true, get: function () { return types_codec_1.U8; } }));
Object.defineProperty(exports, "u8", ({ enumerable: true, get: function () { return types_codec_1.u8; } }));
Object.defineProperty(exports, "U16", ({ enumerable: true, get: function () { return types_codec_1.U16; } }));
Object.defineProperty(exports, "u16", ({ enumerable: true, get: function () { return types_codec_1.u16; } }));
Object.defineProperty(exports, "U32", ({ enumerable: true, get: function () { return types_codec_1.U32; } }));
Object.defineProperty(exports, "u32", ({ enumerable: true, get: function () { return types_codec_1.u32; } }));
Object.defineProperty(exports, "U64", ({ enumerable: true, get: function () { return types_codec_1.U64; } }));
Object.defineProperty(exports, "u64", ({ enumerable: true, get: function () { return types_codec_1.u64; } }));
Object.defineProperty(exports, "U128", ({ enumerable: true, get: function () { return types_codec_1.U128; } }));
Object.defineProperty(exports, "u128", ({ enumerable: true, get: function () { return types_codec_1.u128; } }));
Object.defineProperty(exports, "U256", ({ enumerable: true, get: function () { return types_codec_1.U256; } }));
Object.defineProperty(exports, "u256", ({ enumerable: true, get: function () { return types_codec_1.u256; } }));
Object.defineProperty(exports, "USize", ({ enumerable: true, get: function () { return types_codec_1.USize; } }));
Object.defineProperty(exports, "usize", ({ enumerable: true, get: function () { return types_codec_1.usize; } }));
var Data_js_1 = __nccwpck_require__(39824);
Object.defineProperty(exports, "Data", ({ enumerable: true, get: function () { return Data_js_1.Data; } }));
var StorageKey_js_1 = __nccwpck_require__(40793);
Object.defineProperty(exports, "StorageKey", ({ enumerable: true, get: function () { return StorageKey_js_1.StorageKey; } }));


/***/ }),

/***/ 10512:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(19684);
tslib_1.__exportStar(__nccwpck_require__(55461), exports);


/***/ }),

/***/ 55461:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.unwrapStorageType = exports.unwrapStorageSi = void 0;
const index_js_1 = __nccwpck_require__(16908);
/** @internal */
function unwrapStorageSi(type) {
    return type.isPlain
        ? type.asPlain
        : type.asMap.value;
}
exports.unwrapStorageSi = unwrapStorageSi;
/** @internal */
function unwrapStorageType(registry, type, isOptional) {
    const outputType = (0, index_js_1.getSiName)(registry.lookup, unwrapStorageSi(type));
    return isOptional
        ? `Option<${outputType}>`
        : outputType;
}
exports.unwrapStorageType = unwrapStorageType;


/***/ }),

/***/ 47993:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addressToEvm = void 0;
const decode_js_1 = __nccwpck_require__(87162);
/**
 * @name addressToEvm
 * @summary Converts an SS58 address to its corresponding EVM address.
 */
function addressToEvm(address, ignoreChecksum) {
    return (0, decode_js_1.decodeAddress)(address, ignoreChecksum).subarray(0, 20);
}
exports.addressToEvm = addressToEvm;


/***/ }),

/***/ 48571:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkAddress = void 0;
const index_js_1 = __nccwpck_require__(64474);
const checksum_js_1 = __nccwpck_require__(97198);
const defaults_js_1 = __nccwpck_require__(85104);
/**
 * @name checkAddress
 * @summary Validates an ss58 address.
 * @description
 * From the provided input, validate that the address is a valid input.
 */
function checkAddress(address, prefix) {
    let decoded;
    try {
        decoded = (0, index_js_1.base58Decode)(address);
    }
    catch (error) {
        return [false, error.message];
    }
    const [isValid, , , ss58Decoded] = (0, checksum_js_1.checkAddressChecksum)(decoded);
    if (ss58Decoded !== prefix) {
        return [false, `Prefix mismatch, expected ${prefix}, found ${ss58Decoded}`];
    }
    else if (!defaults_js_1.defaults.allowedEncodedLengths.includes(decoded.length)) {
        return [false, 'Invalid decoded address length'];
    }
    return [isValid, isValid ? null : 'Invalid decoded address checksum'];
}
exports.checkAddress = checkAddress;


/***/ }),

/***/ 97198:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkAddressChecksum = void 0;
const sshash_js_1 = __nccwpck_require__(76934);
function checkAddressChecksum(decoded) {
    const ss58Length = (decoded[0] & 64) ? 2 : 1;
    const ss58Decoded = ss58Length === 1
        ? decoded[0]
        : ((decoded[0] & 63) << 2) | (decoded[1] >> 6) | ((decoded[1] & 63) << 8);
    // 32/33 bytes public + 2 bytes checksum + prefix
    const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);
    const length = decoded.length - (isPublicKey ? 2 : 1);
    // calculate the hash and do the checksum byte checks
    const hash = (0, sshash_js_1.sshash)(decoded.subarray(0, length));
    const isValid = (decoded[0] & 128) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey
        ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1]
        : decoded[decoded.length - 1] === hash[0]);
    return [isValid, length, ss58Length, ss58Decoded];
}
exports.checkAddressChecksum = checkAddressChecksum;


/***/ }),

/***/ 87162:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.decodeAddress = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(64474);
const checksum_js_1 = __nccwpck_require__(97198);
const defaults_js_1 = __nccwpck_require__(85104);
function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {
    if (!encoded) {
        throw new Error('Invalid empty address passed');
    }
    if ((0, util_1.isU8a)(encoded) || (0, util_1.isHex)(encoded)) {
        return (0, util_1.u8aToU8a)(encoded);
    }
    try {
        const decoded = (0, index_js_1.base58Decode)(encoded);
        if (!defaults_js_1.defaults.allowedEncodedLengths.includes(decoded.length)) {
            throw new Error('Invalid decoded address length');
        }
        const [isValid, endPos, ss58Length, ss58Decoded] = (0, checksum_js_1.checkAddressChecksum)(decoded);
        if (!isValid && !ignoreChecksum) {
            throw new Error('Invalid decoded address checksum');
        }
        else if (ss58Format !== -1 && ss58Format !== ss58Decoded) {
            throw new Error(`Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);
        }
        return decoded.slice(ss58Length, endPos);
    }
    catch (error) {
        throw new Error(`Decoding ${encoded}: ${error.message}`);
    }
}
exports.decodeAddress = decodeAddress;


/***/ }),

/***/ 85104:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.defaults = void 0;
const networks_js_1 = __nccwpck_require__(85218);
exports.defaults = {
    allowedDecodedLengths: [1, 2, 4, 8, 32, 33],
    // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte
    allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],
    allowedPrefix: networks_js_1.availableNetworks.map(({ prefix }) => prefix),
    prefix: 42
};


/***/ }),

/***/ 617:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deriveAddress = void 0;
const index_js_1 = __nccwpck_require__(1130);
const index_js_2 = __nccwpck_require__(20690);
const decode_js_1 = __nccwpck_require__(87162);
const encode_js_1 = __nccwpck_require__(61528);
function filterHard({ isHard }) {
    return isHard;
}
/**
 * @name deriveAddress
 * @summary Creates a sr25519 derived address from the supplied and path.
 * @description
 * Creates a sr25519 derived address based on the input address/publicKey and the uri supplied.
 */
function deriveAddress(who, suri, ss58Format) {
    const { path } = (0, index_js_1.keyExtractPath)(suri);
    if (!path.length || path.every(filterHard)) {
        throw new Error('Expected suri to contain a combination of non-hard paths');
    }
    let publicKey = (0, decode_js_1.decodeAddress)(who);
    for (const { chainCode } of path) {
        publicKey = (0, index_js_2.sr25519DerivePublic)(publicKey, chainCode);
    }
    return (0, encode_js_1.encodeAddress)(publicKey, ss58Format);
}
exports.deriveAddress = deriveAddress;


/***/ }),

/***/ 61528:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.encodeAddress = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(64474);
const decode_js_1 = __nccwpck_require__(87162);
const defaults_js_1 = __nccwpck_require__(85104);
const sshash_js_1 = __nccwpck_require__(76934);
function encodeAddress(key, ss58Format = defaults_js_1.defaults.prefix) {
    // decode it, this means we can re-encode an address
    const u8a = (0, decode_js_1.decodeAddress)(key);
    if ((ss58Format < 0) || (ss58Format > 16383) || [46, 47].includes(ss58Format)) {
        throw new Error('Out of range ss58Format specified');
    }
    else if (!defaults_js_1.defaults.allowedDecodedLengths.includes(u8a.length)) {
        throw new Error(`Expected a valid key to convert, with length ${defaults_js_1.defaults.allowedDecodedLengths.join(', ')}`);
    }
    const input = (0, util_1.u8aConcat)(ss58Format < 64
        ? [ss58Format]
        : [
            ((ss58Format & 252) >> 2) | 64,
            (ss58Format >> 8) | ((ss58Format & 3) << 6)
        ], u8a);
    return (0, index_js_1.base58Encode)((0, util_1.u8aConcat)(input, (0, sshash_js_1.sshash)(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));
}
exports.encodeAddress = encodeAddress;


/***/ }),

/***/ 32565:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.encodeDerivedAddress = void 0;
const decode_js_1 = __nccwpck_require__(87162);
const encode_js_1 = __nccwpck_require__(61528);
const keyDerived_js_1 = __nccwpck_require__(69756);
/**
 * @name encodeDerivedAddress
 * @summary Creates a derived address as used in Substrate utility.
 * @description
 * Creates a Substrate derived address based on the input address/publicKey and the index supplied.
 */
function encodeDerivedAddress(who, index, ss58Format) {
    return (0, encode_js_1.encodeAddress)((0, keyDerived_js_1.createKeyDerived)((0, decode_js_1.decodeAddress)(who), index), ss58Format);
}
exports.encodeDerivedAddress = encodeDerivedAddress;


/***/ }),

/***/ 89019:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.encodeMultiAddress = void 0;
const encode_js_1 = __nccwpck_require__(61528);
const keyMulti_js_1 = __nccwpck_require__(18799);
/**
 * @name encodeMultiAddress
 * @summary Creates a multisig address.
 * @description
 * Creates a Substrate multisig address based on the input address and the required threshold.
 */
function encodeMultiAddress(who, threshold, ss58Format) {
    return (0, encode_js_1.encodeAddress)((0, keyMulti_js_1.createKeyMulti)(who, threshold), ss58Format);
}
exports.encodeMultiAddress = encodeMultiAddress;


/***/ }),

/***/ 87190:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addressEq = void 0;
const util_1 = __nccwpck_require__(29795);
const decode_js_1 = __nccwpck_require__(87162);
/**
 * @name addressEq
 * @summary Compares two addresses, either in ss58, Uint8Array or hex format.
 * @description
 * For the input values, return true is the underlying public keys do match.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aEq } from '@polkadot/util';
 *
 * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true
 * ```
 */
function addressEq(a, b) {
    return (0, util_1.u8aEq)((0, decode_js_1.decodeAddress)(a), (0, decode_js_1.decodeAddress)(b));
}
exports.addressEq = addressEq;


/***/ }),

/***/ 35327:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.evmToAddress = void 0;
const util_1 = __nccwpck_require__(29795);
const hasher_js_1 = __nccwpck_require__(71140);
const encode_js_1 = __nccwpck_require__(61528);
/**
 * @name evmToAddress
 * @summary Converts an EVM address to its corresponding SS58 address.
 */
function evmToAddress(evmAddress, ss58Format, hashType = 'blake2') {
    const message = (0, util_1.u8aConcat)('evm:', evmAddress);
    if (message.length !== 24) {
        throw new Error(`Converting ${evmAddress}: Invalid evm address length`);
    }
    return (0, encode_js_1.encodeAddress)((0, hasher_js_1.hasher)(hashType, message), ss58Format);
}
exports.evmToAddress = evmToAddress;


/***/ }),

/***/ 65931:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setSS58Format = exports.validateAddress = exports.sortAddresses = exports.createKeyMulti = exports.createKeyDerived = exports.isAddress = exports.evmToAddress = exports.addressEq = exports.encodeMultiAddress = exports.encodeDerivedAddress = exports.encodeAddress = exports.deriveAddress = exports.decodeAddress = exports.checkAddressChecksum = exports.checkAddress = exports.addressToEvm = void 0;
var addressToEvm_js_1 = __nccwpck_require__(47993);
Object.defineProperty(exports, "addressToEvm", ({ enumerable: true, get: function () { return addressToEvm_js_1.addressToEvm; } }));
var check_js_1 = __nccwpck_require__(48571);
Object.defineProperty(exports, "checkAddress", ({ enumerable: true, get: function () { return check_js_1.checkAddress; } }));
var checksum_js_1 = __nccwpck_require__(97198);
Object.defineProperty(exports, "checkAddressChecksum", ({ enumerable: true, get: function () { return checksum_js_1.checkAddressChecksum; } }));
var decode_js_1 = __nccwpck_require__(87162);
Object.defineProperty(exports, "decodeAddress", ({ enumerable: true, get: function () { return decode_js_1.decodeAddress; } }));
var derive_js_1 = __nccwpck_require__(617);
Object.defineProperty(exports, "deriveAddress", ({ enumerable: true, get: function () { return derive_js_1.deriveAddress; } }));
var encode_js_1 = __nccwpck_require__(61528);
Object.defineProperty(exports, "encodeAddress", ({ enumerable: true, get: function () { return encode_js_1.encodeAddress; } }));
var encodeDerived_js_1 = __nccwpck_require__(32565);
Object.defineProperty(exports, "encodeDerivedAddress", ({ enumerable: true, get: function () { return encodeDerived_js_1.encodeDerivedAddress; } }));
var encodeMulti_js_1 = __nccwpck_require__(89019);
Object.defineProperty(exports, "encodeMultiAddress", ({ enumerable: true, get: function () { return encodeMulti_js_1.encodeMultiAddress; } }));
var eq_js_1 = __nccwpck_require__(87190);
Object.defineProperty(exports, "addressEq", ({ enumerable: true, get: function () { return eq_js_1.addressEq; } }));
var evmToAddress_js_1 = __nccwpck_require__(35327);
Object.defineProperty(exports, "evmToAddress", ({ enumerable: true, get: function () { return evmToAddress_js_1.evmToAddress; } }));
var is_js_1 = __nccwpck_require__(12839);
Object.defineProperty(exports, "isAddress", ({ enumerable: true, get: function () { return is_js_1.isAddress; } }));
var keyDerived_js_1 = __nccwpck_require__(69756);
Object.defineProperty(exports, "createKeyDerived", ({ enumerable: true, get: function () { return keyDerived_js_1.createKeyDerived; } }));
var keyMulti_js_1 = __nccwpck_require__(18799);
Object.defineProperty(exports, "createKeyMulti", ({ enumerable: true, get: function () { return keyMulti_js_1.createKeyMulti; } }));
var sort_js_1 = __nccwpck_require__(17203);
Object.defineProperty(exports, "sortAddresses", ({ enumerable: true, get: function () { return sort_js_1.sortAddresses; } }));
var validate_js_1 = __nccwpck_require__(86519);
Object.defineProperty(exports, "validateAddress", ({ enumerable: true, get: function () { return validate_js_1.validateAddress; } }));
var setSS58Format_js_1 = __nccwpck_require__(60392);
Object.defineProperty(exports, "setSS58Format", ({ enumerable: true, get: function () { return setSS58Format_js_1.setSS58Format; } }));


/***/ }),

/***/ 12839:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isAddress = void 0;
const validate_js_1 = __nccwpck_require__(86519);
function isAddress(address, ignoreChecksum, ss58Format) {
    try {
        return (0, validate_js_1.validateAddress)(address, ignoreChecksum, ss58Format);
    }
    catch {
        return false;
    }
}
exports.isAddress = isAddress;


/***/ }),

/***/ 69756:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createKeyDerived = void 0;
const util_1 = __nccwpck_require__(29795);
const asU8a_js_1 = __nccwpck_require__(38413);
const bn_js_1 = __nccwpck_require__(39980);
const decode_js_1 = __nccwpck_require__(87162);
const PREFIX = (0, util_1.stringToU8a)('modlpy/utilisuba');
function createKeyDerived(who, index) {
    return (0, asU8a_js_1.blake2AsU8a)((0, util_1.u8aConcat)(PREFIX, (0, decode_js_1.decodeAddress)(who), (0, util_1.bnToU8a)(index, bn_js_1.BN_LE_16_OPTS)));
}
exports.createKeyDerived = createKeyDerived;


/***/ }),

/***/ 18799:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createKeyMulti = void 0;
const util_1 = __nccwpck_require__(29795);
const asU8a_js_1 = __nccwpck_require__(38413);
const bn_js_1 = __nccwpck_require__(39980);
const util_js_1 = __nccwpck_require__(28660);
const PREFIX = (0, util_1.stringToU8a)('modlpy/utilisuba');
function createKeyMulti(who, threshold) {
    return (0, asU8a_js_1.blake2AsU8a)((0, util_1.u8aConcat)(PREFIX, (0, util_1.compactToU8a)(who.length), ...(0, util_1.u8aSorted)(who.map(util_js_1.addressToU8a)), (0, util_1.bnToU8a)(threshold, bn_js_1.BN_LE_16_OPTS)));
}
exports.createKeyMulti = createKeyMulti;


/***/ }),

/***/ 60392:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setSS58Format = void 0;
const util_1 = __nccwpck_require__(29795);
const defaults_js_1 = __nccwpck_require__(85104);
const l = (0, util_1.logger)('setSS58Format');
/**
 * @description Sets the global SS58 format to use for address encoding
 * @deprecated Use keyring.setSS58Format
 */
function setSS58Format(prefix) {
    l.warn('Global setting of the ss58Format is deprecated and not recommended. Set format on the keyring (if used) or as part of the address encode function');
    defaults_js_1.defaults.prefix = prefix;
}
exports.setSS58Format = setSS58Format;


/***/ }),

/***/ 17203:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sortAddresses = void 0;
const util_1 = __nccwpck_require__(29795);
const encode_js_1 = __nccwpck_require__(61528);
const util_js_1 = __nccwpck_require__(28660);
function sortAddresses(addresses, ss58Format) {
    const u8aToAddress = (u8a) => (0, encode_js_1.encodeAddress)(u8a, ss58Format);
    return (0, util_1.u8aSorted)(addresses.map(util_js_1.addressToU8a)).map(u8aToAddress);
}
exports.sortAddresses = sortAddresses;


/***/ }),

/***/ 76934:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sshash = void 0;
const util_1 = __nccwpck_require__(29795);
const asU8a_js_1 = __nccwpck_require__(38413);
const SS58_PREFIX = (0, util_1.stringToU8a)('SS58PRE');
function sshash(key) {
    return (0, asU8a_js_1.blake2AsU8a)((0, util_1.u8aConcat)(SS58_PREFIX, key), 512);
}
exports.sshash = sshash;


/***/ }),

/***/ 28660:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addressToU8a = void 0;
const decode_js_1 = __nccwpck_require__(87162);
function addressToU8a(who) {
    return (0, decode_js_1.decodeAddress)(who);
}
exports.addressToU8a = addressToU8a;


/***/ }),

/***/ 86519:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.validateAddress = void 0;
const decode_js_1 = __nccwpck_require__(87162);
function validateAddress(encoded, ignoreChecksum, ss58Format) {
    return !!(0, decode_js_1.decodeAddress)(encoded, ignoreChecksum, ss58Format);
}
exports.validateAddress = validateAddress;


/***/ }),

/***/ 7323:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.base32Encode = exports.base32Decode = exports.isBase32 = exports.base32Validate = void 0;
const base_1 = __nccwpck_require__(89891);
const helpers_js_1 = __nccwpck_require__(11845);
const chars = 'abcdefghijklmnopqrstuvwxyz234567';
const config = {
    chars,
    coder: base_1.utils.chain(
    // We define our own chain, the default base32 has padding
    base_1.utils.radix2(5), base_1.utils.alphabet(chars), {
        decode: (input) => input.split(''),
        encode: (input) => input.join('')
    }),
    ipfs: 'b',
    type: 'base32'
};
/**
 * @name base32Validate
 * @summary Validates a base32 value.
 * @description
 * Validates that the supplied value is valid base32, throwing exceptions if not
 */
exports.base32Validate = (0, helpers_js_1.createValidate)(config);
/**
* @name isBase32
* @description Checks if the input is in base32, returning true/false
*/
exports.isBase32 = (0, helpers_js_1.createIs)(exports.base32Validate);
/**
 * @name base32Decode
 * @summary Delookup a base32 value.
 * @description
 * From the provided input, decode the base32 and return the result as an `Uint8Array`.
 */
exports.base32Decode = (0, helpers_js_1.createDecode)(config, exports.base32Validate);
/**
* @name base32Encode
* @summary Creates a base32 value.
* @description
* From the provided input, create the base32 and return the result as a string.
*/
exports.base32Encode = (0, helpers_js_1.createEncode)(config);


/***/ }),

/***/ 11845:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createValidate = exports.createIs = exports.createEncode = exports.createDecode = void 0;
const util_1 = __nccwpck_require__(29795);
/** @internal */
function createDecode({ coder, ipfs }, validate) {
    return (value, ipfsCompat) => {
        validate(value, ipfsCompat);
        return coder.decode(ipfs && ipfsCompat
            ? value.substring(1)
            : value);
    };
}
exports.createDecode = createDecode;
/** @internal */
function createEncode({ coder, ipfs }) {
    return (value, ipfsCompat) => {
        const out = coder.encode((0, util_1.u8aToU8a)(value));
        return ipfs && ipfsCompat
            ? `${ipfs}${out}`
            : out;
    };
}
exports.createEncode = createEncode;
/** @internal */
function createIs(validate) {
    return (value, ipfsCompat) => {
        try {
            return validate(value, ipfsCompat);
        }
        catch {
            return false;
        }
    };
}
exports.createIs = createIs;
/** @internal */
function createValidate({ chars, ipfs, type, withPadding }) {
    return (value, ipfsCompat) => {
        if (typeof value !== 'string') {
            throw new Error(`Expected ${type} string input`);
        }
        else if (ipfs && ipfsCompat && !value.startsWith(ipfs)) {
            throw new Error(`Expected ipfs-compatible ${type} to start with '${ipfs}'`);
        }
        for (let i = (ipfsCompat ? 1 : 0), count = value.length; i < count; i++) {
            if (chars.includes(value[i])) {
                // all ok, character found
            }
            else if (withPadding && value[i] === '=') {
                if (i === count - 1) {
                    // last character, everything ok
                }
                else if (value[i + 1] === '=') {
                    // next one is also padding, sequence ok
                }
                else {
                    throw new Error(`Invalid ${type} padding sequence "${value[i]}${value[i + 1]}" at index ${i}`);
                }
            }
            else {
                throw new Error(`Invalid ${type} character "${value[i]}" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);
            }
        }
        return true;
    };
}
exports.createValidate = createValidate;


/***/ }),

/***/ 19746:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBase32 = exports.base32Validate = exports.base32Encode = exports.base32Decode = void 0;
/**
 * @summary Encode and decode base32 values
 */
var bs32_js_1 = __nccwpck_require__(7323);
Object.defineProperty(exports, "base32Decode", ({ enumerable: true, get: function () { return bs32_js_1.base32Decode; } }));
Object.defineProperty(exports, "base32Encode", ({ enumerable: true, get: function () { return bs32_js_1.base32Encode; } }));
Object.defineProperty(exports, "base32Validate", ({ enumerable: true, get: function () { return bs32_js_1.base32Validate; } }));
Object.defineProperty(exports, "isBase32", ({ enumerable: true, get: function () { return bs32_js_1.isBase32; } }));


/***/ }),

/***/ 31678:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBase58 = exports.base58Encode = exports.base58Decode = exports.base58Validate = void 0;
const base_1 = __nccwpck_require__(89891);
const helpers_js_1 = __nccwpck_require__(11845);
const config = {
    chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',
    coder: base_1.base58,
    ipfs: 'z',
    type: 'base58'
};
/**
 * @name base58Validate
 * @summary Validates a base58 value.
 * @description
 * Validates that the supplied value is valid base58, throwing exceptions if not
 */
exports.base58Validate = (0, helpers_js_1.createValidate)(config);
/**
 * @name base58Decode
 * @summary Decodes a base58 value.
 * @description
 * From the provided input, decode the base58 and return the result as an `Uint8Array`.
 */
exports.base58Decode = (0, helpers_js_1.createDecode)(config, exports.base58Validate);
/**
* @name base58Encode
* @summary Creates a base58 value.
* @description
* From the provided input, create the base58 and return the result as a string.
*/
exports.base58Encode = (0, helpers_js_1.createEncode)(config);
/**
* @name isBase58
* @description Checks if the input is in base58, returning true/false
*/
exports.isBase58 = (0, helpers_js_1.createIs)(exports.base58Validate);


/***/ }),

/***/ 64474:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBase58 = exports.base58Validate = exports.base58Encode = exports.base58Decode = void 0;
/**
 * @summary Encode and decode base58 values
 */
var bs58_js_1 = __nccwpck_require__(31678);
Object.defineProperty(exports, "base58Decode", ({ enumerable: true, get: function () { return bs58_js_1.base58Decode; } }));
Object.defineProperty(exports, "base58Encode", ({ enumerable: true, get: function () { return bs58_js_1.base58Encode; } }));
Object.defineProperty(exports, "base58Validate", ({ enumerable: true, get: function () { return bs58_js_1.base58Validate; } }));
Object.defineProperty(exports, "isBase58", ({ enumerable: true, get: function () { return bs58_js_1.isBase58; } }));


/***/ }),

/***/ 11409:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.base64Encode = exports.base64Decode = exports.isBase64 = exports.base64Validate = void 0;
const base_1 = __nccwpck_require__(89891);
const helpers_js_1 = __nccwpck_require__(11845);
const config = {
    chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
    coder: base_1.base64,
    type: 'base64',
    withPadding: true
};
/**
 * @name base64Validate
 * @summary Validates a base64 value.
 * @description
 * Validates that the supplied value is valid base64
 */
exports.base64Validate = (0, helpers_js_1.createValidate)(config);
/**
 * @name isBase64
 * @description Checks if the input is in base64, returning true/false
 */
exports.isBase64 = (0, helpers_js_1.createIs)(exports.base64Validate);
/**
 * @name base64Decode
 * @summary Decodes a base64 value.
 * @description
 * From the provided input, decode the base64 and return the result as an `Uint8Array`.
 */
exports.base64Decode = (0, helpers_js_1.createDecode)(config, exports.base64Validate);
/**
 * @name base64Encode
 * @summary Creates a base64 value.
 * @description
 * From the provided input, create the base64 and return the result as a string.
 */
exports.base64Encode = (0, helpers_js_1.createEncode)(config);


/***/ }),

/***/ 45927:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.base64Trim = exports.base64Pad = exports.isBase64 = exports.base64Validate = exports.base64Encode = exports.base64Decode = void 0;
/**
 * @summary Encode and decode base64 values
 */
var bs64_js_1 = __nccwpck_require__(11409);
Object.defineProperty(exports, "base64Decode", ({ enumerable: true, get: function () { return bs64_js_1.base64Decode; } }));
Object.defineProperty(exports, "base64Encode", ({ enumerable: true, get: function () { return bs64_js_1.base64Encode; } }));
Object.defineProperty(exports, "base64Validate", ({ enumerable: true, get: function () { return bs64_js_1.base64Validate; } }));
Object.defineProperty(exports, "isBase64", ({ enumerable: true, get: function () { return bs64_js_1.isBase64; } }));
var pad_js_1 = __nccwpck_require__(69026);
Object.defineProperty(exports, "base64Pad", ({ enumerable: true, get: function () { return pad_js_1.base64Pad; } }));
var trim_js_1 = __nccwpck_require__(74293);
Object.defineProperty(exports, "base64Trim", ({ enumerable: true, get: function () { return trim_js_1.base64Trim; } }));


/***/ }),

/***/ 69026:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.base64Pad = void 0;
/**
 * @name base64Pad
 * @description Adds padding characters for correct length
 */
function base64Pad(value) {
    return value.padEnd(value.length + (value.length % 4), '=');
}
exports.base64Pad = base64Pad;


/***/ }),

/***/ 74293:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.base64Trim = void 0;
/**
 * @name base64Trim
 * @description Trims padding characters
 */
function base64Trim(value) {
    while (value.length && value.endsWith('=')) {
        value = value.slice(0, -1);
    }
    return value;
}
exports.base64Trim = base64Trim;


/***/ }),

/***/ 38413:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.blake2AsHex = exports.blake2AsU8a = void 0;
const blake2b_1 = __nccwpck_require__(47586);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const helpers_js_1 = __nccwpck_require__(88663);
/**
 * @name blake2AsU8a
 * @summary Creates a blake2b u8a from the input.
 * @description
 * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { blake2AsU8a } from '@polkadot/util-crypto';
 *
 * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]
 * ```
 */
function blake2AsU8a(data, bitLength = 256, key, onlyJs) {
    const byteLength = Math.ceil(bitLength / 8);
    const u8a = (0, util_1.u8aToU8a)(data);
    return !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
        ? (0, wasm_crypto_1.blake2b)(u8a, (0, util_1.u8aToU8a)(key), byteLength)
        : key
            ? (0, blake2b_1.blake2b)(u8a, { dkLen: byteLength, key })
            : (0, blake2b_1.blake2b)(u8a, { dkLen: byteLength });
}
exports.blake2AsU8a = blake2AsU8a;
/**
 * @name blake2AsHex
 * @description Creates a blake2b hex from the input.
 */
exports.blake2AsHex = (0, helpers_js_1.createAsHex)(blake2AsU8a);


/***/ }),

/***/ 21609:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.blake2AsU8a = exports.blake2AsHex = void 0;
/**
 * @summary Create blake2b values with specified bitlengths
 */
var asU8a_js_1 = __nccwpck_require__(38413);
Object.defineProperty(exports, "blake2AsHex", ({ enumerable: true, get: function () { return asU8a_js_1.blake2AsHex; } }));
Object.defineProperty(exports, "blake2AsU8a", ({ enumerable: true, get: function () { return asU8a_js_1.blake2AsU8a; } }));


/***/ }),

/***/ 39980:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BN_LE_512_OPTS = exports.BN_LE_256_OPTS = exports.BN_BE_256_OPTS = exports.BN_LE_32_OPTS = exports.BN_BE_32_OPTS = exports.BN_LE_16_OPTS = exports.BN_LE_OPTS = exports.BN_BE_OPTS = void 0;
exports.BN_BE_OPTS = { isLe: false };
exports.BN_LE_OPTS = { isLe: true };
exports.BN_LE_16_OPTS = { bitLength: 16, isLe: true };
exports.BN_BE_32_OPTS = { bitLength: 32, isLe: false };
exports.BN_LE_32_OPTS = { bitLength: 32, isLe: true };
exports.BN_BE_256_OPTS = { bitLength: 256, isLe: false };
exports.BN_LE_256_OPTS = { bitLength: 256, isLe: true };
exports.BN_LE_512_OPTS = { bitLength: 512, isLe: true };


/***/ }),

/***/ 49122:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(91355);
__nccwpck_require__(79935);
var packageInfo_js_1 = __nccwpck_require__(8807);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
tslib_1.__exportStar(__nccwpck_require__(65931), exports);
tslib_1.__exportStar(__nccwpck_require__(19746), exports);
tslib_1.__exportStar(__nccwpck_require__(64474), exports);
tslib_1.__exportStar(__nccwpck_require__(45927), exports);
tslib_1.__exportStar(__nccwpck_require__(21609), exports);
tslib_1.__exportStar(__nccwpck_require__(75020), exports);
tslib_1.__exportStar(__nccwpck_require__(97981), exports);
tslib_1.__exportStar(__nccwpck_require__(81884), exports);
tslib_1.__exportStar(__nccwpck_require__(17045), exports);
tslib_1.__exportStar(__nccwpck_require__(32127), exports);
tslib_1.__exportStar(__nccwpck_require__(8373), exports);
tslib_1.__exportStar(__nccwpck_require__(15508), exports);
tslib_1.__exportStar(__nccwpck_require__(1130), exports);
tslib_1.__exportStar(__nccwpck_require__(25308), exports);
tslib_1.__exportStar(__nccwpck_require__(114), exports);
tslib_1.__exportStar(__nccwpck_require__(85218), exports);
tslib_1.__exportStar(__nccwpck_require__(47689), exports);
tslib_1.__exportStar(__nccwpck_require__(80500), exports);
tslib_1.__exportStar(__nccwpck_require__(21960), exports);
tslib_1.__exportStar(__nccwpck_require__(17304), exports);
tslib_1.__exportStar(__nccwpck_require__(32393), exports);
tslib_1.__exportStar(__nccwpck_require__(91293), exports);
tslib_1.__exportStar(__nccwpck_require__(20690), exports);
tslib_1.__exportStar(__nccwpck_require__(18269), exports);


/***/ }),

/***/ 79935:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
__nccwpck_require__(80014);
const crypto_js_1 = __nccwpck_require__(75020);
(0, crypto_js_1.cryptoWaitReady)().catch(() => {
    // shouldn't happen, logged and caught inside cryptoWaitReady
});


/***/ }),

/***/ 75020:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cryptoWaitReady = exports.cryptoIsReady = void 0;
const wasm_crypto_1 = __nccwpck_require__(72846);
exports.cryptoIsReady = wasm_crypto_1.isReady;
function cryptoWaitReady() {
    return (0, wasm_crypto_1.waitReady)()
        .then(() => {
        if (!(0, wasm_crypto_1.isReady)()) {
            throw new Error('Unable to initialize @polkadot/util-crypto');
        }
        return true;
    })
        .catch(() => false);
}
exports.cryptoWaitReady = cryptoWaitReady;


/***/ }),

/***/ 54097:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(55244);
const packageInfo_2 = __nccwpck_require__(82167);
const x_randomvalues_1 = __nccwpck_require__(89716);
exports["default"] = [packageInfo_1.packageInfo, packageInfo_2.packageInfo, x_randomvalues_1.packageInfo];


/***/ }),

/***/ 90745:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(91355);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(54097));
const packageInfo_js_1 = __nccwpck_require__(8807);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 6832:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ed25519DeriveHard = void 0;
const util_1 = __nccwpck_require__(29795);
const asU8a_js_1 = __nccwpck_require__(38413);
const HDKD = (0, util_1.compactAddLength)((0, util_1.stringToU8a)('Ed25519HDKD'));
function ed25519DeriveHard(seed, chainCode) {
    if (!(0, util_1.isU8a)(chainCode) || chainCode.length !== 32) {
        throw new Error('Invalid chainCode passed to derive');
    }
    return (0, asU8a_js_1.blake2AsU8a)((0, util_1.u8aConcat)(HDKD, seed, chainCode));
}
exports.ed25519DeriveHard = ed25519DeriveHard;


/***/ }),

/***/ 97981:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ed25519Verify = exports.ed25519Sign = exports.ed25519PairFromString = exports.ed25519PairFromSeed = exports.ed25519PairFromSecret = exports.ed25519PairFromRandom = exports.ed25519DeriveHard = void 0;
/**
 * @summary Implements ed25519 operations
 */
var deriveHard_js_1 = __nccwpck_require__(6832);
Object.defineProperty(exports, "ed25519DeriveHard", ({ enumerable: true, get: function () { return deriveHard_js_1.ed25519DeriveHard; } }));
var fromRandom_js_1 = __nccwpck_require__(92179);
Object.defineProperty(exports, "ed25519PairFromRandom", ({ enumerable: true, get: function () { return fromRandom_js_1.ed25519PairFromRandom; } }));
var fromSecret_js_1 = __nccwpck_require__(58514);
Object.defineProperty(exports, "ed25519PairFromSecret", ({ enumerable: true, get: function () { return fromSecret_js_1.ed25519PairFromSecret; } }));
var fromSeed_js_1 = __nccwpck_require__(96357);
Object.defineProperty(exports, "ed25519PairFromSeed", ({ enumerable: true, get: function () { return fromSeed_js_1.ed25519PairFromSeed; } }));
var fromString_js_1 = __nccwpck_require__(17318);
Object.defineProperty(exports, "ed25519PairFromString", ({ enumerable: true, get: function () { return fromString_js_1.ed25519PairFromString; } }));
var sign_js_1 = __nccwpck_require__(57511);
Object.defineProperty(exports, "ed25519Sign", ({ enumerable: true, get: function () { return sign_js_1.ed25519Sign; } }));
var verify_js_1 = __nccwpck_require__(66187);
Object.defineProperty(exports, "ed25519Verify", ({ enumerable: true, get: function () { return verify_js_1.ed25519Verify; } }));


/***/ }),

/***/ 92179:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ed25519PairFromRandom = void 0;
const index_js_1 = __nccwpck_require__(80500);
const fromSeed_js_1 = __nccwpck_require__(96357);
/**
 * @name ed25519PairFromRandom
 * @summary Creates a new public/secret keypair.
 * @description
 * Returns a new generate object containing a `publicKey` & `secretKey`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromRandom } from '@polkadot/util-crypto';
 *
 * ed25519PairFromRandom(); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function ed25519PairFromRandom() {
    return (0, fromSeed_js_1.ed25519PairFromSeed)((0, index_js_1.randomAsU8a)());
}
exports.ed25519PairFromRandom = ed25519PairFromRandom;


/***/ }),

/***/ 58514:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ed25519PairFromSecret = void 0;
/**
 * @name ed25519PairFromSecret
 * @summary Creates a new public/secret keypair from a secret.
 * @description
 * Returns a object containing a `publicKey` & `secretKey` generated from the supplied secret.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromSecret } from '@polkadot/util-crypto';
 *
 * ed25519PairFromSecret(...); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function ed25519PairFromSecret(secretKey) {
    if (secretKey.length !== 64) {
        throw new Error('Invalid secretKey provided');
    }
    return {
        publicKey: secretKey.slice(32),
        secretKey
    };
}
exports.ed25519PairFromSecret = ed25519PairFromSecret;


/***/ }),

/***/ 96357:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ed25519PairFromSeed = void 0;
const ed25519_1 = __nccwpck_require__(86130);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
/**
 * @name ed25519PairFromSeed
 * @summary Creates a new public/secret keypair from a seed.
 * @description
 * Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromSeed } from '@polkadot/util-crypto';
 *
 * ed25519PairFromSeed(...); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function ed25519PairFromSeed(seed, onlyJs) {
    if (!util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())) {
        const full = (0, wasm_crypto_1.ed25519KeypairFromSeed)(seed);
        return {
            publicKey: full.slice(32),
            secretKey: full.slice(0, 64)
        };
    }
    const publicKey = ed25519_1.ed25519.getPublicKey(seed);
    return {
        publicKey,
        secretKey: (0, util_1.u8aConcatStrict)([seed, publicKey])
    };
}
exports.ed25519PairFromSeed = ed25519PairFromSeed;


/***/ }),

/***/ 17318:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ed25519PairFromString = void 0;
const util_1 = __nccwpck_require__(29795);
const asU8a_js_1 = __nccwpck_require__(38413);
const fromSeed_js_1 = __nccwpck_require__(96357);
/**
 * @name ed25519PairFromString
 * @summary Creates a new public/secret keypair from a string.
 * @description
 * Returns a object containing a `publicKey` & `secretKey` generated from the supplied string. The string is hashed and the value used as the input seed.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromString } from '@polkadot/util-crypto';
 *
 * ed25519PairFromString('test'); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function ed25519PairFromString(value) {
    return (0, fromSeed_js_1.ed25519PairFromSeed)((0, asU8a_js_1.blake2AsU8a)((0, util_1.stringToU8a)(value)));
}
exports.ed25519PairFromString = ed25519PairFromString;


/***/ }),

/***/ 57511:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ed25519Sign = void 0;
const ed25519_1 = __nccwpck_require__(86130);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
/**
 * @name ed25519Sign
 * @summary Signs a message using the supplied secretKey
 * @description
 * Returns message signature of `message`, using the `secretKey`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519Sign } from '@polkadot/util-crypto';
 *
 * ed25519Sign([...], [...]); // => [...]
 * ```
 */
function ed25519Sign(message, { publicKey, secretKey }, onlyJs) {
    if (!secretKey) {
        throw new Error('Expected a valid secretKey');
    }
    else if (!publicKey) {
        throw new Error('Expected a valid publicKey');
    }
    const messageU8a = (0, util_1.u8aToU8a)(message);
    const privateU8a = secretKey.subarray(0, 32);
    return !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
        ? (0, wasm_crypto_1.ed25519Sign)(publicKey, privateU8a, messageU8a)
        : ed25519_1.ed25519.sign(messageU8a, privateU8a);
}
exports.ed25519Sign = ed25519Sign;


/***/ }),

/***/ 66187:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ed25519Verify = void 0;
const ed25519_1 = __nccwpck_require__(86130);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
/**
 * @name ed25519Sign
 * @summary Verifies the signature on the supplied message.
 * @description
 * Verifies the `signature` on `message` with the supplied `publicKey`. Returns `true` on sucess, `false` otherwise.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519Verify } from '@polkadot/util-crypto';
 *
 * ed25519Verify([...], [...], [...]); // => true/false
 * ```
 */
function ed25519Verify(message, signature, publicKey, onlyJs) {
    const messageU8a = (0, util_1.u8aToU8a)(message);
    const publicKeyU8a = (0, util_1.u8aToU8a)(publicKey);
    const signatureU8a = (0, util_1.u8aToU8a)(signature);
    if (publicKeyU8a.length !== 32) {
        throw new Error(`Invalid publicKey, received ${publicKeyU8a.length}, expected 32`);
    }
    else if (signatureU8a.length !== 64) {
        throw new Error(`Invalid signature, received ${signatureU8a.length} bytes, expected 64`);
    }
    try {
        return !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
            ? (0, wasm_crypto_1.ed25519Verify)(signatureU8a, messageU8a, publicKeyU8a)
            : ed25519_1.ed25519.verify(signatureU8a, messageU8a, publicKeyU8a);
    }
    catch {
        return false;
    }
}
exports.ed25519Verify = ed25519Verify;


/***/ }),

/***/ 22478:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ethereumEncode = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(15508);
const index_js_2 = __nccwpck_require__(17304);
function getH160(u8a) {
    if ([33, 65].includes(u8a.length)) {
        u8a = (0, index_js_1.keccakAsU8a)((0, index_js_2.secp256k1Expand)(u8a));
    }
    return u8a.slice(-20);
}
function ethereumEncode(addressOrPublic) {
    if (!addressOrPublic) {
        return '0x';
    }
    const u8aAddress = (0, util_1.u8aToU8a)(addressOrPublic);
    if (![20, 32, 33, 65].includes(u8aAddress.length)) {
        throw new Error(`Invalid address or publicKey provided, received ${u8aAddress.length} bytes input`);
    }
    const address = (0, util_1.u8aToHex)(getH160(u8aAddress), -1, false);
    const hash = (0, util_1.u8aToHex)((0, index_js_1.keccakAsU8a)(address), -1, false);
    let result = '';
    for (let i = 0; i < 40; i++) {
        result = `${result}${parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]}`;
    }
    return `0x${result}`;
}
exports.ethereumEncode = ethereumEncode;


/***/ }),

/***/ 81884:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isEthereumChecksum = exports.isEthereumAddress = exports.ethereumEncode = void 0;
var encode_js_1 = __nccwpck_require__(22478);
Object.defineProperty(exports, "ethereumEncode", ({ enumerable: true, get: function () { return encode_js_1.ethereumEncode; } }));
var isAddress_js_1 = __nccwpck_require__(26249);
Object.defineProperty(exports, "isEthereumAddress", ({ enumerable: true, get: function () { return isAddress_js_1.isEthereumAddress; } }));
var isChecksum_js_1 = __nccwpck_require__(5024);
Object.defineProperty(exports, "isEthereumChecksum", ({ enumerable: true, get: function () { return isChecksum_js_1.isEthereumChecksum; } }));


/***/ }),

/***/ 26249:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isEthereumAddress = void 0;
const util_1 = __nccwpck_require__(29795);
const isChecksum_js_1 = __nccwpck_require__(5024);
function isEthereumAddress(address) {
    if (!address || address.length !== 42 || !(0, util_1.isHex)(address)) {
        return false;
    }
    else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {
        return true;
    }
    return (0, isChecksum_js_1.isEthereumChecksum)(address);
}
exports.isEthereumAddress = isEthereumAddress;


/***/ }),

/***/ 5024:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isEthereumChecksum = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(15508);
function isInvalidChar(char, byte) {
    return char !== (byte > 7
        ? char.toUpperCase()
        : char.toLowerCase());
}
function isEthereumChecksum(_address) {
    const address = _address.replace('0x', '');
    const hash = (0, util_1.u8aToHex)((0, index_js_1.keccakAsU8a)(address.toLowerCase()), -1, false);
    for (let i = 0; i < 40; i++) {
        if (isInvalidChar(address[i], parseInt(hash[i], 16))) {
            return false;
        }
    }
    return true;
}
exports.isEthereumChecksum = isEthereumChecksum;


/***/ }),

/***/ 92205:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hdEthereum = void 0;
const util_1 = __nccwpck_require__(29795);
const bn_js_1 = __nccwpck_require__(39980);
const index_js_1 = __nccwpck_require__(32127);
const index_js_2 = __nccwpck_require__(17304);
const validatePath_js_1 = __nccwpck_require__(26572);
const MASTER_SECRET = (0, util_1.stringToU8a)('Bitcoin seed');
function createCoded(secretKey, chainCode) {
    return {
        chainCode,
        publicKey: (0, index_js_2.secp256k1PairFromSeed)(secretKey).publicKey,
        secretKey
    };
}
function deriveChild(hd, index) {
    const indexBuffer = (0, util_1.bnToU8a)(index, bn_js_1.BN_BE_32_OPTS);
    const data = index >= validatePath_js_1.HARDENED
        ? (0, util_1.u8aConcat)(new Uint8Array(1), hd.secretKey, indexBuffer)
        : (0, util_1.u8aConcat)(hd.publicKey, indexBuffer);
    try {
        const I = (0, index_js_1.hmacShaAsU8a)(hd.chainCode, data, 512);
        return createCoded((0, index_js_2.secp256k1PrivateKeyTweakAdd)(hd.secretKey, I.slice(0, 32)), I.slice(32));
    }
    catch {
        // In case parse256(IL) >= n or ki == 0, proceed with the next value for i
        return deriveChild(hd, index + 1);
    }
}
function hdEthereum(seed, path = '') {
    const I = (0, index_js_1.hmacShaAsU8a)(MASTER_SECRET, seed, 512);
    let hd = createCoded(I.slice(0, 32), I.slice(32));
    if (!path || path === 'm' || path === 'M' || path === "m'" || path === "M'") {
        return hd;
    }
    if (!(0, validatePath_js_1.hdValidatePath)(path)) {
        throw new Error('Invalid derivation path');
    }
    const parts = path.split('/').slice(1);
    for (const p of parts) {
        hd = deriveChild(hd, parseInt(p, 10) + ((p.length > 1) && p.endsWith("'")
            ? validatePath_js_1.HARDENED
            : 0));
    }
    return hd;
}
exports.hdEthereum = hdEthereum;


/***/ }),

/***/ 17045:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hdValidatePath = exports.hdLedger = exports.hdEthereum = void 0;
var index_js_1 = __nccwpck_require__(92205);
Object.defineProperty(exports, "hdEthereum", ({ enumerable: true, get: function () { return index_js_1.hdEthereum; } }));
var index_js_2 = __nccwpck_require__(53658);
Object.defineProperty(exports, "hdLedger", ({ enumerable: true, get: function () { return index_js_2.hdLedger; } }));
var validatePath_js_1 = __nccwpck_require__(26572);
Object.defineProperty(exports, "hdValidatePath", ({ enumerable: true, get: function () { return validatePath_js_1.hdValidatePath; } }));


/***/ }),

/***/ 58719:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ledgerDerivePrivate = void 0;
const util_1 = __nccwpck_require__(29795);
const bn_js_1 = __nccwpck_require__(39980);
const index_js_1 = __nccwpck_require__(32127);
function ledgerDerivePrivate(xprv, index) {
    const kl = xprv.subarray(0, 32);
    const kr = xprv.subarray(32, 64);
    const cc = xprv.subarray(64, 96);
    const data = (0, util_1.u8aConcat)([0], kl, kr, (0, util_1.bnToU8a)(index, bn_js_1.BN_LE_32_OPTS));
    const z = (0, index_js_1.hmacShaAsU8a)(cc, data, 512);
    data[0] = 0x01;
    return (0, util_1.u8aConcat)((0, util_1.bnToU8a)((0, util_1.u8aToBn)(kl, bn_js_1.BN_LE_OPTS).iadd((0, util_1.u8aToBn)(z.subarray(0, 28), bn_js_1.BN_LE_OPTS).imul(util_1.BN_EIGHT)), bn_js_1.BN_LE_512_OPTS).subarray(0, 32), (0, util_1.bnToU8a)((0, util_1.u8aToBn)(kr, bn_js_1.BN_LE_OPTS).iadd((0, util_1.u8aToBn)(z.subarray(32, 64), bn_js_1.BN_LE_OPTS)), bn_js_1.BN_LE_512_OPTS).subarray(0, 32), (0, index_js_1.hmacShaAsU8a)(cc, data, 512).subarray(32, 64));
}
exports.ledgerDerivePrivate = ledgerDerivePrivate;


/***/ }),

/***/ 53658:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hdLedger = void 0;
const index_js_1 = __nccwpck_require__(97981);
const index_js_2 = __nccwpck_require__(25308);
const validatePath_js_1 = __nccwpck_require__(26572);
const derivePrivate_js_1 = __nccwpck_require__(58719);
const master_js_1 = __nccwpck_require__(67762);
function hdLedger(_mnemonic, path) {
    const words = _mnemonic
        .split(' ')
        .map((s) => s.trim())
        .filter((s) => s);
    if (![12, 24, 25].includes(words.length)) {
        throw new Error('Expected a mnemonic with 24 words (or 25 including a password)');
    }
    const [mnemonic, password] = words.length === 25
        ? [words.slice(0, 24).join(' '), words[24]]
        : [words.join(' '), ''];
    if (!(0, index_js_2.mnemonicValidate)(mnemonic)) {
        throw new Error('Invalid mnemonic passed to ledger derivation');
    }
    else if (!(0, validatePath_js_1.hdValidatePath)(path)) {
        throw new Error('Invalid derivation path');
    }
    const parts = path.split('/').slice(1);
    let seed = (0, master_js_1.ledgerMaster)(mnemonic, password);
    for (const p of parts) {
        const n = parseInt(p.replace(/'$/, ''), 10);
        seed = (0, derivePrivate_js_1.ledgerDerivePrivate)(seed, (n < validatePath_js_1.HARDENED) ? (n + validatePath_js_1.HARDENED) : n);
    }
    return (0, index_js_1.ed25519PairFromSeed)(seed.slice(0, 32));
}
exports.hdLedger = hdLedger;


/***/ }),

/***/ 67762:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ledgerMaster = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(32127);
const bip39_js_1 = __nccwpck_require__(82128);
const ED25519_CRYPTO = 'ed25519 seed';
function ledgerMaster(mnemonic, password) {
    const seed = (0, bip39_js_1.mnemonicToSeedSync)(mnemonic, password);
    const chainCode = (0, index_js_1.hmacShaAsU8a)(ED25519_CRYPTO, new Uint8Array([1, ...seed]), 256);
    let priv;
    while (!priv || (priv[31] & 32)) {
        priv = (0, index_js_1.hmacShaAsU8a)(ED25519_CRYPTO, priv || seed, 512);
    }
    priv[0] &= 248;
    priv[31] &= 127;
    priv[31] |= 64;
    return (0, util_1.u8aConcat)(priv, chainCode);
}
exports.ledgerMaster = ledgerMaster;


/***/ }),

/***/ 26572:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hdValidatePath = exports.HARDENED = void 0;
exports.HARDENED = 0x80000000;
function hdValidatePath(path) {
    if (!path.startsWith('m/')) {
        return false;
    }
    const parts = path.split('/').slice(1);
    for (const p of parts) {
        const n = /^\d+'?$/.test(p)
            ? parseInt(p.replace(/'$/, ''), 10)
            : Number.NaN;
        if (isNaN(n) || (n >= exports.HARDENED) || (n < 0)) {
            return false;
        }
    }
    return true;
}
exports.hdValidatePath = hdValidatePath;


/***/ }),

/***/ 88663:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createDualHasher = exports.createBitHasher = exports.createAsHex = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
/** @internal */
function createAsHex(fn) {
    return (...args) => (0, util_1.u8aToHex)(fn(...args));
}
exports.createAsHex = createAsHex;
/** @internal */
function createBitHasher(bitLength, fn) {
    return (data, onlyJs) => fn(data, bitLength, onlyJs);
}
exports.createBitHasher = createBitHasher;
/** @internal */
function createDualHasher(wa, js) {
    return (value, bitLength = 256, onlyJs) => {
        const u8a = (0, util_1.u8aToU8a)(value);
        return !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
            ? wa[bitLength](u8a)
            : js[bitLength](u8a);
    };
}
exports.createDualHasher = createDualHasher;


/***/ }),

/***/ 32127:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hmacShaAsU8a = exports.hmacSha512AsU8a = exports.hmacSha256AsU8a = void 0;
var shaAsU8a_js_1 = __nccwpck_require__(8623);
Object.defineProperty(exports, "hmacSha256AsU8a", ({ enumerable: true, get: function () { return shaAsU8a_js_1.hmacSha256AsU8a; } }));
Object.defineProperty(exports, "hmacSha512AsU8a", ({ enumerable: true, get: function () { return shaAsU8a_js_1.hmacSha512AsU8a; } }));
Object.defineProperty(exports, "hmacShaAsU8a", ({ enumerable: true, get: function () { return shaAsU8a_js_1.hmacShaAsU8a; } }));


/***/ }),

/***/ 8623:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hmacSha512AsU8a = exports.hmacSha256AsU8a = exports.hmacShaAsU8a = void 0;
const hmac_1 = __nccwpck_require__(99149);
const sha256_1 = __nccwpck_require__(70708);
const sha512_1 = __nccwpck_require__(35251);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const JS_HASH = {
    256: sha256_1.sha256,
    512: sha512_1.sha512
};
const WA_MHAC = {
    256: wasm_crypto_1.hmacSha256,
    512: wasm_crypto_1.hmacSha512
};
function createSha(bitLength) {
    return (key, data, onlyJs) => hmacShaAsU8a(key, data, bitLength, onlyJs);
}
/**
 * @name hmacShaAsU8a
 * @description creates a Hmac Sha (256/512) Uint8Array from the key & data
 */
function hmacShaAsU8a(key, data, bitLength = 256, onlyJs) {
    const u8aKey = (0, util_1.u8aToU8a)(key);
    return !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
        ? WA_MHAC[bitLength](u8aKey, data)
        : (0, hmac_1.hmac)(JS_HASH[bitLength], u8aKey, data);
}
exports.hmacShaAsU8a = hmacShaAsU8a;
/**
 * @name hmacSha256AsU8a
 * @description creates a Hmac Sha256 Uint8Array from the key & data
 */
exports.hmacSha256AsU8a = createSha(256);
/**
 * @name hmacSha512AsU8a
 * @description creates a Hmac Sha512 Uint8Array from the key & data
 */
exports.hmacSha512AsU8a = createSha(512);


/***/ }),

/***/ 37723:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(91355);
__nccwpck_require__(90745);
tslib_1.__exportStar(__nccwpck_require__(49122), exports);


/***/ }),

/***/ 16091:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SCRYPT_LENGTH = exports.NONCE_LENGTH = exports.ENCODING_VERSION = exports.ENCODING_NONE = exports.ENCODING = void 0;
exports.ENCODING = ['scrypt', 'xsalsa20-poly1305'];
exports.ENCODING_NONE = ['none'];
exports.ENCODING_VERSION = '3';
exports.NONCE_LENGTH = 24;
exports.SCRYPT_LENGTH = 32 + (3 * 4);


/***/ }),

/***/ 33432:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.jsonDecrypt = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(45927);
const decryptData_js_1 = __nccwpck_require__(82165);
function jsonDecrypt({ encoded, encoding }, passphrase) {
    if (!encoded) {
        throw new Error('No encrypted data available to decode');
    }
    return (0, decryptData_js_1.jsonDecryptData)((0, util_1.isHex)(encoded)
        ? (0, util_1.hexToU8a)(encoded)
        : (0, index_js_1.base64Decode)(encoded), passphrase, Array.isArray(encoding.type)
        ? encoding.type
        : [encoding.type]);
}
exports.jsonDecrypt = jsonDecrypt;


/***/ }),

/***/ 82165:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.jsonDecryptData = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(114);
const index_js_2 = __nccwpck_require__(21960);
const constants_js_1 = __nccwpck_require__(16091);
function jsonDecryptData(encrypted, passphrase, encType = constants_js_1.ENCODING) {
    if (!encrypted) {
        throw new Error('No encrypted data available to decode');
    }
    else if (encType.includes('xsalsa20-poly1305') && !passphrase) {
        throw new Error('Password required to decode encrypted data');
    }
    let encoded = encrypted;
    if (passphrase) {
        let password;
        if (encType.includes('scrypt')) {
            const { params, salt } = (0, index_js_2.scryptFromU8a)(encrypted);
            password = (0, index_js_2.scryptEncode)(passphrase, salt, params).password;
            encrypted = encrypted.subarray(constants_js_1.SCRYPT_LENGTH);
        }
        else {
            password = (0, util_1.stringToU8a)(passphrase);
        }
        encoded = (0, index_js_1.naclDecrypt)(encrypted.subarray(constants_js_1.NONCE_LENGTH), encrypted.subarray(0, constants_js_1.NONCE_LENGTH), (0, util_1.u8aFixLength)(password, 256, true));
    }
    if (!encoded) {
        throw new Error('Unable to decode using the supplied passphrase');
    }
    return encoded;
}
exports.jsonDecryptData = jsonDecryptData;


/***/ }),

/***/ 94338:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.jsonEncrypt = void 0;
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(114);
const index_js_2 = __nccwpck_require__(21960);
const encryptFormat_js_1 = __nccwpck_require__(583);
function jsonEncrypt(data, contentType, passphrase) {
    let isEncrypted = false;
    let encoded = data;
    if (passphrase) {
        const { params, password, salt } = (0, index_js_2.scryptEncode)(passphrase);
        const { encrypted, nonce } = (0, index_js_1.naclEncrypt)(encoded, password.subarray(0, 32));
        isEncrypted = true;
        encoded = (0, util_1.u8aConcat)((0, index_js_2.scryptToU8a)(salt, params), nonce, encrypted);
    }
    return (0, encryptFormat_js_1.jsonEncryptFormat)(encoded, contentType, isEncrypted);
}
exports.jsonEncrypt = jsonEncrypt;


/***/ }),

/***/ 583:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.jsonEncryptFormat = void 0;
const index_js_1 = __nccwpck_require__(45927);
const constants_js_1 = __nccwpck_require__(16091);
function jsonEncryptFormat(encoded, contentType, isEncrypted) {
    return {
        encoded: (0, index_js_1.base64Encode)(encoded),
        encoding: {
            content: contentType,
            type: isEncrypted
                ? constants_js_1.ENCODING
                : constants_js_1.ENCODING_NONE,
            version: constants_js_1.ENCODING_VERSION
        }
    };
}
exports.jsonEncryptFormat = jsonEncryptFormat;


/***/ }),

/***/ 8373:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.jsonEncryptFormat = exports.jsonEncrypt = exports.jsonDecryptData = exports.jsonDecrypt = void 0;
var decrypt_js_1 = __nccwpck_require__(33432);
Object.defineProperty(exports, "jsonDecrypt", ({ enumerable: true, get: function () { return decrypt_js_1.jsonDecrypt; } }));
var decryptData_js_1 = __nccwpck_require__(82165);
Object.defineProperty(exports, "jsonDecryptData", ({ enumerable: true, get: function () { return decryptData_js_1.jsonDecryptData; } }));
var encrypt_js_1 = __nccwpck_require__(94338);
Object.defineProperty(exports, "jsonEncrypt", ({ enumerable: true, get: function () { return encrypt_js_1.jsonEncrypt; } }));
var encryptFormat_js_1 = __nccwpck_require__(583);
Object.defineProperty(exports, "jsonEncryptFormat", ({ enumerable: true, get: function () { return encryptFormat_js_1.jsonEncryptFormat; } }));


/***/ }),

/***/ 17782:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keccakAsHex = exports.keccak512AsU8a = exports.keccak256AsU8a = exports.keccakAsU8a = void 0;
const sha3_1 = __nccwpck_require__(15404);
const wasm_crypto_1 = __nccwpck_require__(72846);
const helpers_js_1 = __nccwpck_require__(88663);
/**
 * @name keccakAsU8a
 * @summary Creates a keccak Uint8Array from the input.
 * @description
 * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { keccakAsU8a } from '@polkadot/util-crypto';
 *
 * keccakAsU8a('123'); // => Uint8Array
 * ```
 */
exports.keccakAsU8a = (0, helpers_js_1.createDualHasher)({ 256: wasm_crypto_1.keccak256, 512: wasm_crypto_1.keccak512 }, { 256: sha3_1.keccak_256, 512: sha3_1.keccak_512 });
/**
 * @name keccak256AsU8a
 * @description Creates a keccak256 Uint8Array from the input.
 */
exports.keccak256AsU8a = (0, helpers_js_1.createBitHasher)(256, exports.keccakAsU8a);
/**
 * @name keccak512AsU8a
 * @description Creates a keccak512 Uint8Array from the input.
 */
exports.keccak512AsU8a = (0, helpers_js_1.createBitHasher)(512, exports.keccakAsU8a);
/**
 * @name keccakAsHex
 * @description Creates a keccak hex string from the input.
 */
exports.keccakAsHex = (0, helpers_js_1.createAsHex)(exports.keccakAsU8a);


/***/ }),

/***/ 15508:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keccakAsU8a = exports.keccakAsHex = exports.keccak512AsU8a = exports.keccak256AsU8a = void 0;
/**
 * @summary Create Keccak256/512 values as hex & Uint8Array output
 */
var asU8a_js_1 = __nccwpck_require__(17782);
Object.defineProperty(exports, "keccak256AsU8a", ({ enumerable: true, get: function () { return asU8a_js_1.keccak256AsU8a; } }));
Object.defineProperty(exports, "keccak512AsU8a", ({ enumerable: true, get: function () { return asU8a_js_1.keccak512AsU8a; } }));
Object.defineProperty(exports, "keccakAsHex", ({ enumerable: true, get: function () { return asU8a_js_1.keccakAsHex; } }));
Object.defineProperty(exports, "keccakAsU8a", ({ enumerable: true, get: function () { return asU8a_js_1.keccakAsU8a; } }));


/***/ }),

/***/ 59286:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeriveJunction = void 0;
const util_1 = __nccwpck_require__(29795);
const asU8a_js_1 = __nccwpck_require__(38413);
const bn_js_1 = __nccwpck_require__(39980);
const RE_NUMBER = /^\d+$/;
const JUNCTION_ID_LEN = 32;
class DeriveJunction {
    constructor() {
        this.__internal__chainCode = new Uint8Array(32);
        this.__internal__isHard = false;
    }
    static from(value) {
        const result = new DeriveJunction();
        const [code, isHard] = value.startsWith('/')
            ? [value.substring(1), true]
            : [value, false];
        result.soft(RE_NUMBER.test(code)
            ? new util_1.BN(code, 10)
            : code);
        return isHard
            ? result.harden()
            : result;
    }
    get chainCode() {
        return this.__internal__chainCode;
    }
    get isHard() {
        return this.__internal__isHard;
    }
    get isSoft() {
        return !this.__internal__isHard;
    }
    hard(value) {
        return this.soft(value).harden();
    }
    harden() {
        this.__internal__isHard = true;
        return this;
    }
    soft(value) {
        if ((0, util_1.isNumber)(value) || (0, util_1.isBn)(value) || (0, util_1.isBigInt)(value)) {
            return this.soft((0, util_1.bnToU8a)(value, bn_js_1.BN_LE_256_OPTS));
        }
        else if ((0, util_1.isHex)(value)) {
            return this.soft((0, util_1.hexToU8a)(value));
        }
        else if ((0, util_1.isString)(value)) {
            return this.soft((0, util_1.compactAddLength)((0, util_1.stringToU8a)(value)));
        }
        else if (value.length > JUNCTION_ID_LEN) {
            return this.soft((0, asU8a_js_1.blake2AsU8a)(value));
        }
        this.__internal__chainCode.fill(0);
        this.__internal__chainCode.set(value, 0);
        return this;
    }
    soften() {
        this.__internal__isHard = false;
        return this;
    }
}
exports.DeriveJunction = DeriveJunction;


/***/ }),

/***/ 58739:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keyExtractPath = void 0;
const DeriveJunction_js_1 = __nccwpck_require__(59286);
const RE_JUNCTION = /\/(\/?)([^/]+)/g;
/**
 * @description Extract derivation junctions from the supplied path
 */
function keyExtractPath(derivePath) {
    const parts = derivePath.match(RE_JUNCTION);
    const path = [];
    let constructed = '';
    if (parts) {
        constructed = parts.join('');
        for (const p of parts) {
            path.push(DeriveJunction_js_1.DeriveJunction.from(p.substring(1)));
        }
    }
    if (constructed !== derivePath) {
        throw new Error(`Re-constructed path "${constructed}" does not match input`);
    }
    return {
        parts,
        path
    };
}
exports.keyExtractPath = keyExtractPath;


/***/ }),

/***/ 81193:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keyExtractSuri = void 0;
const extractPath_js_1 = __nccwpck_require__(58739);
const RE_CAPTURE = /^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;
/**
 * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).
 */
function keyExtractSuri(suri) {
    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec
    const matches = suri.match(RE_CAPTURE);
    if (matches === null) {
        throw new Error('Unable to match provided value to a secret URI');
    }
    const [, phrase, , derivePath, , , password] = matches;
    const { path } = (0, extractPath_js_1.keyExtractPath)(derivePath);
    return {
        derivePath,
        password,
        path,
        phrase
    };
}
exports.keyExtractSuri = keyExtractSuri;


/***/ }),

/***/ 96277:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keyFromPath = void 0;
const hdkdEcdsa_js_1 = __nccwpck_require__(61180);
const hdkdEd25519_js_1 = __nccwpck_require__(27020);
const hdkdSr25519_js_1 = __nccwpck_require__(56541);
const generators = {
    ecdsa: hdkdEcdsa_js_1.keyHdkdEcdsa,
    ed25519: hdkdEd25519_js_1.keyHdkdEd25519,
    // FIXME This is Substrate-compatible, not Ethereum-compatible
    ethereum: hdkdEcdsa_js_1.keyHdkdEcdsa,
    sr25519: hdkdSr25519_js_1.keyHdkdSr25519
};
function keyFromPath(pair, path, type) {
    const keyHdkd = generators[type];
    let result = pair;
    for (const junction of path) {
        result = keyHdkd(result, junction);
    }
    return result;
}
exports.keyFromPath = keyFromPath;


/***/ }),

/***/ 73470:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createSeedDeriveFn = void 0;
function createSeedDeriveFn(fromSeed, derive) {
    return (keypair, { chainCode, isHard }) => {
        if (!isHard) {
            throw new Error('A soft key was found in the path and is not supported');
        }
        return fromSeed(derive(keypair.secretKey.subarray(0, 32), chainCode));
    };
}
exports.createSeedDeriveFn = createSeedDeriveFn;


/***/ }),

/***/ 61180:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keyHdkdEcdsa = void 0;
const deriveHard_js_1 = __nccwpck_require__(82024);
const fromSeed_js_1 = __nccwpck_require__(81577);
const hdkdDerive_js_1 = __nccwpck_require__(73470);
exports.keyHdkdEcdsa = (0, hdkdDerive_js_1.createSeedDeriveFn)(fromSeed_js_1.secp256k1PairFromSeed, deriveHard_js_1.secp256k1DeriveHard);


/***/ }),

/***/ 27020:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keyHdkdEd25519 = void 0;
const index_js_1 = __nccwpck_require__(97981);
const hdkdDerive_js_1 = __nccwpck_require__(73470);
exports.keyHdkdEd25519 = (0, hdkdDerive_js_1.createSeedDeriveFn)(index_js_1.ed25519PairFromSeed, index_js_1.ed25519DeriveHard);


/***/ }),

/***/ 56541:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keyHdkdSr25519 = void 0;
const deriveHard_js_1 = __nccwpck_require__(99874);
const deriveSoft_js_1 = __nccwpck_require__(41406);
function keyHdkdSr25519(keypair, { chainCode, isSoft }) {
    return isSoft
        ? (0, deriveSoft_js_1.sr25519DeriveSoft)(keypair, chainCode)
        : (0, deriveHard_js_1.sr25519DeriveHard)(keypair, chainCode);
}
exports.keyHdkdSr25519 = keyHdkdSr25519;


/***/ }),

/***/ 1130:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keyHdkdSr25519 = exports.keyHdkdEd25519 = exports.keyHdkdEcdsa = exports.keyFromPath = exports.keyExtractSuri = exports.keyExtractPath = void 0;
/**
 * @summary Create keys from paths, seeds and password
 */
var extractPath_js_1 = __nccwpck_require__(58739);
Object.defineProperty(exports, "keyExtractPath", ({ enumerable: true, get: function () { return extractPath_js_1.keyExtractPath; } }));
var extractSuri_js_1 = __nccwpck_require__(81193);
Object.defineProperty(exports, "keyExtractSuri", ({ enumerable: true, get: function () { return extractSuri_js_1.keyExtractSuri; } }));
var fromPath_js_1 = __nccwpck_require__(96277);
Object.defineProperty(exports, "keyFromPath", ({ enumerable: true, get: function () { return fromPath_js_1.keyFromPath; } }));
var hdkdEcdsa_js_1 = __nccwpck_require__(61180);
Object.defineProperty(exports, "keyHdkdEcdsa", ({ enumerable: true, get: function () { return hdkdEcdsa_js_1.keyHdkdEcdsa; } }));
var hdkdEd25519_js_1 = __nccwpck_require__(27020);
Object.defineProperty(exports, "keyHdkdEd25519", ({ enumerable: true, get: function () { return hdkdEd25519_js_1.keyHdkdEd25519; } }));
var hdkdSr25519_js_1 = __nccwpck_require__(56541);
Object.defineProperty(exports, "keyHdkdSr25519", ({ enumerable: true, get: function () { return hdkdSr25519_js_1.keyHdkdSr25519; } }));


/***/ }),

/***/ 82128:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.validateMnemonic = exports.generateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.mnemonicToSeedSync = void 0;
const tslib_1 = __nccwpck_require__(91355);
const util_1 = __nccwpck_require__(29795);
const index_js_1 = __nccwpck_require__(47689);
const index_js_2 = __nccwpck_require__(80500);
const index_js_3 = __nccwpck_require__(32393);
const en_js_1 = tslib_1.__importDefault(__nccwpck_require__(72236));
const INVALID_MNEMONIC = 'Invalid mnemonic';
const INVALID_ENTROPY = 'Invalid entropy';
const INVALID_CHECKSUM = 'Invalid mnemonic checksum';
/** @internal */
function normalize(str) {
    return (str || '').normalize('NFKD');
}
/** @internal */
function binaryToByte(bin) {
    return parseInt(bin, 2);
}
/** @internal */
function bytesToBinary(bytes) {
    return bytes.map((x) => x.toString(2).padStart(8, '0')).join('');
}
/** @internal */
function deriveChecksumBits(entropyBuffer) {
    return bytesToBinary(Array.from((0, index_js_3.sha256AsU8a)(entropyBuffer))).slice(0, (entropyBuffer.length * 8) / 32);
}
function mnemonicToSeedSync(mnemonic, password) {
    return (0, index_js_1.pbkdf2Encode)((0, util_1.stringToU8a)(normalize(mnemonic)), (0, util_1.stringToU8a)(`mnemonic${normalize(password)}`)).password;
}
exports.mnemonicToSeedSync = mnemonicToSeedSync;
function mnemonicToEntropy(mnemonic, wordlist = en_js_1.default) {
    const words = normalize(mnemonic).split(' ');
    if (words.length % 3 !== 0) {
        throw new Error(INVALID_MNEMONIC);
    }
    // convert word indices to 11 bit binary strings
    const bits = words
        .map((word) => {
        const index = wordlist.indexOf(word);
        if (index === -1) {
            throw new Error(INVALID_MNEMONIC);
        }
        return index.toString(2).padStart(11, '0');
    })
        .join('');
    // split the binary string into ENT/CS
    const dividerIndex = Math.floor(bits.length / 33) * 32;
    const entropyBits = bits.slice(0, dividerIndex);
    const checksumBits = bits.slice(dividerIndex);
    // calculate the checksum and compare
    const matched = entropyBits.match(/(.{1,8})/g);
    const entropyBytes = matched?.map(binaryToByte);
    if (!entropyBytes || (entropyBytes.length % 4 !== 0) || (entropyBytes.length < 16) || (entropyBytes.length > 32)) {
        throw new Error(INVALID_ENTROPY);
    }
    const entropy = (0, util_1.u8aToU8a)(entropyBytes);
    if (deriveChecksumBits(entropy) !== checksumBits) {
        throw new Error(INVALID_CHECKSUM);
    }
    return entropy;
}
exports.mnemonicToEntropy = mnemonicToEntropy;
function entropyToMnemonic(entropy, wordlist = en_js_1.default) {
    // 128 <= ENT <= 256
    if ((entropy.length % 4 !== 0) || (entropy.length < 16) || (entropy.length > 32)) {
        throw new Error(INVALID_ENTROPY);
    }
    const matched = `${bytesToBinary(Array.from(entropy))}${deriveChecksumBits(entropy)}`.match(/(.{1,11})/g);
    const mapped = matched?.map((b) => wordlist[binaryToByte(b)]);
    if (!mapped || (mapped.length < 12)) {
        throw new Error('Unable to map entropy to mnemonic');
    }
    return mapped.join(' ');
}
exports.entropyToMnemonic = entropyToMnemonic;
function generateMnemonic(numWords, wordlist) {
    return entropyToMnemonic((0, index_js_2.randomAsU8a)((numWords / 3) * 4), wordlist);
}
exports.generateMnemonic = generateMnemonic;
function validateMnemonic(mnemonic, wordlist) {
    try {
        mnemonicToEntropy(mnemonic, wordlist);
    }
    catch {
        return false;
    }
    return true;
}
exports.validateMnemonic = validateMnemonic;


/***/ }),

/***/ 55958:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mnemonicGenerate = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const bip39_js_1 = __nccwpck_require__(82128);
/**
 * @name mnemonicGenerate
 * @summary Creates a valid mnemonic string using using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).
 * @example
 * <BR>
 *
 * ```javascript
 * import { mnemonicGenerate } from '@polkadot/util-crypto';
 *
 * const mnemonic = mnemonicGenerate(); // => string
 * ```
 */
function mnemonicGenerate(numWords = 12, wordlist, onlyJs) {
    return !util_1.hasBigInt || (!wordlist && !onlyJs && (0, wasm_crypto_1.isReady)())
        ? (0, wasm_crypto_1.bip39Generate)(numWords)
        : (0, bip39_js_1.generateMnemonic)(numWords, wordlist);
}
exports.mnemonicGenerate = mnemonicGenerate;


/***/ }),

/***/ 25308:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mnemonicValidate = exports.mnemonicToMiniSecret = exports.mnemonicToLegacySeed = exports.mnemonicToEntropy = exports.mnemonicGenerate = void 0;
/**
 * @summary Create valid mnemonic strings, validate them using BIP39, and convert them to valid seeds
 */
var generate_js_1 = __nccwpck_require__(55958);
Object.defineProperty(exports, "mnemonicGenerate", ({ enumerable: true, get: function () { return generate_js_1.mnemonicGenerate; } }));
var toEntropy_js_1 = __nccwpck_require__(73052);
Object.defineProperty(exports, "mnemonicToEntropy", ({ enumerable: true, get: function () { return toEntropy_js_1.mnemonicToEntropy; } }));
var toLegacySeed_js_1 = __nccwpck_require__(72294);
Object.defineProperty(exports, "mnemonicToLegacySeed", ({ enumerable: true, get: function () { return toLegacySeed_js_1.mnemonicToLegacySeed; } }));
var toMiniSecret_js_1 = __nccwpck_require__(9246);
Object.defineProperty(exports, "mnemonicToMiniSecret", ({ enumerable: true, get: function () { return toMiniSecret_js_1.mnemonicToMiniSecret; } }));
var validate_js_1 = __nccwpck_require__(88648);
Object.defineProperty(exports, "mnemonicValidate", ({ enumerable: true, get: function () { return validate_js_1.mnemonicValidate; } }));


/***/ }),

/***/ 73052:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mnemonicToEntropy = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const bip39_js_1 = __nccwpck_require__(82128);
function mnemonicToEntropy(mnemonic, wordlist, onlyJs) {
    return !util_1.hasBigInt || (!wordlist && !onlyJs && (0, wasm_crypto_1.isReady)())
        ? (0, wasm_crypto_1.bip39ToEntropy)(mnemonic)
        : (0, bip39_js_1.mnemonicToEntropy)(mnemonic, wordlist);
}
exports.mnemonicToEntropy = mnemonicToEntropy;


/***/ }),

/***/ 72294:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mnemonicToLegacySeed = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const bip39_js_1 = __nccwpck_require__(82128);
const validate_js_1 = __nccwpck_require__(88648);
/**
 * @name mnemonicToLegacySeed
 * @summary Creates a valid Ethereum/Bitcoin-compatible seed from a mnemonic input
 * @example
 * <BR>
 *
 * ```javascript
 * import { mnemonicGenerate, mnemonicToLegacySeed, mnemonicValidate } from '@polkadot/util-crypto';
 *
 * const mnemonic = mnemonicGenerate(); // => string
 * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean
 *
 * if (isValidMnemonic) {
 *   console.log(`Seed generated from mnemonic: ${mnemonicToLegacySeed(mnemonic)}`); => u8a
 * }
 * ```
 */
function mnemonicToLegacySeed(mnemonic, password = '', onlyJs, byteLength = 32) {
    if (!(0, validate_js_1.mnemonicValidate)(mnemonic)) {
        throw new Error('Invalid bip39 mnemonic specified');
    }
    else if (![32, 64].includes(byteLength)) {
        throw new Error(`Invalid seed length ${byteLength}, expected 32 or 64`);
    }
    return byteLength === 32
        ? !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
            ? (0, wasm_crypto_1.bip39ToSeed)(mnemonic, password)
            : (0, bip39_js_1.mnemonicToSeedSync)(mnemonic, password).subarray(0, 32)
        : (0, bip39_js_1.mnemonicToSeedSync)(mnemonic, password);
}
exports.mnemonicToLegacySeed = mnemonicToLegacySeed;


/***/ }),

/***/ 9246:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mnemonicToMiniSecret = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const index_js_1 = __nccwpck_require__(47689);
const toEntropy_js_1 = __nccwpck_require__(73052);
const validate_js_1 = __nccwpck_require__(88648);
function mnemonicToMiniSecret(mnemonic, password = '', wordlist, onlyJs) {
    if (!(0, validate_js_1.mnemonicValidate)(mnemonic, wordlist, onlyJs)) {
        throw new Error('Invalid bip39 mnemonic specified');
    }
    else if (!wordlist && !onlyJs && (0, wasm_crypto_1.isReady)()) {
        return (0, wasm_crypto_1.bip39ToMiniSecret)(mnemonic, password);
    }
    const entropy = (0, toEntropy_js_1.mnemonicToEntropy)(mnemonic, wordlist);
    const salt = (0, util_1.stringToU8a)(`mnemonic${password}`);
    // return the first 32 bytes as the seed
    return (0, index_js_1.pbkdf2Encode)(entropy, salt).password.slice(0, 32);
}
exports.mnemonicToMiniSecret = mnemonicToMiniSecret;


/***/ }),

/***/ 88648:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mnemonicValidate = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const bip39_js_1 = __nccwpck_require__(82128);
/**
 * @name mnemonicValidate
 * @summary Validates a mnemonic input using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).
 * @example
 * <BR>
 *
 * ```javascript
 * import { mnemonicGenerate, mnemonicValidate } from '@polkadot/util-crypto';
 *
 * const mnemonic = mnemonicGenerate(); // => string
 * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean
 * ```
 */
function mnemonicValidate(mnemonic, wordlist, onlyJs) {
    return !util_1.hasBigInt || (!wordlist && !onlyJs && (0, wasm_crypto_1.isReady)())
        ? (0, wasm_crypto_1.bip39Validate)(mnemonic)
        : (0, bip39_js_1.validateMnemonic)(mnemonic, wordlist);
}
exports.mnemonicValidate = mnemonicValidate;


/***/ }),

/***/ 72236:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = 'abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo'.split('|');


/***/ }),

/***/ 72576:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.naclDecrypt = void 0;
const tweetnacl_js_1 = __nccwpck_require__(90442);
/**
 * @name naclDecrypt
 * @summary Decrypts a message using the supplied secretKey and nonce
 * @description
 * Returns an decrypted message, using the `secret` and `nonce`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclDecrypt } from '@polkadot/util-crypto';
 *
 * naclDecrypt([...], [...], [...]); // => [...]
 * ```
 */
function naclDecrypt(encrypted, nonce, secret) {
    return (0, tweetnacl_js_1.naclSecretboxOpen)(encrypted, nonce, secret);
}
exports.naclDecrypt = naclDecrypt;


/***/ }),

/***/ 35283:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.naclEncrypt = void 0;
const asU8a_js_1 = __nccwpck_require__(18363);
const tweetnacl_js_1 = __nccwpck_require__(90442);
/**
 * @name naclEncrypt
 * @summary Encrypts a message using the supplied secretKey and nonce
 * @description
 * Returns an encrypted message, using the `secretKey` and `nonce`. If the `nonce` was not supplied, a random value is generated.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclEncrypt } from '@polkadot/util-crypto';
 *
 * naclEncrypt([...], [...]); // => [...]
 * ```
 */
function naclEncrypt(message, secret, nonce = (0, asU8a_js_1.randomAsU8a)(24)) {
    return {
        encrypted: (0, tweetnacl_js_1.naclSecretbox)(message, nonce, secret),
        nonce
    };
}
exports.naclEncrypt = naclEncrypt;


/***/ }),

/***/ 114:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.naclEncrypt = exports.naclDecrypt = void 0;
/**
 * @summary Implements [NaCl](http://nacl.cr.yp.to/) secret-key authenticated encryption, public-key authenticated encryption
 */
var decrypt_js_1 = __nccwpck_require__(72576);
Object.defineProperty(exports, "naclDecrypt", ({ enumerable: true, get: function () { return decrypt_js_1.naclDecrypt; } }));
var encrypt_js_1 = __nccwpck_require__(35283);
Object.defineProperty(exports, "naclEncrypt", ({ enumerable: true, get: function () { return encrypt_js_1.naclEncrypt; } }));


/***/ }),

/***/ 90442:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.naclSecretboxOpen = exports.naclSecretbox = void 0;
/* eslint-disable brace-style,camelcase,comma-spacing,curly,one-var,padding-line-between-statements,space-infix-ops */
function L32(x, c) { return (x << c) | (x >>> (32 - c)); }
function ld32(x, i) {
    let u = x[i + 3] & 0xff;
    u = (u << 8) | (x[i + 2] & 0xff);
    u = (u << 8) | (x[i + 1] & 0xff);
    return (u << 8) | (x[i + 0] & 0xff);
}
function st32(x, j, u) {
    for (let i = 0; i < 4; i++) {
        x[j + i] = u & 255;
        u >>>= 8;
    }
}
function vn(x, xi, y, yi, n) {
    let d = 0;
    for (let i = 0; i < n; i++)
        d |= x[xi + i] ^ y[yi + i];
    return (1 & ((d - 1) >>> 8)) - 1;
}
function core(out, inp, k, c, h) {
    const w = new Uint32Array(16), x = new Uint32Array(16), y = new Uint32Array(16), t = new Uint32Array(4);
    let i, j, m;
    for (i = 0; i < 4; i++) {
        x[5 * i] = ld32(c, 4 * i);
        x[1 + i] = ld32(k, 4 * i);
        x[6 + i] = ld32(inp, 4 * i);
        x[11 + i] = ld32(k, 16 + 4 * i);
    }
    for (i = 0; i < 16; i++)
        y[i] = x[i];
    for (i = 0; i < 20; i++) {
        for (j = 0; j < 4; j++) {
            for (m = 0; m < 4; m++)
                t[m] = x[(5 * j + 4 * m) % 16];
            t[1] ^= L32((t[0] + t[3]) | 0, 7);
            t[2] ^= L32((t[1] + t[0]) | 0, 9);
            t[3] ^= L32((t[2] + t[1]) | 0, 13);
            t[0] ^= L32((t[3] + t[2]) | 0, 18);
            for (m = 0; m < 4; m++)
                w[4 * j + (j + m) % 4] = t[m];
        }
        for (m = 0; m < 16; m++)
            x[m] = w[m];
    }
    if (h) {
        for (i = 0; i < 16; i++)
            x[i] = (x[i] + y[i]) | 0;
        for (i = 0; i < 4; i++) {
            x[5 * i] = (x[5 * i] - ld32(c, 4 * i)) | 0;
            x[6 + i] = (x[6 + i] - ld32(inp, 4 * i)) | 0;
        }
        for (i = 0; i < 4; i++) {
            st32(out, 4 * i, x[5 * i]);
            st32(out, 16 + 4 * i, x[6 + i]);
        }
    }
    else {
        for (i = 0; i < 16; i++)
            st32(out, 4 * i, (x[i] + y[i]) | 0);
    }
}
const sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {
    const z = new Uint8Array(16), x = new Uint8Array(64);
    let u, i;
    if (!b)
        return 0;
    for (i = 0; i < 16; i++)
        z[i] = 0;
    for (i = 0; i < 8; i++)
        z[i] = n[i];
    while (b >= 64) {
        core(x, z, k, sigma, false);
        for (i = 0; i < 64; i++)
            c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];
        u = 1;
        for (i = 8; i < 16; i++) {
            u = u + (z[i] & 0xff) | 0;
            z[i] = u & 0xff;
            u >>>= 8;
        }
        b -= 64;
        cpos += 64;
        if (m)
            mpos += 64;
    }
    if (b > 0) {
        core(x, z, k, sigma, false);
        for (i = 0; i < b; i++)
            c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];
    }
    return 0;
}
function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {
    const s = new Uint8Array(32);
    core(s, n, k, sigma, true);
    return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, n.subarray(16), s);
}
function add1305(h, c) {
    let u = 0;
    for (let j = 0; j < 17; j++) {
        u = (u + ((h[j] + c[j]) | 0)) | 0;
        h[j] = u & 255;
        u >>>= 8;
    }
}
const minusp = new Uint32Array([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252]);
function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
    let i, j, u;
    const x = new Uint32Array(17), r = new Uint32Array(17), h = new Uint32Array(17), c = new Uint32Array(17), g = new Uint32Array(17);
    for (j = 0; j < 17; j++)
        r[j] = h[j] = 0;
    for (j = 0; j < 16; j++)
        r[j] = k[j];
    r[3] &= 15;
    r[4] &= 252;
    r[7] &= 15;
    r[8] &= 252;
    r[11] &= 15;
    r[12] &= 252;
    r[15] &= 15;
    while (n > 0) {
        for (j = 0; j < 17; j++)
            c[j] = 0;
        for (j = 0; (j < 16) && (j < n); ++j)
            c[j] = m[mpos + j];
        c[j] = 1;
        mpos += j;
        n -= j;
        add1305(h, c);
        for (i = 0; i < 17; i++) {
            x[i] = 0;
            for (j = 0; j < 17; j++)
                x[i] = (x[i] + (h[j] * ((j <= i) ? r[i - j] : ((320 * r[i + 17 - j]) | 0))) | 0) | 0;
        }
        for (i = 0; i < 17; i++)
            h[i] = x[i];
        u = 0;
        for (j = 0; j < 16; j++) {
            u = (u + h[j]) | 0;
            h[j] = u & 255;
            u >>>= 8;
        }
        u = (u + h[16]) | 0;
        h[16] = u & 3;
        u = (5 * (u >>> 2)) | 0;
        for (j = 0; j < 16; j++) {
            u = (u + h[j]) | 0;
            h[j] = u & 255;
            u >>>= 8;
        }
        u = (u + h[16]) | 0;
        h[16] = u;
    }
    for (j = 0; j < 17; j++)
        g[j] = h[j];
    add1305(h, minusp);
    const s = (-(h[16] >>> 7) | 0);
    for (j = 0; j < 17; j++)
        h[j] ^= s & (g[j] ^ h[j]);
    for (j = 0; j < 16; j++)
        c[j] = k[j + 16];
    c[16] = 0;
    add1305(h, c);
    for (j = 0; j < 16; j++)
        out[outpos + j] = h[j];
    return 0;
}
function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
    const x = new Uint8Array(16);
    crypto_onetimeauth(x, 0, m, mpos, n, k);
    return vn(h, hpos, x, 0, 16);
}
function crypto_secretbox(c, m, d, n, k) {
    if (d < 32)
        return -1;
    crypto_stream_xor(c, 0, m, 0, d, n, k);
    crypto_onetimeauth(c, 16, c, 32, d - 32, c);
    for (let i = 0; i < 16; i++)
        c[i] = 0;
    return 0;
}
function crypto_secretbox_open(m, c, d, n, k) {
    const x = new Uint8Array(32);
    if (d < 32)
        return -1;
    crypto_stream_xor(x, 0, null, 0, 32, n, k);
    if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0)
        return -1;
    crypto_stream_xor(m, 0, c, 0, d, n, k);
    for (let i = 0; i < 32; i++)
        m[i] = 0;
    return 0;
}
const crypto_secretbox_KEYBYTES = 32;
const crypto_secretbox_NONCEBYTES = 24;
const crypto_secretbox_ZEROBYTES = 32;
const crypto_secretbox_BOXZEROBYTES = 16;
function checkLengths(k, n) {
    if (k.length !== crypto_secretbox_KEYBYTES)
        throw new Error('bad key size');
    if (n.length !== crypto_secretbox_NONCEBYTES)
        throw new Error('bad nonce size');
}
function checkArrayTypes(...args) {
    for (let i = 0, count = args.length; i < count; i++) {
        if (!(args[i] instanceof Uint8Array))
            throw new TypeError('unexpected type, use Uint8Array');
    }
}
function naclSecretbox(msg, nonce, key) {
    checkArrayTypes(msg, nonce, key);
    checkLengths(key, nonce);
    const m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
    const c = new Uint8Array(m.length);
    for (let i = 0; i < msg.length; i++)
        m[i + crypto_secretbox_ZEROBYTES] = msg[i];
    crypto_secretbox(c, m, m.length, nonce, key);
    return c.subarray(crypto_secretbox_BOXZEROBYTES);
}
exports.naclSecretbox = naclSecretbox;
function naclSecretboxOpen(box, nonce, key) {
    checkArrayTypes(box, nonce, key);
    checkLengths(key, nonce);
    const c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
    const m = new Uint8Array(c.length);
    for (let i = 0; i < box.length; i++)
        c[i + crypto_secretbox_BOXZEROBYTES] = box[i];
    if (c.length < 32)
        return null;
    if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0)
        return null;
    return m.subarray(crypto_secretbox_ZEROBYTES);
}
exports.naclSecretboxOpen = naclSecretboxOpen;


/***/ }),

/***/ 85218:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.selectableNetworks = exports.availableNetworks = exports.allNetworks = void 0;
var networks_1 = __nccwpck_require__(52049);
Object.defineProperty(exports, "allNetworks", ({ enumerable: true, get: function () { return networks_1.allNetworks; } }));
Object.defineProperty(exports, "availableNetworks", ({ enumerable: true, get: function () { return networks_1.availableNetworks; } }));
Object.defineProperty(exports, "selectableNetworks", ({ enumerable: true, get: function () { return networks_1.selectableNetworks; } }));


/***/ }),

/***/ 8807:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/util-crypto', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 59343:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pbkdf2Encode = void 0;
const pbkdf2_1 = __nccwpck_require__(35058);
const sha512_1 = __nccwpck_require__(35251);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const asU8a_js_1 = __nccwpck_require__(18363);
function pbkdf2Encode(passphrase, salt = (0, asU8a_js_1.randomAsU8a)(), rounds = 2048, onlyJs) {
    const u8aPass = (0, util_1.u8aToU8a)(passphrase);
    const u8aSalt = (0, util_1.u8aToU8a)(salt);
    return {
        password: !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
            ? (0, wasm_crypto_1.pbkdf2)(u8aPass, u8aSalt, rounds)
            : (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, u8aPass, u8aSalt, { c: rounds, dkLen: 64 }),
        rounds,
        salt
    };
}
exports.pbkdf2Encode = pbkdf2Encode;


/***/ }),

/***/ 47689:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pbkdf2Encode = void 0;
var encode_js_1 = __nccwpck_require__(59343);
Object.defineProperty(exports, "pbkdf2Encode", ({ enumerable: true, get: function () { return encode_js_1.pbkdf2Encode; } }));


/***/ }),

/***/ 98437:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.randomAsNumber = void 0;
const util_1 = __nccwpck_require__(29795);
const asU8a_js_1 = __nccwpck_require__(18363);
const BN_53 = new util_1.BN(0b11111111111111111111111111111111111111111111111111111);
/**
 * @name randomAsNumber
 * @summary Creates a random number from random bytes.
 * @description
 * Returns a random number generated from the secure bytes.
 * @example
 * <BR>
 *
 * ```javascript
 * import { randomAsNumber } from '@polkadot/util-crypto';
 *
 * randomAsNumber(); // => <random number>
 * ```
 */
function randomAsNumber() {
    return (0, util_1.hexToBn)((0, asU8a_js_1.randomAsHex)(8)).and(BN_53).toNumber();
}
exports.randomAsNumber = randomAsNumber;


/***/ }),

/***/ 18363:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.randomAsHex = exports.randomAsU8a = void 0;
const x_randomvalues_1 = __nccwpck_require__(89716);
const helpers_js_1 = __nccwpck_require__(88663);
/**
 * @name randomAsU8a
 * @summary Creates a Uint8Array filled with random bytes.
 * @description
 * Returns a `Uint8Array` with the specified (optional) length filled with random bytes.
 * @example
 * <BR>
 *
 * ```javascript
 * import { randomAsU8a } from '@polkadot/util-crypto';
 *
 * randomAsU8a(); // => Uint8Array([...])
 * ```
 */
function randomAsU8a(length = 32) {
    return (0, x_randomvalues_1.getRandomValues)(new Uint8Array(length));
}
exports.randomAsU8a = randomAsU8a;
/**
 * @name randomAsHex
 * @description Creates a hex string filled with random bytes.
 */
exports.randomAsHex = (0, helpers_js_1.createAsHex)(randomAsU8a);


/***/ }),

/***/ 80500:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.randomAsU8a = exports.randomAsHex = exports.randomAsNumber = void 0;
/**
 * @summary Returns a sequence of secure random bytes in a variety of formats
 */
var asNumber_js_1 = __nccwpck_require__(98437);
Object.defineProperty(exports, "randomAsNumber", ({ enumerable: true, get: function () { return asNumber_js_1.randomAsNumber; } }));
var asU8a_js_1 = __nccwpck_require__(18363);
Object.defineProperty(exports, "randomAsHex", ({ enumerable: true, get: function () { return asU8a_js_1.randomAsHex; } }));
Object.defineProperty(exports, "randomAsU8a", ({ enumerable: true, get: function () { return asU8a_js_1.randomAsU8a; } }));


/***/ }),

/***/ 9453:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEFAULT_PARAMS = void 0;
exports.DEFAULT_PARAMS = {
    N: 1 << 15,
    p: 1,
    r: 8
};


/***/ }),

/***/ 72572:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scryptEncode = void 0;
const scrypt_1 = __nccwpck_require__(12890);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const asU8a_js_1 = __nccwpck_require__(18363);
const defaults_js_1 = __nccwpck_require__(9453);
function scryptEncode(passphrase, salt = (0, asU8a_js_1.randomAsU8a)(), params = defaults_js_1.DEFAULT_PARAMS, onlyJs) {
    const u8a = (0, util_1.u8aToU8a)(passphrase);
    return {
        params,
        password: !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
            ? (0, wasm_crypto_1.scrypt)(u8a, salt, Math.log2(params.N), params.r, params.p)
            : (0, scrypt_1.scrypt)(u8a, salt, (0, util_1.objectSpread)({ dkLen: 64 }, params)),
        salt
    };
}
exports.scryptEncode = scryptEncode;


/***/ }),

/***/ 10693:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scryptFromU8a = void 0;
const util_1 = __nccwpck_require__(29795);
const bn_js_1 = __nccwpck_require__(39980);
const defaults_js_1 = __nccwpck_require__(9453);
function scryptFromU8a(data) {
    const salt = data.subarray(0, 32);
    const N = (0, util_1.u8aToBn)(data.subarray(32 + 0, 32 + 4), bn_js_1.BN_LE_OPTS).toNumber();
    const p = (0, util_1.u8aToBn)(data.subarray(32 + 4, 32 + 8), bn_js_1.BN_LE_OPTS).toNumber();
    const r = (0, util_1.u8aToBn)(data.subarray(32 + 8, 32 + 12), bn_js_1.BN_LE_OPTS).toNumber();
    // FIXME At this moment we assume these to be fixed params, this is not a great idea
    // since we lose flexibility and updates for greater security. However we need some
    // protection against carefully-crafted params that can eat up CPU since these are user
    // inputs. So we need to get very clever here, but atm we only allow the defaults
    // and if no match, bail out
    if (N !== defaults_js_1.DEFAULT_PARAMS.N || p !== defaults_js_1.DEFAULT_PARAMS.p || r !== defaults_js_1.DEFAULT_PARAMS.r) {
        throw new Error('Invalid injected scrypt params found');
    }
    return { params: { N, p, r }, salt };
}
exports.scryptFromU8a = scryptFromU8a;


/***/ }),

/***/ 21960:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scryptToU8a = exports.scryptFromU8a = exports.scryptEncode = void 0;
var encode_js_1 = __nccwpck_require__(72572);
Object.defineProperty(exports, "scryptEncode", ({ enumerable: true, get: function () { return encode_js_1.scryptEncode; } }));
var fromU8a_js_1 = __nccwpck_require__(10693);
Object.defineProperty(exports, "scryptFromU8a", ({ enumerable: true, get: function () { return fromU8a_js_1.scryptFromU8a; } }));
var toU8a_js_1 = __nccwpck_require__(24099);
Object.defineProperty(exports, "scryptToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.scryptToU8a; } }));


/***/ }),

/***/ 24099:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scryptToU8a = void 0;
const util_1 = __nccwpck_require__(29795);
const bn_js_1 = __nccwpck_require__(39980);
function scryptToU8a(salt, { N, p, r }) {
    return (0, util_1.u8aConcat)(salt, (0, util_1.bnToU8a)(N, bn_js_1.BN_LE_32_OPTS), (0, util_1.bnToU8a)(p, bn_js_1.BN_LE_32_OPTS), (0, util_1.bnToU8a)(r, bn_js_1.BN_LE_32_OPTS));
}
exports.scryptToU8a = scryptToU8a;


/***/ }),

/***/ 3613:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.secp256k1Compress = void 0;
const secp256k1_1 = __nccwpck_require__(46379);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
function secp256k1Compress(publicKey, onlyJs) {
    if (![33, 65].includes(publicKey.length)) {
        throw new Error(`Invalid publicKey provided, received ${publicKey.length} bytes input`);
    }
    if (publicKey.length === 33) {
        return publicKey;
    }
    return !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
        ? (0, wasm_crypto_1.secp256k1Compress)(publicKey)
        : secp256k1_1.secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(true);
}
exports.secp256k1Compress = secp256k1Compress;


/***/ }),

/***/ 82024:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.secp256k1DeriveHard = void 0;
const util_1 = __nccwpck_require__(29795);
const asU8a_js_1 = __nccwpck_require__(38413);
const HDKD = (0, util_1.compactAddLength)((0, util_1.stringToU8a)('Secp256k1HDKD'));
function secp256k1DeriveHard(seed, chainCode) {
    if (!(0, util_1.isU8a)(chainCode) || chainCode.length !== 32) {
        throw new Error('Invalid chainCode passed to derive');
    }
    // NOTE This is specific to the Substrate HDD derivation, so always use the blake2 hasher
    return (0, asU8a_js_1.blake2AsU8a)((0, util_1.u8aConcat)(HDKD, seed, chainCode), 256);
}
exports.secp256k1DeriveHard = secp256k1DeriveHard;


/***/ }),

/***/ 82505:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.secp256k1Expand = void 0;
const secp256k1_1 = __nccwpck_require__(46379);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const bn_js_1 = __nccwpck_require__(39980);
function secp256k1Expand(publicKey, onlyJs) {
    if (![33, 65].includes(publicKey.length)) {
        throw new Error(`Invalid publicKey provided, received ${publicKey.length} bytes input`);
    }
    if (publicKey.length === 65) {
        return publicKey.subarray(1);
    }
    if (!util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())) {
        return (0, wasm_crypto_1.secp256k1Expand)(publicKey).subarray(1);
    }
    const { px, py } = secp256k1_1.secp256k1.ProjectivePoint.fromHex(publicKey);
    return (0, util_1.u8aConcat)((0, util_1.bnToU8a)(px, bn_js_1.BN_BE_256_OPTS), (0, util_1.bnToU8a)(py, bn_js_1.BN_BE_256_OPTS));
}
exports.secp256k1Expand = secp256k1Expand;


/***/ }),

/***/ 71140:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasher = void 0;
const index_js_1 = __nccwpck_require__(21609);
const index_js_2 = __nccwpck_require__(15508);
function hasher(hashType, data, onlyJs) {
    return hashType === 'keccak'
        ? (0, index_js_2.keccakAsU8a)(data, undefined, onlyJs)
        : (0, index_js_1.blake2AsU8a)(data, undefined, undefined, onlyJs);
}
exports.hasher = hasher;


/***/ }),

/***/ 17304:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.secp256k1Verify = exports.secp256k1PrivateKeyTweakAdd = exports.secp256k1Sign = exports.secp256k1Recover = exports.secp256k1PairFromSeed = exports.secp256k1Expand = exports.secp256k1Compress = void 0;
var compress_js_1 = __nccwpck_require__(3613);
Object.defineProperty(exports, "secp256k1Compress", ({ enumerable: true, get: function () { return compress_js_1.secp256k1Compress; } }));
var expand_js_1 = __nccwpck_require__(82505);
Object.defineProperty(exports, "secp256k1Expand", ({ enumerable: true, get: function () { return expand_js_1.secp256k1Expand; } }));
var fromSeed_js_1 = __nccwpck_require__(81577);
Object.defineProperty(exports, "secp256k1PairFromSeed", ({ enumerable: true, get: function () { return fromSeed_js_1.secp256k1PairFromSeed; } }));
var recover_js_1 = __nccwpck_require__(58518);
Object.defineProperty(exports, "secp256k1Recover", ({ enumerable: true, get: function () { return recover_js_1.secp256k1Recover; } }));
var sign_js_1 = __nccwpck_require__(77607);
Object.defineProperty(exports, "secp256k1Sign", ({ enumerable: true, get: function () { return sign_js_1.secp256k1Sign; } }));
var tweakAdd_js_1 = __nccwpck_require__(90638);
Object.defineProperty(exports, "secp256k1PrivateKeyTweakAdd", ({ enumerable: true, get: function () { return tweakAdd_js_1.secp256k1PrivateKeyTweakAdd; } }));
var verify_js_1 = __nccwpck_require__(37401);
Object.defineProperty(exports, "secp256k1Verify", ({ enumerable: true, get: function () { return verify_js_1.secp256k1Verify; } }));


/***/ }),

/***/ 81577:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.secp256k1PairFromSeed = void 0;
const secp256k1_1 = __nccwpck_require__(46379);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
/**
 * @name secp256k1PairFromSeed
 * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 */
function secp256k1PairFromSeed(seed, onlyJs) {
    if (seed.length !== 32) {
        throw new Error('Expected valid 32-byte private key as a seed');
    }
    if (!util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())) {
        const full = (0, wasm_crypto_1.secp256k1FromSeed)(seed);
        const publicKey = full.slice(32);
        // There is an issue with the secp256k1 when running in an ASM.js environment where
        // it seems that the lazy static section yields invalid results on the _first_ run.
        // If this happens, fail outright, we cannot allow invalid return values
        // https://github.com/polkadot-js/wasm/issues/307
        if ((0, util_1.u8aEmpty)(publicKey)) {
            throw new Error('Invalid publicKey generated from WASM interface');
        }
        return {
            publicKey,
            secretKey: full.slice(0, 32)
        };
    }
    return {
        publicKey: secp256k1_1.secp256k1.getPublicKey(seed, true),
        secretKey: seed
    };
}
exports.secp256k1PairFromSeed = secp256k1PairFromSeed;


/***/ }),

/***/ 58518:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.secp256k1Recover = void 0;
const secp256k1_1 = __nccwpck_require__(46379);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const compress_js_1 = __nccwpck_require__(3613);
const expand_js_1 = __nccwpck_require__(82505);
/**
 * @name secp256k1Recover
 * @description Recovers a publicKey from the supplied signature
 */
function secp256k1Recover(msgHash, signature, recovery, hashType = 'blake2', onlyJs) {
    const sig = (0, util_1.u8aToU8a)(signature).subarray(0, 64);
    const msg = (0, util_1.u8aToU8a)(msgHash);
    const publicKey = !util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())
        ? (0, wasm_crypto_1.secp256k1Recover)(msg, sig, recovery)
        : secp256k1_1.secp256k1.Signature
            .fromCompact(sig)
            .addRecoveryBit(recovery)
            .recoverPublicKey(msg)
            .toRawBytes();
    if (!publicKey) {
        throw new Error('Unable to recover publicKey from signature');
    }
    return hashType === 'keccak'
        ? (0, expand_js_1.secp256k1Expand)(publicKey, onlyJs)
        : (0, compress_js_1.secp256k1Compress)(publicKey, onlyJs);
}
exports.secp256k1Recover = secp256k1Recover;


/***/ }),

/***/ 77607:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.secp256k1Sign = void 0;
const secp256k1_1 = __nccwpck_require__(46379);
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const bn_js_1 = __nccwpck_require__(39980);
const hasher_js_1 = __nccwpck_require__(71140);
/**
 * @name secp256k1Sign
 * @description Returns message signature of `message`, using the supplied pair
 */
function secp256k1Sign(message, { secretKey }, hashType = 'blake2', onlyJs) {
    if (secretKey?.length !== 32) {
        throw new Error('Expected valid secp256k1 secretKey, 32-bytes');
    }
    const data = (0, hasher_js_1.hasher)(hashType, message, onlyJs);
    if (!util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())) {
        return (0, wasm_crypto_1.secp256k1Sign)(data, secretKey);
    }
    const signature = secp256k1_1.secp256k1.sign(data, secretKey, { lowS: true });
    return (0, util_1.u8aConcat)((0, util_1.bnToU8a)(signature.r, bn_js_1.BN_BE_256_OPTS), (0, util_1.bnToU8a)(signature.s, bn_js_1.BN_BE_256_OPTS), new Uint8Array([signature.recovery || 0]));
}
exports.secp256k1Sign = secp256k1Sign;


/***/ }),

/***/ 90638:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.secp256k1PrivateKeyTweakAdd = void 0;
const util_1 = __nccwpck_require__(29795);
const x_bigint_1 = __nccwpck_require__(285);
const bn_js_1 = __nccwpck_require__(39980);
const N = 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141'.replace(/ /g, '');
const N_BI = (0, x_bigint_1.BigInt)(`0x${N}`);
const N_BN = new util_1.BN(N, 'hex');
function addBi(seckey, tweak) {
    let res = (0, util_1.u8aToBigInt)(tweak, bn_js_1.BN_BE_OPTS);
    if (res >= N_BI) {
        throw new Error('Tweak parameter is out of range');
    }
    res += (0, util_1.u8aToBigInt)(seckey, bn_js_1.BN_BE_OPTS);
    if (res >= N_BI) {
        res -= N_BI;
    }
    if (res === util_1._0n) {
        throw new Error('Invalid resulting private key');
    }
    return (0, util_1.nToU8a)(res, bn_js_1.BN_BE_256_OPTS);
}
function addBn(seckey, tweak) {
    const res = new util_1.BN(tweak);
    if (res.cmp(N_BN) >= 0) {
        throw new Error('Tweak parameter is out of range');
    }
    res.iadd(new util_1.BN(seckey));
    if (res.cmp(N_BN) >= 0) {
        res.isub(N_BN);
    }
    if (res.isZero()) {
        throw new Error('Invalid resulting private key');
    }
    return (0, util_1.bnToU8a)(res, bn_js_1.BN_BE_256_OPTS);
}
function secp256k1PrivateKeyTweakAdd(seckey, tweak, onlyBn) {
    if (!(0, util_1.isU8a)(seckey) || seckey.length !== 32) {
        throw new Error('Expected seckey to be an Uint8Array with length 32');
    }
    else if (!(0, util_1.isU8a)(tweak) || tweak.length !== 32) {
        throw new Error('Expected tweak to be an Uint8Array with length 32');
    }
    return !util_1.hasBigInt || onlyBn
        ? addBn(seckey, tweak)
        : addBi(seckey, tweak);
}
exports.secp256k1PrivateKeyTweakAdd = secp256k1PrivateKeyTweakAdd;


/***/ }),

/***/ 37401:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.secp256k1Verify = void 0;
const util_1 = __nccwpck_require__(29795);
const hasher_js_1 = __nccwpck_require__(71140);
const recover_js_1 = __nccwpck_require__(58518);
/**
 * @name secp256k1Verify
 * @description Verifies the signature of `message`, using the supplied pair
 */
function secp256k1Verify(msgHash, signature, address, hashType = 'blake2', onlyJs) {
    const sig = (0, util_1.u8aToU8a)(signature);
    if (sig.length !== 65) {
        throw new Error(`Expected signature with 65 bytes, ${sig.length} found instead`);
    }
    const publicKey = (0, recover_js_1.secp256k1Recover)((0, hasher_js_1.hasher)(hashType, msgHash), sig, sig[64], hashType, onlyJs);
    const signerAddr = (0, hasher_js_1.hasher)(hashType, publicKey, onlyJs);
    const inputAddr = (0, util_1.u8aToU8a)(address);
    // for Ethereum (keccak) the last 20 bytes is the address
    return (0, util_1.u8aEq)(publicKey, inputAddr) || (hashType === 'keccak'
        ? (0, util_1.u8aEq)(signerAddr.slice(-20), inputAddr.slice(-20))
        : (0, util_1.u8aEq)(signerAddr, inputAddr));
}
exports.secp256k1Verify = secp256k1Verify;


/***/ }),

/***/ 45916:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sha512AsU8a = exports.sha256AsU8a = exports.shaAsU8a = void 0;
const sha256_1 = __nccwpck_require__(70708);
const sha512_1 = __nccwpck_require__(35251);
const wasm_crypto_1 = __nccwpck_require__(72846);
const helpers_js_1 = __nccwpck_require__(88663);
/**
 * @name shaAsU8a
 * @summary Creates a sha Uint8Array from the input.
 */
exports.shaAsU8a = (0, helpers_js_1.createDualHasher)({ 256: wasm_crypto_1.sha256, 512: wasm_crypto_1.sha512 }, { 256: sha256_1.sha256, 512: sha512_1.sha512 });
/**
 * @name sha256AsU8a
 * @summary Creates a sha256 Uint8Array from the input.
 */
exports.sha256AsU8a = (0, helpers_js_1.createBitHasher)(256, exports.shaAsU8a);
/**
 * @name sha512AsU8a
 * @summary Creates a sha512 Uint8Array from the input.
 */
exports.sha512AsU8a = (0, helpers_js_1.createBitHasher)(512, exports.shaAsU8a);


/***/ }),

/***/ 32393:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.shaAsU8a = exports.sha512AsU8a = exports.sha256AsU8a = void 0;
/**
 * @summary Implements Sha-256/512 hashing functions for a variety of input and outputs
 */
var asU8a_js_1 = __nccwpck_require__(45916);
Object.defineProperty(exports, "sha256AsU8a", ({ enumerable: true, get: function () { return asU8a_js_1.sha256AsU8a; } }));
Object.defineProperty(exports, "sha512AsU8a", ({ enumerable: true, get: function () { return asU8a_js_1.sha512AsU8a; } }));
Object.defineProperty(exports, "shaAsU8a", ({ enumerable: true, get: function () { return asU8a_js_1.shaAsU8a; } }));


/***/ }),

/***/ 91293:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.signatureVerify = void 0;
/**
 * @summary Utilities for working with signatures
 */
var verify_js_1 = __nccwpck_require__(1008);
Object.defineProperty(exports, "signatureVerify", ({ enumerable: true, get: function () { return verify_js_1.signatureVerify; } }));


/***/ }),

/***/ 1008:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.signatureVerify = void 0;
const util_1 = __nccwpck_require__(29795);
const decode_js_1 = __nccwpck_require__(87162);
const verify_js_1 = __nccwpck_require__(66187);
const verify_js_2 = __nccwpck_require__(37401);
const verify_js_3 = __nccwpck_require__(14351);
const secp256k1VerifyHasher = (hashType) => (message, signature, publicKey) => (0, verify_js_2.secp256k1Verify)(message, signature, publicKey, hashType);
const VERIFIERS_ECDSA = [
    ['ecdsa', secp256k1VerifyHasher('blake2')],
    ['ethereum', secp256k1VerifyHasher('keccak')]
];
const VERIFIERS = [
    ['ed25519', verify_js_1.ed25519Verify],
    ['sr25519', verify_js_3.sr25519Verify],
    ...VERIFIERS_ECDSA
];
const CRYPTO_TYPES = ['ed25519', 'sr25519', 'ecdsa'];
function verifyDetect(result, { message, publicKey, signature }, verifiers = VERIFIERS) {
    result.isValid = verifiers.some(([crypto, verify]) => {
        try {
            if (verify(message, signature, publicKey)) {
                result.crypto = crypto;
                return true;
            }
        }
        catch {
            // do nothing, result.isValid still set to false
        }
        return false;
    });
    return result;
}
function verifyMultisig(result, { message, publicKey, signature }) {
    if (![0, 1, 2].includes(signature[0])) {
        throw new Error(`Unknown crypto type, expected signature prefix [0..2], found ${signature[0]}`);
    }
    const type = CRYPTO_TYPES[signature[0]] || 'none';
    result.crypto = type;
    try {
        result.isValid = {
            ecdsa: () => verifyDetect(result, { message, publicKey, signature: signature.subarray(1) }, VERIFIERS_ECDSA).isValid,
            ed25519: () => (0, verify_js_1.ed25519Verify)(message, signature.subarray(1), publicKey),
            none: () => {
                throw Error('no verify for `none` crypto type');
            },
            sr25519: () => (0, verify_js_3.sr25519Verify)(message, signature.subarray(1), publicKey)
        }[type]();
    }
    catch {
        // ignore, result.isValid still set to false
    }
    return result;
}
function getVerifyFn(signature) {
    return [0, 1, 2].includes(signature[0]) && [65, 66].includes(signature.length)
        ? verifyMultisig
        : verifyDetect;
}
function signatureVerify(message, signature, addressOrPublicKey) {
    const signatureU8a = (0, util_1.u8aToU8a)(signature);
    if (![64, 65, 66].includes(signatureU8a.length)) {
        throw new Error(`Invalid signature length, expected [64..66] bytes, found ${signatureU8a.length}`);
    }
    const publicKey = (0, decode_js_1.decodeAddress)(addressOrPublicKey);
    const input = { message: (0, util_1.u8aToU8a)(message), publicKey, signature: signatureU8a };
    const result = { crypto: 'none', isValid: false, isWrapped: (0, util_1.u8aIsWrapped)(input.message, true), publicKey };
    const isWrappedBytes = (0, util_1.u8aIsWrapped)(input.message, false);
    const verifyFn = getVerifyFn(signatureU8a);
    verifyFn(result, input);
    if (result.crypto !== 'none' || (result.isWrapped && !isWrappedBytes)) {
        return result;
    }
    input.message = isWrappedBytes
        ? (0, util_1.u8aUnwrapBytes)(input.message)
        : (0, util_1.u8aWrapBytes)(input.message);
    return verifyFn(result, input);
}
exports.signatureVerify = signatureVerify;


/***/ }),

/***/ 73140:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519Agreement = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
/**
 * @name sr25519Agreement
 * @description Key agreement between other's public key and self secret key
 */
function sr25519Agreement(secretKey, publicKey) {
    const secretKeyU8a = (0, util_1.u8aToU8a)(secretKey);
    const publicKeyU8a = (0, util_1.u8aToU8a)(publicKey);
    if (publicKeyU8a.length !== 32) {
        throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);
    }
    else if (secretKeyU8a.length !== 64) {
        throw new Error(`Invalid secretKey, received ${secretKeyU8a.length} bytes, expected 64`);
    }
    return (0, wasm_crypto_1.sr25519Agree)(publicKeyU8a, secretKeyU8a);
}
exports.sr25519Agreement = sr25519Agreement;


/***/ }),

/***/ 72256:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createDeriveFn = void 0;
const util_1 = __nccwpck_require__(29795);
const fromU8a_js_1 = __nccwpck_require__(71201);
const toU8a_js_1 = __nccwpck_require__(99402);
function createDeriveFn(derive) {
    return (keypair, chainCode) => {
        if (!(0, util_1.isU8a)(chainCode) || chainCode.length !== 32) {
            throw new Error('Invalid chainCode passed to derive');
        }
        return (0, fromU8a_js_1.sr25519PairFromU8a)(derive((0, toU8a_js_1.sr25519KeypairToU8a)(keypair), chainCode));
    };
}
exports.createDeriveFn = createDeriveFn;


/***/ }),

/***/ 99874:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519DeriveHard = void 0;
const wasm_crypto_1 = __nccwpck_require__(72846);
const derive_js_1 = __nccwpck_require__(72256);
exports.sr25519DeriveHard = (0, derive_js_1.createDeriveFn)(wasm_crypto_1.sr25519DeriveKeypairHard);


/***/ }),

/***/ 8385:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519DerivePublic = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
function sr25519DerivePublic(publicKey, chainCode) {
    const publicKeyU8a = (0, util_1.u8aToU8a)(publicKey);
    if (!(0, util_1.isU8a)(chainCode) || chainCode.length !== 32) {
        throw new Error('Invalid chainCode passed to derive');
    }
    else if (publicKeyU8a.length !== 32) {
        throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);
    }
    return (0, wasm_crypto_1.sr25519DerivePublicSoft)(publicKeyU8a, chainCode);
}
exports.sr25519DerivePublic = sr25519DerivePublic;


/***/ }),

/***/ 41406:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519DeriveSoft = void 0;
const wasm_crypto_1 = __nccwpck_require__(72846);
const derive_js_1 = __nccwpck_require__(72256);
exports.sr25519DeriveSoft = (0, derive_js_1.createDeriveFn)(wasm_crypto_1.sr25519DeriveKeypairSoft);


/***/ }),

/***/ 20690:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519VrfVerify = exports.sr25519VrfSign = exports.sr25519Verify = exports.sr25519Sign = exports.sr25519PairFromSeed = exports.sr25519DeriveSoft = exports.sr25519DerivePublic = exports.sr25519DeriveHard = exports.sr25519Agreement = void 0;
var agreement_js_1 = __nccwpck_require__(73140);
Object.defineProperty(exports, "sr25519Agreement", ({ enumerable: true, get: function () { return agreement_js_1.sr25519Agreement; } }));
var deriveHard_js_1 = __nccwpck_require__(99874);
Object.defineProperty(exports, "sr25519DeriveHard", ({ enumerable: true, get: function () { return deriveHard_js_1.sr25519DeriveHard; } }));
var derivePublic_js_1 = __nccwpck_require__(8385);
Object.defineProperty(exports, "sr25519DerivePublic", ({ enumerable: true, get: function () { return derivePublic_js_1.sr25519DerivePublic; } }));
var deriveSoft_js_1 = __nccwpck_require__(41406);
Object.defineProperty(exports, "sr25519DeriveSoft", ({ enumerable: true, get: function () { return deriveSoft_js_1.sr25519DeriveSoft; } }));
var fromSeed_js_1 = __nccwpck_require__(23873);
Object.defineProperty(exports, "sr25519PairFromSeed", ({ enumerable: true, get: function () { return fromSeed_js_1.sr25519PairFromSeed; } }));
var sign_js_1 = __nccwpck_require__(84034);
Object.defineProperty(exports, "sr25519Sign", ({ enumerable: true, get: function () { return sign_js_1.sr25519Sign; } }));
var verify_js_1 = __nccwpck_require__(14351);
Object.defineProperty(exports, "sr25519Verify", ({ enumerable: true, get: function () { return verify_js_1.sr25519Verify; } }));
var vrfSign_js_1 = __nccwpck_require__(78768);
Object.defineProperty(exports, "sr25519VrfSign", ({ enumerable: true, get: function () { return vrfSign_js_1.sr25519VrfSign; } }));
var vrfVerify_js_1 = __nccwpck_require__(85479);
Object.defineProperty(exports, "sr25519VrfVerify", ({ enumerable: true, get: function () { return vrfVerify_js_1.sr25519VrfVerify; } }));


/***/ }),

/***/ 23873:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519PairFromSeed = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const fromU8a_js_1 = __nccwpck_require__(71201);
/**
 * @name sr25519PairFromSeed
 * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 */
function sr25519PairFromSeed(seed) {
    const seedU8a = (0, util_1.u8aToU8a)(seed);
    if (seedU8a.length !== 32) {
        throw new Error(`Expected a seed matching 32 bytes, found ${seedU8a.length}`);
    }
    return (0, fromU8a_js_1.sr25519PairFromU8a)((0, wasm_crypto_1.sr25519KeypairFromSeed)(seedU8a));
}
exports.sr25519PairFromSeed = sr25519PairFromSeed;


/***/ }),

/***/ 71201:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519PairFromU8a = void 0;
const util_1 = __nccwpck_require__(29795);
const SEC_LEN = 64;
const PUB_LEN = 32;
const TOT_LEN = SEC_LEN + PUB_LEN;
function sr25519PairFromU8a(full) {
    const fullU8a = (0, util_1.u8aToU8a)(full);
    if (fullU8a.length !== TOT_LEN) {
        throw new Error(`Expected keypair with ${TOT_LEN} bytes, found ${fullU8a.length}`);
    }
    return {
        publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),
        secretKey: fullU8a.slice(0, SEC_LEN)
    };
}
exports.sr25519PairFromU8a = sr25519PairFromU8a;


/***/ }),

/***/ 99402:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519KeypairToU8a = void 0;
const util_1 = __nccwpck_require__(29795);
function sr25519KeypairToU8a({ publicKey, secretKey }) {
    return (0, util_1.u8aConcat)(secretKey, publicKey).slice();
}
exports.sr25519KeypairToU8a = sr25519KeypairToU8a;


/***/ }),

/***/ 84034:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519Sign = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
/**
 * @name sr25519Sign
 * @description Returns message signature of `message`, using the supplied pair
 */
function sr25519Sign(message, { publicKey, secretKey }) {
    if (publicKey?.length !== 32) {
        throw new Error('Expected a valid publicKey, 32-bytes');
    }
    else if (secretKey?.length !== 64) {
        throw new Error('Expected a valid secretKey, 64-bytes');
    }
    return (0, wasm_crypto_1.sr25519Sign)(publicKey, secretKey, (0, util_1.u8aToU8a)(message));
}
exports.sr25519Sign = sr25519Sign;


/***/ }),

/***/ 14351:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519Verify = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
/**
 * @name sr25519Verify
 * @description Verifies the signature of `message`, using the supplied pair
 */
function sr25519Verify(message, signature, publicKey) {
    const publicKeyU8a = (0, util_1.u8aToU8a)(publicKey);
    const signatureU8a = (0, util_1.u8aToU8a)(signature);
    if (publicKeyU8a.length !== 32) {
        throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);
    }
    else if (signatureU8a.length !== 64) {
        throw new Error(`Invalid signature, received ${signatureU8a.length} bytes, expected 64`);
    }
    return (0, wasm_crypto_1.sr25519Verify)(signatureU8a, (0, util_1.u8aToU8a)(message), publicKeyU8a);
}
exports.sr25519Verify = sr25519Verify;


/***/ }),

/***/ 78768:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519VrfSign = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const EMPTY_U8A = new Uint8Array();
/**
 * @name sr25519VrfSign
 * @description Sign with sr25519 vrf signing (deterministic)
 */
function sr25519VrfSign(message, { secretKey }, context = EMPTY_U8A, extra = EMPTY_U8A) {
    if (secretKey?.length !== 64) {
        throw new Error('Invalid secretKey, expected 64-bytes');
    }
    return (0, wasm_crypto_1.vrfSign)(secretKey, (0, util_1.u8aToU8a)(context), (0, util_1.u8aToU8a)(message), (0, util_1.u8aToU8a)(extra));
}
exports.sr25519VrfSign = sr25519VrfSign;


/***/ }),

/***/ 85479:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sr25519VrfVerify = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const EMPTY_U8A = new Uint8Array();
/**
 * @name sr25519VrfVerify
 * @description Verify with sr25519 vrf verification
 */
function sr25519VrfVerify(message, signOutput, publicKey, context = EMPTY_U8A, extra = EMPTY_U8A) {
    const publicKeyU8a = (0, util_1.u8aToU8a)(publicKey);
    const proofU8a = (0, util_1.u8aToU8a)(signOutput);
    if (publicKeyU8a.length !== 32) {
        throw new Error('Invalid publicKey, expected 32-bytes');
    }
    else if (proofU8a.length !== 96) {
        throw new Error('Invalid vrfSign output, expected 96 bytes');
    }
    return (0, wasm_crypto_1.vrfVerify)(publicKeyU8a, (0, util_1.u8aToU8a)(context), (0, util_1.u8aToU8a)(message), (0, util_1.u8aToU8a)(extra), proofU8a);
}
exports.sr25519VrfVerify = sr25519VrfVerify;


/***/ }),

/***/ 42574:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.xxhashAsHex = exports.xxhashAsU8a = void 0;
const util_1 = __nccwpck_require__(29795);
const wasm_crypto_1 = __nccwpck_require__(72846);
const helpers_js_1 = __nccwpck_require__(88663);
const xxhash64_js_1 = __nccwpck_require__(82290);
/**
 * @name xxhashAsU8a
 * @summary Creates a xxhash64 u8a from the input.
 * @description
 * From either a `string`, `Uint8Array` or a `Buffer` input, create the xxhash64 and return the result as a `Uint8Array` with the specified `bitLength`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { xxhashAsU8a } from '@polkadot/util-crypto';
 *
 * xxhashAsU8a('abc'); // => 0x44bc2cf5ad770999
 * ```
 */
function xxhashAsU8a(data, bitLength = 64, onlyJs) {
    const rounds = Math.ceil(bitLength / 64);
    const u8a = (0, util_1.u8aToU8a)(data);
    if (!util_1.hasBigInt || (!onlyJs && (0, wasm_crypto_1.isReady)())) {
        return (0, wasm_crypto_1.twox)(u8a, rounds);
    }
    const result = new Uint8Array(rounds * 8);
    for (let seed = 0; seed < rounds; seed++) {
        result.set((0, xxhash64_js_1.xxhash64)(u8a, seed).reverse(), seed * 8);
    }
    return result;
}
exports.xxhashAsU8a = xxhashAsU8a;
/**
 * @name xxhashAsHex
 * @description Creates a xxhash64 hex from the input.
 */
exports.xxhashAsHex = (0, helpers_js_1.createAsHex)(xxhashAsU8a);


/***/ }),

/***/ 18269:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.xxhashAsU8a = exports.xxhashAsHex = void 0;
/**
 * @summary Create xxhash64 values with specified bitlengths
 */
var asU8a_js_1 = __nccwpck_require__(42574);
Object.defineProperty(exports, "xxhashAsHex", ({ enumerable: true, get: function () { return asU8a_js_1.xxhashAsHex; } }));
Object.defineProperty(exports, "xxhashAsU8a", ({ enumerable: true, get: function () { return asU8a_js_1.xxhashAsU8a; } }));


/***/ }),

/***/ 82290:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.xxhash64 = void 0;
const util_1 = __nccwpck_require__(29795);
const x_bigint_1 = __nccwpck_require__(285);
const P64_1 = (0, x_bigint_1.BigInt)('11400714785074694791');
const P64_2 = (0, x_bigint_1.BigInt)('14029467366897019727');
const P64_3 = (0, x_bigint_1.BigInt)('1609587929392839161');
const P64_4 = (0, x_bigint_1.BigInt)('9650029242287828579');
const P64_5 = (0, x_bigint_1.BigInt)('2870177450012600261');
const U64 = (0, x_bigint_1.BigInt)('0xffffffffffffffff');
const _7n = (0, x_bigint_1.BigInt)(7);
const _11n = (0, x_bigint_1.BigInt)(11);
const _12n = (0, x_bigint_1.BigInt)(12);
const _16n = (0, x_bigint_1.BigInt)(16);
const _18n = (0, x_bigint_1.BigInt)(18);
const _23n = (0, x_bigint_1.BigInt)(23);
const _27n = (0, x_bigint_1.BigInt)(27);
const _29n = (0, x_bigint_1.BigInt)(29);
const _31n = (0, x_bigint_1.BigInt)(31);
const _32n = (0, x_bigint_1.BigInt)(32);
const _33n = (0, x_bigint_1.BigInt)(33);
const _64n = (0, x_bigint_1.BigInt)(64);
const _256n = (0, x_bigint_1.BigInt)(256);
function rotl(a, b) {
    const c = a & U64;
    return ((c << b) | (c >> (_64n - b))) & U64;
}
function fromU8a(u8a, p, count) {
    const bigints = new Array(count);
    let offset = 0;
    for (let i = 0; i < count; i++, offset += 2) {
        bigints[i] = (0, x_bigint_1.BigInt)(u8a[p + offset] | (u8a[p + 1 + offset] << 8));
    }
    let result = util_1._0n;
    for (let i = count - 1; i >= 0; i--) {
        result = (result << _16n) + bigints[i];
    }
    return result;
}
function init(seed, input) {
    const state = {
        seed,
        u8a: new Uint8Array(32),
        u8asize: 0,
        v1: seed + P64_1 + P64_2,
        v2: seed + P64_2,
        v3: seed,
        v4: seed - P64_1
    };
    if (input.length < 32) {
        state.u8a.set(input);
        state.u8asize = input.length;
        return state;
    }
    const limit = input.length - 32;
    let p = 0;
    if (limit >= 0) {
        const adjustV = (v) => P64_1 * rotl(v + P64_2 * fromU8a(input, p, 4), _31n);
        do {
            state.v1 = adjustV(state.v1);
            p += 8;
            state.v2 = adjustV(state.v2);
            p += 8;
            state.v3 = adjustV(state.v3);
            p += 8;
            state.v4 = adjustV(state.v4);
            p += 8;
        } while (p <= limit);
    }
    if (p < input.length) {
        state.u8a.set(input.subarray(p, input.length));
        state.u8asize = input.length - p;
    }
    return state;
}
function xxhash64(input, initSeed) {
    const { seed, u8a, u8asize, v1, v2, v3, v4 } = init((0, x_bigint_1.BigInt)(initSeed), input);
    let p = 0;
    let h64 = U64 & ((0, x_bigint_1.BigInt)(input.length) + (input.length >= 32
        ? (((((((((rotl(v1, util_1._1n) + rotl(v2, _7n) + rotl(v3, _12n) + rotl(v4, _18n)) ^ (P64_1 * rotl(v1 * P64_2, _31n))) * P64_1 + P64_4) ^ (P64_1 * rotl(v2 * P64_2, _31n))) * P64_1 + P64_4) ^ (P64_1 * rotl(v3 * P64_2, _31n))) * P64_1 + P64_4) ^ (P64_1 * rotl(v4 * P64_2, _31n))) * P64_1 + P64_4)
        : (seed + P64_5)));
    while (p <= (u8asize - 8)) {
        h64 = U64 & (P64_4 + P64_1 * rotl(h64 ^ (P64_1 * rotl(P64_2 * fromU8a(u8a, p, 4), _31n)), _27n));
        p += 8;
    }
    if ((p + 4) <= u8asize) {
        h64 = U64 & (P64_3 + P64_2 * rotl(h64 ^ (P64_1 * fromU8a(u8a, p, 2)), _23n));
        p += 4;
    }
    while (p < u8asize) {
        h64 = U64 & (P64_1 * rotl(h64 ^ (P64_5 * (0, x_bigint_1.BigInt)(u8a[p++])), _11n));
    }
    h64 = U64 & (P64_2 * (h64 ^ (h64 >> _33n)));
    h64 = U64 & (P64_3 * (h64 ^ (h64 >> _29n)));
    h64 = U64 & (h64 ^ (h64 >> _32n));
    const result = new Uint8Array(8);
    for (let i = 7; i >= 0; i--) {
        result[i] = Number(h64 % _256n);
        h64 = h64 / _256n;
    }
    return result;
}
exports.xxhash64 = xxhash64;


/***/ }),

/***/ 97904:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrayChunk = void 0;
/**
 * @name arrayChunk
 * @summary Split T[] into T[][] based on the defind size
 * @description
 * Returns a set ao arrays based on the chunksize
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayChunk } from '@polkadot/util';
 *
 * arrayChunk([1, 2, 3, 4, 5]); // [[1, 2], [3, 4], [5]]
 * ```
 */
function arrayChunk(array, chunkSize) {
    const outputSize = Math.ceil(array.length / chunkSize);
    // shortcut for the single-split case
    if (outputSize === 1) {
        return [array];
    }
    const output = Array(outputSize);
    for (let i = 0; i < outputSize; i++) {
        const offset = i * chunkSize;
        output[i] = array.slice(offset, offset + chunkSize);
    }
    return output;
}
exports.arrayChunk = arrayChunk;


/***/ }),

/***/ 2371:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrayFilter = void 0;
/**
 * @name arrayFilter
 * @summary Filters undefined and (optionally) null values from an array
 * @description
 * Returns a new array with all `undefined` values removed. Optionally, when `allowNulls = false`, it removes the `null` values as well
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayFilter } from '@polkadot/util';
 *
 * arrayFilter([0, void 0, true, null, false, '']); // [0, true, null, false, '']
 * arrayFilter([0, void 0, true, null, false, ''], false); // [0, true, false, '']
 * ```
 */
function arrayFilter(array, allowNulls = true) {
    return array.filter((v) => v !== undefined &&
        (allowNulls || v !== null));
}
exports.arrayFilter = arrayFilter;


/***/ }),

/***/ 32711:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrayFlatten = void 0;
/**
 * @name arrayFlatten
 * @summary Merge T[][] into T[]
 * @description
 * Returns a new array with all arrays merged into one
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayFlatten } from '@polkadot/util';
 *
 * arrayFlatten([[1, 2], [3, 4], [5]]); // [1, 2, 3, 4, 5]
 * ```
 */
function arrayFlatten(arrays) {
    const num = arrays.length;
    // shortcuts for the empty & single-entry case
    if (num === 0) {
        return [];
    }
    else if (num === 1) {
        return arrays[0];
    }
    // pre-allocate based on the combined size
    let size = 0;
    for (let i = 0; i < num; i++) {
        size += arrays[i].length;
    }
    const output = new Array(size);
    let i = -1;
    for (let j = 0; j < num; j++) {
        const a = arrays[j];
        // instead of pushing, we just set the entries
        for (let e = 0, count = a.length; e < count; e++) {
            output[++i] = a[e];
        }
    }
    return output;
}
exports.arrayFlatten = arrayFlatten;


/***/ }),

/***/ 51770:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrayZip = exports.arrayUnzip = exports.arrayShuffle = exports.arrayRange = exports.arrayFlatten = exports.arrayFilter = exports.arrayChunk = void 0;
/**
 * @summary Utility methods that operates on arrays
 */
var chunk_js_1 = __nccwpck_require__(97904);
Object.defineProperty(exports, "arrayChunk", ({ enumerable: true, get: function () { return chunk_js_1.arrayChunk; } }));
var filter_js_1 = __nccwpck_require__(2371);
Object.defineProperty(exports, "arrayFilter", ({ enumerable: true, get: function () { return filter_js_1.arrayFilter; } }));
var flatten_js_1 = __nccwpck_require__(32711);
Object.defineProperty(exports, "arrayFlatten", ({ enumerable: true, get: function () { return flatten_js_1.arrayFlatten; } }));
var range_js_1 = __nccwpck_require__(48601);
Object.defineProperty(exports, "arrayRange", ({ enumerable: true, get: function () { return range_js_1.arrayRange; } }));
var shuffle_js_1 = __nccwpck_require__(18497);
Object.defineProperty(exports, "arrayShuffle", ({ enumerable: true, get: function () { return shuffle_js_1.arrayShuffle; } }));
var unzip_js_1 = __nccwpck_require__(8966);
Object.defineProperty(exports, "arrayUnzip", ({ enumerable: true, get: function () { return unzip_js_1.arrayUnzip; } }));
var zip_js_1 = __nccwpck_require__(93978);
Object.defineProperty(exports, "arrayZip", ({ enumerable: true, get: function () { return zip_js_1.arrayZip; } }));


/***/ }),

/***/ 48601:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrayRange = void 0;
/**
 * @name arrayRange
 * @summary Returns a range of numbers ith the size and the specified offset
 * @description
 * Returns a new array of numbers with the specific size. Optionally, when `startAt`, is provided, it generates the range to start at a specific value.
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayRange } from '@polkadot/util';
 *
 * arrayRange(5); // [0, 1, 2, 3, 4]
 * arrayRange(3, 5); // [5, 6, 7]
 * ```
 */
function arrayRange(size, startAt = 0) {
    if (size <= 0) {
        throw new Error('Expected non-zero, positive number as a range size');
    }
    const result = new Array(size);
    for (let i = 0; i < size; i++) {
        result[i] = i + startAt;
    }
    return result;
}
exports.arrayRange = arrayRange;


/***/ }),

/***/ 18497:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrayShuffle = void 0;
/**
 * @name arrayShuffle
 * @description Shuffles the input array (unlike sort, this is not done in-place)
 */
function arrayShuffle(input) {
    const result = input.slice();
    let curr = result.length;
    // noop for the single entry
    if (curr === 1) {
        return result;
    }
    while (curr !== 0) {
        // ~~ is more performant than Math.floor
        const rand = ~~(Math.random() * curr);
        curr--;
        [result[curr], result[rand]] = [result[rand], result[curr]];
    }
    return result;
}
exports.arrayShuffle = arrayShuffle;


/***/ }),

/***/ 8966:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrayUnzip = void 0;
/**
 * @name arrayUnzip
 * @description Splits a single [K, V][] into [K[], V[]]
 */
function arrayUnzip(entries) {
    const count = entries.length;
    const keys = new Array(count);
    const values = new Array(count);
    for (let i = 0; i < count; i++) {
        [keys[i], values[i]] = entries[i];
    }
    return [keys, values];
}
exports.arrayUnzip = arrayUnzip;


/***/ }),

/***/ 93978:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.arrayZip = void 0;
/**
 * @name arrayZip
 * @description Combines 2 distinct key/value arrays into a single [K, V] array
 */
function arrayZip(keys, values) {
    const count = keys.length;
    const result = new Array(count);
    for (let i = 0; i < count; i++) {
        result[i] = [keys[i], values[i]];
    }
    return result;
}
exports.arrayZip = arrayZip;


/***/ }),

/***/ 83764:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.assertUnreachable = exports.assertReturn = exports.assert = void 0;
const function_js_1 = __nccwpck_require__(93075);
/**
 * @name assert
 * @summary Checks for a valid test, if not Error is thrown.
 * @description
 * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.
 * @example
 * <BR>
 *
 * ```javascript
 * const { assert } from '@polkadot/util';
 *
 * assert(true, 'True should be true'); // passes
 * assert(false, 'False should not be true'); // Error thrown
 * assert(false, () => 'message'); // Error with 'message'
 * ```
 */
function assert(condition, message) {
    if (!condition) {
        throw new Error((0, function_js_1.isFunction)(message)
            ? message()
            : message);
    }
}
exports.assert = assert;
/**
 * @name assertReturn
 * @description Returns when the value is not undefined/null, otherwise throws assertion error
 */
function assertReturn(value, message) {
    assert(value !== undefined && value !== null, message);
    return value;
}
exports.assertReturn = assertReturn;
/**
 * @name assertUnreachable
 * @description An assertion helper that ensures all codepaths are followed
 */
function assertUnreachable(x) {
    throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);
}
exports.assertUnreachable = assertUnreachable;


/***/ }),

/***/ 13418:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._sqrt2pow53n = exports._2pow53n = exports._1Qn = exports._1Bn = exports._1Mn = exports._1000n = exports._100n = exports._10n = exports._9n = exports._8n = exports._7n = exports._6n = exports._5n = exports._4n = exports._3n = exports._2n = exports._1n = exports._0n = void 0;
const x_bigint_1 = __nccwpck_require__(285);
/**
 * @name _0n
 * @summary BigInt constant for 0.
 */
exports._0n = (0, x_bigint_1.BigInt)(0);
/**
 * @name _1n
 * @summary BigInt constant for 1.
 */
exports._1n = (0, x_bigint_1.BigInt)(1);
/**
 * @name _2n
 * @summary BigInt constant for 2.
 */
exports._2n = (0, x_bigint_1.BigInt)(2);
/**
 * @name _3n
 * @summary BigInt constant for 3.
 */
exports._3n = (0, x_bigint_1.BigInt)(3);
/**
 * @name _4n
 * @summary BigInt constant for 4.
 */
exports._4n = (0, x_bigint_1.BigInt)(4);
/**
 * @name _5n
 * @summary BigInt constant for 5.
 */
exports._5n = (0, x_bigint_1.BigInt)(5);
/**
 * @name _6n
 * @summary BigInt constant for 6.
 */
exports._6n = (0, x_bigint_1.BigInt)(6);
/**
 * @name _7n
 * @summary BigInt constant for 7.
 */
exports._7n = (0, x_bigint_1.BigInt)(7);
/**
 * @name _8n
 * @summary BigInt constant for 8.
 */
exports._8n = (0, x_bigint_1.BigInt)(8);
/**
 * @name _9n
 * @summary BigInt constant for 9.
 */
exports._9n = (0, x_bigint_1.BigInt)(9);
/**
 * @name _10n
 * @summary BigInt constant for 10.
 */
exports._10n = (0, x_bigint_1.BigInt)(10);
/**
 * @name _100n
 * @summary BigInt constant for 100.
 */
exports._100n = (0, x_bigint_1.BigInt)(100);
/**
 * @name _1000n
 * @summary BigInt constant for 1000.
 */
exports._1000n = (0, x_bigint_1.BigInt)(1000);
/**
 * @name _1Mn
 * @summary BigInt constant for 1,000,000 (million).
 */
exports._1Mn = (0, x_bigint_1.BigInt)(1000000);
/**
* @name _1Bn
* @summary BigInt constant for 1,000,000,000 (billion).
*/
exports._1Bn = (0, x_bigint_1.BigInt)(1000000000);
/**
* @name _1Qn
* @summary BigInt constant for 1,000,000,000,000,000,000 (quitillion).
*/
exports._1Qn = exports._1Bn * exports._1Bn;
/**
* @name _2pow53n
* @summary BigInt constant for MAX_SAFE_INTEGER
*/
exports._2pow53n = (0, x_bigint_1.BigInt)(Number.MAX_SAFE_INTEGER);
/**
 * @name _sqrt2pow53n
 * @summary BigInt constant for Math.sqrt(MAX_SAFE_INTEGER)
 */
exports._sqrt2pow53n = (0, x_bigint_1.BigInt)(94906265);


/***/ }),

/***/ 8877:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createCmp = void 0;
/** @internal */
function createCmp(cmp) {
    return (...items) => {
        const count = items.length;
        if (count === 0) {
            throw new Error('Must provide one or more arguments');
        }
        let result = items[0];
        for (let i = 1; i < count; i++) {
            if (cmp(items[i], result)) {
                result = items[i];
            }
        }
        return result;
    };
}
exports.createCmp = createCmp;


/***/ }),

/***/ 43452:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nToU8a = exports.nToHex = exports.nToBigInt = exports.nSqrt = exports.nMin = exports.nMax = void 0;
const tslib_1 = __nccwpck_require__(11553);
/**
 * @summary Utility methods to convert to and from `bigint` objects
 */
var min_js_1 = __nccwpck_require__(63847);
Object.defineProperty(exports, "nMax", ({ enumerable: true, get: function () { return min_js_1.nMax; } }));
Object.defineProperty(exports, "nMin", ({ enumerable: true, get: function () { return min_js_1.nMin; } }));
var sqrt_js_1 = __nccwpck_require__(56207);
Object.defineProperty(exports, "nSqrt", ({ enumerable: true, get: function () { return sqrt_js_1.nSqrt; } }));
var toBigInt_js_1 = __nccwpck_require__(77022);
Object.defineProperty(exports, "nToBigInt", ({ enumerable: true, get: function () { return toBigInt_js_1.nToBigInt; } }));
var toHex_js_1 = __nccwpck_require__(3089);
Object.defineProperty(exports, "nToHex", ({ enumerable: true, get: function () { return toHex_js_1.nToHex; } }));
var toU8a_js_1 = __nccwpck_require__(20706);
Object.defineProperty(exports, "nToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.nToU8a; } }));
tslib_1.__exportStar(__nccwpck_require__(13418), exports);


/***/ }),

/***/ 63847:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nMin = exports.nMax = void 0;
const helpers_js_1 = __nccwpck_require__(8877);
/**
 * @name nMax
 * @summary Finds and returns the highest value in an array of bigint.
 */
exports.nMax = (0, helpers_js_1.createCmp)((a, b) => a > b);
/**
 * @name nMin
 * @summary Finds and returns the lowest value in an array of bigint.
 */
exports.nMin = (0, helpers_js_1.createCmp)((a, b) => a < b);


/***/ }),

/***/ 56207:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nSqrt = void 0;
const x_bigint_1 = __nccwpck_require__(285);
const consts_js_1 = __nccwpck_require__(13418);
const toBigInt_js_1 = __nccwpck_require__(77022);
/**
 * @name nSqrt
 * @summary Calculates the integer square root of a bigint
 */
function nSqrt(value) {
    const n = (0, toBigInt_js_1.nToBigInt)(value);
    if (n < consts_js_1._0n) {
        throw new Error('square root of negative numbers is not supported');
    }
    // https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/
    // shortcut <= 2^53 - 1 to use the JS utils
    if (n <= consts_js_1._2pow53n) {
        // ~~ is more performant that Math.floor
        return (0, x_bigint_1.BigInt)(~~Math.sqrt(Number(n)));
    }
    // Use sqrt(MAX_SAFE_INTEGER) as starting point. since we already know the
    // output will be larger than this, we expect this to be a safe start
    let x0 = consts_js_1._sqrt2pow53n;
    while (true) {
        const x1 = ((n / x0) + x0) >> consts_js_1._1n;
        if (x0 === x1 || (x0 === (x1 - consts_js_1._1n))) {
            return x0;
        }
        x0 = x1;
    }
}
exports.nSqrt = nSqrt;


/***/ }),

/***/ 77022:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nToBigInt = void 0;
const x_bigint_1 = __nccwpck_require__(285);
const toBigInt_js_1 = __nccwpck_require__(25922);
const bn_js_1 = __nccwpck_require__(4929);
const hex_js_1 = __nccwpck_require__(50219);
const toBigInt_js_2 = __nccwpck_require__(99112);
const toBn_js_1 = __nccwpck_require__(78547);
/**
 * @name nToBigInt
 * @summary Creates a bigInt value from a BN, bigint, string (base 10 or hex) or number input.
 */
function nToBigInt(value) {
    return typeof value === 'bigint'
        ? value
        : !value
            ? (0, x_bigint_1.BigInt)(0)
            : (0, hex_js_1.isHex)(value)
                ? (0, toBigInt_js_1.hexToBigInt)(value.toString())
                : (0, bn_js_1.isBn)(value)
                    ? (0, x_bigint_1.BigInt)(value.toString())
                    : (0, toBigInt_js_2.isToBigInt)(value)
                        ? value.toBigInt()
                        : (0, toBn_js_1.isToBn)(value)
                            ? (0, x_bigint_1.BigInt)(value.toBn().toString())
                            : (0, x_bigint_1.BigInt)(value);
}
exports.nToBigInt = nToBigInt;


/***/ }),

/***/ 3089:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nToHex = void 0;
const index_js_1 = __nccwpck_require__(79162);
const toU8a_js_1 = __nccwpck_require__(20706);
/**
 * @name nToHex
 * @summary Creates a hex value from a bigint object.
 */
function nToHex(value, { bitLength = -1, isLe = false, isNegative = false } = {}) {
    return (0, index_js_1.u8aToHex)((0, toU8a_js_1.nToU8a)(value || 0, { bitLength, isLe, isNegative }));
}
exports.nToHex = nToHex;


/***/ }),

/***/ 20706:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nToU8a = void 0;
const x_bigint_1 = __nccwpck_require__(285);
const consts_js_1 = __nccwpck_require__(13418);
const toBigInt_js_1 = __nccwpck_require__(77022);
const DIV = (0, x_bigint_1.BigInt)(256);
const NEG_MASK = (0, x_bigint_1.BigInt)(0xff);
function toU8a(value, isLe, isNegative) {
    const arr = [];
    const withSigned = isNegative && (value < consts_js_1._0n);
    if (withSigned) {
        value = (value + consts_js_1._1n) * -consts_js_1._1n;
    }
    while (value !== consts_js_1._0n) {
        const mod = value % DIV;
        const val = Number(withSigned
            ? mod ^ NEG_MASK
            : mod);
        if (isLe) {
            arr.push(val);
        }
        else {
            arr.unshift(val);
        }
        value = (value - mod) / DIV;
    }
    return Uint8Array.from(arr);
}
/**
 * @name nToU8a
 * @summary Creates a Uint8Array object from a bigint.
 */
function nToU8a(value, { bitLength = -1, isLe = true, isNegative = false } = {}) {
    const valueBi = (0, toBigInt_js_1.nToBigInt)(value);
    if (valueBi === consts_js_1._0n) {
        return bitLength === -1
            ? new Uint8Array(1)
            : new Uint8Array(Math.ceil((bitLength || 0) / 8));
    }
    const u8a = toU8a(valueBi, isLe, isNegative);
    if (bitLength === -1) {
        return u8a;
    }
    const byteLength = Math.ceil((bitLength || 0) / 8);
    const output = new Uint8Array(byteLength);
    if (isNegative) {
        output.fill(0xff);
    }
    output.set(u8a, isLe ? 0 : byteLength - u8a.length);
    return output;
}
exports.nToU8a = nToU8a;


/***/ }),

/***/ 32693:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BN = void 0;
const tslib_1 = __nccwpck_require__(11553);
const bn_js_1 = tslib_1.__importDefault(__nccwpck_require__(6641));
exports.BN = bn_js_1.default;


/***/ }),

/***/ 57273:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BN_SQRT_MAX_INTEGER = exports.BN_MAX_INTEGER = exports.BN_QUINTILL = exports.BN_BILLION = exports.BN_MILLION = exports.BN_THOUSAND = exports.BN_HUNDRED = exports.BN_TEN = exports.BN_NINE = exports.BN_EIGHT = exports.BN_SEVEN = exports.BN_SIX = exports.BN_FIVE = exports.BN_FOUR = exports.BN_THREE = exports.BN_TWO = exports.BN_ONE = exports.BN_ZERO = void 0;
const bn_js_1 = __nccwpck_require__(32693);
/**
 * @name BN_ZERO
 * @summary BN constant for 0.
 */
exports.BN_ZERO = new bn_js_1.BN(0);
/**
 * @name BN_ONE
 * @summary BN constant for 1.
 */
exports.BN_ONE = new bn_js_1.BN(1);
/**
 * @name BN_TWO
 * @summary BN constant for 2.
 */
exports.BN_TWO = new bn_js_1.BN(2);
/**
 * @name BN_THREE
 * @summary BN constant for 3.
 */
exports.BN_THREE = new bn_js_1.BN(3);
/**
 * @name BN_FOUR
 * @summary BN constant for 4.
 */
exports.BN_FOUR = new bn_js_1.BN(4);
/**
 * @name BN_FIVE
 * @summary BN constant for 5.
 */
exports.BN_FIVE = new bn_js_1.BN(5);
/**
 * @name BN_SIX
 * @summary BN constant for 6.
 */
exports.BN_SIX = new bn_js_1.BN(6);
/**
 * @name BN_SEVEN
 * @summary BN constant for 7.
 */
exports.BN_SEVEN = new bn_js_1.BN(7);
/**
 * @name BN_EIGHT
 * @summary BN constant for 8.
 */
exports.BN_EIGHT = new bn_js_1.BN(8);
/**
 * @name BN_NINE
 * @summary BN constant for 9.
 */
exports.BN_NINE = new bn_js_1.BN(9);
/**
 * @name BN_TEN
 * @summary BN constant for 10.
 */
exports.BN_TEN = new bn_js_1.BN(10);
/**
 * @name BN_HUNDRED
 * @summary BN constant for 100.
 */
exports.BN_HUNDRED = new bn_js_1.BN(100);
/**
 * @name BN_THOUSAND
 * @summary BN constant for 1,000.
 */
exports.BN_THOUSAND = new bn_js_1.BN(1000);
/**
 * @name BN_MILLION
 * @summary BN constant for 1,000,000.
 */
exports.BN_MILLION = new bn_js_1.BN(1000000);
/**
 * @name BN_BILLION
 * @summary BN constant for 1,000,000,000.
 */
exports.BN_BILLION = new bn_js_1.BN(1000000000);
/**
 * @name BN_QUINTILL
 * @summary BN constant for 1,000,000,000,000,000,000.
 */
exports.BN_QUINTILL = exports.BN_BILLION.mul(exports.BN_BILLION);
/**
 * @name BN_MAX_INTEGER
 * @summary BN constant for MAX_SAFE_INTEGER
 */
exports.BN_MAX_INTEGER = new bn_js_1.BN(Number.MAX_SAFE_INTEGER);
/**
 * @name BN_SQRT_MAX_INTEGER
 * @summary BN constant for Math.sqrt(MAX_SAFE_INTEGER)
 */
exports.BN_SQRT_MAX_INTEGER = new bn_js_1.BN(94906265);


/***/ }),

/***/ 2052:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bnFromHex = void 0;
var toBn_js_1 = __nccwpck_require__(48703);
Object.defineProperty(exports, "bnFromHex", ({ enumerable: true, get: function () { return toBn_js_1.hexToBn; } }));


/***/ }),

/***/ 64837:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bnToU8a = exports.bnToHex = exports.bnToBn = exports.bnSqrt = exports.bnMin = exports.bnMax = exports.bnFromHex = exports.BN = void 0;
const tslib_1 = __nccwpck_require__(11553);
/**
 * @summary Utility methods to convert to and from `BN` objects
 */
var bn_js_1 = __nccwpck_require__(32693);
Object.defineProperty(exports, "BN", ({ enumerable: true, get: function () { return bn_js_1.BN; } }));
var fromHex_js_1 = __nccwpck_require__(2052);
Object.defineProperty(exports, "bnFromHex", ({ enumerable: true, get: function () { return fromHex_js_1.bnFromHex; } }));
var min_js_1 = __nccwpck_require__(65813);
Object.defineProperty(exports, "bnMax", ({ enumerable: true, get: function () { return min_js_1.bnMax; } }));
Object.defineProperty(exports, "bnMin", ({ enumerable: true, get: function () { return min_js_1.bnMin; } }));
var sqrt_js_1 = __nccwpck_require__(17829);
Object.defineProperty(exports, "bnSqrt", ({ enumerable: true, get: function () { return sqrt_js_1.bnSqrt; } }));
var toBn_js_1 = __nccwpck_require__(39086);
Object.defineProperty(exports, "bnToBn", ({ enumerable: true, get: function () { return toBn_js_1.bnToBn; } }));
var toHex_js_1 = __nccwpck_require__(19484);
Object.defineProperty(exports, "bnToHex", ({ enumerable: true, get: function () { return toHex_js_1.bnToHex; } }));
var toU8a_js_1 = __nccwpck_require__(79860);
Object.defineProperty(exports, "bnToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.bnToU8a; } }));
tslib_1.__exportStar(__nccwpck_require__(57273), exports);


/***/ }),

/***/ 65813:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bnMin = exports.bnMax = void 0;
const helpers_js_1 = __nccwpck_require__(8877);
/**
 * @name bnMax
 * @summary Finds and returns the highest value in an array of BNs.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnMax } from '@polkadot/util';
 *
 * bnMax([new BN(1), new BN(3), new BN(2)]).toString(); // => '3'
 * ```
 */
exports.bnMax = (0, helpers_js_1.createCmp)((a, b) => a.gt(b));
/**
 * @name bnMin
 * @summary Finds and returns the smallest value in an array of BNs.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnMin } from '@polkadot/util';
 *
 * bnMin([new BN(1), new BN(3), new BN(2)]).toString(); // => '1'
 * ```
 */
exports.bnMin = (0, helpers_js_1.createCmp)((a, b) => a.lt(b));


/***/ }),

/***/ 17829:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bnSqrt = void 0;
const bn_js_1 = __nccwpck_require__(32693);
const consts_js_1 = __nccwpck_require__(57273);
const toBn_js_1 = __nccwpck_require__(39086);
/**
 * @name bnSqrt
 * @summary Calculates the integer square root of a BN
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnSqrt } from '@polkadot/util';
 *
 * bnSqrt(new BN(16)).toString(); // => '4'
 * ```
 */
function bnSqrt(value) {
    const n = (0, toBn_js_1.bnToBn)(value);
    if (n.isNeg()) {
        throw new Error('square root of negative numbers is not supported');
    }
    // https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/
    // shortcut <= 2^53 - 1 to use the JS utils
    if (n.lte(consts_js_1.BN_MAX_INTEGER)) {
        // ~~ More performant version of Math.floor
        return new bn_js_1.BN(~~Math.sqrt(n.toNumber()));
    }
    // Use sqrt(MAX_SAFE_INTEGER) as starting point. since we already know the
    // output will be larger than this, we expect this to be a safe start
    let x0 = consts_js_1.BN_SQRT_MAX_INTEGER.clone();
    while (true) {
        const x1 = n.div(x0).iadd(x0).ishrn(1);
        if (x0.eq(x1) || x0.eq(x1.sub(consts_js_1.BN_ONE))) {
            return x0;
        }
        x0 = x1;
    }
}
exports.bnSqrt = bnSqrt;


/***/ }),

/***/ 39086:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bnToBn = void 0;
const toBn_js_1 = __nccwpck_require__(48703);
const bigInt_js_1 = __nccwpck_require__(82386);
const hex_js_1 = __nccwpck_require__(50219);
const toBigInt_js_1 = __nccwpck_require__(99112);
const toBn_js_2 = __nccwpck_require__(78547);
const bn_js_1 = __nccwpck_require__(32693);
/**
 * @name bnToBn
 * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.
 * @description
 * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnToBn } from '@polkadot/util';
 *
 * bnToBn(0x1234); // => BN(0x1234)
 * bnToBn(new BN(0x1234)); // => BN(0x1234)
 * ```
 */
function bnToBn(value) {
    return value
        ? bn_js_1.BN.isBN(value)
            ? value
            : (0, hex_js_1.isHex)(value)
                ? (0, toBn_js_1.hexToBn)(value.toString())
                : (0, bigInt_js_1.isBigInt)(value)
                    ? new bn_js_1.BN(value.toString())
                    : (0, toBn_js_2.isToBn)(value)
                        ? value.toBn()
                        : (0, toBigInt_js_1.isToBigInt)(value)
                            ? new bn_js_1.BN(value.toBigInt().toString())
                            : new bn_js_1.BN(value)
        : new bn_js_1.BN(0);
}
exports.bnToBn = bnToBn;


/***/ }),

/***/ 19484:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bnToHex = void 0;
const index_js_1 = __nccwpck_require__(79162);
const toU8a_js_1 = __nccwpck_require__(79860);
/**
 * @name bnToHex
 * @summary Creates a hex value from a BN.js bignumber object.
 * @description
 * `null` inputs returns a `0x` result, BN values return the actual value as a `0x` prefixed hex value. Anything that is not a BN object throws an error. With `bitLength` set, it fixes the number to the specified length.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnToHex } from '@polkadot/util';
 *
 * bnToHex(new BN(0x123456)); // => '0x123456'
 * ```
 */
function bnToHex(value, { bitLength = -1, isLe = false, isNegative = false } = {}) {
    return (0, index_js_1.u8aToHex)((0, toU8a_js_1.bnToU8a)(value, { bitLength, isLe, isNegative }));
}
exports.bnToHex = bnToHex;


/***/ }),

/***/ 79860:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bnToU8a = void 0;
const toBn_js_1 = __nccwpck_require__(39086);
const DEFAULT_OPTS = { bitLength: -1, isLe: true, isNegative: false };
/**
 * @name bnToU8a
 * @summary Creates a Uint8Array object from a BN.
 * @description
 * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.
 * @example
 * <BR>
 *
 * ```javascript
 * import { bnToU8a } from '@polkadot/util';
 *
 * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]
 * ```
 */
function bnToU8a(value, { bitLength = -1, isLe = true, isNegative = false } = DEFAULT_OPTS) {
    const valueBn = (0, toBn_js_1.bnToBn)(value);
    const byteLength = bitLength === -1
        ? Math.ceil(valueBn.bitLength() / 8)
        : Math.ceil((bitLength || 0) / 8);
    if (!value) {
        return bitLength === -1
            ? new Uint8Array(1)
            : new Uint8Array(byteLength);
    }
    const output = new Uint8Array(byteLength);
    const bn = isNegative
        ? valueBn.toTwos(byteLength * 8)
        : valueBn;
    output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);
    return output;
}
exports.bnToU8a = bnToU8a;


/***/ }),

/***/ 75522:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bufferToU8a = void 0;
/**
 * @summary Utility methods to convert to and from `Buffer` objects
 */
var toU8a_js_1 = __nccwpck_require__(12516);
Object.defineProperty(exports, "bufferToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.bufferToU8a; } }));


/***/ }),

/***/ 12516:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bufferToU8a = void 0;
/**
 * @name bufferToU8a
 * @summary Creates a Uint8Array value from a Buffer object.
 * @description
 * `null` inputs returns an empty result, `Buffer` values return the actual value as a `Uint8Array`. Anything that is not a `Buffer` object throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { bufferToU8a } from '@polkadot/util';
 *
 * bufferToU8a(Buffer.from([1, 2, 3]));
 * ```
 */
function bufferToU8a(buffer) {
    return new Uint8Array(buffer || []);
}
exports.bufferToU8a = bufferToU8a;


/***/ }),

/***/ 50667:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(11553);
/**
 * @summary Utility methods for this package are split into groups
 */
var packageInfo_js_1 = __nccwpck_require__(82167);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
tslib_1.__exportStar(__nccwpck_require__(51770), exports);
tslib_1.__exportStar(__nccwpck_require__(83764), exports);
tslib_1.__exportStar(__nccwpck_require__(43452), exports);
tslib_1.__exportStar(__nccwpck_require__(64837), exports);
tslib_1.__exportStar(__nccwpck_require__(75522), exports);
tslib_1.__exportStar(__nccwpck_require__(52191), exports);
tslib_1.__exportStar(__nccwpck_require__(45255), exports);
tslib_1.__exportStar(__nccwpck_require__(82052), exports);
tslib_1.__exportStar(__nccwpck_require__(33282), exports);
tslib_1.__exportStar(__nccwpck_require__(11512), exports);
tslib_1.__exportStar(__nccwpck_require__(62242), exports);
tslib_1.__exportStar(__nccwpck_require__(81711), exports);
tslib_1.__exportStar(__nccwpck_require__(43375), exports);
tslib_1.__exportStar(__nccwpck_require__(61736), exports);
tslib_1.__exportStar(__nccwpck_require__(80019), exports);
tslib_1.__exportStar(__nccwpck_require__(27474), exports);
tslib_1.__exportStar(__nccwpck_require__(43698), exports);
tslib_1.__exportStar(__nccwpck_require__(21543), exports);
tslib_1.__exportStar(__nccwpck_require__(95900), exports);
tslib_1.__exportStar(__nccwpck_require__(29290), exports);
tslib_1.__exportStar(__nccwpck_require__(58029), exports);
tslib_1.__exportStar(__nccwpck_require__(95450), exports);
tslib_1.__exportStar(__nccwpck_require__(79162), exports);
tslib_1.__exportStar(__nccwpck_require__(56666), exports);


/***/ }),

/***/ 89038:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.compactAddLength = void 0;
const index_js_1 = __nccwpck_require__(79162);
const toU8a_js_1 = __nccwpck_require__(66747);
/**
 * @name compactAddLength
 * @description Adds a length prefix to the input value
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactAddLength } from '@polkadot/util';
 *
 * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])
 * ```
 */
function compactAddLength(input) {
    return (0, index_js_1.u8aConcatStrict)([
        (0, toU8a_js_1.compactToU8a)(input.length),
        input
    ]);
}
exports.compactAddLength = compactAddLength;


/***/ }),

/***/ 78525:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.compactFromU8aLim = exports.compactFromU8a = void 0;
const index_js_1 = __nccwpck_require__(64837);
const index_js_2 = __nccwpck_require__(79162);
/**
 * @name compactFromU8a
 * @description Retrives the offset and encoded length from a compact-prefixed value
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactFromU8a } from '@polkadot/util';
 *
 * const [offset, length] = compactFromU8a(new Uint8Array([254, 255, 3, 0]));
 *
 * console.log('value offset=', offset, 'length=', length); // 4, 0xffff
 * ```
 */
function compactFromU8a(input) {
    const u8a = (0, index_js_2.u8aToU8a)(input);
    // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster
    // than doing an additional call to u8aToBn (as with variable length)
    switch (u8a[0] & 0b11) {
        case 0b00:
            return [1, new index_js_1.BN(u8a[0] >>> 2)];
        case 0b01:
            return [2, new index_js_1.BN((u8a[0] + (u8a[1] << 8)) >>> 2)];
        case 0b10:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            return [4, new index_js_1.BN((u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + (u8a[3] * 16777216)) >>> 2)];
        // 0b11
        default: {
            // add 5 to shifted (4 for base length, 1 for this byte)
            const offset = (u8a[0] >>> 2) + 5;
            // we unroll the loop
            switch (offset) {
                // there still could be 4 bytes data, similar to 0b10 above (with offsets)
                case 5:
                    // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
                    // 32-bit, in the case where the top-most bit is set this yields a negative value
                    return [5, new index_js_1.BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] * 16777216))];
                case 6:
                    return [6, new index_js_1.BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + ((u8a[4] + (u8a[5] << 8)) * 16777216))];
                // 6 bytes data is the maximum, 48 bits (56 would overflow)
                case 7:
                    return [7, new index_js_1.BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + ((u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 16777216))];
                // for anything else, use the non-unrolled version
                default:
                    return [offset, (0, index_js_2.u8aToBn)(u8a.subarray(1, offset))];
            }
        }
    }
}
exports.compactFromU8a = compactFromU8a;
/**
 * @name compactFromU8aLim
 * @description A limited version of [[compactFromU8a]], accepting only Uint8Array inputs for values <= 48 bits
 */
function compactFromU8aLim(u8a) {
    // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster
    // than doing an additional call to u8aToBn (as with variable length)
    switch (u8a[0] & 0b11) {
        case 0b00:
            return [1, u8a[0] >>> 2];
        case 0b01:
            return [2, (u8a[0] + (u8a[1] << 8)) >>> 2];
        case 0b10:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            return [4, (u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + (u8a[3] * 16777216)) >>> 2];
        // 0b11
        default: {
            // add 5 to shifted (4 for base length, 1 for this byte)
            // we unroll the loop
            switch ((u8a[0] >>> 2) + 5) {
                // there still could be 4 bytes data, similar to 0b10 above (with offsets)
                case 5:
                    return [5, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] * 16777216)];
                case 6:
                    return [6, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + ((u8a[4] + (u8a[5] << 8)) * 16777216)];
                // 6 bytes data is the maximum, 48 bits (56 would overflow)
                case 7:
                    return [7, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + ((u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 16777216)];
                // for anything else, we are above the actual MAX_SAFE_INTEGER - bail out
                default:
                    throw new Error('Compact input is > Number.MAX_SAFE_INTEGER');
            }
        }
    }
}
exports.compactFromU8aLim = compactFromU8aLim;


/***/ }),

/***/ 52191:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.compactToU8a = exports.compactStripLength = exports.compactFromU8aLim = exports.compactFromU8a = exports.compactAddLength = void 0;
/**
 * @description
 * Encoding and decoding of parity-codec compact numbers. The codec is created
 * to take up the least amount of space for a specific number. It performs the
 * same function as Length, however differs in that it uses a variable number of
 * bytes to do the actual encoding. From the Rust implementation for compact
 * encoding:
 *
 *     0b00 00 00 00 / 00 00 00 00 / 00 00 00 00 / 00 00 00 00
 * (0 ... 2**6 - 1)    (u8)
 *     xx xx xx 00
 * (2**6 ... 2**14 - 1)  (u8, u16)  low LH high
 *     yL yL yL 01 / yH yH yH yL
 * (2**14 ... 2**30 - 1)  (u16, u32)  low LMMH high
 *     zL zL zL 10 / zM zM zM zL / zM zM zM zM / zH zH zH zM
 * (2**30 ... 2**536 - 1)  (u32, u64, u128, U256, U512, U520) straight LE-encoded
 *     nn nn nn 11 [ / zz zz zz zz ]{4 + n}
 *
 * Note: we use *LOW BITS* of the LSB in LE encoding to encode the 2 bit key.
 */
var addLength_js_1 = __nccwpck_require__(89038);
Object.defineProperty(exports, "compactAddLength", ({ enumerable: true, get: function () { return addLength_js_1.compactAddLength; } }));
var fromU8a_js_1 = __nccwpck_require__(78525);
Object.defineProperty(exports, "compactFromU8a", ({ enumerable: true, get: function () { return fromU8a_js_1.compactFromU8a; } }));
Object.defineProperty(exports, "compactFromU8aLim", ({ enumerable: true, get: function () { return fromU8a_js_1.compactFromU8aLim; } }));
var stripLength_js_1 = __nccwpck_require__(9717);
Object.defineProperty(exports, "compactStripLength", ({ enumerable: true, get: function () { return stripLength_js_1.compactStripLength; } }));
var toU8a_js_1 = __nccwpck_require__(66747);
Object.defineProperty(exports, "compactToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.compactToU8a; } }));


/***/ }),

/***/ 9717:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.compactStripLength = void 0;
const fromU8a_js_1 = __nccwpck_require__(78525);
/**
 * @name compactStripLength
 * @description Removes the length prefix, returning both the total length (including the value + compact encoding) and the decoded value with the correct length
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactStripLength } from '@polkadot/util';
 *
 * console.log(compactStripLength(new Uint8Array([2 << 2, 0xde, 0xad]))); // [2, Uint8Array[0xde, 0xad]]
 * ```
 */
function compactStripLength(input) {
    const [offset, length] = (0, fromU8a_js_1.compactFromU8a)(input);
    const total = offset + length.toNumber();
    return [
        total,
        input.subarray(offset, total)
    ];
}
exports.compactStripLength = compactStripLength;


/***/ }),

/***/ 66747:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.compactToU8a = void 0;
const index_js_1 = __nccwpck_require__(64837);
const index_js_2 = __nccwpck_require__(79162);
const MAX_U8 = index_js_1.BN_TWO.pow(new index_js_1.BN(8 - 2)).isub(index_js_1.BN_ONE);
const MAX_U16 = index_js_1.BN_TWO.pow(new index_js_1.BN(16 - 2)).isub(index_js_1.BN_ONE);
const MAX_U32 = index_js_1.BN_TWO.pow(new index_js_1.BN(32 - 2)).isub(index_js_1.BN_ONE);
const BL_16 = { bitLength: 16 };
const BL_32 = { bitLength: 32 };
/**
 * @name compactToU8a
 * @description Encodes a number into a compact representation
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactToU8a } from '@polkadot/util';
 *
 * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])
 * ```
 */
function compactToU8a(value) {
    const bn = (0, index_js_1.bnToBn)(value);
    if (bn.lte(MAX_U8)) {
        return new Uint8Array([bn.toNumber() << 2]);
    }
    else if (bn.lte(MAX_U16)) {
        return (0, index_js_1.bnToU8a)(bn.shln(2).iadd(index_js_1.BN_ONE), BL_16);
    }
    else if (bn.lte(MAX_U32)) {
        return (0, index_js_1.bnToU8a)(bn.shln(2).iadd(index_js_1.BN_TWO), BL_32);
    }
    const u8a = (0, index_js_1.bnToU8a)(bn);
    let length = u8a.length;
    // adjust to the minimum number of bytes
    while (u8a[length - 1] === 0) {
        length--;
    }
    if (length < 4) {
        throw new Error('Invalid length, previous checks match anything less than 2^30');
    }
    return (0, index_js_2.u8aConcatStrict)([
        // subtract 4 as minimum (also catered for in decoding)
        new Uint8Array([((length - 4) << 2) + 0b11]),
        u8a.subarray(0, length)
    ]);
}
exports.compactToU8a = compactToU8a;


/***/ }),

/***/ 12487:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const x_textdecoder_1 = __nccwpck_require__(64560);
const x_textencoder_1 = __nccwpck_require__(54722);
exports["default"] = [x_textdecoder_1.packageInfo, x_textencoder_1.packageInfo];


/***/ }),

/***/ 81325:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(11553);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(12487));
const packageInfo_js_1 = __nccwpck_require__(82167);
const versionDetect_js_1 = __nccwpck_require__(56666);
(0, versionDetect_js_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 45255:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extractTime = void 0;
const MIN_MS = 60 * 1000;
const HR_MS = MIN_MS * 60;
const DAY_MS = HR_MS * 24;
const ZERO = { days: 0, hours: 0, milliseconds: 0, minutes: 0, seconds: 0 };
/** @internal */
function add(a, b) {
    return {
        days: (a.days || 0) + b.days,
        hours: (a.hours || 0) + b.hours,
        milliseconds: (a.milliseconds || 0) + b.milliseconds,
        minutes: (a.minutes || 0) + b.minutes,
        seconds: (a.seconds || 0) + b.seconds
    };
}
/** @internal */
function extractSecs(ms) {
    const s = ms / 1000;
    if (s < 60) {
        const seconds = ~~s;
        return add({ seconds }, extractTime(ms - (seconds * 1000)));
    }
    const m = s / 60;
    if (m < 60) {
        const minutes = ~~m;
        return add({ minutes }, extractTime(ms - (minutes * MIN_MS)));
    }
    const h = m / 60;
    if (h < 24) {
        const hours = ~~h;
        return add({ hours }, extractTime(ms - (hours * HR_MS)));
    }
    const days = ~~(h / 24);
    return add({ days }, extractTime(ms - (days * DAY_MS)));
}
/**
 * @name extractTime
 * @summary Convert a quantity of seconds to Time array representing accumulated {days, minutes, hours, seconds, milliseconds}
 * @example
 * <BR>
 *
 * ```javascript
 * import { extractTime } from '@polkadot/util';
 *
 * const { days, minutes, hours, seconds, milliseconds } = extractTime(6000); // 0, 0, 10, 0, 0
 * ```
 */
function extractTime(milliseconds) {
    return !milliseconds
        ? ZERO
        : milliseconds < 1000
            ? add({ milliseconds }, ZERO)
            : extractSecs(milliseconds);
}
exports.extractTime = extractTime;


/***/ }),

/***/ 82052:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.floatToU8a = void 0;
var toU8a_js_1 = __nccwpck_require__(3187);
Object.defineProperty(exports, "floatToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.floatToU8a; } }));


/***/ }),

/***/ 3187:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.floatToU8a = void 0;
/**
 * @name floatToU8a
 * @description Converts a float into a U8a representation (While we don't use BE in SCALE
 * we still allow for either representation, although, as elsewhere, isLe is default)
 */
function floatToU8a(value = 0.0, { bitLength = 32, isLe = true } = {}) {
    if (bitLength !== 32 && bitLength !== 64) {
        throw new Error('Invalid bitLength provided, expected 32 or 64');
    }
    const result = new Uint8Array(bitLength / 8);
    const dv = new DataView(result.buffer, result.byteOffset);
    if (bitLength === 32) {
        dv.setFloat32(0, Number(value), isLe);
    }
    else {
        dv.setFloat64(0, Number(value), isLe);
    }
    return result;
}
exports.floatToU8a = floatToU8a;


/***/ }),

/***/ 34128:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formatBalance = void 0;
const toBn_js_1 = __nccwpck_require__(39086);
const boolean_js_1 = __nccwpck_require__(45232);
const formatDecimal_js_1 = __nccwpck_require__(10563);
const getSeparator_js_1 = __nccwpck_require__(10451);
const si_js_1 = __nccwpck_require__(72890);
const DEFAULT_DECIMALS = 0;
const DEFAULT_UNIT = si_js_1.SI[si_js_1.SI_MID].text;
let defaultDecimals = DEFAULT_DECIMALS;
let defaultUnit = DEFAULT_UNIT;
function _formatBalance(input, { decimals = defaultDecimals, forceUnit, locale = 'en', withAll = false, withSi = true, withSiFull = false, withUnit = true, withZero = true } = {}) {
    // we only work with string inputs here - convert anything
    // into the string-only value
    let text = (0, toBn_js_1.bnToBn)(input).toString();
    if (text.length === 0 || text === '0') {
        return '0';
    }
    // strip the negative sign so we can work with clean groupings, re-add this in the
    // end when we return the result (from here on we work with positive numbers)
    let sign = '';
    if (text[0].startsWith('-')) {
        sign = '-';
        text = text.substring(1);
    }
    // We start at midpoint (8) minus 1 - this means that values display as
    // 123.4567 instead of 0.1234 k (so we always have the most relevant).
    const si = (0, si_js_1.calcSi)(text, decimals, forceUnit);
    const mid = text.length - (decimals + si.power);
    const pre = mid <= 0 ? '0' : text.substring(0, mid);
    // get the post from the midpoint onward and then first add max decimals
    // before trimming to the correct (calculated) amount of decimals again
    let post = text
        .padStart(mid < 0 ? decimals : 1, '0')
        .substring(mid < 0 ? 0 : mid)
        .padEnd(withAll ? Math.max(decimals, 4) : 4, '0')
        .substring(0, withAll ? Math.max(4, decimals + si.power) : 4);
    // remove all trailing 0's (if required via flag)
    if (!withZero) {
        let end = post.length - 1;
        // This looks inefficient, however it is better to do the checks and
        // only make one final slice than it is to do it in multiples
        do {
            if (post[end] === '0') {
                end--;
            }
        } while (post[end] === '0');
        post = post.substring(0, end + 1);
    }
    // the display unit
    const unit = (0, boolean_js_1.isBoolean)(withUnit)
        ? si_js_1.SI[si_js_1.SI_MID].text
        : withUnit;
    // format the units for display based on the flags
    const units = withSi || withSiFull
        ? si.value === '-'
            ? withUnit
                ? ` ${unit}`
                : ''
            : ` ${withSiFull ? `${si.text}${withUnit ? ' ' : ''}` : si.value}${withUnit ? unit : ''}`
        : '';
    const { decimal, thousand } = (0, getSeparator_js_1.getSeparator)(locale);
    return `${sign}${(0, formatDecimal_js_1.formatDecimal)(pre, thousand)}${post && `${decimal}${post}`}${units}`;
}
exports.formatBalance = _formatBalance;
exports.formatBalance.calcSi = (text, decimals = defaultDecimals) => (0, si_js_1.calcSi)(text, decimals);
exports.formatBalance.findSi = si_js_1.findSi;
exports.formatBalance.getDefaults = () => {
    return {
        decimals: defaultDecimals,
        unit: defaultUnit
    };
};
exports.formatBalance.getOptions = (decimals = defaultDecimals) => {
    return si_js_1.SI.filter(({ power }) => power < 0
        ? (decimals + power) >= 0
        : true);
};
exports.formatBalance.setDefaults = ({ decimals, unit }) => {
    defaultDecimals = (Array.isArray(decimals)
        ? decimals[0]
        : decimals) ?? defaultDecimals;
    defaultUnit = (Array.isArray(unit)
        ? unit[0]
        : unit) ?? defaultUnit;
    si_js_1.SI[si_js_1.SI_MID].text = defaultUnit;
};


/***/ }),

/***/ 91988:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formatDate = void 0;
/** @internal */
function zeroPad(value) {
    return value.toString().padStart(2, '0');
}
/**
 * @name formatDate
 * @description Formats a date in CCYY-MM-DD HH:MM:SS format
 */
function formatDate(date) {
    const year = date.getFullYear().toString();
    const month = zeroPad((date.getMonth() + 1));
    const day = zeroPad(date.getDate());
    const hour = zeroPad(date.getHours());
    const minute = zeroPad(date.getMinutes());
    const second = zeroPad(date.getSeconds());
    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;
}
exports.formatDate = formatDate;


/***/ }),

/***/ 10563:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formatDecimal = void 0;
const NUMBER_REGEX = new RegExp('(\\d+?)(?=(\\d{3})+(?!\\d)|$)', 'g');
/**
 * @name formatDecimal
 * @description Formats a number into string format with thousand separators
 */
function formatDecimal(value, separator = ',') {
    // We can do this by adjusting the regx, however for the sake of clarity
    // we rather strip and re-add the negative sign in the output
    const isNegative = value[0].startsWith('-');
    const matched = isNegative
        ? value.substring(1).match(NUMBER_REGEX)
        : value.match(NUMBER_REGEX);
    return matched
        ? `${isNegative ? '-' : ''}${matched.join(separator)}`
        : value;
}
exports.formatDecimal = formatDecimal;


/***/ }),

/***/ 46064:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formatElapsed = void 0;
const toBn_js_1 = __nccwpck_require__(39086);
/** @internal */
function formatValue(elapsed) {
    if (elapsed < 15) {
        return `${elapsed.toFixed(1)}s`;
    }
    else if (elapsed < 60) {
        return `${elapsed | 0}s`;
    }
    else if (elapsed < 3600) {
        return `${elapsed / 60 | 0}m`;
    }
    return `${elapsed / 3600 | 0}h`;
}
/**
 * @name formatElapsed
 * @description Formats an elapsed value into s, m, h or day segments
 */
function formatElapsed(now, value) {
    const tsNow = now?.getTime() || 0;
    const tsValue = value instanceof Date
        ? value.getTime()
        : (0, toBn_js_1.bnToBn)(value).toNumber();
    return (tsNow && tsValue)
        ? formatValue(Math.max(Math.abs(tsNow - tsValue), 0) / 1000)
        : '0.0s';
}
exports.formatElapsed = formatElapsed;


/***/ }),

/***/ 95329:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formatNumber = void 0;
const toBn_js_1 = __nccwpck_require__(39086);
const formatDecimal_js_1 = __nccwpck_require__(10563);
const getSeparator_js_1 = __nccwpck_require__(10451);
/**
 * @name formatNumber
 * @description Formats a number into string format with thousand separators
 */
function formatNumber(value, { locale = 'en' } = {}) {
    const { thousand } = (0, getSeparator_js_1.getSeparator)(locale);
    return (0, formatDecimal_js_1.formatDecimal)((0, toBn_js_1.bnToBn)(value).toString(), thousand);
}
exports.formatNumber = formatNumber;


/***/ }),

/***/ 10451:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getSeparator = void 0;
/**
 * Get the decimal and thousand separator of a locale
 * @param locale
 * @returns {decimal: string, thousand: string}
 */
function getSeparator(locale) {
    return {
        decimal: (0.1).toLocaleString(locale).substring(1, 2),
        thousand: (1000).toLocaleString(locale).substring(1, 2)
    };
}
exports.getSeparator = getSeparator;


/***/ }),

/***/ 33282:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.findSi = exports.calcSi = exports.formatNumber = exports.formatElapsed = exports.formatDecimal = exports.formatDate = exports.formatBalance = void 0;
var formatBalance_js_1 = __nccwpck_require__(34128);
Object.defineProperty(exports, "formatBalance", ({ enumerable: true, get: function () { return formatBalance_js_1.formatBalance; } }));
var formatDate_js_1 = __nccwpck_require__(91988);
Object.defineProperty(exports, "formatDate", ({ enumerable: true, get: function () { return formatDate_js_1.formatDate; } }));
var formatDecimal_js_1 = __nccwpck_require__(10563);
Object.defineProperty(exports, "formatDecimal", ({ enumerable: true, get: function () { return formatDecimal_js_1.formatDecimal; } }));
var formatElapsed_js_1 = __nccwpck_require__(46064);
Object.defineProperty(exports, "formatElapsed", ({ enumerable: true, get: function () { return formatElapsed_js_1.formatElapsed; } }));
var formatNumber_js_1 = __nccwpck_require__(95329);
Object.defineProperty(exports, "formatNumber", ({ enumerable: true, get: function () { return formatNumber_js_1.formatNumber; } }));
var si_js_1 = __nccwpck_require__(72890);
Object.defineProperty(exports, "calcSi", ({ enumerable: true, get: function () { return si_js_1.calcSi; } }));
Object.defineProperty(exports, "findSi", ({ enumerable: true, get: function () { return si_js_1.findSi; } }));


/***/ }),

/***/ 72890:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.calcSi = exports.findSi = exports.SI = exports.SI_MID = void 0;
/** @internal */
exports.SI_MID = 8;
/** @internal */
exports.SI = [
    { power: -24, text: 'yocto', value: 'y' },
    { power: -21, text: 'zepto', value: 'z' },
    { power: -18, text: 'atto', value: 'a' },
    { power: -15, text: 'femto', value: 'f' },
    { power: -12, text: 'pico', value: 'p' },
    { power: -9, text: 'nano', value: 'n' },
    { power: -6, text: 'micro', value: 'µ' },
    { power: -3, text: 'milli', value: 'm' },
    { power: 0, text: 'Unit', value: '-' },
    { power: 3, text: 'Kilo', value: 'k' },
    { power: 6, text: 'Mill', value: 'M' },
    { power: 9, text: 'Bill', value: 'B' },
    { power: 12, text: 'Tril', value: 'T' },
    { power: 15, text: 'Peta', value: 'P' },
    { power: 18, text: 'Exa', value: 'E' },
    { power: 21, text: 'Zeta', value: 'Z' },
    { power: 24, text: 'Yotta', value: 'Y' }
];
/** @internal */
function findSi(type) {
    // use a loop here, better RN support (which doesn't have [].find)
    for (let i = 0, count = exports.SI.length; i < count; i++) {
        if (exports.SI[i].value === type) {
            return exports.SI[i];
        }
    }
    return exports.SI[exports.SI_MID];
}
exports.findSi = findSi;
/** @internal */
function calcSi(text, decimals, forceUnit) {
    if (forceUnit) {
        return findSi(forceUnit);
    }
    const siDefIndex = (exports.SI_MID - 1) + Math.ceil((text.length - decimals) / 3);
    return exports.SI[siDefIndex] || exports.SI[siDefIndex < 0 ? 0 : exports.SI.length - 1];
}
exports.calcSi = calcSi;


/***/ }),

/***/ 11512:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasProcess = exports.hasBuffer = exports.hasWasm = exports.hasEsm = exports.hasDirname = exports.hasCjs = exports.hasBigInt = void 0;
const x_bigint_1 = __nccwpck_require__(285);
const x_global_1 = __nccwpck_require__(74671);
/** true if the environment has proper BigInt support */
exports.hasBigInt = typeof x_bigint_1.BigInt === 'function' && typeof x_bigint_1.BigInt.asIntN === 'function';
/** true if the environment is CJS */
exports.hasCjs =  true && "object" !== 'undefined';
/** true if the environment has __dirname available */
exports.hasDirname = typeof __dirname !== 'undefined';
/** true if the environment is ESM */
exports.hasEsm = !exports.hasCjs;
/** true if the environment has WebAssembly available */
exports.hasWasm = typeof WebAssembly !== 'undefined';
/** true if the environment has support for Buffer (typically Node.js) */
exports.hasBuffer = typeof x_global_1.xglobal.Buffer === 'function' && typeof x_global_1.xglobal.Buffer.isBuffer === 'function';
/** true if the environment has process available (typically Node.js) */
exports.hasProcess = typeof x_global_1.xglobal.process === 'object';


/***/ }),

/***/ 18050:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexAddPrefix = void 0;
const hasPrefix_js_1 = __nccwpck_require__(10035);
/**
 * @name hexAddPrefix
 * @summary Adds the `0x` prefix to string values.
 * @description
 * Returns a `0x` prefixed string from the input value. If the input is already prefixed, it is returned unchanged.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexAddPrefix } from '@polkadot/util';
 *
 * console.log('With prefix', hexAddPrefix('0a0b12')); // => 0x0a0b12
 * ```
 */
function hexAddPrefix(value) {
    return value && (0, hasPrefix_js_1.hexHasPrefix)(value)
        ? value
        : `0x${value && value.length % 2 === 1 ? '0' : ''}${value || ''}`;
}
exports.hexAddPrefix = hexAddPrefix;


/***/ }),

/***/ 2060:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexFixLength = void 0;
const addPrefix_js_1 = __nccwpck_require__(18050);
const stripPrefix_js_1 = __nccwpck_require__(42882);
/**
 * @name hexFixLength
 * @summary Shifts a hex string to a specific bitLength
 * @description
 * Returns a `0x` prefixed string with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length. Input values with less bits are returned as-is by default. When `withPadding` is set, shorter values are padded with `0`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexFixLength } from '@polkadot/util';
 *
 * console.log('fixed', hexFixLength('0x12', 16)); // => 0x12
 * console.log('fixed', hexFixLength('0x12', 16, true)); // => 0x0012
 * console.log('fixed', hexFixLength('0x0012', 8)); // => 0x12
 * ```
 */
function hexFixLength(value, bitLength = -1, withPadding = false) {
    const strLength = Math.ceil(bitLength / 4);
    const hexLength = strLength + 2;
    return (0, addPrefix_js_1.hexAddPrefix)((bitLength === -1 || value.length === hexLength || (!withPadding && value.length < hexLength))
        ? (0, stripPrefix_js_1.hexStripPrefix)(value)
        : (value.length > hexLength)
            ? (0, stripPrefix_js_1.hexStripPrefix)(value).slice(-1 * strLength)
            : `${'0'.repeat(strLength)}${(0, stripPrefix_js_1.hexStripPrefix)(value)}`.slice(-1 * strLength));
}
exports.hexFixLength = hexFixLength;


/***/ }),

/***/ 10035:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexHasPrefix = void 0;
const hex_js_1 = __nccwpck_require__(50219);
/**
 * @name hexHasPrefix
 * @summary Tests for the existence of a `0x` prefix.
 * @description
 * Checks for a valid hex input value and if the start matched `0x`
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexHasPrefix } from '@polkadot/util';
 *
 * console.log('has prefix', hexHasPrefix('0x1234')); // => true
 * ```
 */
function hexHasPrefix(value) {
    return !!value && (0, hex_js_1.isHex)(value, -1);
}
exports.hexHasPrefix = hexHasPrefix;


/***/ }),

/***/ 62242:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexToU8a = exports.hexToString = exports.hexToNumber = exports.hexToBn = exports.hexToBigInt = exports.hexStripPrefix = exports.hexHasPrefix = exports.hexFixLength = exports.hexAddPrefix = void 0;
/**
 * @summary Internal utilities to create and test for hex values
 */
var addPrefix_js_1 = __nccwpck_require__(18050);
Object.defineProperty(exports, "hexAddPrefix", ({ enumerable: true, get: function () { return addPrefix_js_1.hexAddPrefix; } }));
var fixLength_js_1 = __nccwpck_require__(2060);
Object.defineProperty(exports, "hexFixLength", ({ enumerable: true, get: function () { return fixLength_js_1.hexFixLength; } }));
var hasPrefix_js_1 = __nccwpck_require__(10035);
Object.defineProperty(exports, "hexHasPrefix", ({ enumerable: true, get: function () { return hasPrefix_js_1.hexHasPrefix; } }));
var stripPrefix_js_1 = __nccwpck_require__(42882);
Object.defineProperty(exports, "hexStripPrefix", ({ enumerable: true, get: function () { return stripPrefix_js_1.hexStripPrefix; } }));
var toBigInt_js_1 = __nccwpck_require__(25922);
Object.defineProperty(exports, "hexToBigInt", ({ enumerable: true, get: function () { return toBigInt_js_1.hexToBigInt; } }));
var toBn_js_1 = __nccwpck_require__(48703);
Object.defineProperty(exports, "hexToBn", ({ enumerable: true, get: function () { return toBn_js_1.hexToBn; } }));
var toNumber_js_1 = __nccwpck_require__(8883);
Object.defineProperty(exports, "hexToNumber", ({ enumerable: true, get: function () { return toNumber_js_1.hexToNumber; } }));
var toString_js_1 = __nccwpck_require__(19343);
Object.defineProperty(exports, "hexToString", ({ enumerable: true, get: function () { return toString_js_1.hexToString; } }));
var toU8a_js_1 = __nccwpck_require__(72554);
Object.defineProperty(exports, "hexToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.hexToU8a; } }));


/***/ }),

/***/ 42882:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexStripPrefix = void 0;
const hex_js_1 = __nccwpck_require__(50219);
/**
 * @name hexStripPrefix
 * @summary Strips any leading `0x` prefix.
 * @description
 * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexStripPrefix } from '@polkadot/util';
 *
 * console.log('stripped', hexStripPrefix('0x1234')); // => 1234
 * ```
 */
function hexStripPrefix(value) {
    if (!value || value === '0x') {
        return '';
    }
    else if (hex_js_1.REGEX_HEX_PREFIXED.test(value)) {
        return value.substring(2);
    }
    else if (hex_js_1.REGEX_HEX_NOPREFIX.test(value)) {
        return value;
    }
    throw new Error(`Expected hex value to convert, found '${value}'`);
}
exports.hexStripPrefix = hexStripPrefix;


/***/ }),

/***/ 25922:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexToBigInt = void 0;
const x_bigint_1 = __nccwpck_require__(285);
const toBigInt_js_1 = __nccwpck_require__(4957);
const toU8a_js_1 = __nccwpck_require__(72554);
/**
 * @name hexToBigInt
 * @summary Creates a BigInt instance object from a hex string.
 */
function hexToBigInt(value, { isLe = false, isNegative = false } = {}) {
    return !value || value === '0x'
        ? (0, x_bigint_1.BigInt)(0)
        : (0, toBigInt_js_1.u8aToBigInt)((0, toU8a_js_1.hexToU8a)(value), { isLe, isNegative });
}
exports.hexToBigInt = hexToBigInt;


/***/ }),

/***/ 48703:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexToBn = void 0;
const bn_js_1 = __nccwpck_require__(32693);
const stripPrefix_js_1 = __nccwpck_require__(42882);
/**
 * @name hexToBn
 * @summary Creates a BN.js object from a hex string.
 * @description
 * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.
 * @param _value The value to convert
 * @param _options Options to pass while converting
 * @param _options.isLe Convert using Little Endian
 * @param _options.isNegative Convert using two's complement
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToBn } from '@polkadot/util';
 *
 * hexToBn('0x123480001f'); // => BN(0x123480001f)
 * ```
 */
function hexToBn(value, { isLe = false, isNegative = false } = {}) {
    if (!value || value === '0x') {
        return new bn_js_1.BN(0);
    }
    const stripped = (0, stripPrefix_js_1.hexStripPrefix)(value);
    const bn = new bn_js_1.BN(stripped, 16, isLe ? 'le' : 'be');
    // fromTwos takes as parameter the number of bits, which is the hex length
    // multiplied by 4 (2 bytes being 8 bits)
    return isNegative
        ? bn.fromTwos(stripped.length * 4)
        : bn;
}
exports.hexToBn = hexToBn;


/***/ }),

/***/ 8883:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexToNumber = void 0;
const toBn_js_1 = __nccwpck_require__(48703);
/**
 * @name hexToNumber
 * @summary Creates a Number value from a Buffer object.
 * @description
 * `null` inputs returns an NaN result, `hex` values return the actual value as a `Number`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToNumber } from '@polkadot/util';
 *
 * hexToNumber('0x1234'); // => 0x1234
 * ```
 */
function hexToNumber(value) {
    return value
        ? (0, toBn_js_1.hexToBn)(value).toNumber()
        : NaN;
}
exports.hexToNumber = hexToNumber;


/***/ }),

/***/ 19343:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexToString = void 0;
const toString_js_1 = __nccwpck_require__(66501);
const toU8a_js_1 = __nccwpck_require__(72554);
/**
 * @name hexToU8a
 * @summary Creates a Uint8Array object from a hex string.
 * @description
 * Hex input values return the actual bytes value converted to a string. Anything that is not a hex string (including the `0x` prefix) throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToString } from '@polkadot/util';
 *
 * hexToU8a('0x68656c6c6f'); // hello
 * ```
 */
function hexToString(_value) {
    return (0, toString_js_1.u8aToString)((0, toU8a_js_1.hexToU8a)(_value));
}
exports.hexToString = hexToString;


/***/ }),

/***/ 72554:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hexToU8a = void 0;
const CHR = '0123456789abcdef';
const U8 = new Uint8Array(256);
const U16 = new Uint8Array(256 * 256);
for (let i = 0, count = CHR.length; i < count; i++) {
    U8[CHR[i].charCodeAt(0) | 0] = i | 0;
    if (i > 9) {
        U8[CHR[i].toUpperCase().charCodeAt(0) | 0] = i | 0;
    }
}
for (let i = 0; i < 256; i++) {
    const s = i << 8;
    for (let j = 0; j < 256; j++) {
        U16[s | j] = (U8[i] << 4) | U8[j];
    }
}
/**
 * @name hexToU8a
 * @summary Creates a Uint8Array object from a hex string.
 * @description
 * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToU8a } from '@polkadot/util';
 *
 * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])
 * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])
 * ```
 */
function hexToU8a(value, bitLength = -1) {
    if (!value) {
        return new Uint8Array();
    }
    let s = value.startsWith('0x')
        ? 2
        : 0;
    const decLength = Math.ceil((value.length - s) / 2);
    const endLength = Math.ceil(bitLength === -1
        ? decLength
        : bitLength / 8);
    const result = new Uint8Array(endLength);
    const offset = endLength > decLength
        ? endLength - decLength
        : 0;
    for (let i = offset; i < endLength; i++, s += 2) {
        // The big factor here is actually the string lookups. If we do
        // HEX_TO_U16[value.substring()] we get an 10x slowdown. In the
        // same vein using charCodeAt (as opposed to value[s] or value.charAt(s)) is
        // also the faster operation by at least 2x with the character map above
        result[i] = U16[(value.charCodeAt(s) << 8) | value.charCodeAt(s + 1)];
    }
    return result;
}
exports.hexToU8a = hexToU8a;


/***/ }),

/***/ 29795:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(11553);
__nccwpck_require__(81325);
tslib_1.__exportStar(__nccwpck_require__(50667), exports);


/***/ }),

/***/ 24267:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isArray = void 0;
/**
 * @name isArray
 * @summary Tests for a Array instance.
 */
function isArray(value) {
    return Array.isArray(value);
}
exports.isArray = isArray;


/***/ }),

/***/ 71579:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isAscii = void 0;
const toU8a_js_1 = __nccwpck_require__(49110);
const hex_js_1 = __nccwpck_require__(50219);
const string_js_1 = __nccwpck_require__(18388);
/** @internal */
function isAsciiStr(str) {
    for (let i = 0, count = str.length; i < count; i++) {
        const b = str.charCodeAt(i);
        // check is inlined here, it is faster than making a call
        if (b < 32 || b > 126) {
            return false;
        }
    }
    return true;
}
/** @internal */
function isAsciiBytes(u8a) {
    for (let i = 0, count = u8a.length; i < count; i++) {
        const b = u8a[i] | 0;
        // check is inlined here, it is faster than making a call
        if (b < 32 || b > 126) {
            return false;
        }
    }
    return true;
}
/**
 * @name isAscii
 * @summary Tests if the input is printable ASCII
 * @description
 * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters
 */
function isAscii(value) {
    return (0, string_js_1.isString)(value)
        ? (0, hex_js_1.isHex)(value)
            ? isAsciiBytes((0, toU8a_js_1.u8aToU8a)(value))
            : isAsciiStr(value)
        : value
            ? isAsciiBytes(value)
            : false;
}
exports.isAscii = isAscii;


/***/ }),

/***/ 82386:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBigInt = void 0;
/**
 * @name isBigInt
 * @summary Tests for a `BigInt` object instance.
 * @description
 * Checks to see if the input object is an instance of `BigInt`
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBigInt } from '@polkadot/util';
 *
 * console.log('isBigInt', isBigInt(123_456n)); // => true
 * ```
 */
function isBigInt(value) {
    return typeof value === 'bigint';
}
exports.isBigInt = isBigInt;


/***/ }),

/***/ 4929:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBn = void 0;
const bn_js_1 = __nccwpck_require__(32693);
/**
 * @name isBn
 * @summary Tests for a `BN` object instance.
 * @description
 * Checks to see if the input object is an instance of `BN` (bn.js).
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { isBn } from '@polkadot/util';
 *
 * console.log('isBn', isBn(new BN(1))); // => true
 * ```
 */
function isBn(value) {
    return bn_js_1.BN.isBN(value);
}
exports.isBn = isBn;


/***/ }),

/***/ 45232:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBoolean = void 0;
/**
 * @name isBoolean
 * @summary Tests for a boolean value.
 * @description
 * Checks to see if the input value is a JavaScript boolean.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBoolean } from '@polkadot/util';
 *
 * isBoolean(false); // => true
 * ```
 */
function isBoolean(value) {
    return typeof value === 'boolean';
}
exports.isBoolean = isBoolean;


/***/ }),

/***/ 82473:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isBuffer = void 0;
const x_global_1 = __nccwpck_require__(74671);
const has_js_1 = __nccwpck_require__(11512);
const function_js_1 = __nccwpck_require__(93075);
/**
 * @name isBuffer
 * @summary Tests for a `Buffer` object instance.
 * @description
 * Checks to see if the input object is an instance of `Buffer`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBuffer } from '@polkadot/util';
 *
 * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true
 * ```
 */
function isBuffer(value) {
    // we do check a function first, since it is slightly faster than isBuffer itself
    return has_js_1.hasBuffer && !!value && (0, function_js_1.isFunction)(value.readDoubleLE) && x_global_1.xglobal.Buffer.isBuffer(value);
}
exports.isBuffer = isBuffer;


/***/ }),

/***/ 96019:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isChildClass = void 0;
const class_js_1 = __nccwpck_require__(88536);
/**
 * @name isChildClass
 * @summary Tests if the child extends the parent Class
 * @description
 * Checks to see if the child Class extends the parent Class
 * @example
 * <BR>
 *
 * ```javascript
 * import { isChildClass } from '@polkadot/util';
 *
 * console.log('isChildClass', isChildClass(BN, BN); // => true
 * console.log('isChildClass', isChildClass(BN, Uint8Array); // => false
 * ```
 */
function isChildClass(Parent, Child) {
    // https://stackoverflow.com/questions/30993434/check-if-a-constructor-inherits-another-in-es6/30993664
    return (0, class_js_1.isClass)(Child) && (0, class_js_1.isClass)(Parent)
        // eslint-disable-next-line no-prototype-builtins
        ? Parent === Child || Parent.isPrototypeOf(Child)
        : false;
}
exports.isChildClass = isChildClass;


/***/ }),

/***/ 88536:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isClass = void 0;
const helpers_js_1 = __nccwpck_require__(74186);
/**
 * @name isClass
 * Tests if the supplied argument is a Class
 */
exports.isClass = (0, helpers_js_1.isOnFunction)('isPrototypeOf', 'hasOwnProperty');


/***/ }),

/***/ 92939:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isCodec = void 0;
const helpers_js_1 = __nccwpck_require__(74186);
const checkCodec = /*#__PURE__*/ (0, helpers_js_1.isOnObject)('toHex', 'toHuman', 'toU8a');
const checkRegistry = /*#__PURE__*/ (0, helpers_js_1.isOnObject)('get');
function isCodec(value) {
    return checkCodec(value) && checkRegistry(value.registry);
}
exports.isCodec = isCodec;


/***/ }),

/***/ 15970:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isCompact = void 0;
const helpers_js_1 = __nccwpck_require__(74186);
/**
 * @name isCompact
 * @summary Tests for SCALE-Compact-like object instance.
 */
exports.isCompact = (0, helpers_js_1.isOnObject)('toBigInt', 'toBn', 'toNumber', 'unwrap');


/***/ }),

/***/ 81633:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isError = void 0;
/**
 * @name isError
 * @summary Tests for a `Error` object instance.
 * @description
 * Checks to see if the input object is an instance of `Error`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isError } from '@polkadot/util';
 *
 * console.log('isError', isError(new Error('message'))); // => true
 * ```
 */
function isError(value) {
    return (((value && value.constructor) === Error) ||
        value instanceof Error);
}
exports.isError = isError;


/***/ }),

/***/ 93075:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isFunction = void 0;
/**
 * @name isFunction
 * @summary Tests for a `function`.
 * @description
 * Checks to see if the input value is a JavaScript function.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isFunction } from '@polkadot/util';
 *
 * isFunction(() => false); // => true
 * ```
 */
function isFunction(value) {
    return typeof value === 'function';
}
exports.isFunction = isFunction;


/***/ }),

/***/ 74186:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isOnObject = exports.isOnFunction = exports.isOn = void 0;
const function_js_1 = __nccwpck_require__(93075);
const object_js_1 = __nccwpck_require__(50044);
function isOn(...fns) {
    return (value) => ((0, object_js_1.isObject)(value) || (0, function_js_1.isFunction)(value)) &&
        fns.every((f) => (0, function_js_1.isFunction)(value[f]));
}
exports.isOn = isOn;
function isOnFunction(...fns) {
    return (value) => (0, function_js_1.isFunction)(value) &&
        fns.every((f) => (0, function_js_1.isFunction)(value[f]));
}
exports.isOnFunction = isOnFunction;
function isOnObject(...fns) {
    return (value) => (0, object_js_1.isObject)(value) &&
        fns.every((f) => (0, function_js_1.isFunction)(value[f]));
}
exports.isOnObject = isOnObject;


/***/ }),

/***/ 50219:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isHex = exports.REGEX_HEX_NOPREFIX = exports.REGEX_HEX_PREFIXED = void 0;
exports.REGEX_HEX_PREFIXED = /^0x[\da-fA-F]+$/;
exports.REGEX_HEX_NOPREFIX = /^[\da-fA-F]+$/;
/**
 * @name isHex
 * @summary Tests for a hex string.
 * @description
 * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isHex } from '@polkadot/util';
 *
 * isHex('0x1234'); // => true
 * isHex('0x1234', 8); // => false
 * ```
 */
function isHex(value, bitLength = -1, ignoreLength) {
    return (typeof value === 'string' && (value === '0x' ||
        exports.REGEX_HEX_PREFIXED.test(value))) && (bitLength === -1
        ? (ignoreLength || (value.length % 2 === 0))
        : (value.length === (2 + Math.ceil(bitLength / 4))));
}
exports.isHex = isHex;


/***/ }),

/***/ 81711:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isWasm = exports.isUtf8 = exports.isUndefined = exports.isU8a = exports.isToBn = exports.isToBigInt = exports.isTestChain = exports.isString = exports.isRiscV = exports.isPromise = exports.isObservable = exports.isObject = exports.isNumber = exports.isNull = exports.isJsonObject = exports.isIp = exports.isInstanceOf = exports.isHex = exports.isFunction = exports.isError = exports.isCompact = exports.isCodec = exports.isClass = exports.isChildClass = exports.isBuffer = exports.isBoolean = exports.isBn = exports.isBigInt = exports.isAscii = exports.isArray = void 0;
/**
 * @summary Type checking utilities
 */
var array_js_1 = __nccwpck_require__(24267);
Object.defineProperty(exports, "isArray", ({ enumerable: true, get: function () { return array_js_1.isArray; } }));
var ascii_js_1 = __nccwpck_require__(71579);
Object.defineProperty(exports, "isAscii", ({ enumerable: true, get: function () { return ascii_js_1.isAscii; } }));
var bigInt_js_1 = __nccwpck_require__(82386);
Object.defineProperty(exports, "isBigInt", ({ enumerable: true, get: function () { return bigInt_js_1.isBigInt; } }));
var bn_js_1 = __nccwpck_require__(4929);
Object.defineProperty(exports, "isBn", ({ enumerable: true, get: function () { return bn_js_1.isBn; } }));
var boolean_js_1 = __nccwpck_require__(45232);
Object.defineProperty(exports, "isBoolean", ({ enumerable: true, get: function () { return boolean_js_1.isBoolean; } }));
var buffer_js_1 = __nccwpck_require__(82473);
Object.defineProperty(exports, "isBuffer", ({ enumerable: true, get: function () { return buffer_js_1.isBuffer; } }));
var childClass_js_1 = __nccwpck_require__(96019);
Object.defineProperty(exports, "isChildClass", ({ enumerable: true, get: function () { return childClass_js_1.isChildClass; } }));
var class_js_1 = __nccwpck_require__(88536);
Object.defineProperty(exports, "isClass", ({ enumerable: true, get: function () { return class_js_1.isClass; } }));
var codec_js_1 = __nccwpck_require__(92939);
Object.defineProperty(exports, "isCodec", ({ enumerable: true, get: function () { return codec_js_1.isCodec; } }));
var compact_js_1 = __nccwpck_require__(15970);
Object.defineProperty(exports, "isCompact", ({ enumerable: true, get: function () { return compact_js_1.isCompact; } }));
var error_js_1 = __nccwpck_require__(81633);
Object.defineProperty(exports, "isError", ({ enumerable: true, get: function () { return error_js_1.isError; } }));
var function_js_1 = __nccwpck_require__(93075);
Object.defineProperty(exports, "isFunction", ({ enumerable: true, get: function () { return function_js_1.isFunction; } }));
var hex_js_1 = __nccwpck_require__(50219);
Object.defineProperty(exports, "isHex", ({ enumerable: true, get: function () { return hex_js_1.isHex; } }));
var instanceOf_js_1 = __nccwpck_require__(10152);
Object.defineProperty(exports, "isInstanceOf", ({ enumerable: true, get: function () { return instanceOf_js_1.isInstanceOf; } }));
var ip_js_1 = __nccwpck_require__(68015);
Object.defineProperty(exports, "isIp", ({ enumerable: true, get: function () { return ip_js_1.isIp; } }));
var jsonObject_js_1 = __nccwpck_require__(2644);
Object.defineProperty(exports, "isJsonObject", ({ enumerable: true, get: function () { return jsonObject_js_1.isJsonObject; } }));
var null_js_1 = __nccwpck_require__(54280);
Object.defineProperty(exports, "isNull", ({ enumerable: true, get: function () { return null_js_1.isNull; } }));
var number_js_1 = __nccwpck_require__(84580);
Object.defineProperty(exports, "isNumber", ({ enumerable: true, get: function () { return number_js_1.isNumber; } }));
var object_js_1 = __nccwpck_require__(50044);
Object.defineProperty(exports, "isObject", ({ enumerable: true, get: function () { return object_js_1.isObject; } }));
var observable_js_1 = __nccwpck_require__(65004);
Object.defineProperty(exports, "isObservable", ({ enumerable: true, get: function () { return observable_js_1.isObservable; } }));
var promise_js_1 = __nccwpck_require__(83308);
Object.defineProperty(exports, "isPromise", ({ enumerable: true, get: function () { return promise_js_1.isPromise; } }));
var riscv_js_1 = __nccwpck_require__(39083);
Object.defineProperty(exports, "isRiscV", ({ enumerable: true, get: function () { return riscv_js_1.isRiscV; } }));
var string_js_1 = __nccwpck_require__(18388);
Object.defineProperty(exports, "isString", ({ enumerable: true, get: function () { return string_js_1.isString; } }));
var testChain_js_1 = __nccwpck_require__(41639);
Object.defineProperty(exports, "isTestChain", ({ enumerable: true, get: function () { return testChain_js_1.isTestChain; } }));
var toBigInt_js_1 = __nccwpck_require__(99112);
Object.defineProperty(exports, "isToBigInt", ({ enumerable: true, get: function () { return toBigInt_js_1.isToBigInt; } }));
var toBn_js_1 = __nccwpck_require__(78547);
Object.defineProperty(exports, "isToBn", ({ enumerable: true, get: function () { return toBn_js_1.isToBn; } }));
var u8a_js_1 = __nccwpck_require__(51550);
Object.defineProperty(exports, "isU8a", ({ enumerable: true, get: function () { return u8a_js_1.isU8a; } }));
var undefined_js_1 = __nccwpck_require__(21419);
Object.defineProperty(exports, "isUndefined", ({ enumerable: true, get: function () { return undefined_js_1.isUndefined; } }));
var utf8_js_1 = __nccwpck_require__(28426);
Object.defineProperty(exports, "isUtf8", ({ enumerable: true, get: function () { return utf8_js_1.isUtf8; } }));
var wasm_js_1 = __nccwpck_require__(67529);
Object.defineProperty(exports, "isWasm", ({ enumerable: true, get: function () { return wasm_js_1.isWasm; } }));


/***/ }),

/***/ 10152:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isInstanceOf = void 0;
/**
 * @name isInstanceOf
 * @summary Tests for a instance of a class.
 * @description
 * Checks to see if the input value is an instance of the test class.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isInstanceOf } from '@polkadot/util';
 *
 * console.log('isInstanceOf', isInstanceOf(new Array(0), Array)); // => true
 * ```
 */
function isInstanceOf(value, Clazz) {
    return (((value && value.constructor) === Clazz) ||
        value instanceof Clazz);
}
exports.isInstanceOf = isInstanceOf;


/***/ }),

/***/ 68015:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isIp = void 0;
const v4 = '(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}';
const v6s = '[a-fA-F\\d]{1,4}';
const v6 = `
(?:
(?:${v6s}:){7}(?:${v6s}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:${v6s}:){6}(?:${v4}|:${v6s}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:${v6s}:){5}(?::${v4}|(?::${v6s}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:${v6s}:){4}(?:(?::${v6s}){0,1}:${v4}|(?::${v6s}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:${v6s}:){3}(?:(?::${v6s}){0,2}:${v4}|(?::${v6s}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:${v6s}:){2}(?:(?::${v6s}){0,3}:${v4}|(?::${v6s}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:${v6s}:){1}(?:(?::${v6s}){0,4}:${v4}|(?::${v6s}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::${v6s}){0,5}:${v4}|(?::${v6s}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`.replace(/\s*\/\/.*$/gm, '').replace(/\n/g, '').trim();
const v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);
const v4exact = new RegExp(`^${v4}$`);
const v6exact = new RegExp(`^${v6}$`);
/**
 * @name isIp
 * @summary Tests if the value is a valid IP address
 * @description
 * Checks to see if the value is a valid IP address. Optionally check for either v4/v6
 * @example
 * <BR>
 *
 * ```javascript
 * import { isIp } from '@polkadot/util';
 *
 * isIp('192.168.0.1')); // => true
 * isIp('1:2:3:4:5:6:7:8'); // => true
 * isIp('192.168.0.1', 'v6')); // => false
 * isIp('1:2:3:4:5:6:7:8', 'v4'); // => false
 * ```
 */
function isIp(value, type) {
    switch (type) {
        case 'v4': return v4exact.test(value);
        case 'v6': return v6exact.test(value);
        default: return v46Exact.test(value);
    }
}
exports.isIp = isIp;


/***/ }),

/***/ 2644:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isJsonObject = void 0;
const stringify_js_1 = __nccwpck_require__(95450);
/**
 * @name isJsonObject
 * @summary Tests for a valid JSON `object`.
 * @description
 * Checks to see if the input value is a valid JSON object.
 * It returns false if the input is JSON parsable, but not an Javascript object.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isJsonObject } from '@polkadot/util';
 *
 * isJsonObject({}); // => true
 * isJsonObject({
 *  "Test": "1234",
 *  "NestedTest": {
 *   "Test": "5678"
 *  }
 * }); // => true
 * isJsonObject(1234); // JSON parsable, but not an object =>  false
 * isJsonObject(null); // JSON parsable, but not an object => false
 * isJsonObject('not an object'); // => false
 * ```
 */
function isJsonObject(value) {
    const str = typeof value !== 'string'
        ? (0, stringify_js_1.stringify)(value)
        : value;
    try {
        const obj = JSON.parse(str);
        return typeof obj === 'object' && obj !== null;
    }
    catch {
        return false;
    }
}
exports.isJsonObject = isJsonObject;


/***/ }),

/***/ 54280:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNull = void 0;
/**
 * @name isNull
 * @summary Tests for a `null` values.
 * @description
 * Checks to see if the input value is `null`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNull } from '@polkadot/util';
 *
 * console.log('isNull', isNull(null)); // => true
 * ```
 */
function isNull(value) {
    return value === null;
}
exports.isNull = isNull;


/***/ }),

/***/ 84580:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNumber = void 0;
/**
 * @name isNumber
 * @summary Tests for a JavaScript number.
 * @description
 * Checks to see if the input value is a valid number.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNumber } from '@polkadot/util';
 *
 * console.log('isNumber', isNumber(1234)); // => true
 * ```
 */
function isNumber(value) {
    return typeof value === 'number';
}
exports.isNumber = isNumber;


/***/ }),

/***/ 50044:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isObject = void 0;
/**
 * @name isObject
 * @summary Tests for an `object`.
 * @description
 * Checks to see if the input value is a JavaScript object.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isObject } from '@polkadot/util';
 *
 * isObject({}); // => true
 * isObject('something'); // => false
 * ```
 */
function isObject(value) {
    return !!value && typeof value === 'object';
}
exports.isObject = isObject;


/***/ }),

/***/ 65004:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isObservable = void 0;
const helpers_js_1 = __nccwpck_require__(74186);
/**
 * @name isBObservable
 * @summary Tests for a `Observable` object instance.
 * @description
 * Checks to see if the input object is an instance of `BN` (bn.js).
 * @example
 * <BR>
 *
 * ```javascript
 * import { isObservable } from '@polkadot/util';
 *
 * console.log('isObservable', isObservable(...));
 * ```
 */
exports.isObservable = (0, helpers_js_1.isOn)('next');


/***/ }),

/***/ 83308:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isPromise = void 0;
const helpers_js_1 = __nccwpck_require__(74186);
exports.isPromise = (0, helpers_js_1.isOnObject)('catch', 'then');


/***/ }),

/***/ 39083:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isRiscV = void 0;
const eq_js_1 = __nccwpck_require__(88499);
const u8a_js_1 = __nccwpck_require__(51550);
const ELF_MAGIC = new Uint8Array([0x7f, 0x45, 0x4c, 0x46]); // ELF magic bytes: 0x7f, 'E', 'L', 'F'
/**
 * @name isRiscV
 * @summary Tests if the input has a RISC-V header
 * @description
 * Checks to see if the input Uint8Array contains a valid RISC-V header
 */
function isRiscV(bytes) {
    return (0, u8a_js_1.isU8a)(bytes) && (0, eq_js_1.u8aEq)(bytes.subarray(0, 4), ELF_MAGIC);
}
exports.isRiscV = isRiscV;


/***/ }),

/***/ 18388:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isString = void 0;
/**
 * @name isString
 * @summary Tests for a string.
 * @description
 * Checks to see if the input value is a JavaScript string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isString } from '@polkadot/util';
 *
 * console.log('isString', isString('test')); // => true
 * ```
 */
function isString(value) {
    return typeof value === 'string' || value instanceof String;
}
exports.isString = isString;


/***/ }),

/***/ 41639:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isTestChain = void 0;
const REGEX_DEV = /(Development|Local Testnet)$/;
function isTestChain(chain) {
    if (!chain) {
        return false;
    }
    return !!REGEX_DEV.test(chain.toString());
}
exports.isTestChain = isTestChain;


/***/ }),

/***/ 99112:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isToBigInt = void 0;
const helpers_js_1 = __nccwpck_require__(74186);
exports.isToBigInt = (0, helpers_js_1.isOn)('toBigInt');


/***/ }),

/***/ 78547:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isToBn = void 0;
const helpers_js_1 = __nccwpck_require__(74186);
exports.isToBn = (0, helpers_js_1.isOn)('toBn');


/***/ }),

/***/ 51550:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isU8a = void 0;
/**
 * @name isU8a
 * @summary Tests for a `Uint8Array` object instance.
 * @description
 * Checks to see if the input object is an instance of `Uint8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUint8Array } from '@polkadot/util';
 *
 * console.log('isU8a', isU8a([])); // => false
 * ```
 */
function isU8a(value) {
    // here we defer the instanceof check which is actually slightly
    // slower than just checking the constrctor (direct instances)
    return (((value && value.constructor) === Uint8Array) ||
        value instanceof Uint8Array);
}
exports.isU8a = isU8a;


/***/ }),

/***/ 21419:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isUndefined = void 0;
/**
 * @name isUndefined
 * @summary Tests for a `undefined` values.
 * @description
 * Checks to see if the input value is `undefined`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUndefined } from '@polkadot/util';
 *
 * console.log('isUndefined', isUndefined(void(0))); // => true
 * ```
 */
function isUndefined(value) {
    return value === undefined;
}
exports.isUndefined = isUndefined;


/***/ }),

/***/ 28426:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isUtf8 = void 0;
const toU8a_js_1 = __nccwpck_require__(49110);
const string_js_1 = __nccwpck_require__(18388);
/**
 * @name isUtf8
 * @summary Tests if the input is valid Utf8
 * @description
 * Checks to see if the input string or Uint8Array is valid Utf8
 */
function isUtf8(value) {
    if (!value) {
        return (0, string_js_1.isString)(value);
    }
    const u8a = (0, toU8a_js_1.u8aToU8a)(value);
    const len = u8a.length;
    let i = 0;
    while (i < len) {
        if (u8a[i] <= 0x7F) /* 00..7F */ {
            i += 1;
        }
        else if (u8a[i] >= 0xC2 && u8a[i] <= 0xDF) /* C2..DF 80..BF */ {
            if (i + 1 < len) /* Expect a 2nd byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte between C2 and DF, expecting a 2nd byte between 80 and BF";
                    // *faulty_bytes = 2;
                    return false;
                }
            }
            else {
                // *message = "After a first byte between C2 and DF, expecting a 2nd byte.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 2;
        }
        else if (u8a[i] === 0xE0) /* E0 A0..BF 80..BF */ {
            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {
                if (u8a[i + 1] < 0xA0 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte of E0, expecting a 2nd byte between A0 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of E0, expecting a 3nd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
            }
            else {
                // *message = "After a first byte of E0, expecting two following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 3;
        }
        else if (u8a[i] >= 0xE1 && u8a[i] <= 0xEC) /* E1..EC 80..BF 80..BF */ {
            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte between E1 and EC, expecting the 2nd byte between 80 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte between E1 and EC, expecting the 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
            }
            else {
                // *message = "After a first byte between E1 and EC, expecting two following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 3;
        }
        else if (u8a[i] === 0xED) /* ED 80..9F 80..BF */ {
            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x9F) {
                    // *message = "After a first byte of ED, expecting 2nd byte between 80 and 9F.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of ED, expecting 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
            }
            else {
                // *message = "After a first byte of ED, expecting two following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 3;
        }
        else if (u8a[i] >= 0xEE && u8a[i] <= 0xEF) /* EE..EF 80..BF 80..BF */ {
            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte between EE and EF, expecting 2nd byte between 80 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte between EE and EF, expecting 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
            }
            else {
                // *message = "After a first byte between EE and EF, two following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 3;
        }
        else if (u8a[i] === 0xF0) /* F0 90..BF 80..BF 80..BF */ {
            if (i + 3 < len) /* Expect a 2nd, 3rd 3th byte */ {
                if (u8a[i + 1] < 0x90 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte of F0, expecting 2nd byte between 90 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of F0, expecting 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
                if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
                    // *message = "After a first byte of F0, expecting 4th byte between 80 and BF.";
                    // *faulty_bytes = 4;
                    return false;
                }
            }
            else {
                // *message = "After a first byte of F0, expecting three following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 4;
        }
        else if (u8a[i] >= 0xF1 && u8a[i] <= 0xF3) /* F1..F3 80..BF 80..BF 80..BF */ {
            if (i + 3 < len) /* Expect a 2nd, 3rd 3th byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte of F1, F2, or F3, expecting a 2nd byte between 80 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of F1, F2, or F3, expecting a 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
                if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
                    // *message = "After a first byte of F1, F2, or F3, expecting a 4th byte between 80 and BF.";
                    // *faulty_bytes = 4;
                    return false;
                }
            }
            else {
                // *message = "After a first byte of F1, F2, or F3, expecting three following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 4;
        }
        else if (u8a[i] === 0xF4) /* F4 80..8F 80..BF 80..BF */ {
            if (i + 3 < len) /* Expect a 2nd, 3rd 3th byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x8F) {
                    // *message = "After a first byte of F4, expecting 2nd byte between 80 and 8F.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of F4, expecting 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
                if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
                    // *message = "After a first byte of F4, expecting 4th byte between 80 and BF.";
                    // *faulty_bytes = 4;
                    return false;
                }
            }
            else {
                // *message = "After a first byte of F4, expecting three following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 4;
        }
        else {
            // *message = "Expecting bytes in the following ranges: 00..7F C2..F4.";
            // *faulty_bytes = 1;
            return false;
        }
    }
    return true;
}
exports.isUtf8 = isUtf8;


/***/ }),

/***/ 67529:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isWasm = void 0;
const eq_js_1 = __nccwpck_require__(88499);
const u8a_js_1 = __nccwpck_require__(51550);
const WASM_MAGIC = new Uint8Array([0, 97, 115, 109]); // \0asm
/**
 * @name isWasm
 * @summary Tests if the input has a WASM header
 * @description
 * Checks to see if the input Uint8Array contains a valid WASM header
 */
function isWasm(value) {
    return (0, u8a_js_1.isU8a)(value) && (0, eq_js_1.u8aEq)(value.subarray(0, 4), WASM_MAGIC);
}
exports.isWasm = isWasm;


/***/ }),

/***/ 43375:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.lazyMethods = exports.lazyMethod = void 0;
/**
 * @name lazyMethod
 * @description
 * Creates a lazy, on-demand getter for the specific value. Upon get the value will be evaluated.
 */
function lazyMethod(result, item, creator, getName, index = 0) {
    const name = getName
        ? getName(item, index)
        : item.toString();
    let value;
    Object.defineProperty(result, name, {
        // This allows for re-configuration with the embedded defineProperty below
        // and ensures that on tested browsers and Node, it _will_ be redefined
        // and thus short-circuited for future access
        configurable: true,
        enumerable: true,
        // Use a function here, we don't want to capture the outer this, i.e.
        // don't use arrow functions in this context since we have a this inside
        get: function () {
            // This check should _always_ be false and unneeded, since we override
            // with a value below ... however we ensure we are quire vigilant against
            // all environment failures, so we are rather be safe than sorry
            if (value === undefined) {
                value = creator(item, index, this);
                try {
                    // re-define the property as a value, next time around this
                    // getter will only return the computed value
                    Object.defineProperty(this, name, { value });
                }
                catch {
                    // ignore any errors, since this _should_ not happen due to
                    // the "configurable" property above. But if it ever does
                    // from here-on we will be the cached value the next time
                    // around (with a very slight dip in performance)
                }
            }
            return value;
        }
    });
}
exports.lazyMethod = lazyMethod;
/**
 * @name lazyMethods
 * @description
 * Creates lazy, on-demand getters for the specific values.
 */
function lazyMethods(result, items, creator, getName) {
    for (let i = 0, count = items.length; i < count; i++) {
        lazyMethod(result, items[i], creator, getName, i);
    }
    return result;
}
exports.lazyMethods = lazyMethods;


/***/ }),

/***/ 61736:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.logger = exports.loggerFormat = void 0;
const x_global_1 = __nccwpck_require__(74671);
const formatDate_js_1 = __nccwpck_require__(91988);
const bn_js_1 = __nccwpck_require__(4929);
const buffer_js_1 = __nccwpck_require__(82473);
const function_js_1 = __nccwpck_require__(93075);
const object_js_1 = __nccwpck_require__(50044);
const u8a_js_1 = __nccwpck_require__(51550);
const toHex_js_1 = __nccwpck_require__(94038);
const toU8a_js_1 = __nccwpck_require__(49110);
const has_js_1 = __nccwpck_require__(11512);
const noop_js_1 = __nccwpck_require__(43698);
const logTo = {
    debug: 'log',
    error: 'error',
    log: 'log',
    warn: 'warn'
};
function formatOther(value) {
    if (value && (0, object_js_1.isObject)(value) && value.constructor === Object) {
        const result = {};
        for (const [k, v] of Object.entries(value)) {
            result[k] = loggerFormat(v);
        }
        return result;
    }
    return value;
}
function loggerFormat(value) {
    if (Array.isArray(value)) {
        return value.map(loggerFormat);
    }
    else if ((0, bn_js_1.isBn)(value)) {
        return value.toString();
    }
    else if ((0, u8a_js_1.isU8a)(value) || (0, buffer_js_1.isBuffer)(value)) {
        return (0, toHex_js_1.u8aToHex)((0, toU8a_js_1.u8aToU8a)(value));
    }
    return formatOther(value);
}
exports.loggerFormat = loggerFormat;
function formatWithLength(maxLength) {
    return (v) => {
        if (maxLength <= 0) {
            return v;
        }
        const r = `${v}`;
        return r.length < maxLength
            ? v
            : `${r.substring(0, maxLength)} ...`;
    };
}
function apply(log, type, values, maxSize = -1) {
    if (values.length === 1 && (0, function_js_1.isFunction)(values[0])) {
        const fnResult = values[0]();
        return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult], maxSize);
    }
    console[logTo[log]]((0, formatDate_js_1.formatDate)(new Date()), type, ...values
        .map(loggerFormat)
        .map(formatWithLength(maxSize)));
}
function isDebugOn(e, type) {
    return !!e && (e === '*' ||
        type === e ||
        (e.endsWith('*') &&
            type.startsWith(e.slice(0, -1))));
}
function isDebugOff(e, type) {
    return !!e && (e.startsWith('-') &&
        (type === e.slice(1) ||
            (e.endsWith('*') &&
                type.startsWith(e.slice(1, -1)))));
}
function getDebugFlag(env, type) {
    let flag = false;
    for (const e of env) {
        if (isDebugOn(e, type)) {
            flag = true;
        }
        else if (isDebugOff(e, type)) {
            flag = false;
        }
    }
    return flag;
}
function parseEnv(type) {
    const env = (has_js_1.hasProcess ? x_global_1.xglobal.process : {}).env || {};
    const maxSize = parseInt(env['DEBUG_MAX'] || '-1', 10);
    return [
        getDebugFlag((env['DEBUG'] || '').toLowerCase().split(','), type),
        isNaN(maxSize)
            ? -1
            : maxSize
    ];
}
/**
 * @name Logger
 * @summary Creates a consistent log interface for messages
 * @description
 * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.
 * @example
 * <BR>
 *
 * ```javascript
 * import { logger } from '@polkadot/util';
 *
 * const l = logger('test');
 * ```
 */
function logger(origin) {
    const type = `${origin.toUpperCase()}:`.padStart(16);
    const [isDebug, maxSize] = parseEnv(origin.toLowerCase());
    return {
        debug: isDebug
            ? (...values) => apply('debug', type, values, maxSize)
            : noop_js_1.noop,
        error: (...values) => apply('error', type, values),
        log: (...values) => apply('log', type, values),
        noop: noop_js_1.noop,
        warn: (...values) => apply('warn', type, values)
    };
}
exports.logger = logger;


/***/ }),

/***/ 80019:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.memoize = void 0;
const stringify_js_1 = __nccwpck_require__(95450);
function defaultGetId() {
    return 'none';
}
/**
 * @name memoize
 * @description Memomize the function with a specific instanceId
 */
function memoize(fn, { getInstanceId = defaultGetId } = {}) {
    const cache = {};
    const memoized = (...args) => {
        const stringParams = (0, stringify_js_1.stringify)(args);
        const instanceId = getInstanceId();
        if (!cache[instanceId]) {
            cache[instanceId] = {};
        }
        if (cache[instanceId][stringParams] === undefined) {
            cache[instanceId][stringParams] = fn(...args);
        }
        return cache[instanceId][stringParams];
    };
    memoized.unmemoize = (...args) => {
        const stringParams = (0, stringify_js_1.stringify)(args);
        const instanceId = getInstanceId();
        if (cache[instanceId]?.[stringParams] !== undefined) {
            delete cache[instanceId][stringParams];
        }
    };
    return memoized;
}
exports.memoize = memoize;


/***/ }),

/***/ 27474:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.nextTick = void 0;
/**
 * @name nextTick
 * @description Defer the operation to the queue for evaluation on the next tick
 */
function nextTick(onExec, onError) {
    // While Promise.resolve().then(...) would defer to the nextTick, this
    // actually does not play as nicely in browsers like the setTimeout(...)
    // approach. So the safer, though less optimal approach is the one taken here
    setTimeout(() => {
        Promise
            .resolve()
            .then(() => {
            onExec();
        })
            .catch((error) => {
            if (onError) {
                onError(error);
            }
            else {
                console.error(error);
            }
        });
    }, 0);
}
exports.nextTick = nextTick;


/***/ }),

/***/ 43698:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.noop = exports.identity = void 0;
/**
 * A sharable identity function. Returns the input as-is with no transformation applied.
 */
function identity(value) {
    return value;
}
exports.identity = identity;
/**
 * A sharable noop function. As the name suggests, does nothing
 */
function noop() {
    // noop
}
exports.noop = noop;


/***/ }),

/***/ 21543:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.numberToU8a = exports.numberToHex = void 0;
/**
 * @summary Utility methods to convert to and from `number` values
 */
var toHex_js_1 = __nccwpck_require__(29892);
Object.defineProperty(exports, "numberToHex", ({ enumerable: true, get: function () { return toHex_js_1.numberToHex; } }));
var toU8a_js_1 = __nccwpck_require__(56111);
Object.defineProperty(exports, "numberToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.numberToU8a; } }));


/***/ }),

/***/ 29892:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.numberToHex = void 0;
const fixLength_js_1 = __nccwpck_require__(2060);
/**
 * @name numberToHex
 * @summary Creates a hex value from a number.
 * @description
 * `null`/`undefined`/`NaN` inputs returns an empty `0x` result. `number` input values return the actual bytes value converted to a `hex`. With `bitLength` set, it converts the number to the equivalent size.
 * @example
 * <BR>
 *
 * ```javascript
 * import { numberToHex } from '@polkadot/util';
 *
 * numberToHex(0x1234); // => '0x1234'
 * numberToHex(0x1234, 32); // => 0x00001234
 * ```
 */
function numberToHex(value, bitLength = -1) {
    const hex = (!value || Number.isNaN(value) ? 0 : value).toString(16);
    return (0, fixLength_js_1.hexFixLength)(hex.length % 2 ? `0${hex}` : hex, bitLength, true);
}
exports.numberToHex = numberToHex;


/***/ }),

/***/ 56111:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.numberToU8a = void 0;
const toU8a_js_1 = __nccwpck_require__(72554);
const toHex_js_1 = __nccwpck_require__(29892);
/**
 * @name numberToU8a
 * @summary Creates a Uint8Array object from a number.
 * @description
 * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `number` input values return the actual bytes value converted to a `Uint8Array`. With `bitLength`, it converts the value to the equivalent size.
 * @example
 * <BR>
 *
 * ```javascript
 * import { numberToU8a } from '@polkadot/util';
 *
 * numberToU8a(0x1234); // => [0x12, 0x34]
 * ```
 */
function numberToU8a(value, bitLength = -1) {
    return (0, toU8a_js_1.hexToU8a)((0, toHex_js_1.numberToHex)(value, bitLength));
}
exports.numberToU8a = numberToU8a;


/***/ }),

/***/ 42185:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectClear = void 0;
/**
 * @name objectClear
 * @summary Removes all the keys from the input object
 */
function objectClear(value) {
    const keys = Object.keys(value);
    for (let i = 0, count = keys.length; i < count; i++) {
        delete value[keys[i]];
    }
    return value;
}
exports.objectClear = objectClear;


/***/ }),

/***/ 17430:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectCopy = void 0;
const spread_js_1 = __nccwpck_require__(80467);
/**
 * @name objectCopy
 * @summary Creates a shallow clone of the input object
 */
function objectCopy(source) {
    return (0, spread_js_1.objectSpread)({}, source);
}
exports.objectCopy = objectCopy;


/***/ }),

/***/ 85068:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectEntries = void 0;
/**
 * @name objectEntries
 * @summary A version of Object.entries that is typed for TS
 */
function objectEntries(obj) {
    return Object.entries(obj);
}
exports.objectEntries = objectEntries;


/***/ }),

/***/ 95900:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectValues = exports.objectSpread = exports.objectProperty = exports.objectProperties = exports.objectKeys = exports.objectEntries = exports.objectCopy = exports.objectClear = void 0;
var clear_js_1 = __nccwpck_require__(42185);
Object.defineProperty(exports, "objectClear", ({ enumerable: true, get: function () { return clear_js_1.objectClear; } }));
var copy_js_1 = __nccwpck_require__(17430);
Object.defineProperty(exports, "objectCopy", ({ enumerable: true, get: function () { return copy_js_1.objectCopy; } }));
var entries_js_1 = __nccwpck_require__(85068);
Object.defineProperty(exports, "objectEntries", ({ enumerable: true, get: function () { return entries_js_1.objectEntries; } }));
var keys_js_1 = __nccwpck_require__(30569);
Object.defineProperty(exports, "objectKeys", ({ enumerable: true, get: function () { return keys_js_1.objectKeys; } }));
var property_js_1 = __nccwpck_require__(16591);
Object.defineProperty(exports, "objectProperties", ({ enumerable: true, get: function () { return property_js_1.objectProperties; } }));
Object.defineProperty(exports, "objectProperty", ({ enumerable: true, get: function () { return property_js_1.objectProperty; } }));
var spread_js_1 = __nccwpck_require__(80467);
Object.defineProperty(exports, "objectSpread", ({ enumerable: true, get: function () { return spread_js_1.objectSpread; } }));
var values_js_1 = __nccwpck_require__(65815);
Object.defineProperty(exports, "objectValues", ({ enumerable: true, get: function () { return values_js_1.objectValues; } }));


/***/ }),

/***/ 30569:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectKeys = void 0;
/**
 * @name objectKeys
 * @summary A version of Object.keys that is typed for TS
 */
function objectKeys(value) {
    return Object.keys(value);
}
exports.objectKeys = objectKeys;


/***/ }),

/***/ 16591:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectProperties = exports.objectProperty = void 0;
/**
 * @name objectProperty
 * @summary Assign a get property on the input object
 */
function objectProperty(that, key, getter, getName, index = 0) {
    const name = getName
        ? getName(key, index)
        : key;
    // There are 3 approaches here -
    //  - Object.prototype.hasOwnProperty.call(that, key) - this only checks the current class, i.e
    //    will retuirn false if the property is set in the parent class
    //  - isUndefined(...) - this may yield a false positive when the property is there, but not set.
    //    Additionally, on pre-defined getters it may make a call
    //  - key in that - Does not need to be combined with either of the above and checks the full chain
    if (!(name in that)) {
        Object.defineProperty(that, name, {
            enumerable: true,
            // Unlike in lazy, we always call into the upper function, i.e. this method
            // does not cache old values (it is expected to be used for dynamic values)
            get: function () {
                return getter(key, index, this);
            }
        });
    }
}
exports.objectProperty = objectProperty;
/**
 * @name objectProperties
 * @summary Assign get properties on the input object
 */
function objectProperties(that, keys, getter, getName) {
    for (let i = 0, count = keys.length; i < count; i++) {
        objectProperty(that, keys[i], getter, getName, i);
    }
}
exports.objectProperties = objectProperties;


/***/ }),

/***/ 80467:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectSpread = void 0;
/**
 * @name objectSpread
 * @summary Concats all sources into the destination
 */
function objectSpread(dest, ...sources) {
    for (let i = 0, count = sources.length; i < count; i++) {
        const src = sources[i];
        if (src) {
            if (typeof src.entries === 'function') {
                for (const [key, value] of src.entries()) {
                    dest[key] = value;
                }
            }
            else {
                Object.assign(dest, src);
            }
        }
    }
    return dest;
}
exports.objectSpread = objectSpread;


/***/ }),

/***/ 65815:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.objectValues = void 0;
/**
 * @name objectValues
 * @summary A version of Object.values that is typed for TS
 */
function objectValues(obj) {
    return Object.values(obj);
}
exports.objectValues = objectValues;


/***/ }),

/***/ 82167:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/util', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 29290:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.promisify = void 0;
/**
 * @name promisify
 * @summary Wraps an async callback into a `Promise`
 * @description
 * Wraps the supplied async function `fn` that has a standard JS callback `(error: Error, result: any)` into a `Promise`, passing the supplied parameters. When `error` is set, the Promise is rejected, else the Promise resolves with the `result` value.
 * @example
 * <BR>
 *
 * ```javascript
 * const { promisify } from '@polkadot/util';
 *
 * await promisify(null, ((a, cb) => cb(null, a), true); // resolves with `true`
 * await promisify(null, (cb) => cb(new Error('error!'))); // rejects with `error!`
 * ```
 */
function promisify(self, fn, ...params) {
    return new Promise((resolve, reject) => {
        fn.apply(self, params.concat((error, result) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(result);
            }
        }));
    });
}
exports.promisify = promisify;


/***/ }),

/***/ 31284:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringPascalCase = exports.stringCamelCase = exports.CC_TO_LO = exports.CC_TO_UP = void 0;
exports.CC_TO_UP = new Array(256);
exports.CC_TO_LO = new Array(256);
for (let i = 0, count = exports.CC_TO_UP.length; i < count; i++) {
    exports.CC_TO_LO[i] = String.fromCharCode(i).toLowerCase();
    exports.CC_TO_UP[i] = String.fromCharCode(i).toUpperCase();
}
/** @internal */
function formatAllCaps(w) {
    return w.slice(0, w.length - 1).toLowerCase() + exports.CC_TO_UP[w.charCodeAt(w.length - 1)];
}
/**
 * @internal
 *
 * Inspired by https://stackoverflow.com/a/2970667
 *
 * This is not as optimal as the original SO answer (we split into per-word),
 * however it does pass the tests (which the SO version doesn't) and is still
 * a major improvement over the original camelcase npm package -
 *
 *   camelcase: 20.88 μs/op
 *        this:  1.00 μs/op
 *
 * Caveat of this: only Ascii, but acceptable for the intended usecase
 */
function converter(format) {
    return (value) => {
        const parts = value
            // replace all separators (including consequtive) with spaces
            .replace(/[-_., ]+/g, ' ')
            // we don't want leading or trailing spaces
            .trim()
            // split into words
            .split(' ');
        let result = '';
        for (let i = 0, count = parts.length; i < count; i++) {
            const w = parts[i];
            // apply the formatting
            result += format(/^[\dA-Z]+$/.test(w)
                // all full uppercase + letters are changed to lowercase
                ? w.toLowerCase()
                // all consecutive capitals + letters are changed to lowercase
                // e.g. UUID64 -> uuid64, while preserving splits, eg. NFTOrder -> nftOrder
                : w.replace(/^[\dA-Z]{2,}[^a-z]/, formatAllCaps), i);
        }
        return result;
    };
}
/**
 * @name stringCamelCase
 * @summary Convert a dash/dot/underscore/space separated Ascii string/String to camelCase
 */
exports.stringCamelCase = converter((w, i) => 
(i ? exports.CC_TO_UP[w.charCodeAt(0)] : exports.CC_TO_LO[w.charCodeAt(0)]) + w.slice(1));
/**
 * @name stringPascalCase
 * @summary Convert a dash/dot/underscore/space separated Ascii string/String to PascalCase
 */
exports.stringPascalCase = converter((w) => 
exports.CC_TO_UP[w.charCodeAt(0)] + w.slice(1));


/***/ }),

/***/ 58029:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringToU8a = exports.stringToHex = exports.stringShorten = exports.stringUpperFirst = exports.stringLowerFirst = exports.stringPascalCase = exports.stringCamelCase = void 0;
/**
 * @summary Utility methods to convert to work with `string` values
 */
var camelCase_js_1 = __nccwpck_require__(31284);
Object.defineProperty(exports, "stringCamelCase", ({ enumerable: true, get: function () { return camelCase_js_1.stringCamelCase; } }));
Object.defineProperty(exports, "stringPascalCase", ({ enumerable: true, get: function () { return camelCase_js_1.stringPascalCase; } }));
var lowerFirst_js_1 = __nccwpck_require__(1523);
Object.defineProperty(exports, "stringLowerFirst", ({ enumerable: true, get: function () { return lowerFirst_js_1.stringLowerFirst; } }));
Object.defineProperty(exports, "stringUpperFirst", ({ enumerable: true, get: function () { return lowerFirst_js_1.stringUpperFirst; } }));
var shorten_js_1 = __nccwpck_require__(10929);
Object.defineProperty(exports, "stringShorten", ({ enumerable: true, get: function () { return shorten_js_1.stringShorten; } }));
var toHex_js_1 = __nccwpck_require__(75368);
Object.defineProperty(exports, "stringToHex", ({ enumerable: true, get: function () { return toHex_js_1.stringToHex; } }));
var toU8a_js_1 = __nccwpck_require__(9962);
Object.defineProperty(exports, "stringToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.stringToU8a; } }));


/***/ }),

/***/ 1523:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringUpperFirst = exports.stringLowerFirst = void 0;
const camelCase_js_1 = __nccwpck_require__(31284);
/** @internal */
function converter(map) {
    return (value) => value
        ? map[value.charCodeAt(0)] + value.slice(1)
        : '';
}
/**
 * @name stringLowerFirst
 * @summary Lowercase the first letter of a string
 * @description
 * Lowercase the first letter of a string
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringLowerFirst } from '@polkadot/util';
 *
 * stringLowerFirst('ABC'); // => 'aBC'
 * ```
 */
exports.stringLowerFirst = converter(camelCase_js_1.CC_TO_LO);
/**
 * @name stringUpperFirst
 * @summary Uppercase the first letter of a string
 * @description
 * Lowercase the first letter of a string
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringUpperFirst } from '@polkadot/util';
 *
 * stringUpperFirst('abc'); // => 'Abc'
 * ```
 */
exports.stringUpperFirst = converter(camelCase_js_1.CC_TO_UP);


/***/ }),

/***/ 10929:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringShorten = void 0;
/**
 * @name stringShorten
 * @summary Returns a string with maximum length
 * @description
 * Checks the string against the `prefixLength`, if longer than double this, shortens it by placing `..` in the middle of it
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringShorten } from '@polkadot/util';
 *
 * stringShorten('1234567890', 2); // => 12..90
 * ```
 */
function stringShorten(value, prefixLength = 6) {
    return value.length <= 2 + 2 * prefixLength
        ? value.toString()
        : `${value.substring(0, prefixLength)}…${value.slice(-prefixLength)}`;
}
exports.stringShorten = stringShorten;


/***/ }),

/***/ 75368:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringToHex = void 0;
const toHex_js_1 = __nccwpck_require__(94038);
const toU8a_js_1 = __nccwpck_require__(9962);
/**
 * @name stringToHex
 * @summary Creates a hex string from a utf-8 string
 * @description
 * String input values return the actual encoded hex value.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToHex } from '@polkadot/util';
 *
 * stringToU8a('hello'); // 0x68656c6c6f
 * ```
 */
function stringToHex(value) {
    return (0, toHex_js_1.u8aToHex)((0, toU8a_js_1.stringToU8a)(value));
}
exports.stringToHex = stringToHex;


/***/ }),

/***/ 9962:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringToU8a = void 0;
const x_textencoder_1 = __nccwpck_require__(54722);
const encoder = new x_textencoder_1.TextEncoder();
/**
 * @name stringToU8a
 * @summary Creates a Uint8Array object from a utf-8 string.
 * @description
 * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToU8a } from '@polkadot/util';
 *
 * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]
 * ```
 */
function stringToU8a(value) {
    return value
        ? encoder.encode(value.toString())
        : new Uint8Array();
}
exports.stringToU8a = stringToU8a;


/***/ }),

/***/ 95450:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringify = void 0;
const bigInt_js_1 = __nccwpck_require__(82386);
/** @internal */
function replacer(_, v) {
    return (0, bigInt_js_1.isBigInt)(v)
        ? v.toString()
        : v;
}
/**
 * @name stringify
 * @summary Performs a JSON.stringify, with BigInt handling
 * @description A wrapper for JSON.stringify that handles BigInt values transparently, converting them to string. No differences from the native JSON.stringify function otherwise.
 */
function stringify(value, space) {
    return JSON.stringify(value, replacer, space);
}
exports.stringify = stringify;


/***/ }),

/***/ 1953:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aCmp = void 0;
const toU8a_js_1 = __nccwpck_require__(49110);
/**
 * @name u8aCmp
 * @summary Compares two Uint8Arrays for sorting.
 * @description
 * For `UInt8Array` (or hex string) input values returning -1, 0 or +1
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aCmp } from '@polkadot/util';
 *
 * u8aCmp(new Uint8Array([0x67, 0x65]), new Uint8Array([0x68, 0x65])); // -1
 * u8aCmp(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // 0
 * u8aCmp(new Uint8Array([0x69, 0x65]), new Uint8Array([0x68, 0x65])); // +1
 * ```
 */
function u8aCmp(a, b) {
    const u8aa = (0, toU8a_js_1.u8aToU8a)(a);
    const u8ab = (0, toU8a_js_1.u8aToU8a)(b);
    let i = 0;
    while (true) {
        const overA = i >= u8aa.length;
        const overB = i >= u8ab.length;
        if (overA && overB) {
            // both ends reached
            return 0;
        }
        else if (overA) {
            // a has no more data, b has data
            return -1;
        }
        else if (overB) {
            // b has no more data, a has data
            return 1;
        }
        else if (u8aa[i] !== u8ab[i]) {
            // the number in this index doesn't match
            // (we don't use u8aa[i] - u8ab[i] since that doesn't match with localeCompare)
            return u8aa[i] > u8ab[i]
                ? 1
                : -1;
        }
        i++;
    }
}
exports.u8aCmp = u8aCmp;


/***/ }),

/***/ 10551:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aConcatStrict = exports.u8aConcat = void 0;
const toU8a_js_1 = __nccwpck_require__(49110);
/**
 * @name u8aConcat
 * @summary Creates a concatenated Uint8Array from the inputs.
 * @description
 * Concatenates the input arrays into a single `UInt8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { { u8aConcat } from '@polkadot/util';
 *
 * u8aConcat(
 *   new Uint8Array([1, 2, 3]),
 *   new Uint8Array([4, 5, 6])
 * ); // [1, 2, 3, 4, 5, 6]
 * ```
 */
function u8aConcat(...list) {
    const count = list.length;
    const u8as = new Array(count);
    let length = 0;
    for (let i = 0; i < count; i++) {
        u8as[i] = (0, toU8a_js_1.u8aToU8a)(list[i]);
        length += u8as[i].length;
    }
    return u8aConcatStrict(u8as, length);
}
exports.u8aConcat = u8aConcat;
/**
 * @name u8aConcatStrict
 * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs
 */
function u8aConcatStrict(u8as, length = 0) {
    const count = u8as.length;
    let offset = 0;
    if (!length) {
        for (let i = 0; i < count; i++) {
            length += u8as[i].length;
        }
    }
    const result = new Uint8Array(length);
    for (let i = 0; i < count; i++) {
        result.set(u8as[i], offset);
        offset += u8as[i].length;
    }
    return result;
}
exports.u8aConcatStrict = u8aConcatStrict;


/***/ }),

/***/ 95354:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aEmpty = void 0;
/**
 * @name u8aEmpty
 * @summary Tests for a `Uint8Array` for emptyness
 * @description
 * Checks to see if the input `Uint8Array` has zero length or contains all 0 values.
 */
function u8aEmpty(value) {
    const len = value.length | 0;
    // on smaller sizes, the byte-by-byte compare is faster than allocating
    // another object for DataView (on very large arrays the DataView is faster)
    for (let i = 0; i < len; i++) {
        if (value[i] | 0) {
            return false;
        }
    }
    return true;
}
exports.u8aEmpty = u8aEmpty;


/***/ }),

/***/ 88499:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aEq = void 0;
const toU8a_js_1 = __nccwpck_require__(49110);
/**
 * @name u8aEq
 * @summary Compares two Uint8Arrays for equality.
 * @description
 * For `UInt8Array` (or hex string) input values true if there is a match.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aEq } from '@polkadot/util';
 *
 * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true
 * ```
 */
function u8aEq(a, b) {
    const u8aa = (0, toU8a_js_1.u8aToU8a)(a);
    const u8ab = (0, toU8a_js_1.u8aToU8a)(b);
    if (u8aa.length === u8ab.length) {
        const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);
        const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);
        const mod = (u8aa.length % 4) | 0;
        const length = (u8aa.length - mod) | 0;
        for (let i = 0; i < length; i += 4) {
            if (dvA.getUint32(i) !== dvB.getUint32(i)) {
                return false;
            }
        }
        for (let i = length, count = u8aa.length; i < count; i++) {
            if (u8aa[i] !== u8ab[i]) {
                return false;
            }
        }
        return true;
    }
    return false;
}
exports.u8aEq = u8aEq;


/***/ }),

/***/ 70856:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aFixLength = void 0;
/**
 * @name u8aFixLength
 * @summary Shifts a Uint8Array to a specific bitLength
 * @description
 * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aFixLength } from '@polkadot/util';
 *
 * u8aFixLength('0x12') // => 0x12
 * u8aFixLength('0x12', 16) // => 0x0012
 * u8aFixLength('0x1234', 8) // => 0x12
 * ```
 */
function u8aFixLength(value, bitLength = -1, atStart = false) {
    const byteLength = Math.ceil(bitLength / 8);
    if (bitLength === -1 || value.length === byteLength) {
        return value;
    }
    else if (value.length > byteLength) {
        return value.subarray(0, byteLength);
    }
    const result = new Uint8Array(byteLength);
    result.set(value, atStart ? 0 : (byteLength - value.length));
    return result;
}
exports.u8aFixLength = u8aFixLength;


/***/ }),

/***/ 79162:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aWrapBytes = exports.u8aUnwrapBytes = exports.u8aIsWrapped = exports.U8A_WRAP_PREFIX = exports.U8A_WRAP_POSTFIX = exports.U8A_WRAP_ETHEREUM = exports.u8aToU8a = exports.u8aToString = exports.u8aToNumber = exports.u8aToHex = exports.u8aToFloat = exports.u8aToBuffer = exports.u8aToBn = exports.u8aToBigInt = exports.u8aSorted = exports.u8aFixLength = exports.u8aEq = exports.u8aEmpty = exports.u8aConcatStrict = exports.u8aConcat = exports.u8aCmp = void 0;
/**
 * @summary Utility methods to convert to and from `Uint8Array` objects
 */
var cmp_js_1 = __nccwpck_require__(1953);
Object.defineProperty(exports, "u8aCmp", ({ enumerable: true, get: function () { return cmp_js_1.u8aCmp; } }));
var concat_js_1 = __nccwpck_require__(10551);
Object.defineProperty(exports, "u8aConcat", ({ enumerable: true, get: function () { return concat_js_1.u8aConcat; } }));
Object.defineProperty(exports, "u8aConcatStrict", ({ enumerable: true, get: function () { return concat_js_1.u8aConcatStrict; } }));
var empty_js_1 = __nccwpck_require__(95354);
Object.defineProperty(exports, "u8aEmpty", ({ enumerable: true, get: function () { return empty_js_1.u8aEmpty; } }));
var eq_js_1 = __nccwpck_require__(88499);
Object.defineProperty(exports, "u8aEq", ({ enumerable: true, get: function () { return eq_js_1.u8aEq; } }));
var fixLength_js_1 = __nccwpck_require__(70856);
Object.defineProperty(exports, "u8aFixLength", ({ enumerable: true, get: function () { return fixLength_js_1.u8aFixLength; } }));
var sorted_js_1 = __nccwpck_require__(79685);
Object.defineProperty(exports, "u8aSorted", ({ enumerable: true, get: function () { return sorted_js_1.u8aSorted; } }));
var toBigInt_js_1 = __nccwpck_require__(4957);
Object.defineProperty(exports, "u8aToBigInt", ({ enumerable: true, get: function () { return toBigInt_js_1.u8aToBigInt; } }));
var toBn_js_1 = __nccwpck_require__(98755);
Object.defineProperty(exports, "u8aToBn", ({ enumerable: true, get: function () { return toBn_js_1.u8aToBn; } }));
var toBuffer_js_1 = __nccwpck_require__(45279);
Object.defineProperty(exports, "u8aToBuffer", ({ enumerable: true, get: function () { return toBuffer_js_1.u8aToBuffer; } }));
var toFloat_js_1 = __nccwpck_require__(14337);
Object.defineProperty(exports, "u8aToFloat", ({ enumerable: true, get: function () { return toFloat_js_1.u8aToFloat; } }));
var toHex_js_1 = __nccwpck_require__(94038);
Object.defineProperty(exports, "u8aToHex", ({ enumerable: true, get: function () { return toHex_js_1.u8aToHex; } }));
var toNumber_js_1 = __nccwpck_require__(97509);
Object.defineProperty(exports, "u8aToNumber", ({ enumerable: true, get: function () { return toNumber_js_1.u8aToNumber; } }));
var toString_js_1 = __nccwpck_require__(66501);
Object.defineProperty(exports, "u8aToString", ({ enumerable: true, get: function () { return toString_js_1.u8aToString; } }));
var toU8a_js_1 = __nccwpck_require__(49110);
Object.defineProperty(exports, "u8aToU8a", ({ enumerable: true, get: function () { return toU8a_js_1.u8aToU8a; } }));
var wrap_js_1 = __nccwpck_require__(81434);
Object.defineProperty(exports, "U8A_WRAP_ETHEREUM", ({ enumerable: true, get: function () { return wrap_js_1.U8A_WRAP_ETHEREUM; } }));
Object.defineProperty(exports, "U8A_WRAP_POSTFIX", ({ enumerable: true, get: function () { return wrap_js_1.U8A_WRAP_POSTFIX; } }));
Object.defineProperty(exports, "U8A_WRAP_PREFIX", ({ enumerable: true, get: function () { return wrap_js_1.U8A_WRAP_PREFIX; } }));
Object.defineProperty(exports, "u8aIsWrapped", ({ enumerable: true, get: function () { return wrap_js_1.u8aIsWrapped; } }));
Object.defineProperty(exports, "u8aUnwrapBytes", ({ enumerable: true, get: function () { return wrap_js_1.u8aUnwrapBytes; } }));
Object.defineProperty(exports, "u8aWrapBytes", ({ enumerable: true, get: function () { return wrap_js_1.u8aWrapBytes; } }));


/***/ }),

/***/ 79685:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aSorted = void 0;
const cmp_js_1 = __nccwpck_require__(1953);
/**
 * @name u8aSorted
 * @summary Sorts an array of Uint8Arrays
 * @description
 * For input `UInt8Array[]` return the sorted result
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aSorted} from '@polkadot/util';
 *
 * u8aSorted([new Uint8Array([0x69]), new Uint8Array([0x68])]); // [0x68, 0x69]
 * ```
 */
function u8aSorted(u8as) {
    return u8as.sort(cmp_js_1.u8aCmp);
}
exports.u8aSorted = u8aSorted;


/***/ }),

/***/ 4957:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aToBigInt = void 0;
const x_bigint_1 = __nccwpck_require__(285);
const consts_js_1 = __nccwpck_require__(13418);
const U8_MAX = (0, x_bigint_1.BigInt)(256);
const U16_MAX = (0, x_bigint_1.BigInt)(256 * 256);
const U64_MAX = (0, x_bigint_1.BigInt)('0x10000000000000000');
/**
 * @name u8aToBigInt
 * @summary Creates a BigInt from a Uint8Array object.
 */
function u8aToBigInt(value, { isLe = true, isNegative = false } = {}) {
    // slice + reverse is expensive, however SCALE is LE by default so this is the path
    // we are most interested in (the BE is added for the sake of being comprehensive)
    if (!isLe) {
        value = value.slice().reverse();
    }
    const count = value.length;
    if (isNegative && count && (value[count - 1] & 0x80)) {
        switch (count) {
            case 0:
                return (0, x_bigint_1.BigInt)(0);
            case 1:
                return (0, x_bigint_1.BigInt)(((value[0] ^ 255) * -1) - 1);
            case 2:
                return (0, x_bigint_1.BigInt)((((value[0] + (value[1] << 8)) ^ 65535) * -1) - 1);
            case 4:
                return (0, x_bigint_1.BigInt)((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) * -1) - 1);
        }
        const dvI = new DataView(value.buffer, value.byteOffset);
        if (count === 8) {
            return dvI.getBigInt64(0, true);
        }
        let result = (0, x_bigint_1.BigInt)(0);
        const mod = count % 2;
        for (let i = count - 2; i >= mod; i -= 2) {
            result = (result * U16_MAX) + (0, x_bigint_1.BigInt)(dvI.getUint16(i, true) ^ 0xffff);
        }
        if (mod) {
            result = (result * U8_MAX) + (0, x_bigint_1.BigInt)(value[0] ^ 0xff);
        }
        return (result * -consts_js_1._1n) - consts_js_1._1n;
    }
    switch (count) {
        case 0:
            return (0, x_bigint_1.BigInt)(0);
        case 1:
            return (0, x_bigint_1.BigInt)(value[0]);
        case 2:
            return (0, x_bigint_1.BigInt)(value[0] + (value[1] << 8));
        case 4:
            return (0, x_bigint_1.BigInt)(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216));
    }
    const dvI = new DataView(value.buffer, value.byteOffset);
    switch (count) {
        case 8:
            return dvI.getBigUint64(0, true);
        case 16:
            return (dvI.getBigUint64(8, true) * U64_MAX) + dvI.getBigUint64(0, true);
        default: {
            let result = (0, x_bigint_1.BigInt)(0);
            const mod = count % 2;
            for (let i = count - 2; i >= mod; i -= 2) {
                result = (result * U16_MAX) + (0, x_bigint_1.BigInt)(dvI.getUint16(i, true));
            }
            if (mod) {
                result = (result * U8_MAX) + (0, x_bigint_1.BigInt)(value[0]);
            }
            return result;
        }
    }
}
exports.u8aToBigInt = u8aToBigInt;


/***/ }),

/***/ 98755:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aToBn = void 0;
const bn_js_1 = __nccwpck_require__(32693);
/**
 * @name u8aToBn
 * @summary Creates a BN from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.
 * @param value The value to convert
 * @param options Options to pass while converting
 * @param options.isLe Convert using Little Endian (default)
 * @param options.isNegative Convert using two's complement
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToBn } from '@polkadot/util';
 *
 * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f
 * ```
 */
function u8aToBn(value, { isLe = true, isNegative = false } = {}) {
    // slice + reverse is expensive, however SCALE is LE by default so this is the path
    // we are most interested in (the BE is added for the sake of being comprehensive)
    if (!isLe) {
        value = value.slice().reverse();
    }
    const count = value.length;
    // shortcut for <= u48 values - in this case the manual conversion
    // here seems to be more efficient than passing the full array
    if (isNegative && count && (value[count - 1] & 0x80)) {
        // Most common case i{8, 16, 32} default LE SCALE-encoded
        // For <= 32, we also optimize the xor to a single op
        switch (count) {
            case 0:
                return new bn_js_1.BN(0);
            case 1:
                return new bn_js_1.BN(((value[0] ^ 255) * -1) - 1);
            case 2:
                return new bn_js_1.BN((((value[0] + (value[1] << 8)) ^ 65535) * -1) - 1);
            case 3:
                return new bn_js_1.BN((((value[0] + (value[1] << 8) + (value[2] << 16)) ^ 16777215) * -1) - 1);
            case 4:
                // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
                // 32-bit, in the case where the top-most bit is set this yields a negative value
                return new bn_js_1.BN((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) * -1) - 1);
            case 5:
                return new bn_js_1.BN(((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) + ((value[4] ^ 0xff) * 4294967296)) * -1) - 1);
            case 6:
                return new bn_js_1.BN(((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) + (((value[4] + (value[5] << 8)) ^ 65535) * 4294967296)) * -1) - 1);
            default:
                return new bn_js_1.BN(value, 'le').fromTwos(count * 8);
        }
    }
    // Most common case - u{8, 16, 32} default LE SCALE-encoded
    //
    // There are some slight benefits in unrolling this specific loop,
    // however it comes with diminishing returns since here the actual
    // `new BN` does seem to take up the bulk of the time
    switch (count) {
        case 0:
            return new bn_js_1.BN(0);
        case 1:
            return new bn_js_1.BN(value[0]);
        case 2:
            return new bn_js_1.BN(value[0] + (value[1] << 8));
        case 3:
            return new bn_js_1.BN(value[0] + (value[1] << 8) + (value[2] << 16));
        case 4:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            return new bn_js_1.BN(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216));
        case 5:
            return new bn_js_1.BN(value[0] + (value[1] << 8) + (value[2] << 16) + ((value[3] + (value[4] << 8)) * 16777216));
        case 6:
            return new bn_js_1.BN(value[0] + (value[1] << 8) + (value[2] << 16) + ((value[3] + (value[4] << 8) + (value[5] << 16)) * 16777216));
        default:
            return new bn_js_1.BN(value, 'le');
    }
}
exports.u8aToBn = u8aToBn;


/***/ }),

/***/ 45279:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aToBuffer = void 0;
const x_global_1 = __nccwpck_require__(74671);
const has_js_1 = __nccwpck_require__(11512);
/**
 * @name u8aToBuffer
 * @summary Creates a Buffer object from a hex string.
 * @description
 * `null` inputs returns an empty `Buffer` result. `UInt8Array` input values return the actual bytes value converted to a `Buffer`. Anything that is not a `UInt8Array` throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToBuffer } from '@polkadot/util';
 *
 * console.log('Buffer', u8aToBuffer(new Uint8Array([1, 2, 3])));
 * ```
 */
function u8aToBuffer(value) {
    return has_js_1.hasBuffer
        ? x_global_1.xglobal.Buffer.from(value || [])
        : new Uint8Array(value || []);
}
exports.u8aToBuffer = u8aToBuffer;


/***/ }),

/***/ 14337:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aToFloat = void 0;
/**
 * @name u8aToFloat
 * @description Converts a Uint8Array value into the float (either 32 or 64-bit)
 * representation.
 */
function u8aToFloat(value, { bitLength = 32, isLe = true } = {}) {
    if (bitLength !== 32 && bitLength !== 64) {
        throw new Error('Invalid bitLength provided, expected 32 or 64');
    }
    else if (value.length < (bitLength / 8)) {
        throw new Error(`Invalid input buffer provided, expected at least ${bitLength / 8} bytes, found ${value.length}`);
    }
    const dv = new DataView(value.buffer, value.byteOffset);
    return bitLength === 32
        ? dv.getFloat32(0, isLe)
        : dv.getFloat64(0, isLe);
}
exports.u8aToFloat = u8aToFloat;


/***/ }),

/***/ 94038:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aToHex = void 0;
const U8 = new Array(256);
const U16 = new Array(256 * 256);
for (let n = 0; n < 256; n++) {
    U8[n] = n.toString(16).padStart(2, '0');
}
for (let i = 0; i < 256; i++) {
    const s = i << 8;
    for (let j = 0; j < 256; j++) {
        U16[s | j] = U8[i] + U8[j];
    }
}
/** @internal */
function hex(value, result) {
    const mod = (value.length % 2) | 0;
    const length = (value.length - mod) | 0;
    for (let i = 0; i < length; i += 2) {
        result += U16[(value[i] << 8) | value[i + 1]];
    }
    if (mod) {
        result += U8[value[length] | 0];
    }
    return result;
}
/**
 * @name u8aToHex
 * @summary Creates a hex string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToHex } from '@polkadot/util';
 *
 * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f
 * ```
 */
function u8aToHex(value, bitLength = -1, isPrefixed = true) {
    // this is not 100% correct sinmce we support isPrefixed = false....
    const empty = isPrefixed
        ? '0x'
        : '';
    if (!value?.length) {
        return empty;
    }
    else if (bitLength > 0) {
        const length = Math.ceil(bitLength / 8);
        if (value.length > length) {
            return `${hex(value.subarray(0, length / 2), empty)}…${hex(value.subarray(value.length - length / 2), '')}`;
        }
    }
    return hex(value, empty);
}
exports.u8aToHex = u8aToHex;


/***/ }),

/***/ 97509:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aToNumber = void 0;
/**
 * @name u8aToNumber
 * @summary Creates a number from a Uint8Array object.
 */
function u8aToNumber(value, { isLe = true, isNegative = false } = {}) {
    // slice + reverse is expensive, however SCALE is LE by default so this is the path
    // we are most interested in (the BE is added for the sake of being comprehensive)
    if (!isLe) {
        value = value.slice().reverse();
    }
    const count = value.length;
    // When the value is a i{8, 16, 24, 32, 40, 40} values and the top-most bit
    // indicates a signed value, we use a two's complement conversion. If one of these
    // flags are not set, we just do a normal unsigned conversion (the same shortcut
    // applies in both the u8aTo{BigInt, Bn} conversions as well)
    if (isNegative && count && (value[count - 1] & 0x80)) {
        switch (count) {
            case 0:
                return 0;
            case 1:
                return (((value[0] ^ 255) * -1) - 1);
            case 2:
                return ((((value[0] + (value[1] << 8)) ^ 65535) * -1) - 1);
            case 3:
                return ((((value[0] + (value[1] << 8) + (value[2] << 16)) ^ 16777215) * -1) - 1);
            case 4:
                // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
                // 32-bit, in the case where the top-most bit is set this yields a negative value
                return ((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) * -1) - 1);
            case 5:
                return (((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) + ((value[4] ^ 0xff) * 4294967296)) * -1) - 1);
            case 6:
                return (((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) + (((value[4] + (value[5] << 8)) ^ 65535) * 4294967296)) * -1) - 1);
            default:
                throw new Error('Value more than 48-bits cannot be reliably converted');
        }
    }
    switch (count) {
        case 0:
            return 0;
        case 1:
            return value[0];
        case 2:
            return value[0] + (value[1] << 8);
        case 3:
            return value[0] + (value[1] << 8) + (value[2] << 16);
        case 4:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216);
        case 5:
            return value[0] + (value[1] << 8) + (value[2] << 16) + ((value[3] + (value[4] << 8)) * 16777216);
        case 6:
            return value[0] + (value[1] << 8) + (value[2] << 16) + ((value[3] + (value[4] << 8) + (value[5] << 16)) * 16777216);
        default:
            throw new Error('Value more than 48-bits cannot be reliably converted');
    }
}
exports.u8aToNumber = u8aToNumber;


/***/ }),

/***/ 66501:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aToString = void 0;
const x_textdecoder_1 = __nccwpck_require__(64560);
const decoder = new x_textdecoder_1.TextDecoder('utf-8');
/**
 * @name u8aToString
 * @summary Creates a utf-8 string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToString } from '@polkadot/util';
 *
 * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello
 * ```
 */
function u8aToString(value) {
    return value
        ? decoder.decode(value)
        : '';
}
exports.u8aToString = u8aToString;


/***/ }),

/***/ 49110:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aToU8a = void 0;
const toU8a_js_1 = __nccwpck_require__(72554);
const buffer_js_1 = __nccwpck_require__(82473);
const hex_js_1 = __nccwpck_require__(50219);
const u8a_js_1 = __nccwpck_require__(51550);
const toU8a_js_2 = __nccwpck_require__(9962);
/**
 * @name u8aToU8a
 * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.
 * @description
 * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToU8a } from '@polkadot/util';
 *
 * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])
 * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])
 * ```
 */
function u8aToU8a(value) {
    return (0, u8a_js_1.isU8a)(value)
        // NOTE isBuffer needs to go here since it actually extends
        // Uint8Array on Node.js environments, so all Buffer are Uint8Array,
        // but Uint8Array is not Buffer
        ? (0, buffer_js_1.isBuffer)(value)
            ? new Uint8Array(value)
            : value
        : (0, hex_js_1.isHex)(value)
            ? (0, toU8a_js_1.hexToU8a)(value)
            : Array.isArray(value)
                ? new Uint8Array(value)
                : (0, toU8a_js_2.stringToU8a)(value);
}
exports.u8aToU8a = u8aToU8a;


/***/ }),

/***/ 81434:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.u8aWrapBytes = exports.u8aUnwrapBytes = exports.u8aIsWrapped = exports.U8A_WRAP_POSTFIX = exports.U8A_WRAP_PREFIX = exports.U8A_WRAP_ETHEREUM = void 0;
const concat_js_1 = __nccwpck_require__(10551);
const eq_js_1 = __nccwpck_require__(88499);
const toU8a_js_1 = __nccwpck_require__(49110);
/** @internal */
exports.U8A_WRAP_ETHEREUM = (0, toU8a_js_1.u8aToU8a)('\x19Ethereum Signed Message:\n');
/** @internal */
exports.U8A_WRAP_PREFIX = (0, toU8a_js_1.u8aToU8a)('<Bytes>');
/** @internal */
exports.U8A_WRAP_POSTFIX = (0, toU8a_js_1.u8aToU8a)('</Bytes>');
const WRAP_LEN = exports.U8A_WRAP_PREFIX.length + exports.U8A_WRAP_POSTFIX.length;
/** @internal */
function u8aIsWrapped(u8a, withEthereum) {
    return ((u8a.length >= WRAP_LEN &&
        (0, eq_js_1.u8aEq)(u8a.subarray(0, exports.U8A_WRAP_PREFIX.length), exports.U8A_WRAP_PREFIX) &&
        (0, eq_js_1.u8aEq)(u8a.slice(-exports.U8A_WRAP_POSTFIX.length), exports.U8A_WRAP_POSTFIX)) ||
        (withEthereum &&
            u8a.length >= exports.U8A_WRAP_ETHEREUM.length &&
            (0, eq_js_1.u8aEq)(u8a.subarray(0, exports.U8A_WRAP_ETHEREUM.length), exports.U8A_WRAP_ETHEREUM)));
}
exports.u8aIsWrapped = u8aIsWrapped;
/**
 * @name u8aUnwrapBytes
 * @description Removes all <Bytes>...</Bytes> wrappers from the supplied value
 */
function u8aUnwrapBytes(bytes) {
    const u8a = (0, toU8a_js_1.u8aToU8a)(bytes);
    // we don't want to unwrap Ethereum-style wraps
    return u8aIsWrapped(u8a, false)
        ? u8a.subarray(exports.U8A_WRAP_PREFIX.length, u8a.length - exports.U8A_WRAP_POSTFIX.length)
        : u8a;
}
exports.u8aUnwrapBytes = u8aUnwrapBytes;
/**
 * @name u8aWrapBytes
 * @description
 * Adds a <Bytes>...</Bytes> wrapper to the supplied value, if
 * - We don't already have a Bytes wrapper
 * - The message is not an Ethereum-style message
 */
function u8aWrapBytes(bytes) {
    const u8a = (0, toU8a_js_1.u8aToU8a)(bytes);
    return u8aIsWrapped(u8a, true)
        ? u8a
        : (0, concat_js_1.u8aConcatStrict)([exports.U8A_WRAP_PREFIX, u8a, exports.U8A_WRAP_POSTFIX]);
}
exports.u8aWrapBytes = u8aWrapBytes;


/***/ }),

/***/ 56666:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.detectPackage = void 0;
const x_global_1 = __nccwpck_require__(74671);
const function_js_1 = __nccwpck_require__(93075);
const DEDUPE = 'Either remove and explicitly install matching versions or dedupe using your package manager.\nThe following conflicting packages were found:';
/** @internal */
function getEntry(name) {
    const _global = x_global_1.xglobal;
    if (!_global.__polkadotjs) {
        _global.__polkadotjs = {};
    }
    if (!_global.__polkadotjs[name]) {
        _global.__polkadotjs[name] = [];
    }
    return _global.__polkadotjs[name];
}
/** @internal */
function formatDisplay(all, fmt) {
    let max = 0;
    for (let i = 0, count = all.length; i < count; i++) {
        max = Math.max(max, all[i].version.length);
    }
    return all
        .map((d) => `\t${fmt(d.version.padEnd(max), d).join('\t')}`)
        .join('\n');
}
/** @internal */
function formatInfo(version, { name }) {
    return [
        version,
        name
    ];
}
/** @internal */
function formatVersion(version, { path, type }) {
    let extracted;
    if (path && path.length >= 5) {
        const nmIndex = path.indexOf('node_modules');
        extracted = nmIndex === -1
            ? path
            : path.substring(nmIndex);
    }
    else {
        extracted = '<unknown>';
    }
    return [
        `${`${type || ''}`.padStart(3)} ${version}`,
        extracted
    ];
}
/** @internal */
function getPath(infoPath, pathOrFn) {
    if (infoPath) {
        return infoPath;
    }
    else if ((0, function_js_1.isFunction)(pathOrFn)) {
        try {
            return pathOrFn() || '';
        }
        catch {
            return '';
        }
    }
    return pathOrFn || '';
}
/** @internal */
function warn(pre, all, fmt) {
    console.warn(`${pre}\n${DEDUPE}\n${formatDisplay(all, fmt)}`);
}
/**
 * @name detectPackage
 * @summary Checks that a specific package is only imported once
 * @description A `@polkadot/*` version detection utility, checking for one occurence of a package in addition to checking for ddependency versions.
 */
function detectPackage({ name, path, type, version }, pathOrFn, deps = []) {
    if (!name.startsWith('@polkadot')) {
        throw new Error(`Invalid package descriptor ${name}`);
    }
    const entry = getEntry(name);
    entry.push({ path: getPath(path, pathOrFn), type, version });
    if (entry.length !== 1) {
        warn(`${name} has multiple versions, ensure that there is only one installed.`, entry, formatVersion);
    }
    else {
        const mismatches = deps.filter((d) => d && d.version !== version);
        if (mismatches.length) {
            warn(`${name} requires direct dependencies exactly matching version ${version}.`, mismatches, formatInfo);
        }
    }
}
exports.detectPackage = detectPackage;


/***/ }),

/***/ 65076:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Bridge = void 0;
const util_1 = __nccwpck_require__(29795);
const wbg_js_1 = __nccwpck_require__(54695);
/**
 * @name Bridge
 * @description
 * Creates a bridge between the JS and WASM environments.
 *
 * For any bridge it is passed an function which is then called internally at the
 * time of initialization. This affectively implements the layer between WASM and
 * the native environment, providing all the plumbing needed for the Wbg classes.
 */
class Bridge {
    constructor(createWasm) {
        this.__internal__createWasm = createWasm;
        this.__internal__cachegetInt32 = null;
        this.__internal__cachegetUint8 = null;
        this.__internal__heap = new Array(32)
            .fill(undefined)
            .concat(undefined, null, true, false);
        this.__internal__heapNext = this.__internal__heap.length;
        this.__internal__type = 'none';
        this.__internal__wasm = null;
        this.__internal__wasmError = null;
        this.__internal__wasmPromise = null;
        this.__internal__wbg = { ...new wbg_js_1.Wbg(this) };
    }
    /** @description Returns the init error */
    get error() {
        return this.__internal__wasmError;
    }
    /** @description Returns the init type */
    get type() {
        return this.__internal__type;
    }
    /** @description Returns the created wasm interface */
    get wasm() {
        return this.__internal__wasm;
    }
    /** @description Performs the wasm initialization */
    async init(createWasm) {
        if (!this.__internal__wasmPromise || createWasm) {
            this.__internal__wasmPromise = (createWasm || this.__internal__createWasm)(this.__internal__wbg);
        }
        const { error, type, wasm } = await this.__internal__wasmPromise;
        this.__internal__type = type;
        this.__internal__wasm = wasm;
        this.__internal__wasmError = error;
        return this.__internal__wasm;
    }
    /**
     * @internal
     * @description Gets an object from the heap
     */
    getObject(idx) {
        return this.__internal__heap[idx];
    }
    /**
     * @internal
     * @description Removes an object from the heap
     */
    dropObject(idx) {
        if (idx < 36) {
            return;
        }
        this.__internal__heap[idx] = this.__internal__heapNext;
        this.__internal__heapNext = idx;
    }
    /**
     * @internal
     * @description Retrieves and removes an object to the heap
     */
    takeObject(idx) {
        const ret = this.getObject(idx);
        this.dropObject(idx);
        return ret;
    }
    /**
     * @internal
     * @description Adds an object to the heap
     */
    addObject(obj) {
        if (this.__internal__heapNext === this.__internal__heap.length) {
            this.__internal__heap.push(this.__internal__heap.length + 1);
        }
        const idx = this.__internal__heapNext;
        this.__internal__heapNext = this.__internal__heap[idx];
        this.__internal__heap[idx] = obj;
        return idx;
    }
    /**
     * @internal
     * @description Retrieve an Int32 in the WASM interface
     */
    getInt32() {
        if (this.__internal__cachegetInt32 === null || this.__internal__cachegetInt32.buffer !== this.__internal__wasm.memory.buffer) {
            this.__internal__cachegetInt32 = new Int32Array(this.__internal__wasm.memory.buffer);
        }
        return this.__internal__cachegetInt32;
    }
    /**
     * @internal
     * @description Retrieve an Uint8Array in the WASM interface
     */
    getUint8() {
        if (this.__internal__cachegetUint8 === null || this.__internal__cachegetUint8.buffer !== this.__internal__wasm.memory.buffer) {
            this.__internal__cachegetUint8 = new Uint8Array(this.__internal__wasm.memory.buffer);
        }
        return this.__internal__cachegetUint8;
    }
    /**
     * @internal
     * @description Retrieves an Uint8Array in the WASM interface
     */
    getU8a(ptr, len) {
        return this.getUint8().subarray(ptr / 1, ptr / 1 + len);
    }
    /**
     * @internal
     * @description Retrieves a string in the WASM interface
     */
    getString(ptr, len) {
        return (0, util_1.u8aToString)(this.getU8a(ptr, len));
    }
    /**
     * @internal
     * @description Allocates an Uint8Array in the WASM interface
     */
    allocU8a(arg) {
        const ptr = this.__internal__wasm.__wbindgen_malloc(arg.length * 1);
        this.getUint8().set(arg, ptr / 1);
        return [ptr, arg.length];
    }
    /**
     * @internal
     * @description Allocates a string in the WASM interface
     */
    allocString(arg) {
        return this.allocU8a((0, util_1.stringToU8a)(arg));
    }
    /**
     * @internal
     * @description Retrieves an Uint8Array from the WASM interface
     */
    resultU8a() {
        const r0 = this.getInt32()[8 / 4 + 0];
        const r1 = this.getInt32()[8 / 4 + 1];
        const ret = this.getU8a(r0, r1).slice();
        this.__internal__wasm.__wbindgen_free(r0, r1 * 1);
        return ret;
    }
    /**
     * @internal
     * @description Retrieve a string from the WASM interface
     */
    resultString() {
        return (0, util_1.u8aToString)(this.resultU8a());
    }
}
exports.Bridge = Bridge;


/***/ }),

/***/ 75096:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(29735);
tslib_1.__exportStar(__nccwpck_require__(65076), exports);
tslib_1.__exportStar(__nccwpck_require__(1268), exports);


/***/ }),

/***/ 67365:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = [];


/***/ }),

/***/ 92610:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(29735);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(67365));
const packageInfo_js_1 = __nccwpck_require__(57396);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 5795:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(29735);
__nccwpck_require__(92610);
tslib_1.__exportStar(__nccwpck_require__(75096), exports);


/***/ }),

/***/ 1268:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createWasmFn = void 0;
/**
 * @name createWasmFn
 * @description
 * Create a WASM (or ASM.js) creator interface based on the supplied information.
 *
 * It will attempt to create a WASM interface first and if this fails or is not available in
 * the environment, will fallback to attempting to create an ASM.js interface.
 */
function createWasmFn(root, wasmBytes, asmFn) {
    return async (wbg) => {
        const result = {
            error: null,
            type: 'none',
            wasm: null
        };
        try {
            if (!wasmBytes?.length) {
                throw new Error('No WebAssembly provided for initialization');
            }
            else if (typeof WebAssembly !== 'object' || typeof WebAssembly.instantiate !== 'function') {
                throw new Error('WebAssembly is not available in your environment');
            }
            const source = await WebAssembly.instantiate(wasmBytes, { wbg });
            result.wasm = source.instance.exports;
            result.type = 'wasm';
        }
        catch (error) {
            // if we have a valid supplied asm.js, return that
            if (typeof asmFn === 'function') {
                result.wasm = asmFn(wbg);
                result.type = 'asm';
            }
            else {
                result.error = `FATAL: Unable to initialize @polkadot/wasm-${root}:: ${error.message}`;
                console.error(result.error);
            }
        }
        return result;
    };
}
exports.createWasmFn = createWasmFn;


/***/ }),

/***/ 57396:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/wasm-bridge', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '7.2.2' };


/***/ }),

/***/ 54695:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Wbg = void 0;
const x_randomvalues_1 = __nccwpck_require__(89716);
const DEFAULT_CRYPTO = { getRandomValues: x_randomvalues_1.getRandomValues };
const DEFAULT_SELF = { crypto: DEFAULT_CRYPTO };
/**
 * @name Wbg
 * @description
 * This defines the internal interfaces that wasm-bindgen used to communicate
 * with the host layer. None of these functions are available to the user, rather
 * they are called internally from the WASM code itself.
 *
 * The interfaces here are exposed in the imports on the created WASM interfaces.
 *
 * Internally the implementation does a thin layer into the supplied bridge.
 */
class Wbg {
    constructor(bridge) {
        /** @internal */
        this.abort = () => {
            throw new Error('abort');
        };
        /** @internal */
        this.__wbindgen_is_undefined = (idx) => {
            return this.__internal__bridge.getObject(idx) === undefined;
        };
        /** @internal */
        this.__wbindgen_throw = (ptr, len) => {
            throw new Error(this.__internal__bridge.getString(ptr, len));
        };
        /** @internal */
        this.__wbg_self_1b7a39e3a92c949c = () => {
            return this.__internal__bridge.addObject(DEFAULT_SELF);
        };
        /** @internal */
        this.__wbg_require_604837428532a733 = (ptr, len) => {
            throw new Error(`Unable to require ${this.__internal__bridge.getString(ptr, len)}`);
        };
        /** @internal */
        this.__wbg_crypto_968f1772287e2df0 = (_idx) => {
            return this.__internal__bridge.addObject(DEFAULT_CRYPTO);
        };
        /** @internal */
        this.__wbg_getRandomValues_a3d34b4fee3c2869 = (_idx) => {
            return this.__internal__bridge.addObject(DEFAULT_CRYPTO.getRandomValues);
        };
        /** @internal */
        this.__wbg_getRandomValues_f5e14ab7ac8e995d = (_arg0, ptr, len) => {
            DEFAULT_CRYPTO.getRandomValues(this.__internal__bridge.getU8a(ptr, len));
        };
        /** @internal */
        this.__wbg_randomFillSync_d5bd2d655fdf256a = (_idx, _ptr, _len) => {
            throw new Error('randomFillsync is not available');
            // getObject(idx).randomFillSync(getU8a(ptr, len));
        };
        /** @internal */
        this.__wbindgen_object_drop_ref = (idx) => {
            this.__internal__bridge.takeObject(idx);
        };
        this.__internal__bridge = bridge;
    }
}
exports.Wbg = Wbg;


/***/ }),

/***/ 59436:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/wasm-crypto-asmjs', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '7.2.2' };


/***/ }),

/***/ 58509:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/wasm-crypto-init', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '7.2.2' };


/***/ }),

/***/ 28340:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createWasm = exports.packageInfo = void 0;
const wasm_bridge_1 = __nccwpck_require__(5795);
const wasm_crypto_wasm_1 = __nccwpck_require__(30301);
var packageInfo_js_1 = __nccwpck_require__(58509);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
/**
 * @name createWasm
 * @description
 * Creates an interface using only WASM
 */
exports.createWasm = (0, wasm_bridge_1.createWasmFn)('crypto', wasm_crypto_wasm_1.wasmBytes, null);


/***/ }),

/***/ 21733:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.wasmBytes = exports.packageInfo = void 0;
const wasm_util_1 = __nccwpck_require__(80709);
const bytes_js_1 = __nccwpck_require__(43274);
var packageInfo_js_1 = __nccwpck_require__(74991);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
/**
 * @name wasmBytes
 * @description
 * The decoded WASM interface as exposed by this package.
 *
 * The build process will output into cjs/* into a compressed base64 format.
 * Upon loading the exposed bytes will be decoded and decompressed from this
 * specific format and returned.
 */
exports.wasmBytes = (0, wasm_util_1.unzlibSync)((0, wasm_util_1.base64Decode)(bytes_js_1.bytes, new Uint8Array(bytes_js_1.lenIn)), new Uint8Array(bytes_js_1.lenOut));


/***/ }),

/***/ 56783:
/***/ ((__unused_webpack_module, exports) => {

// Copyright 2019-2023 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0

// Generated as part of the build, do not edit

exports.lenIn = 171008;

exports.lenOut = 339468;

exports.bytes = '';


/***/ }),

/***/ 43274:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Copyright 2019-2023 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0

const bytes = __nccwpck_require__(56783);

module.exports = bytes;


/***/ }),

/***/ 21910:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports["default"] = [];


/***/ }),

/***/ 72082:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(80054);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(21910));
const packageInfo_js_1 = __nccwpck_require__(74991);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 30301:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(80054);
__nccwpck_require__(72082);
tslib_1.__exportStar(__nccwpck_require__(21733), exports);


/***/ }),

/***/ 74991:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/wasm-crypto-wasm', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '7.2.2' };


/***/ }),

/***/ 79202:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.waitReady = exports.isReady = exports.twox = exports.sha512 = exports.sha256 = exports.scrypt = exports.pbkdf2 = exports.keccak512 = exports.keccak256 = exports.hmacSha512 = exports.hmacSha256 = exports.blake2b = exports.vrfVerify = exports.vrfSign = exports.sr25519Agree = exports.sr25519Verify = exports.sr25519Sign = exports.sr25519KeypairFromSeed = exports.sr25519DerivePublicSoft = exports.sr25519DeriveKeypairSoft = exports.sr25519DeriveKeypairHard = exports.secp256k1Sign = exports.secp256k1Recover = exports.secp256k1Expand = exports.secp256k1Compress = exports.secp256k1FromSeed = exports.ed25519Verify = exports.ed25519Sign = exports.ed25519KeypairFromSeed = exports.bip39Validate = exports.bip39ToSeed = exports.bip39ToMiniSecret = exports.bip39ToEntropy = exports.bip39Generate = exports.bridge = exports.packageInfo = void 0;
const init_js_1 = __nccwpck_require__(66811);
Object.defineProperty(exports, "bridge", ({ enumerable: true, get: function () { return init_js_1.bridge; } }));
var packageInfo_js_1 = __nccwpck_require__(57366);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
/**
 * @internal
 * @description
 * This create an extenal interface function from the signature, all the while checking
 * the actual bridge wasm interface to ensure it has been initialized.
 *
 * This means that we can call it
 *
 *   withWasm(wasm: WasmCryptoInstance, a: number, b: string) => Uint8Array
 *
 * and in this case it will create an interface function with the signarure
 *
 *   (a: number, b: string) => Uint8Array
 */
function withWasm(fn) {
    return (...params) => {
        if (!init_js_1.bridge.wasm) {
            throw new Error('The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');
        }
        return fn(init_js_1.bridge.wasm, ...params);
    };
}
exports.bip39Generate = withWasm((wasm, words) => {
    wasm.ext_bip39_generate(8, words);
    return init_js_1.bridge.resultString();
});
exports.bip39ToEntropy = withWasm((wasm, phrase) => {
    wasm.ext_bip39_to_entropy(8, ...init_js_1.bridge.allocString(phrase));
    return init_js_1.bridge.resultU8a();
});
exports.bip39ToMiniSecret = withWasm((wasm, phrase, password) => {
    wasm.ext_bip39_to_mini_secret(8, ...init_js_1.bridge.allocString(phrase), ...init_js_1.bridge.allocString(password));
    return init_js_1.bridge.resultU8a();
});
exports.bip39ToSeed = withWasm((wasm, phrase, password) => {
    wasm.ext_bip39_to_seed(8, ...init_js_1.bridge.allocString(phrase), ...init_js_1.bridge.allocString(password));
    return init_js_1.bridge.resultU8a();
});
exports.bip39Validate = withWasm((wasm, phrase) => {
    const ret = wasm.ext_bip39_validate(...init_js_1.bridge.allocString(phrase));
    return ret !== 0;
});
exports.ed25519KeypairFromSeed = withWasm((wasm, seed) => {
    wasm.ext_ed_from_seed(8, ...init_js_1.bridge.allocU8a(seed));
    return init_js_1.bridge.resultU8a();
});
exports.ed25519Sign = withWasm((wasm, pubkey, seckey, message) => {
    wasm.ext_ed_sign(8, ...init_js_1.bridge.allocU8a(pubkey), ...init_js_1.bridge.allocU8a(seckey), ...init_js_1.bridge.allocU8a(message));
    return init_js_1.bridge.resultU8a();
});
exports.ed25519Verify = withWasm((wasm, signature, message, pubkey) => {
    const ret = wasm.ext_ed_verify(...init_js_1.bridge.allocU8a(signature), ...init_js_1.bridge.allocU8a(message), ...init_js_1.bridge.allocU8a(pubkey));
    return ret !== 0;
});
exports.secp256k1FromSeed = withWasm((wasm, seckey) => {
    wasm.ext_secp_from_seed(8, ...init_js_1.bridge.allocU8a(seckey));
    return init_js_1.bridge.resultU8a();
});
exports.secp256k1Compress = withWasm((wasm, pubkey) => {
    wasm.ext_secp_pub_compress(8, ...init_js_1.bridge.allocU8a(pubkey));
    return init_js_1.bridge.resultU8a();
});
exports.secp256k1Expand = withWasm((wasm, pubkey) => {
    wasm.ext_secp_pub_expand(8, ...init_js_1.bridge.allocU8a(pubkey));
    return init_js_1.bridge.resultU8a();
});
exports.secp256k1Recover = withWasm((wasm, msgHash, sig, recovery) => {
    wasm.ext_secp_recover(8, ...init_js_1.bridge.allocU8a(msgHash), ...init_js_1.bridge.allocU8a(sig), recovery);
    return init_js_1.bridge.resultU8a();
});
exports.secp256k1Sign = withWasm((wasm, msgHash, seckey) => {
    wasm.ext_secp_sign(8, ...init_js_1.bridge.allocU8a(msgHash), ...init_js_1.bridge.allocU8a(seckey));
    return init_js_1.bridge.resultU8a();
});
exports.sr25519DeriveKeypairHard = withWasm((wasm, pair, cc) => {
    wasm.ext_sr_derive_keypair_hard(8, ...init_js_1.bridge.allocU8a(pair), ...init_js_1.bridge.allocU8a(cc));
    return init_js_1.bridge.resultU8a();
});
exports.sr25519DeriveKeypairSoft = withWasm((wasm, pair, cc) => {
    wasm.ext_sr_derive_keypair_soft(8, ...init_js_1.bridge.allocU8a(pair), ...init_js_1.bridge.allocU8a(cc));
    return init_js_1.bridge.resultU8a();
});
exports.sr25519DerivePublicSoft = withWasm((wasm, pubkey, cc) => {
    wasm.ext_sr_derive_public_soft(8, ...init_js_1.bridge.allocU8a(pubkey), ...init_js_1.bridge.allocU8a(cc));
    return init_js_1.bridge.resultU8a();
});
exports.sr25519KeypairFromSeed = withWasm((wasm, seed) => {
    wasm.ext_sr_from_seed(8, ...init_js_1.bridge.allocU8a(seed));
    return init_js_1.bridge.resultU8a();
});
exports.sr25519Sign = withWasm((wasm, pubkey, secret, message) => {
    wasm.ext_sr_sign(8, ...init_js_1.bridge.allocU8a(pubkey), ...init_js_1.bridge.allocU8a(secret), ...init_js_1.bridge.allocU8a(message));
    return init_js_1.bridge.resultU8a();
});
exports.sr25519Verify = withWasm((wasm, signature, message, pubkey) => {
    const ret = wasm.ext_sr_verify(...init_js_1.bridge.allocU8a(signature), ...init_js_1.bridge.allocU8a(message), ...init_js_1.bridge.allocU8a(pubkey));
    return ret !== 0;
});
exports.sr25519Agree = withWasm((wasm, pubkey, secret) => {
    wasm.ext_sr_agree(8, ...init_js_1.bridge.allocU8a(pubkey), ...init_js_1.bridge.allocU8a(secret));
    return init_js_1.bridge.resultU8a();
});
exports.vrfSign = withWasm((wasm, secret, context, message, extra) => {
    wasm.ext_vrf_sign(8, ...init_js_1.bridge.allocU8a(secret), ...init_js_1.bridge.allocU8a(context), ...init_js_1.bridge.allocU8a(message), ...init_js_1.bridge.allocU8a(extra));
    return init_js_1.bridge.resultU8a();
});
exports.vrfVerify = withWasm((wasm, pubkey, context, message, extra, outAndProof) => {
    const ret = wasm.ext_vrf_verify(...init_js_1.bridge.allocU8a(pubkey), ...init_js_1.bridge.allocU8a(context), ...init_js_1.bridge.allocU8a(message), ...init_js_1.bridge.allocU8a(extra), ...init_js_1.bridge.allocU8a(outAndProof));
    return ret !== 0;
});
exports.blake2b = withWasm((wasm, data, key, size) => {
    wasm.ext_blake2b(8, ...init_js_1.bridge.allocU8a(data), ...init_js_1.bridge.allocU8a(key), size);
    return init_js_1.bridge.resultU8a();
});
exports.hmacSha256 = withWasm((wasm, key, data) => {
    wasm.ext_hmac_sha256(8, ...init_js_1.bridge.allocU8a(key), ...init_js_1.bridge.allocU8a(data));
    return init_js_1.bridge.resultU8a();
});
exports.hmacSha512 = withWasm((wasm, key, data) => {
    wasm.ext_hmac_sha512(8, ...init_js_1.bridge.allocU8a(key), ...init_js_1.bridge.allocU8a(data));
    return init_js_1.bridge.resultU8a();
});
exports.keccak256 = withWasm((wasm, data) => {
    wasm.ext_keccak256(8, ...init_js_1.bridge.allocU8a(data));
    return init_js_1.bridge.resultU8a();
});
exports.keccak512 = withWasm((wasm, data) => {
    wasm.ext_keccak512(8, ...init_js_1.bridge.allocU8a(data));
    return init_js_1.bridge.resultU8a();
});
exports.pbkdf2 = withWasm((wasm, data, salt, rounds) => {
    wasm.ext_pbkdf2(8, ...init_js_1.bridge.allocU8a(data), ...init_js_1.bridge.allocU8a(salt), rounds);
    return init_js_1.bridge.resultU8a();
});
exports.scrypt = withWasm((wasm, password, salt, log2n, r, p) => {
    wasm.ext_scrypt(8, ...init_js_1.bridge.allocU8a(password), ...init_js_1.bridge.allocU8a(salt), log2n, r, p);
    return init_js_1.bridge.resultU8a();
});
exports.sha256 = withWasm((wasm, data) => {
    wasm.ext_sha256(8, ...init_js_1.bridge.allocU8a(data));
    return init_js_1.bridge.resultU8a();
});
exports.sha512 = withWasm((wasm, data) => {
    wasm.ext_sha512(8, ...init_js_1.bridge.allocU8a(data));
    return init_js_1.bridge.resultU8a();
});
exports.twox = withWasm((wasm, data, rounds) => {
    wasm.ext_twox(8, ...init_js_1.bridge.allocU8a(data), rounds);
    return init_js_1.bridge.resultU8a();
});
function isReady() {
    return !!init_js_1.bridge.wasm;
}
exports.isReady = isReady;
async function waitReady() {
    try {
        const wasm = await (0, init_js_1.initBridge)();
        return !!wasm;
    }
    catch {
        return false;
    }
}
exports.waitReady = waitReady;


/***/ }),

/***/ 71877:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(57396);
const packageInfo_2 = __nccwpck_require__(59436);
const packageInfo_3 = __nccwpck_require__(58509);
const packageInfo_4 = __nccwpck_require__(74991);
const packageInfo_5 = __nccwpck_require__(8692);
exports["default"] = [packageInfo_1.packageInfo, packageInfo_2.packageInfo, packageInfo_3.packageInfo, packageInfo_4.packageInfo, packageInfo_5.packageInfo];


/***/ }),

/***/ 42978:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(47255);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(71877));
const packageInfo_js_1 = __nccwpck_require__(57366);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 72846:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(47255);
__nccwpck_require__(42978);
tslib_1.__exportStar(__nccwpck_require__(79202), exports);


/***/ }),

/***/ 66811:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.initBridge = exports.bridge = void 0;
const wasm_bridge_1 = __nccwpck_require__(5795);
const wasm_crypto_init_1 = __nccwpck_require__(28340);
/**
 * @name bridge
 * @description
 * The JS <-> WASM bridge that is in operation. For the specific package
 * it is a global, i.e. all operations happens on this specific bridge
 */
exports.bridge = new wasm_bridge_1.Bridge(wasm_crypto_init_1.createWasm);
/**
 * @name initBridge
 * @description
 * Creates a new bridge interface with the (optional) initialization function
 */
async function initBridge(createWasm) {
    return exports.bridge.init(createWasm);
}
exports.initBridge = initBridge;


/***/ }),

/***/ 57366:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/wasm-crypto', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '7.2.2' };


/***/ }),

/***/ 49290:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.base64Decode = void 0;
const chr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
const map = new Array(256);
for (let i = 0, count = chr.length; i < count; i++) {
    map[chr.charCodeAt(i)] = i;
}
/**
 * @name base64Decode
 * @description
 * A base64Decoding function that operates in all environments. Unlike decoding
 * from Buffer (Node.js only) or atob (browser-only) this implementation is
 * slightly slower, but it is platform independent.
 *
 * For our usage, since we have access to the static final size (where used), we
 * decode to a specified output buffer. This also means we have applied a number
 * of optimizations based on this - checking output position instead of chars.
 */
function base64Decode(data, out) {
    let byte = 0;
    let bits = 0;
    let pos = -1;
    for (let i = 0, count = out.length; pos < count; i++) {
        // each character represents 6 bits
        byte = (byte << 6) | map[data.charCodeAt(i)];
        // each byte needs to contain 8 bits
        if ((bits += 6) >= 8) {
            out[++pos] = (byte >>> (bits -= 8)) & 0xff;
        }
    }
    return out;
}
exports.base64Decode = base64Decode;


/***/ }),

/***/ 41507:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = exports.unzlibSync = exports.base64Decode = void 0;
var base64_js_1 = __nccwpck_require__(49290);
Object.defineProperty(exports, "base64Decode", ({ enumerable: true, get: function () { return base64_js_1.base64Decode; } }));
var fflate_js_1 = __nccwpck_require__(83968);
Object.defineProperty(exports, "unzlibSync", ({ enumerable: true, get: function () { return fflate_js_1.unzlibSync; } }));
var packageInfo_js_1 = __nccwpck_require__(8692);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));


/***/ }),

/***/ 11917:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const packageInfo_1 = __nccwpck_require__(8692);
exports["default"] = [packageInfo_1.packageInfo];


/***/ }),

/***/ 73531:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(17932);
const util_1 = __nccwpck_require__(29795);
const detectOther_js_1 = tslib_1.__importDefault(__nccwpck_require__(11917));
const packageInfo_js_1 = __nccwpck_require__(8692);
(0, util_1.detectPackage)(packageInfo_js_1.packageInfo, null, detectOther_js_1.default);


/***/ }),

/***/ 83968:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.unzlibSync = void 0;
const u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;
const clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
const fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);
const fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);
const freb = (eb, start) => {
    const b = new u16(31);
    for (let i = 0; i < 31; ++i) {
        b[i] = start += 1 << eb[i - 1];
    }
    // numbers here are at max 18 bits
    const r = new u32(b[30]);
    for (let i = 1; i < 30; ++i) {
        for (let j = b[i]; j < b[i + 1]; ++j) {
            r[j] = ((j - b[i]) << 5) | i;
        }
    }
    return [b, r];
};
const [fl, revfl] = freb(fleb, 2);
fl[28] = 258, revfl[258] = 28;
const [fd] = freb(fdeb, 0);
const rev = new u16(32768);
for (let i = 0; i < 32768; ++i) {
    // reverse table algorithm from SO
    let x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);
    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);
    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);
    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;
}
const hMap = ((cd, mb, r) => {
    const s = cd.length;
    // index
    let i = 0;
    // u16 "map": index -> # of codes with bit length = index
    const l = new u16(mb);
    // length of cd must be 288 (total # of codes)
    for (; i < s; ++i)
        ++l[cd[i] - 1];
    // u16 "map": index -> minimum code for bit length = index
    const le = new u16(mb);
    for (i = 0; i < mb; ++i) {
        le[i] = (le[i - 1] + l[i - 1]) << 1;
    }
    let co;
    if (r) {
        // u16 "map": index -> number of actual bits, symbol for code
        co = new u16(1 << mb);
        // bits to remove for reverser
        const rvb = 15 - mb;
        for (i = 0; i < s; ++i) {
            // ignore 0 lengths
            if (cd[i]) {
                // num encoding both symbol and bits read
                const sv = (i << 4) | cd[i];
                // free bits
                const r = mb - cd[i];
                // start value
                let v = le[cd[i] - 1]++ << r;
                // m is end value
                for (const m = v | ((1 << r) - 1); v <= m; ++v) {
                    // every 16 bit value starting with the code yields the same result
                    co[rev[v] >>> rvb] = sv;
                }
            }
        }
    }
    else {
        co = new u16(s);
        for (i = 0; i < s; ++i)
            co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);
    }
    return co;
});
const flt = new u8(288);
for (let i = 0; i < 144; ++i)
    flt[i] = 8;
for (let i = 144; i < 256; ++i)
    flt[i] = 9;
for (let i = 256; i < 280; ++i)
    flt[i] = 7;
for (let i = 280; i < 288; ++i)
    flt[i] = 8;
const fdt = new u8(32);
for (let i = 0; i < 32; ++i)
    fdt[i] = 5;
const flrm = hMap(flt, 9, 1);
const fdrm = hMap(fdt, 5, 1);
const bits = (d, p, m) => {
    const o = p >>> 3;
    return ((d[o] | (d[o + 1] << 8)) >>> (p & 7)) & m;
};
const bits16 = (d, p) => {
    const o = p >>> 3;
    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >>> (p & 7));
};
const shft = (p) => (p >>> 3) + (p & 7 && 1);
const slc = (v, s, e) => {
    if (s == null || s < 0)
        s = 0;
    if (e == null || e > v.length)
        e = v.length;
    // can't use .constructor in case user-supplied
    const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);
    n.set(v.subarray(s, e));
    return n;
};
const max = (a) => {
    let m = a[0];
    for (let i = 1, count = a.length; i < count; ++i) {
        if (a[i] > m)
            m = a[i];
    }
    return m;
};
const inflt = (dat, buf, st) => {
    const noSt = !st || st.i;
    if (!st)
        st = {};
    // source length
    const sl = dat.length;
    // have to estimate size
    const noBuf = !buf || !noSt;
    // Assumes roughly 33% compression ratio average
    if (!buf)
        buf = new u8(sl * 3);
    // ensure buffer can fit at least l elements
    const cbuf = (l) => {
        let bl = buf.length;
        // need to increase size to fit
        if (l > bl) {
            // Double or set to necessary, whichever is greater
            const nbuf = new u8(Math.max(bl << 1, l));
            nbuf.set(buf);
            buf = nbuf;
        }
    };
    //  last chunk         bitpos           bytes
    let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;
    if (final && !lm)
        return buf;
    // total bits
    const tbts = sl << 3;
    do {
        if (!lm) {
            // BFINAL - this is only 1 when last chunk is next
            st.f = final = bits(dat, pos, 1);
            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman
            const type = bits(dat, pos + 1, 3);
            pos += 3;
            if (!type) {
                // go to end of byte boundary
                const s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;
                if (t > sl) {
                    if (noSt)
                        throw 'unexpected EOF';
                    break;
                }
                // ensure size
                if (noBuf)
                    cbuf(bt + l);
                // Copy over uncompressed data
                buf.set(dat.subarray(s, t), bt);
                // Get new bitpos, update byte count
                st.b = bt += l, st.p = pos = t << 3;
                continue;
            }
            else if (type == 1)
                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
            else if (type == 2) {
                //  literal                            lengths
                const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;
                const tl = hLit + bits(dat, pos + 5, 31) + 1;
                pos += 14;
                // length+distance tree
                const ldt = new u8(tl);
                // code length tree
                const clt = new u8(19);
                for (let i = 0; i < hcLen; ++i) {
                    // use index map to get real code
                    clt[clim[i]] = bits(dat, pos + i * 3, 7);
                }
                pos += hcLen * 3;
                // code lengths bits
                const clb = max(clt), clbmsk = (1 << clb) - 1;
                if (!noSt && pos + tl * (clb + 7) > tbts)
                    break;
                // code lengths map
                const clm = hMap(clt, clb, 1);
                for (let i = 0; i < tl;) {
                    const r = clm[bits(dat, pos, clbmsk)];
                    // bits read
                    pos += r & 15;
                    // symbol
                    const s = r >>> 4;
                    // code length to copy
                    if (s < 16) {
                        ldt[i++] = s;
                    }
                    else {
                        //  copy   count
                        let c = 0, n = 0;
                        if (s == 16)
                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];
                        else if (s == 17)
                            n = 3 + bits(dat, pos, 7), pos += 3;
                        else if (s == 18)
                            n = 11 + bits(dat, pos, 127), pos += 7;
                        while (n--)
                            ldt[i++] = c;
                    }
                }
                //    length tree                 distance tree
                const lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);
                // max length bits
                lbt = max(lt);
                // max dist bits
                dbt = max(dt);
                lm = hMap(lt, lbt, 1);
                dm = hMap(dt, dbt, 1);
            }
            else
                throw 'invalid block type';
            if (pos > tbts)
                throw 'unexpected EOF';
        }
        // Make sure the buffer can hold this + the largest possible addition
        // maximum chunk size (practically, theoretically infinite) is 2^17;
        if (noBuf)
            cbuf(bt + 131072);
        const lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
        const mxa = lbt + dbt + 18;
        while (noSt || pos + mxa < tbts) {
            // bits read, code
            const c = lm[bits16(dat, pos) & lms], sym = c >>> 4;
            pos += c & 15;
            if (pos > tbts)
                throw 'unexpected EOF';
            if (!c)
                throw 'invalid length/literal';
            if (sym < 256)
                buf[bt++] = sym;
            else if (sym == 256) {
                lm = undefined;
                break;
            }
            else {
                let add = sym - 254;
                // no extra bits needed if less
                if (sym > 264) {
                    // index
                    const i = sym - 257, b = fleb[i];
                    add = bits(dat, pos, (1 << b) - 1) + fl[i];
                    pos += b;
                }
                // dist
                const d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;
                if (!d)
                    throw 'invalid distance';
                pos += d & 15;
                let dt = fd[dsym];
                if (dsym > 3) {
                    const b = fdeb[dsym];
                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;
                }
                if (pos > tbts)
                    throw 'unexpected EOF';
                if (noBuf)
                    cbuf(bt + 131072);
                const end = bt + add;
                for (; bt < end; bt += 4) {
                    buf[bt] = buf[bt - dt];
                    buf[bt + 1] = buf[bt + 1 - dt];
                    buf[bt + 2] = buf[bt + 2 - dt];
                    buf[bt + 3] = buf[bt + 3 - dt];
                }
                bt = end;
            }
        }
        st.l = lm, st.p = pos, st.b = bt;
        if (lm)
            final = 1, st.m = lbt, st.d = dm, st.n = dbt;
    } while (!final);
    return bt == buf.length ? buf : slc(buf, 0, bt);
};
const zlv = (d) => {
    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))
        throw 'invalid zlib data';
    if (d[1] & 32)
        throw 'invalid zlib data: preset dictionaries not supported';
};
/**
 * Expands Zlib data
 * @param data The data to decompress
 * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.
 * @returns The decompressed version of the data
 */
function unzlibSync(data, out) {
    return inflt((zlv(data), data.subarray(2, -4)), out);
}
exports.unzlibSync = unzlibSync;


/***/ }),

/***/ 80709:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const tslib_1 = __nccwpck_require__(17932);
__nccwpck_require__(73531);
tslib_1.__exportStar(__nccwpck_require__(41507), exports);


/***/ }),

/***/ 8692:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/wasm-util', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '7.2.2' };


/***/ }),

/***/ 285:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BigInt = exports.packageInfo = void 0;
const x_global_1 = __nccwpck_require__(74671);
var packageInfo_js_1 = __nccwpck_require__(70115);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
/**
 * @internal
 *
 * There are _still_ some older environments (specifically RN < 0.70), that does
 * not have proper BigInt support - a non-working fallback is provided for those.
 *
 * We detect availability of BigInt upon usage, so this is purely to allow functional
 * compilation & bundling. Since we have operators such as *+-/ top-level, a number-ish
 * result is used here.
 */
function invalidFallback() {
    return Number.NaN;
}
exports.BigInt = (0, x_global_1.extractGlobal)('BigInt', invalidFallback);


/***/ }),

/***/ 70115:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/x-bigint', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 80014:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const x_bigint_1 = __nccwpck_require__(285);
const x_global_1 = __nccwpck_require__(74671);
(0, x_global_1.exposeGlobal)('BigInt', x_bigint_1.BigInt);


/***/ }),

/***/ 75158:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fetch = exports.packageInfo = void 0;
const x_global_1 = __nccwpck_require__(74671);
var packageInfo_js_1 = __nccwpck_require__(13127);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
const importFetch = __nccwpck_require__.e(/* import() */ 841).then(__nccwpck_require__.bind(__nccwpck_require__, 22841)).catch(() => null);
let modFn = null;
async function nodeFetch(...args) {
    if (!modFn) {
        const mod = await importFetch;
        if (!mod?.default) {
            throw new Error('Unable to import node-fetch in this environment');
        }
        modFn = mod.default;
    }
    return modFn(...args);
}
exports.fetch = (0, x_global_1.extractGlobal)('fetch', nodeFetch);


/***/ }),

/***/ 13127:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/x-fetch', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 74671:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.exposeGlobal = exports.extractGlobal = exports.xglobal = exports.packageInfo = void 0;
var packageInfo_js_1 = __nccwpck_require__(22108);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
/** @internal Last-resort "this", if it gets here it probably would fail anyway */
function evaluateThis(fn) {
    return fn('return this');
}
/**
 * A cross-environment implementation for globalThis
 */
exports.xglobal = (typeof globalThis !== 'undefined'
    ? globalThis
    : typeof global !== 'undefined'
        ? global
        : typeof self !== 'undefined'
            ? self
            : typeof window !== 'undefined'
                ? window
                : evaluateThis(Function));
/**
 * Extracts a known global from the environment, applying a fallback if not found
 */
function extractGlobal(name, fallback) {
    // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea
    // (as of now) as to why this looks like an "any" when we do cast it to a T
    //
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return typeof exports.xglobal[name] === 'undefined'
        ? fallback
        : exports.xglobal[name];
}
exports.extractGlobal = extractGlobal;
/**
 * Expose a value as a known global, if not already defined
 */
function exposeGlobal(name, fallback) {
    if (typeof exports.xglobal[name] === 'undefined') {
        exports.xglobal[name] = fallback;
    }
}
exports.exposeGlobal = exposeGlobal;


/***/ }),

/***/ 22108:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/x-global', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 89716:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getRandomValues = exports.crypto = exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(12945);
const node_crypto_1 = tslib_1.__importDefault(__nccwpck_require__(6005));
const x_global_1 = __nccwpck_require__(74671);
var packageInfo_js_1 = __nccwpck_require__(62254);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
exports.crypto = (0, x_global_1.extractGlobal)('crypto', node_crypto_1.default.webcrypto);
function getRandomValues(output) {
    return exports.crypto.getRandomValues(output);
}
exports.getRandomValues = getRandomValues;


/***/ }),

/***/ 62254:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/x-randomvalues', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 64560:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextDecoder = exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(61828);
const node_util_1 = tslib_1.__importDefault(__nccwpck_require__(47261));
const x_global_1 = __nccwpck_require__(74671);
var packageInfo_js_1 = __nccwpck_require__(2858);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
exports.TextDecoder = (0, x_global_1.extractGlobal)('TextDecoder', node_util_1.default.TextDecoder);


/***/ }),

/***/ 2858:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/x-textdecoder', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 54722:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextEncoder = exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(10940);
const node_util_1 = tslib_1.__importDefault(__nccwpck_require__(47261));
const x_global_1 = __nccwpck_require__(74671);
var packageInfo_js_1 = __nccwpck_require__(96516);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
class Fallback {
    constructor() {
        this.__internal__encoder = new node_util_1.default.TextEncoder();
    }
    // For a Jest 26.0.1 environment, Buffer !== Uint8Array
    encode(value) {
        return Uint8Array.from(this.__internal__encoder.encode(value));
    }
}
exports.TextEncoder = (0, x_global_1.extractGlobal)('TextEncoder', Fallback);


/***/ }),

/***/ 96516:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/x-textencoder', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 26075:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WebSocket = exports.packageInfo = void 0;
const tslib_1 = __nccwpck_require__(9911);
const ws_1 = tslib_1.__importDefault(__nccwpck_require__(88867));
const x_global_1 = __nccwpck_require__(74671);
var packageInfo_js_1 = __nccwpck_require__(85503);
Object.defineProperty(exports, "packageInfo", ({ enumerable: true, get: function () { return packageInfo_js_1.packageInfo; } }));
exports.WebSocket = (0, x_global_1.extractGlobal)('WebSocket', ws_1.default);


/***/ }),

/***/ 85503:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.packageInfo = void 0;
exports.packageInfo = { name: '@polkadot/x-ws', path: typeof __dirname === 'string' ? __dirname : 'auto', type: 'cjs', version: '12.5.1' };


/***/ }),

/***/ 31888:
/***/ ((module) => {

// Copyright (C) 2021-2023 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

module.exports = [
	{
		"prefix": 0,
		"network": "polkadot",
		"displayName": "Polkadot Relay Chain",
		"symbols": [
			"DOT"
		],
		"decimals": [
			10
		],
		"standardAccount": "*25519",
		"website": "https://polkadot.network"
	},
	{
		"prefix": 1,
		"network": "BareSr25519",
		"displayName": "Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",
		"symbols": [],
		"decimals": [],
		"standardAccount": "Sr25519",
		"website": null
	},
	{
		"prefix": 2,
		"network": "kusama",
		"displayName": "Kusama Relay Chain",
		"symbols": [
			"KSM"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://kusama.network"
	},
	{
		"prefix": 3,
		"network": "BareEd25519",
		"displayName": "Bare 32-bit Ed25519 public key.",
		"symbols": [],
		"decimals": [],
		"standardAccount": "Ed25519",
		"website": null
	},
	{
		"prefix": 4,
		"network": "katalchain",
		"displayName": "Katal Chain",
		"symbols": [],
		"decimals": [],
		"standardAccount": "*25519",
		"website": null
	},
	{
		"prefix": 5,
		"network": "astar",
		"displayName": "Astar Network",
		"symbols": [
			"ASTR"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://astar.network"
	},
	{
		"prefix": 6,
		"network": "bifrost",
		"displayName": "Bifrost",
		"symbols": [
			"BNC"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://bifrost.finance/"
	},
	{
		"prefix": 7,
		"network": "edgeware",
		"displayName": "Edgeware",
		"symbols": [
			"EDG"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://edgewa.re"
	},
	{
		"prefix": 8,
		"network": "karura",
		"displayName": "Karura",
		"symbols": [
			"KAR"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://karura.network/"
	},
	{
		"prefix": 9,
		"network": "reynolds",
		"displayName": "Laminar Reynolds Canary",
		"symbols": [
			"REY"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "http://laminar.network/"
	},
	{
		"prefix": 10,
		"network": "acala",
		"displayName": "Acala",
		"symbols": [
			"ACA"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://acala.network/"
	},
	{
		"prefix": 11,
		"network": "laminar",
		"displayName": "Laminar",
		"symbols": [
			"LAMI"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "http://laminar.network/"
	},
	{
		"prefix": 12,
		"network": "polymesh",
		"displayName": "Polymesh",
		"symbols": [
			"POLYX"
		],
		"decimals": [
			6
		],
		"standardAccount": "*25519",
		"website": "https://polymath.network/"
	},
	{
		"prefix": 13,
		"network": "integritee",
		"displayName": "Integritee",
		"symbols": [
			"TEER"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://integritee.network"
	},
	{
		"prefix": 14,
		"network": "totem",
		"displayName": "Totem",
		"symbols": [
			"TOTEM"
		],
		"decimals": [
			0
		],
		"standardAccount": "*25519",
		"website": "https://totemaccounting.com"
	},
	{
		"prefix": 15,
		"network": "synesthesia",
		"displayName": "Synesthesia",
		"symbols": [
			"SYN"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://synesthesia.network/"
	},
	{
		"prefix": 16,
		"network": "kulupu",
		"displayName": "Kulupu",
		"symbols": [
			"KLP"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://kulupu.network/"
	},
	{
		"prefix": 17,
		"network": "dark",
		"displayName": "Dark Mainnet",
		"symbols": [],
		"decimals": [],
		"standardAccount": "*25519",
		"website": null
	},
	{
		"prefix": 18,
		"network": "darwinia",
		"displayName": "Darwinia Network",
		"symbols": [
			"RING"
		],
		"decimals": [
			18
		],
		"standardAccount": "secp256k1",
		"website": "https://darwinia.network"
	},
	{
		"prefix": 19,
		"network": "watr",
		"displayName": "Watr Protocol",
		"symbols": [
			"WATR"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://www.watr.org"
	},
	{
		"prefix": 20,
		"network": "stafi",
		"displayName": "Stafi",
		"symbols": [
			"FIS"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://stafi.io"
	},
	{
		"prefix": 21,
		"network": "karmachain",
		"displayName": "Karmacoin",
		"symbols": [
			"KCOIN"
		],
		"decimals": [
			6
		],
		"standardAccount": "*25519",
		"website": "https://karmaco.in"
	},
	{
		"prefix": 22,
		"network": "dock-pos-mainnet",
		"displayName": "Dock Mainnet",
		"symbols": [
			"DCK"
		],
		"decimals": [
			6
		],
		"standardAccount": "*25519",
		"website": "https://dock.io"
	},
	{
		"prefix": 23,
		"network": "shift",
		"displayName": "ShiftNrg",
		"symbols": [],
		"decimals": [],
		"standardAccount": "*25519",
		"website": null
	},
	{
		"prefix": 24,
		"network": "zero",
		"displayName": "ZERO",
		"symbols": [
			"ZERO"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://zero.io"
	},
	{
		"prefix": 25,
		"network": "zero-alphaville",
		"displayName": "ZERO Alphaville",
		"symbols": [
			"ZERO"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://zero.io"
	},
	{
		"prefix": 26,
		"network": "jupiter",
		"displayName": "Jupiter",
		"symbols": [
			"jDOT"
		],
		"decimals": [
			10
		],
		"standardAccount": "*25519",
		"website": "https://jupiter.patract.io"
	},
	{
		"prefix": 27,
		"network": "kabocha",
		"displayName": "Kabocha",
		"symbols": [
			"KAB"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://kabocha.network"
	},
	{
		"prefix": 28,
		"network": "subsocial",
		"displayName": "Subsocial",
		"symbols": [],
		"decimals": [],
		"standardAccount": "*25519",
		"website": null
	},
	{
		"prefix": 29,
		"network": "cord",
		"displayName": "CORD Network",
		"symbols": [
			"DHI",
			"WAY"
		],
		"decimals": [
			12,
			12
		],
		"standardAccount": "*25519",
		"website": "https://cord.network/"
	},
	{
		"prefix": 30,
		"network": "phala",
		"displayName": "Phala Network",
		"symbols": [
			"PHA"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://phala.network"
	},
	{
		"prefix": 31,
		"network": "litentry",
		"displayName": "Litentry Network",
		"symbols": [
			"LIT"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://litentry.com/"
	},
	{
		"prefix": 32,
		"network": "robonomics",
		"displayName": "Robonomics",
		"symbols": [
			"XRT"
		],
		"decimals": [
			9
		],
		"standardAccount": "*25519",
		"website": "https://robonomics.network"
	},
	{
		"prefix": 33,
		"network": "datahighway",
		"displayName": "DataHighway",
		"symbols": [],
		"decimals": [],
		"standardAccount": "*25519",
		"website": null
	},
	{
		"prefix": 34,
		"network": "ares",
		"displayName": "Ares Protocol",
		"symbols": [
			"ARES"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://www.aresprotocol.com/"
	},
	{
		"prefix": 35,
		"network": "vln",
		"displayName": "Valiu Liquidity Network",
		"symbols": [
			"USDv"
		],
		"decimals": [
			15
		],
		"standardAccount": "*25519",
		"website": "https://valiu.com/"
	},
	{
		"prefix": 36,
		"network": "centrifuge",
		"displayName": "Centrifuge Chain",
		"symbols": [
			"CFG"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://centrifuge.io/"
	},
	{
		"prefix": 37,
		"network": "nodle",
		"displayName": "Nodle Chain",
		"symbols": [
			"NODL"
		],
		"decimals": [
			11
		],
		"standardAccount": "*25519",
		"website": "https://nodle.io/"
	},
	{
		"prefix": 38,
		"network": "kilt",
		"displayName": "KILT Spiritnet",
		"symbols": [
			"KILT"
		],
		"decimals": [
			15
		],
		"standardAccount": "*25519",
		"website": "https://kilt.io/"
	},
	{
		"prefix": 39,
		"network": "mathchain",
		"displayName": "MathChain mainnet",
		"symbols": [
			"MATH"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://mathwallet.org"
	},
	{
		"prefix": 40,
		"network": "mathchain-testnet",
		"displayName": "MathChain testnet",
		"symbols": [
			"MATH"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://mathwallet.org"
	},
	{
		"prefix": 41,
		"network": "poli",
		"displayName": "Polimec Chain",
		"symbols": [],
		"decimals": [],
		"standardAccount": "*25519",
		"website": "https://polimec.io/"
	},
	{
		"prefix": 42,
		"network": "substrate",
		"displayName": "Substrate",
		"symbols": [],
		"decimals": [],
		"standardAccount": "*25519",
		"website": "https://substrate.io/"
	},
	{
		"prefix": 43,
		"network": "BareSecp256k1",
		"displayName": "Bare 32-bit ECDSA SECP-256k1 public key.",
		"symbols": [],
		"decimals": [],
		"standardAccount": "secp256k1",
		"website": null
	},
	{
		"prefix": 44,
		"network": "chainx",
		"displayName": "ChainX",
		"symbols": [
			"PCX"
		],
		"decimals": [
			8
		],
		"standardAccount": "*25519",
		"website": "https://chainx.org/"
	},
	{
		"prefix": 45,
		"network": "uniarts",
		"displayName": "UniArts Network",
		"symbols": [
			"UART",
			"UINK"
		],
		"decimals": [
			12,
			12
		],
		"standardAccount": "*25519",
		"website": "https://uniarts.me"
	},
	{
		"prefix": 46,
		"network": "reserved46",
		"displayName": "This prefix is reserved.",
		"symbols": [],
		"decimals": [],
		"standardAccount": null,
		"website": null
	},
	{
		"prefix": 47,
		"network": "reserved47",
		"displayName": "This prefix is reserved.",
		"symbols": [],
		"decimals": [],
		"standardAccount": null,
		"website": null
	},
	{
		"prefix": 48,
		"network": "neatcoin",
		"displayName": "Neatcoin Mainnet",
		"symbols": [
			"NEAT"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://neatcoin.org"
	},
	{
		"prefix": 49,
		"network": "picasso",
		"displayName": "Picasso",
		"symbols": [
			"PICA"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://picasso.composable.finance"
	},
	{
		"prefix": 50,
		"network": "composable",
		"displayName": "Composable Finance",
		"symbols": [
			"LAYR"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://composable.finance"
	},
	{
		"prefix": 51,
		"network": "oak",
		"displayName": "OAK Network",
		"symbols": [
			"OAK",
			"TUR"
		],
		"decimals": [
			10,
			10
		],
		"standardAccount": "*25519",
		"website": "https://oak.tech"
	},
	{
		"prefix": 52,
		"network": "KICO",
		"displayName": "KICO",
		"symbols": [
			"KICO"
		],
		"decimals": [
			14
		],
		"standardAccount": "*25519",
		"website": "https://dico.io"
	},
	{
		"prefix": 53,
		"network": "DICO",
		"displayName": "DICO",
		"symbols": [
			"DICO"
		],
		"decimals": [
			14
		],
		"standardAccount": "*25519",
		"website": "https://dico.io"
	},
	{
		"prefix": 54,
		"network": "cere",
		"displayName": "Cere Network",
		"symbols": [
			"CERE"
		],
		"decimals": [
			10
		],
		"standardAccount": "*25519",
		"website": "https://cere.network"
	},
	{
		"prefix": 55,
		"network": "xxnetwork",
		"displayName": "xx network",
		"symbols": [
			"XX"
		],
		"decimals": [
			9
		],
		"standardAccount": "*25519",
		"website": "https://xx.network"
	},
	{
		"prefix": 56,
		"network": "pendulum",
		"displayName": "Pendulum chain",
		"symbols": [
			"PEN"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://pendulumchain.org/"
	},
	{
		"prefix": 57,
		"network": "amplitude",
		"displayName": "Amplitude chain",
		"symbols": [
			"AMPE"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://pendulumchain.org/"
	},
	{
		"prefix": 63,
		"network": "hydradx",
		"displayName": "HydraDX",
		"symbols": [
			"HDX"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://hydradx.io"
	},
	{
		"prefix": 64,
		"network": "ewx",
		"displayName": "Energy Web X",
		"symbols": [
			"EWT"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://www.energyweb.org"
	},
	{
		"prefix": 65,
		"network": "aventus",
		"displayName": "Aventus Mainnet",
		"symbols": [
			"AVT"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://aventus.io"
	},
	{
		"prefix": 66,
		"network": "crust",
		"displayName": "Crust Network",
		"symbols": [
			"CRU"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://crust.network"
	},
	{
		"prefix": 67,
		"network": "genshiro",
		"displayName": "Genshiro Network",
		"symbols": [
			"GENS",
			"EQD",
			"LPT0"
		],
		"decimals": [
			9,
			9,
			9
		],
		"standardAccount": "*25519",
		"website": "https://genshiro.equilibrium.io"
	},
	{
		"prefix": 68,
		"network": "equilibrium",
		"displayName": "Equilibrium Network",
		"symbols": [
			"EQ"
		],
		"decimals": [
			9
		],
		"standardAccount": "*25519",
		"website": "https://equilibrium.io"
	},
	{
		"prefix": 69,
		"network": "sora",
		"displayName": "SORA Network",
		"symbols": [
			"XOR"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://sora.org"
	},
	{
		"prefix": 71,
		"network": "p3d",
		"displayName": "3DP network",
		"symbols": [
			"P3D"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://3dpass.org"
	},
	{
		"prefix": 72,
		"network": "p3dt",
		"displayName": "3DP test network",
		"symbols": [
			"P3Dt"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://3dpass.org"
	},
	{
		"prefix": 73,
		"network": "zeitgeist",
		"displayName": "Zeitgeist",
		"symbols": [
			"ZTG"
		],
		"decimals": [
			10
		],
		"standardAccount": "*25519",
		"website": "https://zeitgeist.pm"
	},
	{
		"prefix": 77,
		"network": "manta",
		"displayName": "Manta network",
		"symbols": [
			"MANTA"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://manta.network"
	},
	{
		"prefix": 78,
		"network": "calamari",
		"displayName": "Calamari: Manta Canary Network",
		"symbols": [
			"KMA"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://manta.network"
	},
	{
		"prefix": 81,
		"network": "sora_dot_para",
		"displayName": "SORA Polkadot Parachain",
		"symbols": [
			"XOR"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://sora.org"
	},
	{
		"prefix": 88,
		"network": "polkadex",
		"displayName": "Polkadex Mainnet",
		"symbols": [
			"PDEX"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://polkadex.trade"
	},
	{
		"prefix": 89,
		"network": "polkadexparachain",
		"displayName": "Polkadex Parachain",
		"symbols": [
			"PDEX"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://polkadex.trade"
	},
	{
		"prefix": 90,
		"network": "frequency",
		"displayName": "Frequency",
		"symbols": [
			"FRQCY"
		],
		"decimals": [
			8
		],
		"standardAccount": "*25519",
		"website": "https://www.frequency.xyz"
	},
	{
		"prefix": 92,
		"network": "anmol",
		"displayName": "Anmol Network",
		"symbols": [
			"ANML"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://anmol.network/"
	},
	{
		"prefix": 93,
		"network": "fragnova",
		"displayName": "Fragnova Network",
		"symbols": [
			"NOVA"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://fragnova.com"
	},
	{
		"prefix": 98,
		"network": "polkasmith",
		"displayName": "PolkaSmith Canary Network",
		"symbols": [
			"PKS"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://polkafoundry.com"
	},
	{
		"prefix": 99,
		"network": "polkafoundry",
		"displayName": "PolkaFoundry Network",
		"symbols": [
			"PKF"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://polkafoundry.com"
	},
	{
		"prefix": 100,
		"network": "ibtida",
		"displayName": "Anmol Network Ibtida Canary network",
		"symbols": [
			"IANML"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://anmol.network/"
	},
	{
		"prefix": 101,
		"network": "origintrail-parachain",
		"displayName": "OriginTrail Parachain",
		"symbols": [
			"OTP"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://parachain.origintrail.io/"
	},
	{
		"prefix": 105,
		"network": "pontem-network",
		"displayName": "Pontem Network",
		"symbols": [
			"PONT"
		],
		"decimals": [
			10
		],
		"standardAccount": "*25519",
		"website": "https://pontem.network"
	},
	{
		"prefix": 110,
		"network": "heiko",
		"displayName": "Heiko",
		"symbols": [
			"HKO"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://parallel.fi/"
	},
	{
		"prefix": 113,
		"network": "integritee-incognito",
		"displayName": "Integritee Incognito",
		"symbols": [],
		"decimals": [],
		"standardAccount": "*25519",
		"website": "https://integritee.network"
	},
	{
		"prefix": 117,
		"network": "tinker",
		"displayName": "Tinker",
		"symbols": [
			"TNKR"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://invarch.network"
	},
	{
		"prefix": 126,
		"network": "joystream",
		"displayName": "Joystream",
		"symbols": [
			"JOY"
		],
		"decimals": [
			10
		],
		"standardAccount": "*25519",
		"website": "https://www.joystream.org"
	},
	{
		"prefix": 128,
		"network": "clover",
		"displayName": "Clover Finance",
		"symbols": [
			"CLV"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://clover.finance"
	},
	{
		"prefix": 129,
		"network": "dorafactory-polkadot",
		"displayName": "Dorafactory Polkadot Network",
		"symbols": [
			"DORA"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://dorafactory.org"
	},
	{
		"prefix": 131,
		"network": "litmus",
		"displayName": "Litmus Network",
		"symbols": [
			"LIT"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://litentry.com/"
	},
	{
		"prefix": 136,
		"network": "altair",
		"displayName": "Altair",
		"symbols": [
			"AIR"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://centrifuge.io/"
	},
	{
		"prefix": 137,
		"network": "vara",
		"displayName": "Vara Network",
		"symbols": [
			"VARA"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://vara-network.io/"
	},
	{
		"prefix": 172,
		"network": "parallel",
		"displayName": "Parallel",
		"symbols": [
			"PARA"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://parallel.fi/"
	},
	{
		"prefix": 252,
		"network": "social-network",
		"displayName": "Social Network",
		"symbols": [
			"NET"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://social.network"
	},
	{
		"prefix": 255,
		"network": "quartz_mainnet",
		"displayName": "QUARTZ by UNIQUE",
		"symbols": [
			"QTZ"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://unique.network"
	},
	{
		"prefix": 268,
		"network": "pioneer_network",
		"displayName": "Pioneer Network by Bit.Country",
		"symbols": [
			"NEER"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://bit.country"
	},
	{
		"prefix": 420,
		"network": "sora_kusama_para",
		"displayName": "SORA Kusama Parachain",
		"symbols": [
			"XOR"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://sora.org"
	},
	{
		"prefix": 440,
		"network": "allfeat_network",
		"displayName": "Allfeat Network",
		"symbols": [
			"AFT"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://allfeat.network"
	},
	{
		"prefix": 666,
		"network": "metaquity_network",
		"displayName": "Metaquity Network",
		"symbols": [
			"MQTY"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://metaquity.xyz/"
	},
	{
		"prefix": 789,
		"network": "geek",
		"displayName": "GEEK Network",
		"symbols": [
			"GEEK"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://geek.gl"
	},
	{
		"prefix": 995,
		"network": "ternoa",
		"displayName": "Ternoa",
		"symbols": [
			"CAPS"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://www.ternoa.network"
	},
	{
		"prefix": 1110,
		"network": "efinity",
		"displayName": "Efinity",
		"symbols": [
			"EFI"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://efinity.io/"
	},
	{
		"prefix": 1221,
		"network": "peaq",
		"displayName": "Peaq Network",
		"symbols": [
			"PEAQ"
		],
		"decimals": [
			18
		],
		"standardAccount": "Sr25519",
		"website": "https://www.peaq.network/"
	},
	{
		"prefix": 1222,
		"network": "krest",
		"displayName": "Krest Network",
		"symbols": [
			"KREST"
		],
		"decimals": [
			18
		],
		"standardAccount": "Sr25519",
		"website": "https://www.peaq.network/"
	},
	{
		"prefix": 1284,
		"network": "moonbeam",
		"displayName": "Moonbeam",
		"symbols": [
			"GLMR"
		],
		"decimals": [
			18
		],
		"standardAccount": "secp256k1",
		"website": "https://moonbeam.network"
	},
	{
		"prefix": 1285,
		"network": "moonriver",
		"displayName": "Moonriver",
		"symbols": [
			"MOVR"
		],
		"decimals": [
			18
		],
		"standardAccount": "secp256k1",
		"website": "https://moonbeam.network"
	},
	{
		"prefix": 1328,
		"network": "ajuna",
		"displayName": "Ajuna Network",
		"symbols": [
			"AJUN"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://ajuna.io"
	},
	{
		"prefix": 1337,
		"network": "bajun",
		"displayName": "Bajun Network",
		"symbols": [
			"BAJU"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://ajuna.io"
	},
	{
		"prefix": 1516,
		"network": "societal",
		"displayName": "Societal",
		"symbols": [
			"SCTL"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://www.sctl.xyz"
	},
	{
		"prefix": 1985,
		"network": "seals",
		"displayName": "Seals Network",
		"symbols": [
			"SEAL"
		],
		"decimals": [
			9
		],
		"standardAccount": "*25519",
		"website": "https://seals.app"
	},
	{
		"prefix": 2007,
		"network": "kapex",
		"displayName": "Kapex",
		"symbols": [
			"KAPEX"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://totemaccounting.com"
	},
	{
		"prefix": 2009,
		"network": "cloudwalk_mainnet",
		"displayName": "CloudWalk Network Mainnet",
		"symbols": [
			"CWN"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://explorer.mainnet.cloudwalk.io"
	},
	{
		"prefix": 2021,
		"network": "logion",
		"displayName": "logion network",
		"symbols": [
			"LGNT"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://logion.network"
	},
	{
		"prefix": 2032,
		"network": "interlay",
		"displayName": "Interlay",
		"symbols": [
			"INTR"
		],
		"decimals": [
			10
		],
		"standardAccount": "*25519",
		"website": "https://interlay.io/"
	},
	{
		"prefix": 2092,
		"network": "kintsugi",
		"displayName": "Kintsugi",
		"symbols": [
			"KINT"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://interlay.io/"
	},
	{
		"prefix": 2106,
		"network": "bitgreen",
		"displayName": "Bitgreen",
		"symbols": [
			"BBB"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://bitgreen.org/"
	},
	{
		"prefix": 2112,
		"network": "chainflip",
		"displayName": "Chainflip",
		"symbols": [
			"FLIP"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://chainflip.io/"
	},
	{
		"prefix": 2199,
		"network": "moonsama",
		"displayName": "Moonsama",
		"symbols": [
			"SAMA"
		],
		"decimals": [
			18
		],
		"standardAccount": "secp256k1",
		"website": "https://moonsama.com"
	},
	{
		"prefix": 2206,
		"network": "ICE",
		"displayName": "ICE Network",
		"symbols": [
			"ICY"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://icenetwork.io"
	},
	{
		"prefix": 2207,
		"network": "SNOW",
		"displayName": "SNOW: ICE Canary Network",
		"symbols": [
			"ICZ"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://icenetwork.io"
	},
	{
		"prefix": 2254,
		"network": "subspace_testnet",
		"displayName": "Subspace testnet",
		"symbols": [
			"tSSC"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://subspace.network"
	},
	{
		"prefix": 3333,
		"network": "peerplays",
		"displayName": "Peerplays",
		"symbols": [
			"PPY"
		],
		"decimals": [
			18
		],
		"standardAccount": "secp256k1",
		"website": "https://www.peerplays.com/"
	},
	{
		"prefix": 4006,
		"network": "tangle",
		"displayName": "Tangle Network",
		"symbols": [
			"TNT"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://www.webb.tools/"
	},
	{
		"prefix": 4450,
		"network": "g1",
		"displayName": "Ğ1",
		"symbols": [
			"G1"
		],
		"decimals": [
			2
		],
		"standardAccount": "*25519",
		"website": "https://duniter.org"
	},
	{
		"prefix": 5234,
		"network": "humanode",
		"displayName": "Humanode Network",
		"symbols": [
			"HMND"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://humanode.io"
	},
	{
		"prefix": 6094,
		"network": "subspace",
		"displayName": "Subspace",
		"symbols": [
			"SSC"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://subspace.network"
	},
	{
		"prefix": 7007,
		"network": "tidefi",
		"displayName": "Tidefi",
		"symbols": [
			"TDFY"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://tidefi.com"
	},
	{
		"prefix": 7013,
		"network": "gm",
		"displayName": "GM",
		"symbols": [
			"FREN",
			"GM",
			"GN"
		],
		"decimals": [
			12,
			0,
			0
		],
		"standardAccount": "*25519",
		"website": "https://gmordie.com"
	},
	{
		"prefix": 7306,
		"network": "krigan",
		"displayName": "Krigan Network",
		"symbols": [
			"KRGN"
		],
		"decimals": [
			9
		],
		"standardAccount": "*25519",
		"website": "https://krigan.network"
	},
	{
		"prefix": 7391,
		"network": "unique_mainnet",
		"displayName": "Unique Network",
		"symbols": [
			"UNQ"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://unique.network"
	},
	{
		"prefix": 8866,
		"network": "golden_gate",
		"displayName": "Golden Gate",
		"symbols": [
			"GGX"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://ggxchain.io/"
	},
	{
		"prefix": 8883,
		"network": "sapphire_mainnet",
		"displayName": "Sapphire by Unique",
		"symbols": [
			"QTZ"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://unique.network"
	},
	{
		"prefix": 8886,
		"network": "golden_gate_sydney",
		"displayName": "Golden Gate Sydney",
		"symbols": [
			"GGXT"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://ggxchain.io/"
	},
	{
		"prefix": 9072,
		"network": "hashed",
		"displayName": "Hashed Network",
		"symbols": [
			"HASH"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://hashed.network"
	},
	{
		"prefix": 9807,
		"network": "dentnet",
		"displayName": "DENTNet",
		"symbols": [
			"DENTX"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://www.dentnet.io"
	},
	{
		"prefix": 9935,
		"network": "t3rn",
		"displayName": "t3rn",
		"symbols": [
			"TRN"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://t3rn.io/"
	},
	{
		"prefix": 10041,
		"network": "basilisk",
		"displayName": "Basilisk",
		"symbols": [
			"BSX"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://bsx.fi"
	},
	{
		"prefix": 11330,
		"network": "cess-testnet",
		"displayName": "CESS Testnet",
		"symbols": [
			"TCESS"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://cess.cloud"
	},
	{
		"prefix": 11331,
		"network": "cess",
		"displayName": "CESS",
		"symbols": [
			"CESS"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://cess.cloud"
	},
	{
		"prefix": 11486,
		"network": "luhn",
		"displayName": "Luhn Network",
		"symbols": [
			"LUHN"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://luhn.network"
	},
	{
		"prefix": 11820,
		"network": "contextfree",
		"displayName": "Automata ContextFree",
		"symbols": [
			"CTX"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://ata.network"
	},
	{
		"prefix": 12155,
		"network": "impact",
		"displayName": "Impact Protocol Network",
		"symbols": [
			"BSTY"
		],
		"decimals": [
			18
		],
		"standardAccount": "*25519",
		"website": "https://impactprotocol.network/"
	},
	{
		"prefix": 12191,
		"network": "nftmart",
		"displayName": "NFTMart",
		"symbols": [
			"NMT"
		],
		"decimals": [
			12
		],
		"standardAccount": "*25519",
		"website": "https://nftmart.io"
	},
	{
		"prefix": 13116,
		"network": "bittensor",
		"displayName": "Bittensor",
		"symbols": [
			"TAO"
		],
		"decimals": [
			9
		],
		"standardAccount": "*25519",
		"website": "https://bittensor.com"
	},
	{
		"prefix": 14697,
		"network": "goro",
		"displayName": "GORO Network",
		"symbols": [
			"GORO"
		],
		"decimals": [
			9
		],
		"standardAccount": "*25519",
		"website": "https://goro.network"
	}
];


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__nccwpck_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__nccwpck_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__nccwpck_require__.o(definition, key) && !__nccwpck_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__nccwpck_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__nccwpck_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__nccwpck_require__.f).reduce((promises, key) => {
/******/ 				__nccwpck_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__nccwpck_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".index.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__nccwpck_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__nccwpck_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__nccwpck_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";
/******/ 	
/******/ 	/* webpack/runtime/require chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "loaded", otherwise not loaded yet
/******/ 		var installedChunks = {
/******/ 			179: 1
/******/ 		};
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		var installChunk = (chunk) => {
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__nccwpck_require__.o(moreModules, moduleId)) {
/******/ 					__nccwpck_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__nccwpck_require__);
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 1;
/******/ 		
/******/ 		};
/******/ 		
/******/ 		// require() chunk loading for javascript
/******/ 		__nccwpck_require__.f.require = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					installChunk(require("./" + __nccwpck_require__.u(chunkId)));
/******/ 				} else installedChunks[chunkId] = 1;
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		// no external install chunk
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/**
 * The entrypoint for the action.
 */
const { run } = __nccwpck_require__(31713)

run()

})();

module.exports = __webpack_exports__;
/******/ })()
;